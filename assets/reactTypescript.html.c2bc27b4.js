import{o as p,c as e,b as n,F as t,a,e as o}from"./app.ba47fc91.js";import{_ as c}from"./plugin-vue_export-helper.21dcd24c.js";const l={},r=a(`<h1 id="react-\u4E2D\u4F7F\u7528typescript" tabindex="-1"><a class="header-anchor" href="#react-\u4E2D\u4F7F\u7528typescript" aria-hidden="true">#</a> React \u4E2D\u4F7F\u7528TypeScript</h1><h2 id="\u4E00\u3001\u7EC4\u4EF6\u58F0\u660E" tabindex="-1"><a class="header-anchor" href="#\u4E00\u3001\u7EC4\u4EF6\u58F0\u660E" aria-hidden="true">#</a> \u4E00\u3001\u7EC4\u4EF6\u58F0\u660E</h2><p>\u5728React\u4E2D\uFF0C\u7EC4\u4EF6\u7684\u58F0\u660E\u65B9\u5F0F\u6709\u4E24\u79CD\uFF1A<strong>\u51FD\u6570\u7EC4\u4EF6</strong>\u548C<strong>\u7C7B\u7EC4\u4EF6</strong>\uFF0C \u6765\u770B\u770B\u8FD9\u4E24\u79CD\u7C7B\u578B\u7684\u7EC4\u4EF6\u58F0\u660E\u65F6\u662F\u5982\u4F55\u5B9A\u4E49TS\u7C7B\u578B\u7684\u3002</p><h3 id="_1-\u7C7B\u7EC4\u4EF6" tabindex="-1"><a class="header-anchor" href="#_1-\u7C7B\u7EC4\u4EF6" aria-hidden="true">#</a> 1. \u7C7B\u7EC4\u4EF6</h3><p>\u7C7B\u7EC4\u4EF6\u7684\u5B9A\u4E49\u5F62\u5F0F\u6709\u4E24\u79CD\uFF1A<code>React.Component&lt;P, S={}&gt;</code> \u548C <code>React.PureComponent&lt;P, S={} SS={}&gt;</code>\uFF0C\u5B83\u4EEC\u90FD\u662F\u6CDB\u578B\u63A5\u53E3\uFF0C\u63A5\u6536\u4E24\u4E2A\u53C2\u6570\uFF0C\u7B2C\u4E00\u4E2A\u662Fprops\u7C7B\u578B\u7684\u5B9A\u4E49\uFF0C\u7B2C\u4E8C\u4E2A\u662Fstate\u7C7B\u578B\u7684\u5B9A\u4E49\uFF0C\u8FD9\u4E24\u4E2A\u53C2\u6570\u90FD\u4E0D\u662F\u5FC5\u987B\u7684\uFF0C\u6CA1\u6709\u65F6\u53EF\u4EE5\u7701\u7565\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">IProps</span> <span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">interface</span> <span class="token class-name">IState</span> <span class="token punctuation">{</span>
  count<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">App</span> <span class="token keyword">extends</span> <span class="token class-name">React</span><span class="token punctuation">.</span>Component<span class="token operator">&lt;</span>IProps<span class="token punctuation">,</span> IState<span class="token operator">&gt;</span> <span class="token punctuation">{</span>
  state <span class="token operator">=</span> <span class="token punctuation">{</span>
    count<span class="token operator">:</span> <span class="token number">0</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>
      <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span>
        <span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>count<span class="token punctuation">}</span>
        <span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span>name<span class="token punctuation">}</span>
      <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><p><code>React.PureComponent&lt;P, S={} SS={}&gt;</code> \u4E5F\u662F\u5DEE\u4E0D\u591A\u7684\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name">App</span> <span class="token keyword">extends</span> <span class="token class-name">React</span><span class="token punctuation">.</span>PureComponent<span class="token operator">&lt;</span>IProps<span class="token punctuation">,</span> IState<span class="token operator">&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>\u90A3<code>PureComponent</code>\u548C<code>Component</code> \u7684\u533A\u522B\u662F\u4EC0\u4E48\u5462\uFF1F\u5B83\u4EEC\u7684\u4E3B\u8981\u533A\u522B\u662F<code>PureComponent</code>\u4E2D\u7684<code>shouldComponentUpdate</code> \u662F\u7531\u81EA\u8EAB\u8FDB\u884C\u5904\u7406\u7684\uFF0C\u4E0D\u9700\u8981\u6211\u4EEC\u81EA\u5DF1\u5904\u7406\uFF0C\u6240\u4EE5<code>PureComponent</code>\u53EF\u4EE5\u5728\u4E00\u5B9A\u7A0B\u5EA6\u4E0A\u63D0\u5347\u6027\u80FD\u3002</p><p>\u6709\u65F6\u5019\u53EF\u80FD\u4F1A\u89C1\u5230\u8FD9\u79CD\u5199\u6CD5\uFF0C\u5B9E\u9645\u4E0A\u548C\u4E0A\u9762\u7684\u6548\u679C\u662F\u4E00\u6837\u7684\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span>PureComponent<span class="token punctuation">,</span> Component<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;react&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name">App</span> <span class="token keyword">extends</span> <span class="token class-name">PureComponent<span class="token operator">&lt;</span>IProps<span class="token punctuation">,</span> IState<span class="token operator">&gt;</span></span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">App</span> <span class="token keyword">extends</span> <span class="token class-name">Component<span class="token operator">&lt;</span>IProps<span class="token punctuation">,</span> IState<span class="token operator">&gt;</span></span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>\u90A3\u5982\u679C\u5B9A\u4E49\u65F6\u5019\u6211\u4EEC\u4E0D\u77E5\u9053\u7EC4\u4EF6\u7684props\u7684\u7C7B\u578B\uFF0C\u53EA\u6709\u5728\u8C03\u7528\u65F6\u624D\u77E5\u9053\u7EC4\u4EF6\u7C7B\u578B\uFF0C\u8BE5\u600E\u4E48\u529E\u5462\uFF1F\u8FD9\u65F6\u6CDB\u578B\u5C31\u53D1\u6325\u4F5C\u7528\u4E86\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// \u5B9A\u4E49\u7EC4\u4EF6</span>
<span class="token keyword">class</span> <span class="token class-name">MyComponent<span class="token operator">&lt;</span><span class="token constant">P</span><span class="token operator">&gt;</span></span> <span class="token keyword">extends</span> <span class="token class-name">React</span><span class="token punctuation">.</span>Component<span class="token operator">&lt;</span><span class="token constant">P</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
  internalProp<span class="token operator">:</span> <span class="token constant">P</span><span class="token punctuation">;</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span>props<span class="token operator">:</span> <span class="token constant">P</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">super</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>internalProp <span class="token operator">=</span> props<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>
    	 <span class="token operator">&lt;</span>span<span class="token operator">&gt;</span>hello world<span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">&gt;</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u4F7F\u7528\u7EC4\u4EF6</span>
<span class="token keyword">type</span> <span class="token class-name">IProps</span> <span class="token operator">=</span> <span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span> age<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token operator">&lt;</span>MyComponent<span class="token operator">&lt;</span>IProps<span class="token operator">&gt;</span> name<span class="token operator">=</span><span class="token string">&quot;React&quot;</span> age<span class="token operator">=</span><span class="token punctuation">{</span><span class="token number">18</span><span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>          <span class="token comment">// Success</span>
<span class="token operator">&lt;</span>MyComponent<span class="token operator">&lt;</span>IProps<span class="token operator">&gt;</span> name<span class="token operator">=</span><span class="token string">&quot;TypeScript&quot;</span> age<span class="token operator">=</span><span class="token string">&quot;hello&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// Error</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><h3 id="_2-\u51FD\u6570\u7EC4\u4EF6" tabindex="-1"><a class="header-anchor" href="#_2-\u51FD\u6570\u7EC4\u4EF6" aria-hidden="true">#</a> 2. \u51FD\u6570\u7EC4\u4EF6</h3><p>\u901A\u5E38\u60C5\u51B5\u4E0B\uFF0C\u51FD\u6570\u7EC4\u4EF6\u6211\u662F\u8FD9\u6837\u5199\u7684\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">IProps</span> <span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token builtin">string</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> <span class="token function-variable function">App</span> <span class="token operator">=</span> <span class="token punctuation">(</span>props<span class="token operator">:</span> IProps<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span>name<span class="token punctuation">}</span> <span class="token operator">=</span> props<span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token operator">&lt;</span>div className<span class="token operator">=</span><span class="token string">&quot;App&quot;</span><span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>h1<span class="token operator">&gt;</span>hello world<span class="token operator">&lt;</span><span class="token operator">/</span>h1<span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>h2<span class="token operator">&gt;</span><span class="token punctuation">{</span>name<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>h2<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><p>\u9664\u6B64\u4E4B\u5916\uFF0C\u51FD\u6570\u7C7B\u578B\u8FD8\u53EF\u4EE5\u4F7F\u7528<code>React.FunctionComponent&lt;P={}&gt;</code>\u6765\u5B9A\u4E49\uFF0C\u4E5F\u53EF\u4EE5\u4F7F\u7528\u5176\u7B80\u5199<code>React.FC&lt;P={}&gt;</code>\uFF0C\u4E24\u8005\u6548\u679C\u662F\u4E00\u6837\u7684\u3002\u5B83\u662F\u4E00\u4E2A\u6CDB\u578B\u63A5\u53E3\uFF0C\u53EF\u4EE5\u63A5\u6536\u4E00\u4E2A\u53C2\u6570\uFF0C\u53C2\u6570\u8868\u793Aprops\u7684\u7C7B\u578B\uFF0C\u8FD9\u4E2A\u53C2\u6570\u4E0D\u662F\u5FC5\u987B\u7684\u3002\u5B83\u4EEC\u5C31\u76F8\u5F53\u4E8E\u8FD9\u6837\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">React</span><span class="token punctuation">.</span><span class="token constant">FC</span><span class="token operator">&lt;</span><span class="token constant">P</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token operator">&gt;</span> <span class="token operator">=</span> React<span class="token punctuation">.</span>FunctionComponent<span class="token operator">&lt;</span><span class="token constant">P</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>\u6700\u7EC8\u7684\u5B9A\u4E49\u5F62\u5F0F\u5982\u4E0B\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">IProps</span> <span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token builtin">string</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> App<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token constant">FC</span><span class="token operator">&lt;</span>IProps<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">(</span>props<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span>name<span class="token punctuation">}</span> <span class="token operator">=</span> props<span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token operator">&lt;</span>div className<span class="token operator">=</span><span class="token string">&quot;App&quot;</span><span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>h1<span class="token operator">&gt;</span>hello world<span class="token operator">&lt;</span><span class="token operator">/</span>h1<span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>h2<span class="token operator">&gt;</span><span class="token punctuation">{</span>name<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>h2<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p>\u5F53\u4F7F\u7528\u8FD9\u79CD\u5F62\u5F0F\u6765\u5B9A\u4E49\u51FD\u6570\u7EC4\u4EF6\u65F6\uFF0Cprops\u4E2D\u9ED8\u8BA4\u4F1A\u5E26\u6709children\u5C5E\u6027\uFF0C\u5B83\u8868\u793A\u8BE5\u7EC4\u4EF6\u5728\u8C03\u7528\u65F6\uFF0C\u5176\u5185\u90E8\u7684\u5143\u7D20\uFF0C\u6765\u770B\u4E00\u4E2A\u4F8B\u5B50\uFF0C\u9996\u5148\u5B9A\u4E49\u4E00\u4E2A\u7EC4\u4EF6\uFF0C\u7EC4\u4EF6\u4E2D\u5F15\u5165\u4E86Child1\u548CChild2\u7EC4\u4EF6\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> Child1 <span class="token keyword">from</span> <span class="token string">&quot;./child1&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> Child2 <span class="token keyword">from</span> <span class="token string">&quot;./child2&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">interface</span> <span class="token class-name">IProps</span> <span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> App<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token constant">FC</span><span class="token operator">&lt;</span>IProps<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">(</span>props<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> name <span class="token punctuation">}</span> <span class="token operator">=</span> props<span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token operator">&lt;</span>Child1 name<span class="token operator">=</span><span class="token punctuation">{</span>name<span class="token punctuation">}</span><span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>Child2 name<span class="token operator">=</span><span class="token punctuation">{</span>name<span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
      TypeScript
    <span class="token operator">&lt;</span><span class="token operator">/</span>Child1<span class="token operator">&gt;</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p>Child1\u7EC4\u4EF6\u7ED3\u6784\u5982\u4E0B\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">IProps</span> <span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> Child1<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token constant">FC</span><span class="token operator">&lt;</span>IProps<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">(</span>props<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> name<span class="token punctuation">,</span> children <span class="token punctuation">}</span> <span class="token operator">=</span> props<span class="token punctuation">;</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>children<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token operator">&lt;</span>div className<span class="token operator">=</span><span class="token string">&quot;App&quot;</span><span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>h1<span class="token operator">&gt;</span>hello child1<span class="token operator">&lt;</span><span class="token operator">/</span>h1<span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>h2<span class="token operator">&gt;</span><span class="token punctuation">{</span>name<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>h2<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> Child1<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p>\u6211\u4EEC\u5728Child1\u7EC4\u4EF6\u4E2D\u6253\u5370\u4E86children\u5C5E\u6027\uFF0C\u5B83\u7684\u503C\u662F\u4E00\u4E2A\u6570\u7EC4\uFF0C\u5305\u542BChild2\u5BF9\u8C61\u548C\u540E\u9762\u7684\u6587\u672C\uFF1A</p>`,25),u=["src"],i=a(`<p>\u4F7F\u7528 React.FC \u58F0\u660E\u51FD\u6570\u7EC4\u4EF6\u548C\u666E\u901A\u58F0\u660E\u7684\u533A\u522B\u5982\u4E0B\uFF1A</p><ul><li><p>React.FC \u663E\u5F0F\u5730\u5B9A\u4E49\u4E86\u8FD4\u56DE\u7C7B\u578B\uFF0C\u5176\u4ED6\u65B9\u5F0F\u662F\u9690\u5F0F\u63A8\u5BFC\u7684\uFF1B</p></li><li><p>React.FC \u5BF9\u9759\u6001\u5C5E\u6027\uFF1A<code>displayName</code>\u3001<code>propTypes</code>\u3001<code>defaultProps</code> \u63D0\u4F9B\u4E86\u7C7B\u578B\u68C0\u67E5\u548C\u81EA\u52A8\u8865\u5168\uFF1B</p></li><li><p>React.FC \u4E3A <code>children</code> \u63D0\u4F9B\u4E86\u9690\u5F0F\u7684\u7C7B\u578B\uFF08<code>ReactElement | null</code>\uFF09\u3002</p></li></ul><p>\u90A3\u5982\u679C\u6211\u4EEC\u5728\u5B9A\u4E49\u7EC4\u4EF6\u65F6\u4E0D\u77E5\u9053<code>props</code>\u7684\u7C7B\u578B\uFF0C\u53EA\u6709\u8C03\u7528\u65F6\u624D\u77E5\u9053\uFF0C\u90A3\u5C31\u8FD8\u662F\u7528\u6CDB\u578B\u6765\u5B9A\u4E49<code>props</code>\u7684\u7C7B\u578B\u3002\u5BF9\u4E8E\u4F7F\u7528<code>function</code>\u5B9A\u4E49\u7684\u51FD\u6570\u7EC4\u4EF6\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// \u5B9A\u4E49\u7EC4\u4EF6</span>
<span class="token keyword">function</span> <span class="token generic-function"><span class="token function">MyComponent</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">P</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>props<span class="token operator">:</span> <span class="token constant">P</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
  	<span class="token operator">&lt;</span>span<span class="token operator">&gt;</span>
    	<span class="token punctuation">{</span>props<span class="token punctuation">}</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">&gt;</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u4F7F\u7528\u7EC4\u4EF6</span>
<span class="token keyword">type</span> <span class="token class-name">IProps</span> <span class="token operator">=</span> <span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span> age<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token operator">&lt;</span>MyComponent<span class="token operator">&lt;</span>IProps<span class="token operator">&gt;</span> name<span class="token operator">=</span><span class="token string">&quot;React&quot;</span> age<span class="token operator">=</span><span class="token punctuation">{</span><span class="token number">18</span><span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>          <span class="token comment">// Success</span>
<span class="token operator">&lt;</span>MyComponent<span class="token operator">&lt;</span>IProps<span class="token operator">&gt;</span> name<span class="token operator">=</span><span class="token string">&quot;TypeScript&quot;</span> age<span class="token operator">=</span><span class="token string">&quot;hello&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// Error</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p>\u5982\u679C\u4F7F\u7528\u7BAD\u5934\u51FD\u6570\u5B9A\u4E49\u7684\u51FD\u6570\u7EC4\u4EF6\uFF0C\u76F4\u63A5\u8FD9\u6837\u8C03\u7528\u65F6\u9519\u8BEF\u7684\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> MyComponent <span class="token operator">=</span> <span class="token operator">&lt;</span><span class="token constant">P</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>props<span class="token operator">:</span> <span class="token constant">P</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
  	<span class="token operator">&lt;</span>span<span class="token operator">&gt;</span>
    	<span class="token punctuation">{</span>props<span class="token punctuation">}</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">&gt;</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>\u5FC5\u987B\u4F7F\u7528<code>extends</code>\u5173\u952E\u5B57\u6765\u5B9A\u4E49\u6CDB\u578B\u53C2\u6570\u624D\u80FD\u88AB\u6210\u529F\u89E3\u6790\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> MyComponent <span class="token operator">=</span> <span class="token operator">&lt;</span><span class="token constant">P</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token builtin">any</span></span><span class="token operator">&gt;</span><span class="token punctuation">(</span>props<span class="token operator">:</span> <span class="token constant">P</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
  	<span class="token operator">&lt;</span>span<span class="token operator">&gt;</span>
    	<span class="token punctuation">{</span>props<span class="token punctuation">}</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">&gt;</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="\u4E8C\u3001react\u5185\u7F6E\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#\u4E8C\u3001react\u5185\u7F6E\u7C7B\u578B" aria-hidden="true">#</a> \u4E8C\u3001React\u5185\u7F6E\u7C7B\u578B</h2><h3 id="_1-jsx-element" tabindex="-1"><a class="header-anchor" href="#_1-jsx-element" aria-hidden="true">#</a> 1. JSX.Element</h3><p>\u5148\u6765\u770B\u770B<code>JSX.Element</code>\u7C7B\u578B\u7684\u58F0\u660E\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">declare</span> global <span class="token punctuation">{</span>
  <span class="token keyword">namespace</span> <span class="token constant">JSX</span> <span class="token punctuation">{</span>
    <span class="token keyword">interface</span> <span class="token class-name">Element</span> <span class="token keyword">extends</span> <span class="token class-name">React</span><span class="token punctuation">.</span>ReactElement<span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token punctuation">,</span> <span class="token builtin">any</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>\u53EF\u4EE5\u770B\u5230\uFF0C<code>JSX.Element</code>\u662F<code>ReactElement</code>\u7684\u5B50\u7C7B\u578B\uFF0C\u5B83\u6CA1\u6709\u589E\u52A0\u5C5E\u6027\uFF0C\u4E24\u8005\u662F\u7B49\u4EF7\u7684\u3002\u4E5F\u5C31\u662F\u8BF4\u4E24\u79CD\u7C7B\u578B\u7684\u53D8\u91CF\u53EF\u4EE5\u76F8\u4E92\u8D4B\u503C\u3002\u200B</p><p><code>JSX.Element</code> \u53EF\u4EE5\u901A\u8FC7\u6267\u884C <code>React.createElement</code> \u6216\u662F\u8F6C\u8BD1 <code>JSX</code> \u83B7\u5F97\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> jsx <span class="token operator">=</span> <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span>hello<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
<span class="token keyword">const</span> ele <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&quot;div&quot;</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token string">&quot;hello&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="_2-react-reactelement" tabindex="-1"><a class="header-anchor" href="#_2-react-reactelement" aria-hidden="true">#</a> 2. React.ReactElement</h3><p>React \u7684\u7C7B\u578B\u58F0\u660E\u6587\u4EF6\u4E2D\u63D0\u4F9B\u4E86 <code>React.ReactElement\uFF1CT\uFF1E</code>\uFF0C\u5B83\u53EF\u4EE5\u8BA9\u6211\u4EEC\u901A\u8FC7\u4F20\u5165<code>\uFF1CT/\uFF1E</code>\u6765\u6CE8\u89E3\u7C7B\u7EC4\u4EF6\u7684\u5B9E\u4F8B\u5316\uFF0C\u5B83\u5728\u58F0\u660E\u6587\u4EF6\u4E2D\u7684\u5B9A\u4E49\u5982\u4E0B\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">ReactElement<span class="token operator">&lt;</span><span class="token constant">P</span> <span class="token operator">=</span> <span class="token builtin">any</span><span class="token punctuation">,</span> <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token builtin">string</span> <span class="token operator">|</span> JSXElementConstructor<span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token builtin">string</span> <span class="token operator">|</span> JSXElementConstructor<span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token operator">&gt;&gt;</span></span> <span class="token punctuation">{</span>
   type<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">;</span>
   props<span class="token operator">:</span> <span class="token constant">P</span><span class="token punctuation">;</span>
   key<span class="token operator">:</span> Key <span class="token operator">|</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p><code>ReactElement</code>\u662F\u4E00\u4E2A\u63A5\u53E3\uFF0C\u5305\u542B<code>type</code>,<code>props</code>,<code>key</code>\u4E09\u4E2A\u5C5E\u6027\u503C\u3002\u8BE5\u7C7B\u578B\u7684\u53D8\u91CF\u503C\u53EA\u80FD\u662F\u4E24\u79CD\uFF1A <code>null</code> \u548C <code>ReactElement</code>\u5B9E\u4F8B\u3002\u200B</p><p>\u901A\u5E38\u60C5\u51B5\u4E0B\uFF0C\u51FD\u6570\u7EC4\u4EF6\u8FD4\u56DE<code>ReactElement\uFF08JXS.Element\uFF09</code>\u7684\u503C\u3002</p><h3 id="_3-react-reactnode" tabindex="-1"><a class="header-anchor" href="#_3-react-reactnode" aria-hidden="true">#</a> 3. React.ReactNode</h3><p><code>ReactNode</code>\u7C7B\u578B\u7684\u58F0\u660E\u5982\u4E0B\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">ReactText</span> <span class="token operator">=</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token keyword">type</span> <span class="token class-name">ReactChild</span> <span class="token operator">=</span> ReactElement <span class="token operator">|</span> ReactText<span class="token punctuation">;</span>

<span class="token keyword">interface</span> <span class="token class-name">ReactNodeArray</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token builtin">Array</span><span class="token operator">&lt;</span>ReactNode<span class="token operator">&gt;</span></span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token keyword">type</span> <span class="token class-name">ReactFragment</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token operator">|</span> ReactNodeArray<span class="token punctuation">;</span>
<span class="token keyword">type</span> <span class="token class-name">ReactNode</span> <span class="token operator">=</span> ReactChild <span class="token operator">|</span> ReactFragment <span class="token operator">|</span> ReactPortal <span class="token operator">|</span> <span class="token builtin">boolean</span> <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>\u53EF\u4EE5\u770B\u5230\uFF0C<code>ReactNode</code>\u662F\u4E00\u4E2A\u8054\u5408\u7C7B\u578B\uFF0C\u5B83\u53EF\u4EE5\u662F<code>string</code>\u3001<code>number</code>\u3001<code>ReactElement</code>\u3001<code>null</code>\u3001<code>boolean</code>\u3001<code>ReactNodeArray</code>\u3002\u7531\u6B64\u53EF\u77E5\u3002<code>ReactElement</code>\u7C7B\u578B\u7684\u53D8\u91CF\u53EF\u4EE5\u76F4\u63A5\u8D4B\u503C\u7ED9<code>ReactNode</code>\u7C7B\u578B\u7684\u53D8\u91CF\uFF0C\u4F46\u53CD\u8FC7\u6765\u662F\u4E0D\u884C\u7684\u3002</p><p>\u7C7B\u7EC4\u4EF6\u7684 <code>render</code> \u6210\u5458\u51FD\u6570\u4F1A\u8FD4\u56DE <code>ReactNode</code> \u7C7B\u578B\u7684\u503C\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name">MyComponent</span> <span class="token keyword">extends</span> <span class="token class-name">React</span><span class="token punctuation">.</span>Component <span class="token punctuation">{</span>
	<span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    	<span class="token keyword">return</span> <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span>hello world<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u6B63\u786E</span>
<span class="token keyword">const</span> component<span class="token operator">:</span> React<span class="token punctuation">.</span>ReactNode<span class="token operator">&lt;</span>MyComponent<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token operator">&lt;</span>MyComponent <span class="token operator">/</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
<span class="token comment">// \u9519\u8BEF</span>
<span class="token keyword">const</span> component<span class="token operator">:</span> React<span class="token punctuation">.</span>ReactNode<span class="token operator">&lt;</span>MyComponent<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token operator">&lt;</span>OtherComponent <span class="token operator">/</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>\u4E0A\u9762\u7684\u4EE3\u7801\u4E2D\uFF0C\u7ED9<code>component</code>\u53D8\u91CF\u8BBE\u7F6E\u4E86\u7C7B\u578B\u662F<code>Mycomponent</code>\u7C7B\u578B\u7684react\u5B9E\u4F8B\uFF0C\u8FD9\u65F6\u53EA\u80FD\u7ED9\u5176\u8D4B\u503C\u5176\u4E3A<code>MyComponent</code>\u7684\u5B9E\u4F8B\u7EC4\u4EF6\u3002\u200B</p><p>\u901A\u5E38\u60C5\u51B5\u4E0B\uFF0C\u7C7B\u7EC4\u4EF6\u901A\u8FC7 <code>render()</code> \u8FD4\u56DE <code>ReactNode</code>\u7684\u503C\u3002</p><h3 id="_4-cssproperties" tabindex="-1"><a class="header-anchor" href="#_4-cssproperties" aria-hidden="true">#</a> 4. CSSProperties</h3><p>\u5148\u6765\u770B\u770BReact\u7684\u58F0\u660E\u6587\u4EF6\u4E2D\u5BF9<code>CSSProperties</code> \u7684\u5B9A\u4E49\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">CSSProperties</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token constant">CSS</span></span><span class="token punctuation">.</span>Properties<span class="token operator">&lt;</span><span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
  <span class="token doc-comment comment">/**
   * The index signature was removed to enable closed typing for style
   * using CSSType. You&#39;re able to use type assertion or module augmentation
   * to add properties or an index signature of your own.
   *
   * For examples and more information, visit:
   * https://github.com/frenic/csstype#what-should-i-do-when-i-get-type-errors
   */</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p><code>React.CSSProperties</code>\u662F<code>React</code>\u57FA\u4E8ETypeScript\u5B9A\u4E49\u7684CSS\u5C5E\u6027\u7C7B\u578B\uFF0C\u53EF\u4EE5\u5C06\u4E00\u4E2A\u65B9\u6CD5\u7684\u8FD4\u56DE\u503C\u8BBE\u7F6E\u4E3A\u8BE5\u7C7B\u578B\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> React <span class="token keyword">from</span> <span class="token string">&quot;react&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> classNames <span class="token operator">=</span> <span class="token keyword">require</span><span class="token punctuation">(</span><span class="token string">&quot;./sidebar.css&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">interface</span> <span class="token class-name">Props</span> <span class="token punctuation">{</span>
  isVisible<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> divStyle <span class="token operator">=</span> <span class="token punctuation">(</span>props<span class="token operator">:</span> Props<span class="token punctuation">)</span><span class="token operator">:</span> React<span class="token punctuation">.</span>CSSProperties <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span>
  width<span class="token operator">:</span> props<span class="token punctuation">.</span>isVisible <span class="token operator">?</span> <span class="token string">&quot;23rem&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;0rem&quot;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> SidebarComponent<span class="token operator">:</span> React<span class="token punctuation">.</span>StatelessComponent<span class="token operator">&lt;</span>Props<span class="token operator">&gt;</span> <span class="token operator">=</span> props <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>
  <span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">&quot;mySidenav&quot;</span> className<span class="token operator">=</span><span class="token punctuation">{</span>classNames<span class="token punctuation">.</span>sidenav<span class="token punctuation">}</span> style<span class="token operator">=</span><span class="token punctuation">{</span><span class="token function">divStyle</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token operator">&gt;</span>
    <span class="token punctuation">{</span>props<span class="token punctuation">.</span>children<span class="token punctuation">}</span>
  <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p>\u8FD9\u91CC<code>divStyle</code>\u7EC4\u4EF6\u7684\u8FD4\u56DE\u503C\u5C31\u662F<code>React.CSSProperties</code>\u7C7B\u578B\u3002</p><p>\u6211\u4EEC\u8FD8\u53EF\u4EE5\u5B9A\u4E49\u4E00\u4E2A<code>CSSProperties</code>\u7C7B\u578B\u7684\u53D8\u91CF\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> divStyle<span class="token operator">:</span> React<span class="token punctuation">.</span>CSSProperties <span class="token operator">=</span> <span class="token punctuation">{</span>
    width<span class="token operator">:</span> <span class="token string">&quot;11rem&quot;</span><span class="token punctuation">,</span>
    height<span class="token operator">:</span> <span class="token string">&quot;7rem&quot;</span><span class="token punctuation">,</span>
    backgroundColor<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">rgb(</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>props<span class="token punctuation">.</span>color<span class="token punctuation">.</span>red<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">,</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>props<span class="token punctuation">.</span>color<span class="token punctuation">.</span>green<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">, </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>props<span class="token punctuation">.</span>color<span class="token punctuation">.</span>blue<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">)</span><span class="token template-punctuation string">\`</span></span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>\u8FD9\u4E2A\u53D8\u91CF\u53EF\u4EE5\u5728HTML\u6807\u7B7E\u7684<code>style</code>\u5C5E\u6027\u4E0A\u4F7F\u7528\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token operator">&lt;</span>div style<span class="token operator">=</span><span class="token punctuation">{</span>divStyle<span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>\u5728React\u7684\u7C7B\u578B\u58F0\u660E\u6587\u4EF6\u4E2D\uFF0C<code>style</code>\u5C5E\u6027\u7684\u7C7B\u578B\u5982\u4E0B\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>style<span class="token operator">?</span><span class="token operator">:</span> CSSProperties <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="\u4E09\u3001react-hooks" tabindex="-1"><a class="header-anchor" href="#\u4E09\u3001react-hooks" aria-hidden="true">#</a> \u4E09\u3001React Hooks</h2><h3 id="_1-usestate" tabindex="-1"><a class="header-anchor" href="#_1-usestate" aria-hidden="true">#</a> 1. useState</h3><p>\u9ED8\u8BA4\u60C5\u51B5\u4E0B\uFF0CReact\u4F1A\u4E3A\u6839\u636E\u8BBE\u7F6E\u7684state\u7684\u521D\u59CB\u503C\u6765\u81EA\u52A8\u63A8\u5BFCstate\u4EE5\u53CA\u66F4\u65B0\u51FD\u6570\u7684\u7C7B\u578B\uFF1A</p>`,43),k=["src"],b=a(`<p>\u5982\u679C\u5DF2\u77E5<code>state</code> \u7684\u7C7B\u578B\uFF0C\u53EF\u4EE5\u901A\u8FC7\u4EE5\u4E0B\u5F62\u5F0F\u6765\u81EA\u5B9A\u4E49<code>state</code>\u7684\u7C7B\u578B\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> <span class="token punctuation">[</span>count<span class="token punctuation">,</span> setCount<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token generic-function"><span class="token function">useState</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>\u5982\u679C<code>state</code>\u662F\u4E00\u4E2A\u5BF9\u8C61\uFF0C\u60F3\u8981\u521D\u59CB\u5316\u4E00\u4E2A\u7A7A\u5BF9\u8C61\uFF0C\u53EF\u4EE5\u4F7F\u7528\u65AD\u8A00\u6765\u5904\u7406\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> <span class="token punctuation">[</span>user<span class="token punctuation">,</span> setUser<span class="token punctuation">]</span> <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">useState</span><span class="token generic class-name"><span class="token operator">&lt;</span>IUser<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token keyword">as</span> IUser<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>\u5B9E\u9645\u4E0A\uFF0C\u8FD9\u91CC\u5C06\u7A7A\u5BF9\u8C61<code>{}</code>\u65AD\u8A00\u4E3A<code>IUser</code>\u63A5\u53E3\u5C31\u662F\u6B3A\u9A97\u4E86<code>TypeScript</code>\u7684\u7F16\u8BD1\u5668\uFF0C\u7531\u4E8E\u540E\u9762\u7684\u4EE3\u7801\u53EF\u80FD\u4F1A\u4F9D\u8D56\u8FD9\u4E2A\u5BF9\u8C61\uFF0C\u6240\u4EE5\u5E94\u8BE5\u5728\u4F7F\u7528\u524D\u53CA\u65F6\u521D\u59CB\u5316 <code>user</code> \u7684\u503C\uFF0C\u5426\u5219\u5C31\u4F1A\u62A5\u9519\u3002</p><p>\u4E0B\u9762\u662F\u58F0\u660E\u6587\u4EF6\u4E2D <code>useState</code> \u7684\u5B9A\u4E49\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token generic-function"><span class="token function">useState</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">S</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>initialState<span class="token operator">:</span> <span class="token constant">S</span> <span class="token operator">|</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token constant">S</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token constant">S</span><span class="token punctuation">,</span> Dispatch<span class="token operator">&lt;</span>SetStateAction<span class="token operator">&lt;</span><span class="token constant">S</span><span class="token operator">&gt;&gt;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token comment">// convenience overload when first argument is omitted</span>
	<span class="token doc-comment comment">/**
	 * Returns a stateful value, and a function to update it.
   *
   * <span class="token keyword">@version</span> 16.8.0
   * <span class="token keyword">@see</span> https://reactjs.org/docs/hooks-reference.html#usestate
   */</span>
    
<span class="token keyword">function</span> <span class="token generic-function"><span class="token function">useState</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">S</span> <span class="token operator">=</span> <span class="token keyword">undefined</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token constant">S</span> <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span> Dispatch<span class="token operator">&lt;</span>SetStateAction<span class="token operator">&lt;</span><span class="token constant">S</span> <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token operator">&gt;&gt;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token doc-comment comment">/**
   * An alternative to \`useState\`.
   *
   * \`useReducer\` is usually preferable to \`useState\` when you have complex state logic that involves
   * multiple sub-values. It also lets you optimize performance for components that trigger deep
   * updates because you can pass \`dispatch\` down instead of callbacks.
   *
   * <span class="token keyword">@version</span> 16.8.0
   * <span class="token keyword">@see</span> https://reactjs.org/docs/hooks-reference.html#usereducer
   */</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><p>\u53EF\u4EE5\u770B\u5230\uFF0C\u8FD9\u91CC\u5B9A\u4E49\u4E24\u79CD\u5F62\u5F0F\uFF0C\u5206\u522B\u662F<code>\u6709\u521D\u59CB\u503C</code>\u548C<code>\u6CA1\u6709\u521D\u59CB\u503C</code>\u7684\u5F62\u5F0F\u3002</p><h3 id="_2-useeffect" tabindex="-1"><a class="header-anchor" href="#_2-useeffect" aria-hidden="true">#</a> 2. useEffect</h3><p><code>useEffect</code>\u7684\u4E3B\u8981\u4F5C\u7528\u5C31\u662F\u5904\u7406\u526F\u4F5C\u7528\uFF0C\u5B83\u7684\u7B2C\u4E00\u4E2A\u53C2\u6570\u662F\u4E00\u4E2A\u51FD\u6570\uFF0C\u8868\u793A\u8981\u6E05\u9664\u526F\u4F5C\u7528\u7684\u64CD\u4F5C\uFF0C\u7B2C\u4E8C\u4E2A\u53C2\u6570\u662F\u4E00\u7EC4\u503C\uFF0C\u5F53\u8FD9\u7EC4\u503C\u6539\u53D8\u65F6\uFF0C\u7B2C\u4E00\u4E2A\u53C2\u6570\u7684\u51FD\u6570\u624D\u4F1A\u6267\u884C\uFF0C\u8FD9\u8BA9\u6211\u4EEC\u53EF\u4EE5\u63A7\u5236\u4F55\u65F6\u8FD0\u884C\u51FD\u6570\u6765\u5904\u7406\u526F\u4F5C\u7528\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token function">useEffect</span><span class="token punctuation">(</span>
  <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> subscription <span class="token operator">=</span> props<span class="token punctuation">.</span>source<span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      subscription<span class="token punctuation">.</span><span class="token function">unsubscribe</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">[</span>props<span class="token punctuation">.</span>source<span class="token punctuation">]</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>\u5F53\u51FD\u6570\u7684\u8FD4\u56DE\u503C\u4E0D\u662F\u51FD\u6570\u6216\u8005<code>effect</code>\u51FD\u6570\u4E2D\u672A\u5B9A\u4E49\u7684\u5185\u5BB9\u65F6\uFF0C\u5982\u4E0B\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token function">useEffect</span><span class="token punctuation">(</span>
    <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span> 
    <span class="token punctuation">}</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p><code>TypeScript</code>\u5C31\u4F1A\u62A5\u9519\uFF1A</p>`,14),d=["src"],m=a(`<p>\u6765\u770B\u770B<code>useEffect</code>\u5728\u7C7B\u578B\u58F0\u660E\u6587\u4EF6\u4E2D\u7684\u5B9A\u4E49\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// Destructors are only allowed to return void.</span>
<span class="token keyword">type</span> <span class="token class-name">Destructor</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span> <span class="token operator">|</span> <span class="token punctuation">{</span> <span class="token punctuation">[</span><span class="token constant">UNDEFINED_VOID_ONLY</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token builtin">never</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// NOTE: callbacks are _only_ allowed to return either void, or a destructor.</span>
<span class="token keyword">type</span> <span class="token class-name">EffectCallback</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token operator">|</span> Destructor<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// TODO (TypeScript 3.0): ReadonlyArray&lt;unknown&gt;</span>
<span class="token keyword">type</span> <span class="token class-name">DependencyList</span> <span class="token operator">=</span> ReadonlyArray<span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">useEffect</span><span class="token punctuation">(</span>effect<span class="token operator">:</span> EffectCallback<span class="token punctuation">,</span> deps<span class="token operator">?</span><span class="token operator">:</span> DependencyList<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>
<span class="token comment">// NOTE: this does not accept strings, but this will have to be fixed by removing strings from type Ref&lt;T&gt;</span>
  <span class="token doc-comment comment">/**
   * \`useImperativeHandle\` customizes the instance value that is exposed to parent components when using
   * \`ref\`. As always, imperative code using refs should be avoided in most cases.
   *
   * \`useImperativeHandle\` should be used with \`React.forwardRef\`.
   *
   * <span class="token keyword">@version</span> 16.8.0
   * <span class="token keyword">@see</span> https://reactjs.org/docs/hooks-reference.html#useimperativehandle
   */</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><p>\u53EF\u4EE5\u770B\u5230\uFF0C<code>useEffect</code>\u7684\u7B2C\u4E00\u4E2A\u53C2\u6570\u53EA\u5141\u8BB8\u8FD4\u56DE\u4E00\u4E2A\u51FD\u6570\u3002</p><h3 id="_3-useref" tabindex="-1"><a class="header-anchor" href="#_3-useref" aria-hidden="true">#</a> 3. useRef</h3><p>\u5F53\u4F7F\u7528 <code>useRef</code> \u65F6\uFF0C\u6211\u4EEC\u53EF\u4EE5\u8BBF\u95EE\u4E00\u4E2A\u53EF\u53D8\u7684\u5F15\u7528\u5BF9\u8C61\u3002\u53EF\u4EE5\u5C06\u521D\u59CB\u503C\u4F20\u9012\u7ED9 <code>useRef</code>\uFF0C\u5B83\u7528\u4E8E\u521D\u59CB\u5316\u53EF\u53D8 <code>ref</code> \u5BF9\u8C61\u516C\u5F00\u7684\u5F53\u524D\u5C5E\u6027\u3002\u5F53\u6211\u4EEC\u4F7F\u7528<code>useRef</code>\u65F6\uFF0C\u9700\u8981\u7ED9\u5176\u6307\u5B9A\u7C7B\u578B\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> nameInput <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">useRef</span><span class="token generic class-name"><span class="token operator">&lt;</span>HTMLInputElement<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>\u8FD9\u91CC\u7ED9\u5B9E\u4F8B\u7684\u7C7B\u578B\u6307\u5B9A\u4E3A\u4E86<code>input</code>\u8F93\u5165\u6846\u7C7B\u578B\u3002\u200B</p><p>\u5F53<code>useRef</code>\u7684\u521D\u59CB\u503C\u4E3A<code>null</code>\u65F6\uFF0C\u6709\u4E24\u79CD\u521B\u5EFA\u7684\u5F62\u5F0F\uFF0C\u7B2C\u4E00\u79CD\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> nameInput <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">useRef</span><span class="token generic class-name"><span class="token operator">&lt;</span>HTMLInputElement<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span>
nameInput<span class="token punctuation">.</span>current<span class="token punctuation">.</span>innerText <span class="token operator">=</span> <span class="token string">&quot;hello world&quot;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>\u8FD9\u79CD\u5F62\u5F0F\u4E0B\uFF0C<code>ref1.current</code>\u662F\u53EA\u8BFB\u7684\uFF08read-only\uFF09\uFF0C\u6240\u4EE5\u5F53\u6211\u4EEC\u5C06\u5B83\u7684<code>innerText</code>\u5C5E\u6027\u91CD\u65B0\u8D4B\u503C\u65F6\u4F1A\u62A5\u4EE5\u4E0B\u9519\u8BEF\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>Cannot assign to <span class="token string">&#39;current&#39;</span> because it <span class="token keyword">is</span> a read<span class="token operator">-</span>only property<span class="token punctuation">.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>\u90A3\u8BE5\u600E\u4E48\u5C06<code>current</code>\u5C5E\u6027\u53D8\u4E3A\u52A8\u6001\u53EF\u53D8\u5F97\u7684\uFF0C\u5148\u6765\u770B\u770B\u7C7B\u578B\u58F0\u660E\u6587\u4EF6\u4E2D <code>useRef</code> \u662F\u5982\u4F55\u5B9A\u4E49\u7684\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code> <span class="token keyword">function</span> <span class="token generic-function"><span class="token function">useRef</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>initialValue<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">:</span> MutableRefObject<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
 <span class="token comment">// convenience overload for refs given as a ref prop as they typically start with a null value</span>
 <span class="token doc-comment comment">/**
   * \`useRef\` returns a mutable ref object whose \`.current\` property is initialized to the passed argument
   * (\`initialValue\`). The returned object will persist for the full lifetime of the component.
   *
   * Note that \`useRef()\` is useful for more than the \`ref\` attribute. It\u2019s handy for keeping any mutable
   * value around similar to how you\u2019d use instance fields in classes.
   *
   * Usage note: if you need the result of useRef to be directly mutable, include \`| null\` in the type
   * of the generic argument.
   *
   * <span class="token keyword">@version</span> 16.8.0
   * <span class="token keyword">@see</span> https://reactjs.org/docs/hooks-reference.html#useref
   */</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p>\u8FD9\u6BB5\u4EE3\u7801\u7684\u7B2C\u5341\u884C\u7684\u544A\u8BC9\u6211\u4EEC\uFF0C\u5982\u679C\u9700\u8981<code>useRef</code>\u7684\u76F4\u63A5\u53EF\u53D8\uFF0C\u5C31\u9700\u8981\u5728\u6CDB\u578B\u53C2\u6570\u4E2D\u5305\u542B<code>&#39;| null&#39;</code>\uFF0C\u6240\u4EE5\u8FD9\u5C31\u662F\u5F53\u521D\u59CB\u503C\u4E3A<code>null</code>\u7684\u7B2C\u4E8C\u79CD\u5B9A\u4E49\u5F62\u5F0F\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> nameInput <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">useRef</span><span class="token generic class-name"><span class="token operator">&lt;</span>HTMLInputElement <span class="token operator">|</span> <span class="token keyword">null</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>\u8FD9\u79CD\u5F62\u5F0F\u4E0B\uFF0C<code>nameInput.current</code>\u5C31\u662F\u53EF\u5199\u7684\u3002\u4E0D\u8FC7\u4E24\u79CD\u7C7B\u578B\u5728\u4F7F\u7528\u65F6\u90FD\u9700\u8981\u505A\u7C7B\u578B\u68C0\u67E5\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>nameInput<span class="token punctuation">.</span>current<span class="token operator">?.</span>innerText <span class="token operator">=</span> <span class="token string">&quot;hello world&quot;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>\u90A3\u4E48\u95EE\u9898\u6765\u4E86\uFF0C\u4E3A\u4EC0\u4E48\u7B2C\u4E00\u79CD\u5199\u6CD5\u5728\u6CA1\u6709\u64CD\u4F5C<code>current</code>\u65F6\u6CA1\u6709\u62A5\u9519\u5462\uFF1F\u56E0\u4E3A<code>useRef</code>\u5728\u7C7B\u578B\u5B9A\u4E49\u5F0F\u5177\u6709\u591A\u4E2A\u91CD\u8F7D\u58F0\u660E\uFF0C\u7B2C\u4E00\u79CD\u65B9\u5F0F\u5C31\u662F\u6267\u884C\u7684\u4EE5\u4E0B\u51FD\u6570\u91CD\u8F7D\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token generic-function"><span class="token function">useRef</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>initialValue<span class="token operator">:</span> <span class="token constant">T</span><span class="token operator">|</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token operator">:</span> RefObject<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
<span class="token comment">// convenience overload for potentially undefined initialValue / call with 0 arguments</span>
<span class="token comment">// has a default to stop it from defaulting to {} instead</span>
<span class="token doc-comment comment">/**
  * \`useRef\` returns a mutable ref object whose \`.current\` property is initialized to the passed argument
  * (\`initialValue\`). The returned object will persist for the full lifetime of the component.
  *
  * Note that \`useRef()\` is useful for more than the \`ref\` attribute. It\u2019s handy for keeping any mutable
  * value around similar to how you\u2019d use instance fields in classes.
  *
  * <span class="token keyword">@version</span> 16.8.0
  * <span class="token keyword">@see</span> https://reactjs.org/docs/hooks-reference.html#useref
  */</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>\u4ECE\u4E0A<code>useRef</code>\u7684\u58F0\u660E\u4E2D\u53EF\u4EE5\u770B\u5230\uFF0C<code>function useRef</code>\u7684\u8FD4\u56DE\u503C\u7C7B\u578B\u5316\u662F<code>MutableRefObject</code>\uFF0C\u8FD9\u91CC\u9762\u7684<code>T</code>\u5C31\u662F\u53C2\u6570\u7684\u7C7B\u578B<code>T</code>\uFF0C\u6240\u4EE5\u6700\u7EC8<code>nameInput</code> \u7684\u7C7B\u578B\u5C31\u662F<code>React.MutableRefObject</code>\u3002\u200B</p><p>\u6CE8\u610F\uFF0C\u4E0A\u9762\u7528\u5230\u4E86<code>HTMLInputElement</code>\u7C7B\u578B\uFF0C\u8FD9\u662F\u4E00\u4E2A\u6807\u7B7E\u7C7B\u578B\uFF0C\u8FD9\u4E2A\u64CD\u4F5C\u5C31\u662F\u7528\u6765\u8BBF\u95EE<code>DOM</code>\u5143\u7D20\u7684\u3002</p><h3 id="_4-usecallback" tabindex="-1"><a class="header-anchor" href="#_4-usecallback" aria-hidden="true">#</a> 4. useCallback</h3><p>\u5148\u6765\u770B\u770B\u7C7B\u578B\u58F0\u660E\u6587\u4EF6\u4E2D\u5BF9<code>useCallback</code>\u7684\u5B9A\u4E49\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code> <span class="token keyword">function</span> useCallback<span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">any</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>callback<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span> deps<span class="token operator">:</span> DependencyList<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">;</span>
 <span class="token doc-comment comment">/**
  * \`useMemo\` will only recompute the memoized value when one of the \`deps\` has changed.
  *
  * Usage note: if calling \`useMemo\` with a referentially stable function, also give it as the input in
  * the second argument.
  *
  * \`\`\`ts
  * function expensive () <span class="token punctuation">{</span> ... <span class="token punctuation">}</span>
  *
  * function Component () <span class="token punctuation">{</span>
  *   const expensiveResult = useMemo(expensive, [expensive])
  *   return ...
  * <span class="token punctuation">}</span>
  * \`\`\`
  *
  * <span class="token keyword">@version</span> 16.8.0
  * <span class="token keyword">@see</span> https://reactjs.org/docs/hooks-reference.html#usememo
  */</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><p><code>useCallback</code>\u63A5\u6536\u4E00\u4E2A\u56DE\u8C03\u51FD\u6570\u548C\u4E00\u4E2A\u4F9D\u8D56\u6570\u7EC4\uFF0C\u53EA\u6709\u5F53\u4F9D\u8D56\u6570\u7EC4\u4E2D\u7684\u503C\u53D1\u751F\u53D8\u5316\u65F6\u624D\u4F1A\u91CD\u65B0\u6267\u884C\u56DE\u8C03\u51FD\u6570\u3002\u6765\u770B\u4E00\u4E2A\u4F8B\u5B50\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> <span class="token function-variable function">add</span> <span class="token operator">=</span> <span class="token punctuation">(</span>a<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> b<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> a <span class="token operator">+</span> b<span class="token punctuation">;</span>

<span class="token keyword">const</span> memoizedCallback <span class="token operator">=</span> <span class="token function">useCallback</span><span class="token punctuation">(</span>
  <span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">add</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">[</span>b<span class="token punctuation">]</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>\u8FD9\u91CC\u6211\u4EEC\u6CA1\u6709\u7ED9\u56DE\u8C03\u51FD\u6570\u4E2D\u7684\u53C2\u6570<code>a</code>\u5B9A\u4E49\u7C7B\u578B\uFF0C\u6240\u4EE5\u4E0B\u9762\u7684\u8C03\u7528\u65B9\u5F0F\u90FD\u4E0D\u4F1A\u62A5\u9519\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token function">memoizedCallback</span><span class="token punctuation">(</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">memoizedCallback</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>\u5C3D\u7BA1<code>add</code>\u65B9\u6CD5\u7684\u4E24\u4E2A\u53C2\u6570\u90FD\u662F<code>number</code>\u7C7B\u578B\uFF0C\u4F46\u662F\u4E0A\u8FF0\u8C03\u7528\u90FD\u80FD\u591F\u7528\u6267\u884C\u3002\u6240\u4EE5\u4E3A\u4E86\u66F4\u52A0\u4E25\u8C28\uFF0C\u6211\u4EEC\u9700\u8981\u7ED9\u56DE\u8C03\u51FD\u6570\u5B9A\u4E49\u5177\u4F53\u7684\u7C7B\u578B\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> memoizedCallback <span class="token operator">=</span> <span class="token function">useCallback</span><span class="token punctuation">(</span>
  <span class="token punctuation">(</span>a<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">add</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">[</span>b<span class="token punctuation">]</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>\u8FD9\u65F6\u5019\u5982\u679C\u518D\u7ED9\u56DE\u8C03\u51FD\u6570\u4F20\u5165\u5B57\u7B26\u4E32\u5C31\u4F1A\u62A5\u9519\u4E86\uFF1A</p>`,31),g=["src"],y=a(`<p>\u6240\u4EE5\uFF0C\u9700\u8981\u6CE8\u610F\uFF0C\u5728\u4F7F\u7528<code>useCallback</code>\u65F6\u9700\u8981\u7ED9\u56DE\u8C03\u51FD\u6570\u7684\u53C2\u6570\u6307\u5B9A\u7C7B\u578B\u3002</p><h3 id="_5-usememo" tabindex="-1"><a class="header-anchor" href="#_5-usememo" aria-hidden="true">#</a> 5. useMemo</h3><p>\u5148\u6765\u770B\u770B\u7C7B\u578B\u58F0\u660E\u6587\u4EF6\u4E2D\u5BF9<code>useMemo</code>\u7684\u5B9A\u4E49\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token generic-function"><span class="token function">useMemo</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token function-variable function">factory</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token constant">T</span><span class="token punctuation">,</span> deps<span class="token operator">:</span> DependencyList <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">;</span>
   <span class="token doc-comment comment">/**
    * \`useDebugValue\` can be used to display a label for custom hooks in React DevTools.
    *
    * NOTE: We don\u2019t recommend adding debug values to every custom hook.
    * It\u2019s most valuable for custom hooks that are part of shared libraries.
    *
    * <span class="token keyword">@version</span> 16.8.0
    * <span class="token keyword">@see</span> https://reactjs.org/docs/hooks-reference.html#usedebugvalue
    */</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p><code>useMemo</code>\u548C<code>useCallback</code>\u662F\u975E\u5E38\u7C7B\u4F3C\u7684\uFF0C\u4F46\u662F\u5B83\u8FD4\u56DE\u7684\u662F\u4E00\u4E2A\u503C\uFF0C\u800C\u4E0D\u662F\u51FD\u6570\u3002\u6240\u4EE5\u5728\u5B9A\u4E49<code>useMemo</code>\u65F6\u9700\u8981\u5B9A\u4E49\u8FD4\u56DE\u503C\u7684\u7C7B\u578B\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  a <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> calculatedValue <span class="token operator">=</span> <span class="token generic-function"><span class="token function">useMemo</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> a <span class="token operator">**</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>a<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>\u5982\u679C\u8FD4\u56DE\u503C\u4E0D\u4E00\u81F4\uFF0C\u5C31\u4F1A\u62A5\u9519\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> calculatedValue <span class="token operator">=</span> <span class="token generic-function"><span class="token function">useMemo</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> a <span class="token operator">+</span> <span class="token string">&quot;hello&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>a<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u7C7B\u578B\u201C() =&gt; string\u201D\u7684\u53C2\u6570\u4E0D\u80FD\u8D4B\u7ED9\u7C7B\u578B\u201C() =&gt; number\u201D\u7684\u53C2\u6570</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="_6-usecontext" tabindex="-1"><a class="header-anchor" href="#_6-usecontext" aria-hidden="true">#</a> 6. useContext</h3><p><code>useContext</code>\u9700\u8981\u63D0\u4F9B\u4E00\u4E2A\u4E0A\u4E0B\u6587\u5BF9\u8C61\uFF0C\u5E76\u8FD4\u56DE\u6240\u63D0\u4F9B\u7684\u4E0A\u4E0B\u6587\u7684\u503C\uFF0C\u5F53\u63D0\u4F9B\u8005\u66F4\u65B0\u4E0A\u4E0B\u6587\u5BF9\u8C61\u65F6\uFF0C\u5F15\u7528\u8FD9\u4E9B\u4E0A\u4E0B\u6587\u5BF9\u8C61\u7684\u7EC4\u4EF6\u5C31\u4F1A\u91CD\u65B0\u6E32\u67D3\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> ColorContext <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">createContext</span><span class="token punctuation">(</span><span class="token punctuation">{</span> color<span class="token operator">:</span> <span class="token string">&quot;green&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">Welcome</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> color <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useContext</span><span class="token punctuation">(</span>ColorContext<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token operator">&lt;</span>div style<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> color <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&gt;</span>hello world<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>\u5728\u4F7F\u7528<code>useContext</code>\u65F6\uFF0C\u4F1A\u81EA\u52A8\u63A8\u65AD\u51FA\u63D0\u4F9B\u7684\u4E0A\u4E0B\u6587\u5BF9\u8C61\u7684\u7C7B\u578B\uFF0C\u6240\u4EE5\u5E76\u4E0D\u9700\u8981\u6211\u4EEC\u624B\u52A8\u8BBE\u7F6E<code>context</code>\u7684\u7C7B\u578B\u3002\u5F53\u524D\uFF0C\u6211\u4EEC\u4E5F\u53EF\u4EE5\u4F7F\u7528\u6CDB\u578B\u6765\u8BBE\u7F6E<code>context</code>\u7684\u7C7B\u578B\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">IColor</span> <span class="token punctuation">{</span>
	color<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> ColorContext <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">createContext</span><span class="token generic class-name"><span class="token operator">&lt;</span>IColor<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">{</span> color<span class="token operator">:</span> <span class="token string">&quot;green&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>\u4E0B\u9762\u662F<code>useContext</code>\u5728\u7C7B\u578B\u58F0\u660E\u6587\u4EF6\u4E2D\u7684\u5B9A\u4E49\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token generic-function"><span class="token function">useContext</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>context<span class="token operator">:</span> Context<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token comment">/*, (not public API) observedBits?: number|boolean */</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">;</span>
<span class="token doc-comment comment">/**
  * Returns a stateful value, and a function to update it.
  *
  * <span class="token keyword">@version</span> 16.8.0
  * <span class="token keyword">@see</span> https://reactjs.org/docs/hooks-reference.html#usestate
  */</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="_7-usereducer" tabindex="-1"><a class="header-anchor" href="#_7-usereducer" aria-hidden="true">#</a> 7. useReducer</h3><p>\u6709\u65F6\u6211\u4EEC\u9700\u8981\u5904\u7406\u4E00\u4E9B\u590D\u6742\u7684\u72B6\u6001\uFF0C\u5E76\u4E14\u53EF\u80FD\u53D6\u51B3\u4E8E\u4E4B\u524D\u7684\u72B6\u6001\u3002\u8FD9\u65F6\u5019\u5C31\u53EF\u4EE5\u4F7F\u7528<code>useReducer</code>\uFF0C\u5B83\u63A5\u6536\u4E00\u4E2A\u51FD\u6570\uFF0C\u8FD9\u4E2A\u51FD\u6570\u4F1A\u6839\u636E\u4E4B\u524D\u7684\u72B6\u6001\u6765\u8BA1\u7B97\u4E00\u4E2A\u65B0\u7684<code>state</code>\u3002\u5176\u8BED\u6CD5\u5982\u4E0B\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> <span class="token punctuation">[</span>state<span class="token punctuation">,</span> dispatch<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useReducer</span><span class="token punctuation">(</span>reducer<span class="token punctuation">,</span> initialArg<span class="token punctuation">,</span> init<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>\u6765\u770B\u4E0B\u9762\u7684\u4F8B\u5B50\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> <span class="token function-variable function">reducer</span> <span class="token operator">=</span> <span class="token punctuation">(</span>state<span class="token punctuation">,</span> action<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">switch</span> <span class="token punctuation">(</span>action<span class="token punctuation">.</span>type<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">case</span> <span class="token string">&#39;increment&#39;</span><span class="token operator">:</span>
      <span class="token keyword">return</span> <span class="token punctuation">{</span>count<span class="token operator">:</span> state<span class="token punctuation">.</span>count <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> <span class="token string">&#39;decrement&#39;</span><span class="token operator">:</span>
      <span class="token keyword">return</span> <span class="token punctuation">{</span>count<span class="token operator">:</span> state<span class="token punctuation">.</span>count <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword">default</span><span class="token operator">:</span>
      <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> <span class="token function-variable function">Counter</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> initialState <span class="token operator">=</span> <span class="token punctuation">{</span>count<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">}</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>state<span class="token punctuation">,</span> dispatch<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useReducer</span><span class="token punctuation">(</span>reducer<span class="token punctuation">,</span> initialState<span class="token punctuation">)</span><span class="token punctuation">;</span>
  
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token operator">&lt;</span><span class="token operator">&gt;</span>
      Count<span class="token operator">:</span> <span class="token punctuation">{</span>state<span class="token punctuation">.</span>count<span class="token punctuation">}</span>
      <span class="token operator">&lt;</span>button onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token punctuation">{</span>type<span class="token operator">:</span> <span class="token string">&#39;increment&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token operator">&gt;</span><span class="token operator">+</span><span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>button onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token punctuation">{</span>type<span class="token operator">:</span> <span class="token string">&#39;decrement&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token operator">&gt;</span><span class="token operator">-</span><span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token operator">&gt;</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><p>\u5F53\u524D\u7684\u72B6\u6001\u662F\u65E0\u6CD5\u63A8\u65AD\u51FA\u6765\u7684\uFF0C\u53EF\u4EE5\u7ED9<code>reducer</code>\u51FD\u6570\u6DFB\u52A0\u7C7B\u578B\uFF0C\u901A\u8FC7\u7ED9<code>reducer</code>\u51FD\u6570\u5B9A\u4E49<code>state</code>\u548C<code>action</code>\u6765\u63A8\u65AD <code>useReducer</code> \u7684\u7C7B\u578B\uFF0C\u4E0B\u9762\u6765\u4FEE\u6539\u4E0A\u9762\u7684\u4F8B\u5B50\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">ActionType</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  type<span class="token operator">:</span> <span class="token string">&#39;increment&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;decrement&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">type</span> <span class="token class-name">State</span> <span class="token operator">=</span> <span class="token punctuation">{</span> count<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> initialState<span class="token operator">:</span> State <span class="token operator">=</span> <span class="token punctuation">{</span>count<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">}</span>
<span class="token keyword">const</span> <span class="token function-variable function">reducer</span> <span class="token operator">=</span> <span class="token punctuation">(</span>state<span class="token operator">:</span> State<span class="token punctuation">,</span> action<span class="token operator">:</span> ActionType<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>\u8FD9\u6837\uFF0C\u5728<code>Counter</code>\u51FD\u6570\u4E2D\u5C31\u53EF\u4EE5\u63A8\u65AD\u51FA\u7C7B\u578B\u3002\u5F53\u6211\u4EEC\u89C6\u56FE\u4F7F\u7528\u4E00\u4E2A\u4E0D\u5B58\u5728\u7684\u7C7B\u578B\u65F6\uFF0C\u5C31\u4F1A\u62A5\u9519\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token punctuation">{</span>type<span class="token operator">:</span> <span class="token string">&#39;reset&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Error! type &#39;&quot;reset&quot;&#39; is not assignable to type &#39;&quot;increment&quot; | &quot;decrement&quot;&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>\u9664\u6B64\u4E4B\u5916\uFF0C\u8FD8\u53EF\u4EE5\u4F7F\u7528\u6CDB\u578B\u7684\u5F62\u5F0F\u6765\u5B9E\u73B0<code>reducer</code>\u51FD\u6570\u7684\u7C7B\u578B\u5B9A\u4E49\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">ActionType</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  type<span class="token operator">:</span> <span class="token string">&#39;increment&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;decrement&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">type</span> <span class="token class-name">State</span> <span class="token operator">=</span> <span class="token punctuation">{</span> count<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> reducer<span class="token operator">:</span> React<span class="token punctuation">.</span>Reducer<span class="token operator">&lt;</span>State<span class="token punctuation">,</span> ActionType<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">(</span>state<span class="token punctuation">,</span> action<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>\u5176\u5B9E<code>dispatch</code>\u65B9\u6CD5\u4E5F\u662F\u6709\u7C7B\u578B\u7684\uFF1A</p>`,27),v=["src"],h=a(`<p>\u53EF\u4EE5\u770B\u5230\uFF0C<code>dispatch</code>\u7684\u7C7B\u578B\u662F\uFF1A<code>React.Dispatch</code>\uFF0C\u4E0A\u9762\u793A\u4F8B\u7684\u5B8C\u6574\u4EE3\u7801\u5982\u4E0B\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useReducer <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;react&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">type</span> <span class="token class-name">ActionType</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  type<span class="token operator">:</span> <span class="token string">&quot;increment&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;decrement&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">type</span> <span class="token class-name">State</span> <span class="token operator">=</span> <span class="token punctuation">{</span> count<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> Counter<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token function-variable function">FC</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> reducer<span class="token operator">:</span> React<span class="token punctuation">.</span>Reducer<span class="token operator">&lt;</span>State<span class="token punctuation">,</span> ActionType<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">(</span>state<span class="token punctuation">,</span> action<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">switch</span> <span class="token punctuation">(</span>action<span class="token punctuation">.</span>type<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">case</span> <span class="token string">&quot;increment&quot;</span><span class="token operator">:</span>
        <span class="token keyword">return</span> <span class="token punctuation">{</span> count<span class="token operator">:</span> state<span class="token punctuation">.</span>count <span class="token operator">+</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
      <span class="token keyword">case</span> <span class="token string">&quot;decrement&quot;</span><span class="token operator">:</span>
        <span class="token keyword">return</span> <span class="token punctuation">{</span> count<span class="token operator">:</span> state<span class="token punctuation">.</span>count <span class="token operator">-</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
      <span class="token keyword">default</span><span class="token operator">:</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> initialState<span class="token operator">:</span> State <span class="token operator">=</span> <span class="token punctuation">{</span>count<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">}</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>state<span class="token punctuation">,</span> dispatch<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useReducer</span><span class="token punctuation">(</span>reducer<span class="token punctuation">,</span> initialState<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token operator">&lt;</span><span class="token operator">&gt;</span>
      Count<span class="token operator">:</span> <span class="token punctuation">{</span>state<span class="token punctuation">.</span>count<span class="token punctuation">}</span>
      <span class="token operator">&lt;</span>button onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token punctuation">{</span> type<span class="token operator">:</span> <span class="token string">&quot;increment&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token operator">&gt;</span><span class="token operator">+</span><span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>button onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token punctuation">{</span> type<span class="token operator">:</span> <span class="token string">&quot;decrement&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token operator">&gt;</span><span class="token operator">-</span><span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token operator">&gt;</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> Counter<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br></div></div><h2 id="\u56DB\u3001\u4E8B\u4EF6\u5904\u7406" tabindex="-1"><a class="header-anchor" href="#\u56DB\u3001\u4E8B\u4EF6\u5904\u7406" aria-hidden="true">#</a> \u56DB\u3001\u4E8B\u4EF6\u5904\u7406</h2><h3 id="_1-event-\u4E8B\u4EF6\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#_1-event-\u4E8B\u4EF6\u7C7B\u578B" aria-hidden="true">#</a> 1. Event \u4E8B\u4EF6\u7C7B\u578B</h3><p>\u5728\u5F00\u53D1\u4E2D\u6211\u4EEC\u4F1A\u7ECF\u5E38\u5728\u4E8B\u4EF6\u5904\u7406\u51FD\u6570\u4E2D\u4F7F\u7528<code>event</code>\u4E8B\u4EF6\u5BF9\u8C61\uFF0C\u6BD4\u5982\u5728<code>input</code>\u6846\u8F93\u5165\u65F6\u5B9E\u65F6\u83B7\u53D6\u8F93\u5165\u7684\u503C\uFF1B\u4F7F\u7528\u9F20\u6807\u4E8B\u4EF6\u65F6\uFF0C\u901A\u8FC7 <code>clientX</code>\u3001<code>clientY</code> \u83B7\u53D6\u5F53\u524D\u6307\u9488\u7684\u5750\u6807\u7B49\u7B49\u3002\u200B</p><p>\u6211\u4EEC\u77E5\u9053\uFF0C<code>Event</code>\u662F\u4E00\u4E2A\u5BF9\u8C61\uFF0C\u5E76\u4E14\u6709\u5F88\u591A\u5C5E\u6027\uFF0C\u8FD9\u65F6\u5F88\u591A\u4EBA\u5C31\u4F1A\u628A <code>event</code> \u7C7B\u578B\u5B9A\u4E49\u4E3A<code>any</code>\uFF0C\u8FD9\u6837\u7684\u8BDDTypeScript\u5C31\u5931\u53BB\u4E86\u5B83\u7684\u610F\u4E49\uFF0C\u5E76\u4E0D\u4F1A\u5BF9<code>event</code>\u4E8B\u4EF6\u8FDB\u884C\u9759\u6001\u68C0\u67E5\uFF0C\u5982\u679C\u4E00\u4E2A\u952E\u76D8\u4E8B\u4EF6\u89E6\u53D1\u4E86\u4E0B\u9762\u7684\u65B9\u6CD5\uFF0C\u4E5F\u4E0D\u4F1A\u62A5\u9519\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> <span class="token function-variable function">handleEvent</span> <span class="token operator">=</span> <span class="token punctuation">(</span>e<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>clientX<span class="token punctuation">,</span> e<span class="token punctuation">.</span>clientY<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u7531\u4E8E<code>Event</code>\u4E8B\u4EF6\u5BF9\u8C61\u4E2D\u6709\u5F88\u591A\u7684\u5C5E\u6027\uFF0C\u6240\u4EE5\u6211\u4EEC\u4E5F\u4E0D\u65B9\u4FBF\u628A\u6240\u6709\u5C5E\u6027\u53CA\u5176\u7C7B\u578B\u5B9A\u4E49\u5728\u4E00\u4E2Ainterface\u4E2D\uFF0C\u6240\u4EE5React\u5728\u58F0\u660E\u6587\u4EF6\u4E2D\u7ED9\u6211\u4EEC\u63D0\u4F9B\u4E86<code>Event</code>\u4E8B\u4EF6\u5BF9\u8C61\u7684\u7C7B\u578B\u58F0\u660E\u3002</p><p>\u5E38\u89C1\u7684Event \u4E8B\u4EF6\u5BF9\u8C61\u5982\u4E0B\uFF1A</p><ul><li><p><strong>\u526A\u5207\u677F\u4E8B\u4EF6\u5BF9\u8C61</strong>\uFF1A<code>ClipboardEvent&lt;T = Element&gt;</code></p></li><li><p><strong>\u62D6\u62FD\u4E8B\u4EF6\u5BF9\u8C61</strong>\uFF1A<code>DragEvent&lt;T = Element&gt;</code></p></li><li><p><strong>\u7126\u70B9\u4E8B\u4EF6\u5BF9\u8C61</strong>\uFF1A<code>FocusEvent&lt;T = Element&gt;</code></p></li><li><p><strong>\u8868\u5355\u4E8B\u4EF6\u5BF9\u8C61</strong>\uFF1A<code>FormEvent&lt;T = Element&gt;</code></p></li><li><p><strong>Change\u4E8B\u4EF6\u5BF9\u8C61</strong>\uFF1A<code>ChangeEvent&lt;T = Element&gt;</code></p></li><li><p><strong>\u952E\u76D8\u4E8B\u4EF6\u5BF9\u8C61</strong>\uFF1A<code>KeyboardEvent&lt;T = Element&gt;</code></p></li><li><p><strong>\u9F20\u6807\u4E8B\u4EF6\u5BF9\u8C61</strong>\uFF1A<code>MouseEvent&lt;T = Element, E = NativeMouseEvent&gt;</code></p></li><li><p><strong>\u89E6\u6478\u4E8B\u4EF6\u5BF9\u8C61</strong>\uFF1A<code>TouchEvent&lt;T = Element&gt;</code></p></li><li><p><strong>\u6EDA\u8F6E\u4E8B\u4EF6\u5BF9\u8C61</strong>\uFF1A<code>WheelEvent&lt;T = Element&gt;</code></p></li><li><p><strong>\u52A8\u753B\u4E8B\u4EF6\u5BF9\u8C61</strong>\uFF1A<code>AnimationEvent&lt;T = Element&gt;</code></p></li><li><p><strong>\u8FC7\u6E21\u4E8B\u4EF6\u5BF9\u8C61</strong>\uFF1A<code>TransitionEvent&lt;T = Element&gt;</code></p></li></ul><p>\u53EF\u4EE5\u770B\u5230\uFF0C\u8FD9\u4E9B<code>Event</code>\u4E8B\u4EF6\u5BF9\u8C61\u7684\u6CDB\u578B\u4E2D\u90FD\u4F1A\u63A5\u6536\u4E00\u4E2A<code>Element</code>\u5143\u7D20\u7684\u7C7B\u578B\uFF0C\u8FD9\u4E2A\u7C7B\u578B\u5C31\u662F\u6211\u4EEC\u7ED1\u5B9A\u8FD9\u4E2A\u4E8B\u4EF6\u7684\u6807\u7B7E\u5143\u7D20\u7684\u7C7B\u578B\uFF0C\u6807\u7B7E\u5143\u7D20\u7C7B\u578B\u5C06\u5728\u4E0B\u9762\u7684\u7B2C\u4E94\u90E8\u5206\u4ECB\u7ECD\u3002</p><p>\u6765\u770B\u4E00\u4E2A\u7B80\u5355\u7684\u4F8B\u5B50\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">State</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  text<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> App<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token function-variable function">FC</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>  
  <span class="token keyword">const</span> <span class="token punctuation">[</span>text<span class="token punctuation">,</span> setText<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token generic-function"><span class="token function">useState</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span>

  <span class="token keyword">const</span> onChange <span class="token operator">=</span> <span class="token punctuation">(</span>e<span class="token operator">:</span> React<span class="token punctuation">.</span>FormEvent<span class="token operator">&lt;</span>HTMLInputElement<span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">setText</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>currentTarget<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">&quot;text&quot;</span> value<span class="token operator">=</span><span class="token punctuation">{</span>text<span class="token punctuation">}</span> onChange<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>onChange<span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p>\u8FD9\u91CC\u5C31\u7ED9<code>onChange</code>\u65B9\u6CD5\u7684\u4E8B\u4EF6\u5BF9\u8C61\u5B9A\u4E49\u4E3A\u4E86<code>FormEvent</code>\u7C7B\u578B\uFF0C\u5E76\u4E14\u4F5C\u7528\u7684\u5BF9\u8C61\u65F6\u4E00\u4E2A<code>HTMLInputElement</code>\u7C7B\u578B\u7684\u6807\u7B7E\uFF08input\u6807\u7B7E\uFF09\u200B</p><p>\u53EF\u4EE5\u6765\u770B\u4E0B<code>MouseEvent</code>\u4E8B\u4EF6\u5BF9\u8C61\u548C<code>ChangeEvent</code>\u4E8B\u4EF6\u5BF9\u8C61\u7684\u7C7B\u578B\u58F0\u660E\uFF0C\u5176\u4ED6\u4E8B\u4EF6\u5BF9\u8C61\u7684\u58F0\u660E\u5F62\u4F3C\u4E5F\u7C7B\u4F3C\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">MouseEvent<span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token operator">=</span> Element<span class="token punctuation">,</span> <span class="token constant">E</span> <span class="token operator">=</span> NativeMouseEvent<span class="token operator">&gt;</span></span> <span class="token keyword">extends</span> <span class="token class-name">UIEvent<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span> <span class="token constant">E</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
  altKey<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
  button<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
  buttons<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
  clientX<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
  clientY<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
  ctrlKey<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
  <span class="token doc-comment comment">/**
    * See [DOM Level 3 Events spec](https://www.w3.org/TR/uievents-key/#keys-modifier). for a list of valid (case-sensitive) arguments to this method.
    */</span>
  <span class="token function">getModifierState</span><span class="token punctuation">(</span>key<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
  metaKey<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
  movementX<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
  movementY<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
  pageX<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
  pageY<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
  relatedTarget<span class="token operator">:</span> EventTarget <span class="token operator">|</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
  screenX<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
  screenY<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
  shiftKey<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">interface</span> <span class="token class-name">ChangeEvent<span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token operator">=</span> Element<span class="token operator">&gt;</span></span> <span class="token keyword">extends</span> <span class="token class-name">SyntheticEvent<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
  target<span class="token operator">:</span> EventTarget <span class="token operator">&amp;</span> <span class="token constant">T</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><p>\u5728\u5F88\u591A\u4E8B\u4EF6\u5BF9\u8C61\u7684\u58F0\u660E\u6587\u4EF6\u4E2D\u90FD\u53EF\u4EE5\u770B\u5230 <code>EventTarget</code> \u7684\u8EAB\u5F71\u3002\u8FD9\u662F\u56E0\u4E3A\uFF0CDOM\u7684\u4E8B\u4EF6\u64CD\u4F5C\uFF08\u76D1\u542C\u548C\u89E6\u53D1\uFF09\uFF0C\u90FD\u5B9A\u4E49\u5728<code>EventTarget</code>\u63A5\u53E3\u4E0A\u3002<code>EventTarget</code> \u7684\u7C7B\u578B\u58F0\u660E\u5982\u4E0B\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">EventTarget</span> <span class="token punctuation">{</span>
    <span class="token function">addEventListener</span><span class="token punctuation">(</span>type<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> listener<span class="token operator">:</span> EventListenerOrEventListenerObject <span class="token operator">|</span> <span class="token keyword">null</span><span class="token punctuation">,</span> options<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token operator">|</span> AddEventListenerOptions<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>
    <span class="token function">dispatchEvent</span><span class="token punctuation">(</span>evt<span class="token operator">:</span> Event<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
    <span class="token function">removeEventListener</span><span class="token punctuation">(</span>type<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> listener<span class="token operator">?</span><span class="token operator">:</span> EventListenerOrEventListenerObject <span class="token operator">|</span> <span class="token keyword">null</span><span class="token punctuation">,</span> options<span class="token operator">?</span><span class="token operator">:</span> EventListenerOptions <span class="token operator">|</span> <span class="token builtin">boolean</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>\u6BD4\u5982\u5728<code>change</code>\u4E8B\u4EF6\u4E2D\uFF0C\u4F1A\u4F7F\u7528\u7684<code>e.target</code>\u6765\u83B7\u53D6\u5F53\u524D\u7684\u503C\uFF0C\u5B83\u7684\u7684\u7C7B\u578B\u5C31\u662F<code>EventTarget</code>\u3002\u6765\u770B\u4E0B\u9762\u7684\u4F8B\u5B50\uFF1A</p><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span>
	<span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>e <span class="token operator">=&gt;</span> <span class="token function">onSourceChange</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">}</span></span>
	<span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>\u6700\u591A30\u4E2A\u5B57<span class="token punctuation">&quot;</span></span>
<span class="token punctuation">/&gt;</span></span>

<span class="token keyword">const</span> <span class="token function-variable function">onSourceChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span>e<span class="token operator">:</span> React<span class="token punctuation">.</span>ChangeEvent<span class="token operator">&lt;</span>HTMLInputElement<span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">30</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&#39;\u8BF7\u957F\u5EA6\u4E0D\u80FD\u8D85\u8FC730\u4E2A\u5B57\uFF0C\u8BF7\u91CD\u65B0\u8F93\u5165&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token function">setSourceInput</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>\u8FD9\u91CC\u5B9A\u4E49\u4E86\u4E00\u4E2A<code>input</code>\u8F93\u5165\u6846\uFF0C\u5F53\u89E6\u53D1<code>onChange</code>\u4E8B\u4EF6\u65F6\uFF0C\u4F1A\u8C03\u7528<code>onSourceChange</code>\u65B9\u6CD5\uFF0C\u8BE5\u65B9\u6CD5\u7684\u53C2\u6570e\u7684\u7C7B\u578B\u5C31\u662F\uFF1A<code>React.ChangeEvent</code>\uFF0C\u800C<code>e.target</code>\u7684\u7C7B\u578B\u5C31\u662F<code>EventTarget</code>\uFF1A</p>`,21),f=["src"],w=a(`<p>\u5728\u6765\u770B\u4E00\u4E2A\u4F8B\u5B50\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>questionList<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>item <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>
    <span class="token operator">&lt;</span>div
    	key<span class="token operator">=</span><span class="token punctuation">{</span>item<span class="token punctuation">.</span>id<span class="token punctuation">}</span>
  	role<span class="token operator">=</span><span class="token string">&quot;button&quot;</span>
  	onClick<span class="token operator">=</span><span class="token punctuation">{</span>e <span class="token operator">=&gt;</span> <span class="token function">handleChangeCurrent</span><span class="token punctuation">(</span>item<span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">}</span>
    <span class="token operator">&gt;</span>
    <span class="token comment">// \u7EC4\u4EF6\u5185\u5BB9...</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
<span class="token punctuation">)</span>

<span class="token keyword">const</span> <span class="token function-variable function">handleChangeCurrent</span> <span class="token operator">=</span> <span class="token punctuation">(</span>item<span class="token operator">:</span> IData<span class="token punctuation">,</span> e<span class="token operator">:</span> React<span class="token punctuation">.</span>MouseEvent<span class="token operator">&lt;</span>HTMLDivElement<span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    e<span class="token punctuation">.</span><span class="token function">stopPropagation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">setCurrent</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p>\u8FD9\u70B9\u4EE3\u7801\u4E2D\uFF0C\u70B9\u51FB\u67D0\u4E2A\u76D2\u5B50\uFF0C\u5C31\u5C06\u5B83\u8BBE\u7F6E\u4E3A\u5F53\u524D\u7684\u76D2\u5B50\uFF0C\u65B9\u4FBF\u6267\u884C\u5176\u4ED6\u64CD\u4F5C\u3002\u5F53\u9F20\u6807\u70B9\u51FB\u76D2\u5B50\u65F6\uFF0C\u4F1A\u89E6\u53D1<code>handleChangeCurren</code>\u65B9\u6CD5\uFF0C\u8BE5\u65B9\u6CD5\u6709\u4E24\u4E2A\u53C2\u6570\uFF0C\u7B2C\u4E8C\u4E2A\u53C2\u6570\u662F<code>event</code>\u5BF9\u8C61\uFF0C\u5728\u65B9\u6CD5\u4E2D\u6267\u884C\u4E86<code>e.stopPropagation()</code>;\u662F\u4E3A\u4E86\u963B\u6B62\u5192\u6CE1\u4E8B\u4EF6\uFF0C\u8FD9\u91CC\u7684<code>stopPropagation()</code>\u5B9E\u9645\u4E0A\u5E76\u4E0D\u662F\u9F20\u6807\u4E8B\u4EF6<code>MouseEvent</code>\u7684\u5C5E\u6027\uFF0C\u5B83\u662F\u5408\u6210\u4E8B\u4EF6\u4E0A\u7684\u5C5E\u6027\uFF0C\u6765\u770B\u770B\u58F0\u660E\u6587\u4EF6\u4E2D\u7684\u5B9A\u4E49\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">MouseEvent<span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token operator">=</span> Element<span class="token punctuation">,</span> <span class="token constant">E</span> <span class="token operator">=</span> NativeMouseEvent<span class="token operator">&gt;</span></span> <span class="token keyword">extends</span> <span class="token class-name">UIEvent<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span> <span class="token constant">E</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
  <span class="token comment">//...     </span>
<span class="token punctuation">}</span>

<span class="token keyword">interface</span> <span class="token class-name">UIEvent<span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token operator">=</span> Element<span class="token punctuation">,</span> <span class="token constant">E</span> <span class="token operator">=</span> NativeUIEvent<span class="token operator">&gt;</span></span> <span class="token keyword">extends</span> <span class="token class-name">SyntheticEvent<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span> <span class="token constant">E</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
  <span class="token comment">//...</span>
<span class="token punctuation">}</span>

<span class="token keyword">interface</span> <span class="token class-name">SyntheticEvent<span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token operator">=</span> Element<span class="token punctuation">,</span> <span class="token constant">E</span> <span class="token operator">=</span> Event<span class="token operator">&gt;</span></span> <span class="token keyword">extends</span> <span class="token class-name">BaseSyntheticEvent<span class="token operator">&lt;</span><span class="token constant">E</span><span class="token punctuation">,</span> EventTarget <span class="token operator">&amp;</span> <span class="token constant">T</span><span class="token punctuation">,</span> EventTarget<span class="token operator">&gt;</span></span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

<span class="token keyword">interface</span> <span class="token class-name">BaseSyntheticEvent<span class="token operator">&lt;</span><span class="token constant">E</span> <span class="token operator">=</span> object<span class="token punctuation">,</span> <span class="token constant">C</span> <span class="token operator">=</span> <span class="token builtin">any</span><span class="token punctuation">,</span> <span class="token constant">T</span> <span class="token operator">=</span> <span class="token builtin">any</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
  nativeEvent<span class="token operator">:</span> <span class="token constant">E</span><span class="token punctuation">;</span>
  currentTarget<span class="token operator">:</span> <span class="token constant">C</span><span class="token punctuation">;</span>
  target<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">;</span>
  bubbles<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
  cancelable<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
  defaultPrevented<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
  eventPhase<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
  isTrusted<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
  <span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>
  <span class="token function">isDefaultPrevented</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
  <span class="token function">stopPropagation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>
  <span class="token function">isPropagationStopped</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
  <span class="token function">persist</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>
  timeStamp<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
  type<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br></div></div><p>\u53EF\u4EE5\u770B\u5230\uFF0C\u8FD9\u91CC\u7684<code>stopPropagation()</code>\u662F\u4E00\u5C42\u5C42\u7684\u7EE7\u627F\u6765\u7684\uFF0C\u6700\u7EC8\u6765\u81EA\u4E8E<code>BaseSyntheticEvent</code>\u5408\u6210\u4E8B\u4EF6\u7C7B\u578B\u3002\u539F\u751F\u7684\u4E8B\u4EF6\u96C6\u5408<code>SyntheticEvent</code>\u5C31\u662F\u7EE7\u627F\u81EA\u5408\u6210\u65F6\u95F4\u7C7B\u578B\u3002<code>SyntheticEvent&lt;T = Element, E = Event&gt;</code>\u6CDB\u578B\u63A5\u53E3\u63A5\u6536\u5F53\u524D\u7684\u5143\u7D20\u7C7B\u578B\u548C\u4E8B\u4EF6\u7C7B\u578B\uFF0C\u5982\u679C\u4E0D\u4ECB\u610F\u8FD9\u4E24\u4E2A\u53C2\u6570\u7684\u7C7B\u578B\uFF0C\u5B8C\u5168\u53EF\u4EE5\u8FD9\u6837\u5199\uFF1A</p><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> 
  <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span>e<span class="token operator">:</span> SyntheticEvent<span class="token operator">&lt;</span>Element<span class="token punctuation">,</span> Event<span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
    <span class="token comment">//... </span>
  <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
<span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="_2-\u4E8B\u4EF6\u5904\u7406\u51FD\u6570\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#_2-\u4E8B\u4EF6\u5904\u7406\u51FD\u6570\u7C7B\u578B" aria-hidden="true">#</a> 2. \u4E8B\u4EF6\u5904\u7406\u51FD\u6570\u7C7B\u578B</h3><p>\u8BF4\u5B8C\u4E8B\u4EF6\u5BF9\u8C61\u7C7B\u578B\uFF0C\u518D\u6765\u770B\u770B\u4E8B\u4EF6\u5904\u7406\u51FD\u6570\u7684\u7C7B\u578B\u3002React\u4E5F\u4E3A\u6211\u4EEC\u63D0\u4F9B\u4E86\u8D34\u5FC3\u7684\u63D0\u4F9B\u4E86\u4E8B\u4EF6\u5904\u7406\u51FD\u6570\u7684\u7C7B\u578B\u58F0\u660E\uFF0C\u6765\u770B\u770B\u6240\u6709\u7684\u4E8B\u4EF6\u5904\u7406\u51FD\u6570\u7684\u7C7B\u578B\u58F0\u660E\uFF1A</p><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token keyword">type</span> <span class="token class-name">EventHandler<span class="token operator">&lt;</span><span class="token constant">E</span> <span class="token keyword">extends</span> SyntheticEvent<span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token operator">&gt;&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token function">bivarianceHack</span><span class="token punctuation">(</span>event<span class="token operator">:</span> <span class="token constant">E</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">}</span><span class="token punctuation">[</span><span class="token string">&quot;bivarianceHack&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">type</span> <span class="token class-name">ReactEventHandler<span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token operator">=</span> Element<span class="token operator">&gt;</span></span> <span class="token operator">=</span> EventHandler<span class="token operator">&lt;</span>SyntheticEvent<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;&gt;</span><span class="token punctuation">;</span>
<span class="token comment">// \u526A\u5207\u677F\u4E8B\u4EF6\u5904\u7406\u51FD\u6570</span>
<span class="token keyword">type</span> <span class="token class-name">ClipboardEventHandler<span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token operator">=</span> Element<span class="token operator">&gt;</span></span> <span class="token operator">=</span> EventHandler<span class="token operator">&lt;</span>ClipboardEvent<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;&gt;</span><span class="token punctuation">;</span>
<span class="token comment">// \u590D\u5408\u4E8B\u4EF6\u5904\u7406\u51FD\u6570</span>
<span class="token keyword">type</span> <span class="token class-name">CompositionEventHandler<span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token operator">=</span> Element<span class="token operator">&gt;</span></span> <span class="token operator">=</span> EventHandler<span class="token operator">&lt;</span>CompositionEvent<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;&gt;</span><span class="token punctuation">;</span>
<span class="token comment">// \u62D6\u62FD\u4E8B\u4EF6\u5904\u7406\u51FD\u6570</span>
<span class="token keyword">type</span> <span class="token class-name">DragEventHandler<span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token operator">=</span> Element<span class="token operator">&gt;</span></span> <span class="token operator">=</span> EventHandler<span class="token operator">&lt;</span>DragEvent<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;&gt;</span><span class="token punctuation">;</span>
<span class="token comment">// \u7126\u70B9\u4E8B\u4EF6\u5904\u7406\u51FD\u6570</span>
<span class="token keyword">type</span> <span class="token class-name">FocusEventHandler<span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token operator">=</span> Element<span class="token operator">&gt;</span></span> <span class="token operator">=</span> EventHandler<span class="token operator">&lt;</span>FocusEvent<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;&gt;</span><span class="token punctuation">;</span>
<span class="token comment">// \u8868\u5355\u4E8B\u4EF6\u5904\u7406\u51FD\u6570</span>
<span class="token keyword">type</span> <span class="token class-name">FormEventHandler<span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token operator">=</span> Element<span class="token operator">&gt;</span></span> <span class="token operator">=</span> EventHandler<span class="token operator">&lt;</span>FormEvent<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;&gt;</span><span class="token punctuation">;</span>
<span class="token comment">// Change\u4E8B\u4EF6\u5904\u7406\u51FD\u6570</span>
<span class="token keyword">type</span> <span class="token class-name">ChangeEventHandler<span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token operator">=</span> Element<span class="token operator">&gt;</span></span> <span class="token operator">=</span> EventHandler<span class="token operator">&lt;</span>ChangeEvent<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;&gt;</span><span class="token punctuation">;</span>
<span class="token comment">// \u952E\u76D8\u4E8B\u4EF6\u5904\u7406\u51FD\u6570</span>
<span class="token keyword">type</span> <span class="token class-name">KeyboardEventHandler<span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token operator">=</span> Element<span class="token operator">&gt;</span></span> <span class="token operator">=</span> EventHandler<span class="token operator">&lt;</span>KeyboardEvent<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;&gt;</span><span class="token punctuation">;</span>
<span class="token comment">// \u9F20\u6807\u4E8B\u4EF6\u5904\u7406\u51FD\u6570</span>
<span class="token keyword">type</span> <span class="token class-name">MouseEventHandler<span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token operator">=</span> Element<span class="token operator">&gt;</span></span> <span class="token operator">=</span> EventHandler<span class="token operator">&lt;</span>MouseEvent<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;&gt;</span><span class="token punctuation">;</span>
<span class="token comment">// \u89E6\u5C4F\u4E8B\u4EF6\u5904\u7406\u51FD\u6570</span>
<span class="token keyword">type</span> <span class="token class-name">TouchEventHandler<span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token operator">=</span> Element<span class="token operator">&gt;</span></span> <span class="token operator">=</span> EventHandler<span class="token operator">&lt;</span>TouchEvent<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;&gt;</span><span class="token punctuation">;</span>
<span class="token comment">// \u6307\u9488\u4E8B\u4EF6\u5904\u7406\u51FD\u6570</span>
<span class="token keyword">type</span> <span class="token class-name">PointerEventHandler<span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token operator">=</span> Element<span class="token operator">&gt;</span></span> <span class="token operator">=</span> EventHandler<span class="token operator">&lt;</span>PointerEvent<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;&gt;</span><span class="token punctuation">;</span>
<span class="token comment">// \u754C\u9762\u4E8B\u4EF6\u5904\u7406\u51FD\u6570</span>
<span class="token keyword">type</span> <span class="token class-name">UIEventHandler<span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token operator">=</span> Element<span class="token operator">&gt;</span></span> <span class="token operator">=</span> EventHandler<span class="token operator">&lt;</span>UIEvent<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;&gt;</span><span class="token punctuation">;</span>
<span class="token comment">// \u6EDA\u8F6E\u4E8B\u4EF6\u5904\u7406\u51FD\u6570</span>
<span class="token keyword">type</span> <span class="token class-name">WheelEventHandler<span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token operator">=</span> Element<span class="token operator">&gt;</span></span> <span class="token operator">=</span> EventHandler<span class="token operator">&lt;</span>WheelEvent<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;&gt;</span><span class="token punctuation">;</span>
<span class="token comment">// \u52A8\u753B\u4E8B\u4EF6\u5904\u7406\u51FD\u6570</span>
<span class="token keyword">type</span> <span class="token class-name">AnimationEventHandler<span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token operator">=</span> Element<span class="token operator">&gt;</span></span> <span class="token operator">=</span> EventHandler<span class="token operator">&lt;</span>AnimationEvent<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;&gt;</span><span class="token punctuation">;</span>
<span class="token comment">// \u8FC7\u6E21\u4E8B\u4EF6\u5904\u7406\u51FD\u6570</span>
<span class="token keyword">type</span> <span class="token class-name">TransitionEventHandler<span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token operator">=</span> Element<span class="token operator">&gt;</span></span> <span class="token operator">=</span> EventHandler<span class="token operator">&lt;</span>TransitionEvent<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;&gt;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br></div></div><p>\u8FD9\u91CC\u9762\u7684T\u7684\u7C7B\u578B\u4E5F\u90FD\u662F<code>Element</code>\uFF0C\u6307\u7684\u662F\u89E6\u53D1\u8BE5\u4E8B\u4EF6\u7684HTML\u6807\u7B7E\u5143\u7D20\u7684\u7C7B\u578B\uFF0C\u4E0B\u9762\u7B2C\u4E94\u90E8\u5206\u4F1A\u4ECB\u7ECD\u3002\u200B</p><p><code>EventHandler</code>\u4F1A\u63A5\u6536\u4E00\u4E2A<code>E</code>\uFF0C\u5B83\u8868\u793A\u4E8B\u4EF6\u5904\u7406\u51FD\u6570\u4E2D <code>Event</code> \u5BF9\u8C61\u7684\u7C7B\u578B\u3002<code>bivarianceHack</code> \u662F\u4E8B\u4EF6\u5904\u7406\u51FD\u6570\u7684\u7C7B\u578B\u5B9A\u4E49\uFF0C\u51FD\u6570\u63A5\u6536\u4E00\u4E2A <code>Event</code> \u5BF9\u8C61\uFF0C\u5E76\u4E14\u5176\u7C7B\u578B\u4E3A\u63A5\u6536\u5230\u7684\u6CDB\u578B\u53D8\u91CF <code>E</code> \u7684\u7C7B\u578B, \u8FD4\u56DE\u503C\u4E3A void\u3002\u200B</p><p>\u8FD8\u770B\u4E0A\u9762\u7684\u90A3\u4E2A\u4F8B\u5B50\uFF1A</p><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token keyword">type</span> <span class="token class-name">State</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  text<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> App<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token function-variable function">FC</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>  
  <span class="token keyword">const</span> <span class="token punctuation">[</span>text<span class="token punctuation">,</span> setText<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token generic-function"><span class="token function">useState</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span>

  <span class="token keyword">const</span> onChange<span class="token operator">:</span> React<span class="token punctuation">.</span>ChangeEventHandler<span class="token operator">&lt;</span>HTMLInputElement<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">setText</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>currentTarget<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>text<span class="token punctuation">}</span></span> <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>onChange<span class="token punctuation">}</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p>\u8FD9\u91CC\u7ED9<code>onChange</code>\u65B9\u6CD5\u5B9A\u4E49\u4E86\u65B9\u6CD5\u7684\u7C7B\u578B\uFF0C\u5B83\u662F\u4E00\u4E2A<code>ChangeEventHandler</code>\u7684\u7C7B\u578B\uFF0C\u5E76\u4E14\u4F5C\u7528\u7684\u5BF9\u8C61\u65F6\u4E00\u4E2A<code>HTMLImnputElement</code>\u7C7B\u578B\u7684\u6807\u7B7E\uFF08input\u6807\u7B7E\uFF09\u3002</p><h2 id="\u4E94\u3001html\u6807\u7B7E\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#\u4E94\u3001html\u6807\u7B7E\u7C7B\u578B" aria-hidden="true">#</a> \u4E94\u3001HTML\u6807\u7B7E\u7C7B\u578B</h2><h3 id="_1-\u5E38\u89C1\u6807\u7B7E\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#_1-\u5E38\u89C1\u6807\u7B7E\u7C7B\u578B" aria-hidden="true">#</a> 1. \u5E38\u89C1\u6807\u7B7E\u7C7B\u578B</h3><p>\u5728\u9879\u76EE\u7684\u4F9D\u8D56\u6587\u4EF6\u4E2D\u53EF\u4EE5\u627E\u5230HTML\u6807\u7B7E\u76F8\u5173\u7684\u7C7B\u578B\u58F0\u660E\u6587\u4EF6\uFF1A</p>`,17),x=["src"],T=a(`<p>\u6240\u6709\u7684<code>HTML</code>\u6807\u7B7E\u7684\u7C7B\u578B\u90FD\u88AB\u5B9A\u4E49\u5728 <code>intrinsicElements</code> \u63A5\u53E3\u4E2D\uFF0C\u5E38\u89C1\u7684\u6807\u7B7E\u53CA\u5176\u7C7B\u578B\u5982\u4E0B\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>a<span class="token operator">:</span> HTMLAnchorElement<span class="token punctuation">;</span>
body<span class="token operator">:</span> HTMLBodyElement<span class="token punctuation">;</span>
br<span class="token operator">:</span> HTMLBRElement<span class="token punctuation">;</span>
button<span class="token operator">:</span> HTMLButtonElement<span class="token punctuation">;</span>
div<span class="token operator">:</span> HTMLDivElement<span class="token punctuation">;</span>
h1<span class="token operator">:</span> HTMLHeadingElement<span class="token punctuation">;</span>
h2<span class="token operator">:</span> HTMLHeadingElement<span class="token punctuation">;</span>
h3<span class="token operator">:</span> HTMLHeadingElement<span class="token punctuation">;</span>
html<span class="token operator">:</span> HTMLHtmlElement<span class="token punctuation">;</span>
img<span class="token operator">:</span> HTMLImageElement<span class="token punctuation">;</span>
input<span class="token operator">:</span> HTMLInputElement<span class="token punctuation">;</span>
ul<span class="token operator">:</span> HTMLUListElement<span class="token punctuation">;</span>
li<span class="token operator">:</span> HTMLLIElement<span class="token punctuation">;</span>
link<span class="token operator">:</span> HTMLLinkElement<span class="token punctuation">;</span>
p<span class="token operator">:</span> HTMLParagraphElement<span class="token punctuation">;</span>
span<span class="token operator">:</span> HTMLSpanElement<span class="token punctuation">;</span>
style<span class="token operator">:</span> HTMLStyleElement<span class="token punctuation">;</span>
table<span class="token operator">:</span> HTMLTableElement<span class="token punctuation">;</span>
tbody<span class="token operator">:</span> HTMLTableSectionElement<span class="token punctuation">;</span>
video<span class="token operator">:</span> HTMLVideoElement<span class="token punctuation">;</span>
audio<span class="token operator">:</span> HTMLAudioElement<span class="token punctuation">;</span>
meta<span class="token operator">:</span> HTMLMetaElement<span class="token punctuation">;</span>
form<span class="token operator">:</span> HTMLFormElement<span class="token punctuation">;</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><p>\u90A3\u4EC0\u4E48\u65F6\u5019\u4F1A\u4F7F\u7528\u5230\u6807\u7B7E\u7C7B\u578B\u5462\uFF0C\u4E0A\u9762\u7B2C\u56DB\u90E8\u5206\u7684<code>Event</code>\u4E8B\u4EF6\u7C7B\u578B\u548C\u4E8B\u4EF6\u5904\u7406\u51FD\u6570\u7C7B\u578B\u4E2D\u90FD\u4F7F\u7528\u5230\u4E86\u6807\u7B7E\u7684\u7C7B\u578B\u3002\u4E0A\u9762\u7684\u5F88\u591A\u7684\u7C7B\u578B\u90FD\u9700\u8981\u4F20\u5165\u4E00\u4E2A<code>ELement</code>\u7C7B\u578B\u7684\u6CDB\u578B\u53C2\u6570\uFF0C\u8FD9\u4E2A\u6CDB\u578B\u53C2\u6570\u5C31\u662F\u5BF9\u5E94\u7684\u6807\u7B7E\u7C7B\u578B\u503C\uFF0C\u53EF\u4EE5\u6839\u636E\u6807\u7B7E\u6765\u9009\u62E9\u5BF9\u5E94\u7684\u6807\u7B7E\u7C7B\u578B\u3002\u8FD9\u4E9B\u7C7B\u578B\u90FD\u7EE7\u627F\u81EA<code>HTMLElement</code>\u7C7B\u578B\uFF0C\u5982\u679C\u4F7F\u7528\u65F6\u5BF9\u7C7B\u578B\u7C7B\u578B\u8981\u6C42\u4E0D\u9AD8\uFF0C\u53EF\u4EE5\u76F4\u63A5\u5199<code>HTMLELement</code>\u3002\u6BD4\u5982\u4E0B\u9762\u7684\u4F8B\u5B50\uFF1A</p><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span>
	<span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span>
	<span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span>e<span class="token operator">:</span> React<span class="token punctuation">.</span>MouseEvent<span class="token operator">&lt;</span>HTMLElement<span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">handleOperate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  e<span class="token punctuation">.</span><span class="token function">stopPropagation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">}</span></span>
  <span class="token punctuation">&gt;</span></span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span>
	<span class="token attr-name">src</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>cancelChangeIcon<span class="token punctuation">}</span></span>
	<span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token punctuation">&quot;</span></span>
    <span class="token punctuation">/&gt;</span></span><span class="token plain-text">
    \u53D6\u6D88\u4FEE\u6539
</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>\u5176\u5B9E\uFF0C\u5728\u76F4\u63A5\u64CD\u4F5CDOM\u65F6\u4E5F\u4F1A\u7528\u5230\u6807\u7B7E\u7C7B\u578B\uFF0C\u867D\u7136\u6211\u4EEC\u73B0\u5728\u901A\u5E38\u4F1A\u4F7F\u7528\u6846\u67B6\u6765\u5F00\u53D1\uFF0C\u4F46\u662F\u6709\u65F6\u5019\u4E5F\u907F\u514D\u4E0D\u4E86\u76F4\u63A5\u64CD\u4F5CDOM\u3002\u6BD4\u5982\u6211\u5728\u5DE5\u4F5C\u4E2D\uFF0C\u9879\u76EE\u4E2D\u7684\u67D0\u4E00\u90E8\u5206\u7EC4\u4EF6\u662F\u901A\u8FC7npm\u6765\u5F15\u5165\u7684\u5176\u4ED6\u7EC4\u7684\u7EC4\u4EF6\uFF0C\u800C\u5728\u5F88\u591A\u65F6\u5019\uFF0C\u6211\u6709\u9700\u8981\u52A8\u6001\u7684\u53BB\u4E2A\u6027\u5316\u8FD9\u4E2A\u7EC4\u4EF6\u7684\u6837\u5F0F\uFF0C\u6700\u76F4\u63A5\u7684\u529E\u6CD5\u5C31\u662F\u901A\u8FC7\u539F\u751FJavaScript\u83B7\u53D6\u5230DOM\u5143\u7D20\uFF0C\u6765\u8FDB\u884C\u6837\u5F0F\u7684\u4FEE\u6539\uFF0C\u8FD9\u65F6\u5019\u5C31\u4F1A\u7528\u5230\u6807\u7B7E\u7C7B\u578B\u3002</p><p>\u6765\u770B\u4E0B\u9762\u7684\u4F8B\u5B50\uFF1A</p><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code>document<span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span><span class="token string">&#39;.paper&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>item <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> firstPageHasAddEle <span class="token operator">=</span> <span class="token punctuation">(</span>item<span class="token punctuation">.</span>firstChild <span class="token keyword">as</span> HTMLDivElement<span class="token punctuation">)</span><span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">&#39;add-ele&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  
  <span class="token keyword">if</span> <span class="token punctuation">(</span>firstPageHasAddEle<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    item<span class="token punctuation">.</span><span class="token function">removeChild</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>firstChild <span class="token keyword">as</span> ChildNode<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>\u8FD9\u662F\u6211\u6700\u8FD1\u5199\u7684\u4E00\u6BB5\u4EE3\u7801\uFF08\u7565\u5FAE\u5220\u6539\uFF09\uFF0C\u5728\u7B2C\u4E00\u9875\u6709\u4E2A<code>add-ele</code>\u5143\u7D20\u7684\u65F6\u5019\u5C31\u5220\u9664\u5B83\u3002\u8FD9\u91CC\u6211\u4EEC\u5C06<code>item.firstChild</code>\u65AD\u8A00\u6210\u4E86<code>HTMLDivElement</code>\u7C7B\u578B\uFF0C\u5982\u679C\u4E0D\u65AD\u8A00\uFF0C<code>item.firstChild</code>\u7684\u7C7B\u578B\u5C31\u662F<code>ChildNode</code>\uFF0C\u800C<code>ChildNode</code>\u7C7B\u578B\u4E2D\u662F\u4E0D\u5B58\u5728<code>classList</code>\u5C5E\u6027\u7684\uFF0C\u6240\u4EE5\u5C31\u5C31\u4F1A\u62A5\u9519\uFF0C\u5F53\u6211\u4EEC\u628A\u4ED6\u65AD\u8A00\u6210<code>HTMLDivElement</code>\u7C7B\u578B\u65F6\uFF0C\u5C31\u4E0D\u4F1A\u62A5\u9519\u4E86\u3002\u5F88\u591A\u65F6\u5019\uFF0C\u6807\u7B7E\u7C7B\u578B\u53EF\u4EE5\u548C\u65AD\u8A00\uFF08as\uFF09\u4E00\u8D77\u4F7F\u7528\u3002</p><p>\u540E\u9762\u5728removeChild\u65F6\u53C8\u4F7F\u7528\u4E86as\u65AD\u8A00\uFF0C\u4E3A\u4EC0\u4E48\u5462\uFF1F<code>item.firstChild</code>\u4E0D\u662F\u5DF2\u7ECF\u81EA\u52A8\u8BC6\u522B\u4E3A<code>ChildNode</code>\u7C7B\u578B\u4E86\u5417\uFF1F\u56E0\u4E3ATS\u4F1A\u8BA4\u4E3A\uFF0C\u6211\u4EEC\u53EF\u80FD\u4E0D\u80FD\u83B7\u53D6\u5230\u7C7B\u540D\u4E3Apaper\u7684\u5143\u7D20\uFF0C\u6240\u4EE5<code>item.firstChild</code>\u7684\u7C7B\u578B\u5C31\u88AB\u63A8\u65AD\u4E3A<code>ChildNode | null</code>\uFF0C\u6211\u4EEC\u6709\u65F6\u5019\u6BD4TS\u66F4\u61C2\u6211\u4EEC\u5B9A\u4E49\u7684\u5143\u7D20\uFF0C\u77E5\u9053\u9875\u9762\u4E00\u5B9A\u5B58\u5728<code>paper</code> \u5143\u7D20\uFF0C\u6240\u4EE5\u53EF\u4EE5\u76F4\u63A5\u5C06<code>item.firstChild</code>\u65AD\u8A00\u6210<code>ChildNode</code>\u7C7B\u578B\u3002</p><h3 id="_2-\u6807\u7B7E\u5C5E\u6027\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#_2-\u6807\u7B7E\u5C5E\u6027\u7C7B\u578B" aria-hidden="true">#</a> 2. \u6807\u7B7E\u5C5E\u6027\u7C7B\u578B</h3><p>\u4F17\u6240\u5468\u77E5\uFF0C\u6BCF\u4E2AHTML\u6807\u7B7E\u90FD\u6709\u81EA\u5DF1\u7684\u5C5E\u6027\uFF0C\u6BD4\u5982Input\u6846\u5C31\u6709<code>value</code>\u3001<code>width</code>\u3001<code>placeholder</code>\u3001<code>max-length</code>\u7B49\u5C5E\u6027\uFF0C\u4E0B\u9762\u662FInput\u6846\u7684\u5C5E\u6027\u7C7B\u578B\u5B9A\u4E49\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">InputHTMLAttributes<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token keyword">extends</span> <span class="token class-name">HTMLAttributes<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
  accept<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>
  alt<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>
  autoComplete<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>
  autoFocus<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>
  capture<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token operator">|</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>
  checked<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>
  crossOrigin<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>
  disabled<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>
  enterKeyHint<span class="token operator">?</span><span class="token operator">:</span> <span class="token string">&#39;enter&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;done&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;go&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;next&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;previous&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;search&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;send&#39;</span> <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>
  form<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>
  formAction<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>
  formEncType<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>
  formMethod<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>
  formNoValidate<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>
  formTarget<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>
  height<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">|</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>
  list<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>
  max<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">|</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>
  maxLength<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>
  min<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">|</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>
  minLength<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>
  multiple<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>
  name<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>
  pattern<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>
  placeholder<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>
  readOnly<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>
  required<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>
  size<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>
  src<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>
  step<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">|</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>
  type<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>
  value<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> ReadonlyArray<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span> <span class="token operator">|</span> <span class="token builtin">number</span> <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>
  width<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">|</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>

  onChange<span class="token operator">?</span><span class="token operator">:</span> ChangeEventHandler<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br></div></div><p>\u5982\u679C\u6211\u4EEC\u9700\u8981\u76F4\u63A5\u64CD\u4F5C<code>DOM</code>\uFF0C\u5C31\u53EF\u80FD\u4F1A\u7528\u5230\u5143\u7D20\u5C5E\u6027\u7C7B\u578B\uFF0C\u5E38\u89C1\u7684\u5143\u7D20\u5C5E\u6027\u7C7B\u578B\u5982\u4E0B\uFF1A</p><ul><li><p><strong>HTML\u5C5E\u6027\u7C7B\u578B</strong>\uFF1AHTMLAttributes</p></li><li><p><strong>\u6309\u94AE\u5C5E\u6027\u7C7B\u578B</strong>\uFF1AButtonHTMLAttributes</p></li><li><p><strong>\u8868\u5355\u5C5E\u6027\u7C7B\u578B</strong>\uFF1AFormHTMLAttributes</p></li><li><p><strong>\u56FE\u7247\u5C5E\u6027\u7C7B\u578B</strong>\uFF1AImgHTMLAttributes</p></li><li><p><strong>\u8F93\u5165\u6846\u5C5E\u6027\u7C7B\u578B</strong>\uFF1AInputHTMLAttributes</p></li><li><p><strong>\u94FE\u63A5\u5C5E\u6027\u7C7B\u578B</strong>\uFF1ALinkHTMLAttributes</p></li><li><p><strong>meta\u5C5E\u6027\u7C7B\u578B</strong>\uFF1AMetaHTMLAttributes</p></li><li><p><strong>\u9009\u62E9\u6846\u5C5E\u6027\u7C7B\u578B</strong>\uFF1ASelectHTMLAttributes</p></li><li><p><strong>\u8868\u683C\u5C5E\u6027\u7C7B\u578B</strong>\uFF1ATableHTMLAttributes</p></li><li><p><strong>\u8F93\u5165\u533A\u5C5E\u6027\u7C7B\u578B</strong>\uFF1ATextareaHTMLAttributes</p></li><li><p><strong>\u89C6\u9891\u5C5E\u6027\u7C7B\u578B</strong>\uFF1AVideoHTMLAttributes</p></li><li><p><strong>SVG\u5C5E\u6027\u7C7B\u578B</strong>\uFF1ASVGAttributes</p></li><li><p><strong>WebView\u5C5E\u6027\u7C7B\u578B</strong>\uFF1AWebViewHTMLAttributes</p></li></ul><p>\u4E00\u822C\u60C5\u51B5\u4E0B\uFF0C\u6211\u4EEC\u662F\u5F88\u5C11\u9700\u8981\u5728\u9879\u76EE\u4E2D\u663E\u5F0F\u7684\u53BB\u5B9A\u4E49\u6807\u7B7E\u5C5E\u6027\u7684\u7C7B\u578B\u3002\u5982\u679C\u5B50\u7EA7\u53BB\u5C01\u88C5\u7EC4\u4EF6\u5E93\u7684\u8BDD\uFF0C\u8FD9\u4E9B\u5C5E\u6027\u5C31\u80FD\u53D1\u6325\u5B83\u4EEC\u7684\u4F5C\u7528\u4E86\u3002\u6765\u770B\u4F8B\u5B50\uFF08\u6765\u6E90\u4E8E\u7F51\u7EDC\uFF0C\u4EC5\u4F9B\u5B66\u4E60\uFF09\uFF1A</p><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> classNames <span class="token keyword">from</span> <span class="token string">&#39;classnames&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">enum</span> ButtonSize <span class="token punctuation">{</span>
    Large <span class="token operator">=</span> <span class="token string">&#39;lg&#39;</span><span class="token punctuation">,</span>
    Small <span class="token operator">=</span> <span class="token string">&#39;sm&#39;</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">enum</span> ButtonType <span class="token punctuation">{</span>
    Primary <span class="token operator">=</span> <span class="token string">&#39;primary&#39;</span><span class="token punctuation">,</span>
    Default <span class="token operator">=</span> <span class="token string">&#39;default&#39;</span><span class="token punctuation">,</span>
    Danger <span class="token operator">=</span> <span class="token string">&#39;danger&#39;</span><span class="token punctuation">,</span>
    Link <span class="token operator">=</span> <span class="token string">&#39;link&#39;</span>
<span class="token punctuation">}</span>

<span class="token keyword">interface</span> <span class="token class-name">BaseButtonProps</span> <span class="token punctuation">{</span>
    className<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
    disabled<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
    size<span class="token operator">?</span><span class="token operator">:</span> ButtonSize<span class="token punctuation">;</span>
    btnType<span class="token operator">?</span><span class="token operator">:</span> ButtonType<span class="token punctuation">;</span>
    children<span class="token operator">:</span> React<span class="token punctuation">.</span>ReactNode<span class="token punctuation">;</span>
    href<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>    
<span class="token punctuation">}</span>

<span class="token keyword">type</span> <span class="token class-name">NativeButtonProps</span> <span class="token operator">=</span> BaseButtonProps <span class="token operator">&amp;</span> React<span class="token punctuation">.</span>ButtonHTMLAttributes<span class="token operator">&lt;</span>HTMLButtonElement<span class="token operator">&gt;</span> <span class="token comment">// \u4F7F\u7528 \u4EA4\u53C9\u7C7B\u578B\uFF08&amp;\uFF09 \u83B7\u5F97\u6211\u4EEC\u81EA\u5DF1\u5B9A\u4E49\u7684\u5C5E\u6027\u548C\u539F\u751F button \u7684\u5C5E\u6027</span>
<span class="token keyword">type</span> <span class="token class-name">AnchorButtonProps</span> <span class="token operator">=</span> BaseButtonProps <span class="token operator">&amp;</span> React<span class="token punctuation">.</span>AnchorHTMLAttributes<span class="token operator">&lt;</span>HTMLAnchorElement<span class="token operator">&gt;</span> <span class="token comment">// \u4F7F\u7528 \u4EA4\u53C9\u7C7B\u578B\uFF08&amp;\uFF09 \u83B7\u5F97\u6211\u4EEC\u81EA\u5DF1\u5B9A\u4E49\u7684\u5C5E\u6027\u548C\u539F\u751F a\u6807\u7B7E \u7684\u5C5E\u6027</span>

<span class="token keyword">export</span> <span class="token keyword">type</span> <span class="token class-name">ButtonProps</span> <span class="token operator">=</span> Partial<span class="token operator">&lt;</span>NativeButtonProps <span class="token operator">&amp;</span> AnchorButtonProps<span class="token operator">&gt;</span> <span class="token comment">//\u4F7F\u7528 Partial&lt;&gt; \u4F7F\u4E24\u79CD\u5C5E\u6027\u53EF\u9009</span>

<span class="token keyword">const</span> Button<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token constant">FC</span><span class="token operator">&lt;</span>ButtonProps<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">(</span>props<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> 
        disabled<span class="token punctuation">,</span>
        className<span class="token punctuation">,</span> 
        size<span class="token punctuation">,</span>
        btnType<span class="token punctuation">,</span>
        children<span class="token punctuation">,</span>
        href<span class="token punctuation">,</span>
        <span class="token operator">...</span>restProps  
    <span class="token punctuation">}</span> <span class="token operator">=</span> props<span class="token punctuation">;</span>

    <span class="token keyword">const</span> classes <span class="token operator">=</span> <span class="token function">classNames</span><span class="token punctuation">(</span><span class="token string">&#39;btn&#39;</span><span class="token punctuation">,</span> className<span class="token punctuation">,</span> <span class="token punctuation">{</span>
        <span class="token punctuation">[</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">btn-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>btnType<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">]</span><span class="token operator">:</span> btnType<span class="token punctuation">,</span>
        <span class="token punctuation">[</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">btn-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>size<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">]</span><span class="token operator">:</span> size<span class="token punctuation">,</span>
        <span class="token string">&#39;disabled&#39;</span><span class="token operator">:</span> <span class="token punctuation">(</span>btnType <span class="token operator">===</span> ButtonType<span class="token punctuation">.</span>Link<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> disabled  <span class="token comment">// \u53EA\u6709 a \u6807\u7B7E\u624D\u6709 disabled \u7C7B\u540D\uFF0Cbutton\u6CA1\u6709</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>

    <span class="token keyword">if</span><span class="token punctuation">(</span>btnType <span class="token operator">===</span> ButtonType<span class="token punctuation">.</span>Link <span class="token operator">&amp;&amp;</span> href<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> 
            	<span class="token attr-name">className</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>classes<span class="token punctuation">}</span></span>
            	<span class="token attr-name">href</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>href<span class="token punctuation">}</span></span>
            	<span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>restProps<span class="token punctuation">}</span></span>
            <span class="token punctuation">&gt;</span></span><span class="token plain-text">
                </span><span class="token punctuation">{</span>children<span class="token punctuation">}</span><span class="token plain-text">
            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
        <span class="token punctuation">)</span>

    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> 
            	<span class="token attr-name">className</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>classes<span class="token punctuation">}</span></span>
            	<span class="token attr-name">disabled</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>disabled<span class="token punctuation">}</span></span> <span class="token comment">// button\u5143\u7D20\u9ED8\u8BA4\u6709disabled\u5C5E\u6027\uFF0C\u6240\u4EE5\u5373\u4FBF\u6CA1\u7ED9\u4ED6\u8BBE\u7F6E\u6837\u5F0F\u4E5F\u4F1A\u548C\u666E\u901Abutton\u6709\u4E00\u5B9A\u533A\u522B</span>

            	<span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>restProps<span class="token punctuation">}</span></span>
            <span class="token punctuation">&gt;</span></span><span class="token plain-text">
                </span><span class="token punctuation">{</span>children<span class="token punctuation">}</span><span class="token plain-text">
            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
        <span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

Button<span class="token punctuation">.</span>defaultProps <span class="token operator">=</span> <span class="token punctuation">{</span>
    disabled<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    btnType<span class="token operator">:</span> ButtonType<span class="token punctuation">.</span>Default
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> Button<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br></div></div><p>\u8FD9\u6BB5\u4EE3\u7801\u5C31\u662F\u7528\u6765\u5C01\u88C5\u4E00\u4E2A<code>button</code>\u6309\u94AE\uFF0C\u5728<code>button</code>\u7684\u57FA\u7840\u4E0A\u6DFB\u52A0\u4E86\u4E00\u4E9B\u81EA\u5B9A\u4E49\u5C5E\u6027\uFF0C\u6BD4\u5982\u4E0A\u9762\u5C06<code>button</code>\u7684\u7C7B\u578B\u4F7F\u7528\u4EA4\u53C9\u7C7B\u578B\uFF08&amp;\uFF09\u83B7\u5F97\u81EA\u5B9A\u4E49\u5C5E\u6027\u548C\u539F\u751F button \u5C5E\u6027 \uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">NativeButtonProps</span> <span class="token operator">=</span> BaseButtonProps <span class="token operator">&amp;</span> React<span class="token punctuation">.</span>ButtonHTMLAttributes<span class="token operator">&lt;</span>HTMLButtonElement<span class="token operator">&gt;</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="\u516D\u3001\u5DE5\u5177\u6CDB\u578B" tabindex="-1"><a class="header-anchor" href="#\u516D\u3001\u5DE5\u5177\u6CDB\u578B" aria-hidden="true">#</a> \u516D\u3001\u5DE5\u5177\u6CDB\u578B</h2><p>\u5728\u9879\u76EE\u4E2D\u4F7F\u7528\u4E00\u4E9B\u5DE5\u5177\u6CDB\u578B\u53EF\u4EE5\u63D0\u9AD8\u6211\u4EEC\u7684\u5F00\u53D1\u6548\u7387\uFF0C\u5C11\u5199\u5F88\u591A\u7C7B\u578B\u5B9A\u4E49\u3002\u4E0B\u9762\u6765\u770B\u770B\u6709\u54EA\u4E9B\u5E38\u89C1\u7684\u5DE5\u5177\u6CDB\u578B\uFF0C\u4EE5\u53CA\u5176\u4F7F\u7528\u65B9\u5F0F\u3002</p><h3 id="_1-partial" tabindex="-1"><a class="header-anchor" href="#_1-partial" aria-hidden="true">#</a> 1. Partial</h3><p><code>Partial</code> \u4F5C\u7528\u662F<strong>\u5C06\u4F20\u5165\u7684\u5C5E\u6027\u53D8\u4E3A\u53EF\u9009\u9879</strong>\u3002\u9002\u7528\u4E8E\u5BF9\u7C7B\u578B\u7ED3\u6784\u4E0D\u660E\u786E\u7684\u60C5\u51B5\u3002\u5B83\u4F7F\u7528\u4E86\u4E24\u4E2A\u5173\u952E\u5B57\uFF1Akeyof\u548Cin\uFF0C\u5148\u6765\u770B\u770B\u4ED6\u4EEC\u90FD\u662F\u4EC0\u4E48\u542B\u4E49\u3002<code>keyof</code> \u53EF\u4EE5\u7528\u6765\u53D6\u5F97\u63A5\u53E3\u7684\u6240\u6709 <code>key</code> \u503C\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">IPerson</span> <span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  age<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
  height<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T</span></span> <span class="token operator">=</span> <span class="token keyword">keyof</span> IPerson 
<span class="token comment">// T \u7C7B\u578B\u4E3A\uFF1A &quot;name&quot; | &quot;age&quot; | &quot;number&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p><code>in</code>\u5173\u952E\u5B57\u53EF\u4EE5\u904D\u5386\u679A\u4E3E\u7C7B\u578B,\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">Person</span> <span class="token operator">=</span> <span class="token string">&quot;name&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;age&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;number&quot;</span>
<span class="token keyword">type</span> <span class="token class-name">Obj</span> <span class="token operator">=</span>  <span class="token punctuation">{</span>
  <span class="token punctuation">[</span>p <span class="token keyword">in</span> Keys<span class="token punctuation">]</span><span class="token operator">:</span> <span class="token builtin">any</span>
<span class="token punctuation">}</span> 
<span class="token comment">// Obj\u7C7B\u578B\u4E3A\uFF1A { name: any, age: any, number: any }</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p><code>keyof</code> \u53EF\u4EE5\u4EA7\u751F\u8054\u5408\u7C7B\u578B, <code>in</code> \u53EF\u4EE5\u904D\u5386\u679A\u4E3E\u7C7B\u578B, \u6240\u4EE5\u7ECF\u5E38\u4E00\u8D77\u4F7F\u7528, \u4E0B\u9762\u662FPartial\u5DE5\u5177\u6CDB\u578B\u7684\u5B9A\u4E49\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token doc-comment comment">/**
 * Make all properties in T optional
 * \u5C06T\u4E2D\u7684\u6240\u6709\u5C5E\u6027\u8BBE\u7F6E\u4E3A\u53EF\u9009
 */</span>
<span class="token keyword">type</span> <span class="token class-name">Partial<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token punctuation">[</span><span class="token constant">P</span> <span class="token keyword">in</span> <span class="token keyword">keyof</span> <span class="token constant">T</span><span class="token punctuation">]</span><span class="token operator">?</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token constant">P</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>\u8FD9\u91CC\uFF0C<code>keyof T</code> \u83B7\u53D6 <code>T</code> \u6240\u6709\u5C5E\u6027\u540D, \u7136\u540E\u4F7F\u7528 <code>in</code> \u8FDB\u884C\u904D\u5386, \u5C06\u503C\u8D4B\u7ED9 <code>P</code>, \u6700\u540E <code>T[P]</code> \u53D6\u5F97\u76F8\u5E94\u5C5E\u6027\u7684\u503C\u3002\u4E2D\u95F4\u7684<code>?</code>\u5C31\u7528\u6765\u5C06\u5C5E\u6027\u8BBE\u7F6E\u4E3A\u53EF\u9009\u3002</p><p>\u4F7F\u7528\u793A\u4F8B\u5982\u4E0B\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">IPerson</span> <span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  age<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
  height<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> person<span class="token operator">:</span> Partial<span class="token operator">&lt;</span>IPerson<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token string">&quot;zhangsan&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h3 id="_2-required" tabindex="-1"><a class="header-anchor" href="#_2-required" aria-hidden="true">#</a> 2. Required</h3><p><code>Required</code> \u7684\u4F5C\u7528\u662F\u5C06\u4F20\u5165\u7684\u5C5E\u6027\u53D8\u4E3A\u5FC5\u9009\u9879\uFF0C\u548C\u4E0A\u9762\u7684\u5DE5\u5177\u6CDB\u578B\u6070\u597D\u76F8\u53CD\uFF0C\u5176\u58F0\u660E\u5982\u4E0B\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token doc-comment comment">/**
 * Make all properties in T required
 * \u5C06T\u4E2D\u7684\u6240\u6709\u5C5E\u6027\u8BBE\u7F6E\u4E3A\u5FC5\u9009
 */</span>
<span class="token keyword">type</span> <span class="token class-name">Required<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token punctuation">[</span><span class="token constant">P</span> <span class="token keyword">in</span> <span class="token keyword">keyof</span> <span class="token constant">T</span><span class="token punctuation">]</span><span class="token operator">-</span><span class="token operator">?</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token constant">P</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>\u53EF\u4EE5\u770B\u5230\uFF0C\u8FD9\u91CC\u4F7F\u7528<code>-?</code>\u5C06\u5C5E\u6027\u8BBE\u7F6E\u4E3A\u5FC5\u9009\uFF0C\u53EF\u4EE5\u7406\u89E3\u4E3A\u51CF\u53BB\u95EE\u53F7\u3002\u9002\u7528\u5F62\u5F0F\u548C\u4E0A\u9762\u7684Partial\u5DEE\u4E0D\u591A\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">IPerson</span> <span class="token punctuation">{</span>
  name<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  age<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
  height<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> person<span class="token operator">:</span> Required<span class="token operator">&lt;</span>IPerson<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token string">&quot;zhangsan&quot;</span><span class="token punctuation">;</span>
  age<span class="token operator">:</span> <span class="token number">18</span><span class="token punctuation">;</span>
  height<span class="token operator">:</span> <span class="token number">180</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h3 id="_3-readonly" tabindex="-1"><a class="header-anchor" href="#_3-readonly" aria-hidden="true">#</a> 3. Readonly</h3><p>\u5C06T\u7C7B\u578B\u7684\u6240\u6709\u5C5E\u6027\u8BBE\u7F6E\u4E3A<code>\u53EA\u8BFB\uFF08readonly\uFF09</code>\uFF0C\u6784\u9020\u51FA\u6765\u7C7B\u578B\u7684\u5C5E\u6027\u4E0D\u80FD\u88AB\u518D\u6B21\u8D4B\u503C\u3002Readonly\u7684\u58F0\u660E\u5F62\u5F0F\u5982\u4E0B\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token doc-comment comment">/**
 * Make all properties in T readonly
 */</span>
<span class="token keyword">type</span> <span class="token class-name">Readonly<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token keyword">readonly</span> <span class="token punctuation">[</span><span class="token constant">P</span> <span class="token keyword">in</span> <span class="token keyword">keyof</span> <span class="token constant">T</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token constant">P</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>\u4F7F\u7528\u793A\u4F8B\u5982\u4E0B\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">IPerson</span> <span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  age<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> person<span class="token operator">:</span> Readonly<span class="token operator">&lt;</span>IPerson<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token string">&quot;zhangsan&quot;</span><span class="token punctuation">,</span>
  age<span class="token operator">:</span> <span class="token number">18</span>
<span class="token punctuation">}</span>

person<span class="token punctuation">.</span>age <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span>  <span class="token comment">//  Error: cannot reassign a readonly property</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>\u53EF\u4EE5\u770B\u5230\uFF0C\u901A\u8FC7 <code>Readonly</code> \u5C06<code>IPerson</code>\u7684\u5C5E\u6027\u8F6C\u5316\u6210\u4E86\u53EA\u8BFB\uFF0C\u4E0D\u80FD\u518D\u8FDB\u884C\u8D4B\u503C\u64CD\u4F5C\u3002</p><h3 id="_4-pick-t-k-extends-keyof-t" tabindex="-1"><a class="header-anchor" href="#_4-pick-t-k-extends-keyof-t" aria-hidden="true">#</a> 4. Pick&lt;T, K extends keyof T&gt;</h3><p>\u4ECET\u7C7B\u578B\u4E2D\u6311\u9009\u90E8\u5206\u5C5E\u6027K\u6765\u6784\u9020\u65B0\u7684\u7C7B\u578B\u3002\u5B83\u7684\u58F0\u660E\u5F62\u5F0F\u5982\u4E0B\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token doc-comment comment">/**
 * From T, pick a set of properties whose keys are in the union K
 */</span>
<span class="token keyword">type</span> <span class="token class-name">Pick<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span> <span class="token constant">K</span> <span class="token keyword">extends</span> <span class="token keyword">keyof</span> <span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token punctuation">[</span><span class="token constant">P</span> <span class="token keyword">in</span> <span class="token constant">K</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token constant">P</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>\u4F7F\u7528\u793A\u4F8B\u5982\u4E0B\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">IPerson</span> <span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  age<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
  height<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> person<span class="token operator">:</span> Pick<span class="token operator">&lt;</span>IPerson<span class="token punctuation">,</span> <span class="token string">&quot;name&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;age&quot;</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token string">&quot;zhangsan&quot;</span><span class="token punctuation">,</span>
  age<span class="token operator">:</span> <span class="token number">18</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h3 id="_5-record-k-extends-keyof-any-t" tabindex="-1"><a class="header-anchor" href="#_5-record-k-extends-keyof-any-t" aria-hidden="true">#</a> 5. Record&lt;K extends keyof any, T&gt;</h3><p>Record \u7528\u6765\u6784\u9020\u4E00\u4E2A\u7C7B\u578B\uFF0C\u5176\u5C5E\u6027\u540D\u7684\u7C7B\u578B\u4E3AK\uFF0C\u5C5E\u6027\u503C\u7684\u7C7B\u578B\u4E3AT\u3002\u8FD9\u4E2A\u5DE5\u5177\u6CDB\u578B\u53EF\u7528\u6765\u5C06\u67D0\u4E2A\u7C7B\u578B\u7684\u5C5E\u6027\u6620\u5C04\u5230\u53E6\u4E00\u4E2A\u7C7B\u578B\u4E0A\uFF0C\u4E0B\u9762\u662F\u5176\u58F0\u660E\u5F62\u5F0F\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token doc-comment comment">/**
 * Construct a type with a set of properties K of type T
 */</span>
<span class="token keyword">type</span> <span class="token class-name">Record<span class="token operator">&lt;</span><span class="token constant">K</span> <span class="token keyword">extends</span> <span class="token keyword">keyof</span> <span class="token builtin">any</span><span class="token punctuation">,</span> <span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token punctuation">[</span><span class="token constant">P</span> <span class="token keyword">in</span> <span class="token constant">K</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="_6-exclude-t-u" tabindex="-1"><a class="header-anchor" href="#_6-exclude-t-u" aria-hidden="true">#</a> 6. Exclude&lt;T, U&gt;</h3><p><code>Exclude</code> \u5C31\u662F\u4ECE\u4E00\u4E2A\u8054\u5408\u7C7B\u578B\u4E2D\u6392\u9664\u6389\u5C5E\u4E8E\u53E6\u4E00\u4E2A\u8054\u5408\u7C7B\u578B\u7684\u5B50\u96C6\uFF0C\u4E0B\u9762\u662F\u5176\u58F0\u660E\u7684\u5F62\u5F0F\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token doc-comment comment">/**
 * Exclude from T those types that are assignable to U
 */</span>
<span class="token keyword">type</span> <span class="token class-name">Exclude<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span> <span class="token constant">U</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token constant">U</span></span> <span class="token operator">?</span> <span class="token builtin">never</span> <span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>\u4F7F\u7528\u793A\u4F8B\u5982\u4E0B\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">IPerson</span> <span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  age<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
  height<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> person<span class="token operator">:</span> Exclude<span class="token operator">&lt;</span>IPerson<span class="token punctuation">,</span> <span class="token string">&quot;age&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;sex&quot;</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token string">&quot;zhangsan&quot;</span><span class="token punctuation">;</span>
  height<span class="token operator">:</span> <span class="token number">180</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h3 id="_7-omit-t-k-extends-keyof-any" tabindex="-1"><a class="header-anchor" href="#_7-omit-t-k-extends-keyof-any" aria-hidden="true">#</a> 7. Omit&lt;T, K extends keyof any&gt;</h3><p>\u4E0A\u9762\u7684<code>Pick</code> \u548C <code>Exclude</code> \u90FD\u662F\u6700\u57FA\u7840\u57FA\u7840\u7684\u5DE5\u5177\u6CDB\u578B\uFF0C\u5F88\u591A\u65F6\u5019\u7528 <code>Pick</code> \u6216\u8005 <code>Exclude</code> \u8FD8\u4E0D\u5982\u76F4\u63A5\u5199\u7C7B\u578B\u66F4\u76F4\u63A5\u3002\u800C <code>Omit</code> \u5C31\u57FA\u4E8E\u8FD9\u4E24\u4E2A\u6765\u505A\u7684\u4E00\u4E2A\u66F4\u62BD\u8C61\u7684\u5C01\u88C5\uFF0C\u5B83\u5141\u8BB8\u4ECE\u4E00\u4E2A\u5BF9\u8C61\u4E2D\u5254\u9664\u82E5\u5E72\u4E2A\u5C5E\u6027\uFF0C\u5269\u4E0B\u7684\u5C31\u662F\u9700\u8981\u7684\u65B0\u7C7B\u578B\u3002\u4E0B\u9762\u662F\u5B83\u7684\u58F0\u660E\u5F62\u5F0F\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token doc-comment comment">/**
 * Construct a type with the properties of T except for those in type K.
 */</span>
<span class="token keyword">type</span> <span class="token class-name">Omit<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span> <span class="token constant">K</span> <span class="token keyword">extends</span> <span class="token keyword">keyof</span> <span class="token builtin">any</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> Pick<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span> Exclude<span class="token operator">&lt;</span><span class="token keyword">keyof</span> <span class="token constant">T</span><span class="token punctuation">,</span> <span class="token constant">K</span><span class="token operator">&gt;&gt;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>\u4F7F\u7528\u793A\u4F8B\u5982\u4E0B\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">IPerson</span> <span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  age<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
  height<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> person<span class="token operator">:</span> Omit<span class="token operator">&lt;</span>IPerson<span class="token punctuation">,</span> <span class="token string">&quot;age&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;height&quot;</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token string">&quot;zhangsan&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h3 id="_8-returntype" tabindex="-1"><a class="header-anchor" href="#_8-returntype" aria-hidden="true">#</a> 8. ReturnType</h3><p><code>ReturnType</code>\u4F1A\u8FD4\u56DE\u51FD\u6570\u8FD4\u56DE\u503C\u7684\u7C7B\u578B\uFF0C\u5176\u58F0\u660E\u5F62\u5F0F\u5982\u4E0B\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token doc-comment comment">/**
 * Obtain the return type of a function type
 */</span>
<span class="token keyword">type</span> <span class="token class-name">ReturnType<span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span></span> <span class="token builtin">any</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">infer</span> <span class="token constant">R</span> <span class="token operator">?</span> <span class="token constant">R</span> <span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>\u4F7F\u7528\u793A\u4F8B\u5982\u4E0B\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span>type<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> type <span class="token operator">===</span> <span class="token number">0</span>
<span class="token punctuation">}</span>

<span class="token keyword">type</span> <span class="token class-name">FooType</span> <span class="token operator">=</span> ReturnType<span class="token operator">&lt;</span><span class="token keyword">typeof</span> foo<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>\u8FD9\u91CC\u4F7F\u7528 <code>typeof</code> \u662F\u4E3A\u4E86\u83B7\u53D6 <code>foo</code> \u7684\u51FD\u6570\u7B7E\u540D\uFF0C\u7B49\u4EF7\u4E8E <code>(type: any) =&gt; boolean</code>\u3002</p><h2 id="\u4E03\u3001axios-\u5C01\u88C5" tabindex="-1"><a class="header-anchor" href="#\u4E03\u3001axios-\u5C01\u88C5" aria-hidden="true">#</a> \u4E03\u3001Axios \u5C01\u88C5</h2><p>\u5728React\u9879\u76EE\u4E2D\uFF0C\u6211\u4EEC\u7ECF\u5E38\u4F7F\u7528Axios\u5E93\u8FDB\u884C\u6570\u636E\u8BF7\u6C42\uFF0CAxios \u662F\u57FA\u4E8E Promise \u7684 HTTP \u5E93\uFF0C\u53EF\u4EE5\u5728\u6D4F\u89C8\u5668\u548C node.js \u4E2D\u4F7F\u7528\u3002Axios \u5177\u5907\u4EE5\u4E0B\u7279\u6027\uFF1A</p><ul><li><p>\u4ECE\u6D4F\u89C8\u5668\u4E2D\u521B\u5EFA XMLHttpRequests\uFF1B</p></li><li><p>\u4ECE node.js \u521B\u5EFA HTTP \u8BF7\u6C42\uFF1B</p></li><li><p>\u652F\u6301 Promise API\uFF1B</p></li><li><p>\u62E6\u622A\u8BF7\u6C42\u548C\u54CD\u5E94\uFF1B</p></li><li><p>\u8F6C\u6362\u8BF7\u6C42\u6570\u636E\u548C\u54CD\u5E94\u6570\u636E\uFF1B</p></li><li><p>\u53D6\u6D88\u8BF7\u6C42\uFF1B</p></li><li><p>\u81EA\u52A8\u8F6C\u6362 JSON \u6570\u636E\uFF1B</p></li><li><p>\u5BA2\u6237\u7AEF\u652F\u6301\u9632\u5FA1 XSRF\u3002</p></li></ul><p>Axios\u7684\u57FA\u672C\u4F7F\u7528\u5C31\u4E0D\u518D\u591A\u4ECB\u7ECD\u4E86\u3002\u4E3A\u4E86\u66F4\u597D\u5730\u8C03\u7528\uFF0C\u505A\u4E00\u4E9B\u5168\u5C40\u7684\u62E6\u622A\uFF0C\u901A\u5E38\u4F1A\u5BF9Axios\u8FDB\u884C\u5C01\u88C5\uFF0C\u4E0B\u9762\u5C31\u4F7F\u7528TypeScript\u5BF9Axios\u8FDB\u884C\u7B80\u5355\u5C01\u88C5\uFF0C\u4F7F\u5176\u540C\u65F6\u80FD\u591F\u6709\u5F88\u597D\u7684\u7C7B\u578B\u652F\u6301\u3002Axios\u662F\u81EA\u5E26\u58F0\u660E\u6587\u4EF6\u7684\uFF0C\u6240\u4EE5\u6211\u4EEC\u65E0\u9700\u989D\u5916\u7684\u64CD\u4F5C\u3002\u200B</p><p>\u4E0B\u9762\u6765\u770B\u57FA\u672C\u7684\u5C01\u88C5\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> axios<span class="token punctuation">,</span> <span class="token punctuation">{</span> AxiosInstance<span class="token punctuation">,</span> AxiosRequestConfig<span class="token punctuation">,</span> AxiosPromise<span class="token punctuation">,</span>AxiosResponse <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;axios&#39;</span><span class="token punctuation">;</span> <span class="token comment">// \u5F15\u5165axios\u548C\u5B9A\u4E49\u5728node_modules/axios/index.ts\u6587\u4EF6\u91CC\u7684\u7C7B\u578B\u58F0\u660E</span>

 <span class="token comment">// \u5B9A\u4E49\u63A5\u53E3\u8BF7\u6C42\u7C7B\uFF0C\u7528\u4E8E\u521B\u5EFAaxios\u8BF7\u6C42\u5B9E\u4F8B</span>
<span class="token keyword">class</span> <span class="token class-name">HttpRequest</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u63A5\u6536\u63A5\u53E3\u8BF7\u6C42\u7684\u57FA\u672C\u8DEF\u5F84</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token keyword">public</span> baseUrl<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> 
    <span class="token keyword">this</span><span class="token punctuation">.</span>baseUrl <span class="token operator">=</span> baseUrl<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  
  <span class="token comment">// \u8C03\u7528\u63A5\u53E3\u65F6\u8C03\u7528\u5B9E\u4F8B\u7684\u8FD9\u4E2A\u65B9\u6CD5\uFF0C\u8FD4\u56DEAxiosPromise</span>
  <span class="token keyword">public</span> <span class="token function">request</span><span class="token punctuation">(</span>options<span class="token operator">:</span> AxiosRequestConfig<span class="token punctuation">)</span><span class="token operator">:</span> AxiosPromise <span class="token punctuation">{</span> 
    <span class="token comment">// \u521B\u5EFAaxios\u5B9E\u4F8B\uFF0C\u5B83\u662F\u51FD\u6570\uFF0C\u540C\u65F6\u8FD9\u4E2A\u51FD\u6570\u5305\u542B\u591A\u4E2A\u5C5E\u6027</span>
    <span class="token keyword">const</span> instance<span class="token operator">:</span> AxiosInstance <span class="token operator">=</span> axios<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 
    <span class="token comment">// \u5408\u5E76\u57FA\u7840\u8DEF\u5F84\u548C\u6BCF\u4E2A\u63A5\u53E3\u5355\u72EC\u4F20\u5165\u7684\u914D\u7F6E\uFF0C\u6BD4\u5982url\u3001\u53C2\u6570\u7B49</span>
    options <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">mergeConfig</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span> 
    <span class="token comment">// \u8C03\u7528interceptors\u65B9\u6CD5\u4F7F\u62E6\u622A\u5668\u751F\u6548</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">interceptors</span><span class="token punctuation">(</span>instance<span class="token punctuation">,</span> options<span class="token punctuation">.</span>url<span class="token punctuation">)</span> 
    <span class="token comment">// \u8FD4\u56DEAxiosPromise</span>
    <span class="token keyword">return</span> <span class="token function">instance</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span> 
  <span class="token punctuation">}</span>
  
  <span class="token comment">// \u7528\u4E8E\u6DFB\u52A0\u5168\u5C40\u8BF7\u6C42\u548C\u54CD\u5E94\u62E6\u622A</span>
  <span class="token keyword">private</span> <span class="token function">interceptors</span><span class="token punctuation">(</span>instance<span class="token operator">:</span> AxiosInstance<span class="token punctuation">,</span> url<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> 
    <span class="token comment">// \u8BF7\u6C42\u548C\u54CD\u5E94\u62E6\u622A</span>
  <span class="token punctuation">}</span>
  
  <span class="token comment">// \u7528\u4E8E\u5408\u5E76\u57FA\u7840\u8DEF\u5F84\u914D\u7F6E\u548C\u63A5\u53E3\u5355\u72EC\u914D\u7F6E</span>
  <span class="token keyword">private</span> <span class="token function">mergeConfig</span><span class="token punctuation">(</span>options<span class="token operator">:</span> AxiosRequestConfig<span class="token punctuation">)</span><span class="token operator">:</span> AxiosRequestConfig <span class="token punctuation">{</span> 
    <span class="token keyword">return</span> Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span><span class="token punctuation">{</span> baseURL<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>baseUrl <span class="token punctuation">}</span><span class="token punctuation">,</span> options<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> HttpRequest<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br></div></div><p>\u901A\u5E38<code>baseUrl</code>\u5728\u5F00\u53D1\u73AF\u5883\u7684\u548C\u751F\u4EA7\u73AF\u5883\u7684\u8DEF\u5F84\u662F\u4E0D\u4E00\u6837\u7684\uFF0C\u6240\u4EE5\u53EF\u4EE5\u6839\u636E\u5F53\u524D\u662F\u5F00\u53D1\u73AF\u5883\u8FD8\u662F\u751F\u4EA7\u73AF\u5883\u505A\u5224\u65AD\uFF0C\u5E94\u7528\u4E0D\u540C\u7684\u57FA\u7840\u8DEF\u5F84\u3002\u8FD9\u91CC\u8981\u5199\u5728\u4E00\u4E2A\u914D\u7F6E\u6587\u4EF6\u91CC\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
    api<span class="token operator">:</span> <span class="token punctuation">{</span>
        devApiBaseUrl<span class="token operator">:</span> <span class="token string">&#39;/test/api/xxx&#39;</span><span class="token punctuation">,</span>
        proApiBaseUrl<span class="token operator">:</span> <span class="token string">&#39;/api/xxx&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>\u5728\u4E0A\u9762\u7684\u6587\u4EF6\u4E2D\u5F15\u5165\u8FD9\u4E2A\u914D\u7F6E\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> api<span class="token operator">:</span> <span class="token punctuation">{</span> devApiBaseUrl<span class="token punctuation">,</span> proApiBaseUrl <span class="token punctuation">}</span> <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/config&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> apiBaseUrl <span class="token operator">=</span> env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">===</span> <span class="token string">&#39;production&#39;</span> <span class="token operator">?</span> proApiBaseUrl <span class="token operator">:</span> devApiBaseUrl<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>\u4E4B\u540E\u5C31\u53EF\u4EE5\u5C06<code>apiBaseUrl</code>\u4F5C\u4E3A\u9ED8\u8BA4\u503C\u4F20\u5165<code>HttpRequest</code>\u7684\u53C2\u6570\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name">HttpRequest</span> <span class="token punctuation">{</span> 
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token keyword">public</span> baseUrl<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">=</span> apiBaseUrl<span class="token punctuation">)</span> <span class="token punctuation">{</span> 
    <span class="token keyword">this</span><span class="token punctuation">.</span>baseUrl <span class="token operator">=</span> baseUrl<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>\u63A5\u4E0B\u6765\u53EF\u4EE5\u5B8C\u5584\u4E00\u4E0B\u62E6\u622A\u5668\u7C7B\uFF0C\u5728\u7C7B\u4E2D<code>interceptors</code>\u65B9\u6CD5\u5185\u6DFB\u52A0\u8BF7\u6C42\u62E6\u622A\u5668\u548C\u54CD\u5E94\u62E6\u622A\u5668\uFF0C\u5B9E\u73B0\u5BF9\u6240\u6709\u63A5\u53E3\u8BF7\u6C42\u7684\u7EDF\u4E00\u5904\u7406\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">private</span> <span class="token function">interceptors</span><span class="token punctuation">(</span>instance<span class="token operator">:</span> AxiosInstance<span class="token punctuation">,</span> url<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  	<span class="token comment">// \u8BF7\u6C42\u62E6\u622A</span>
    instance<span class="token punctuation">.</span>interceptors<span class="token punctuation">.</span>request<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token punctuation">(</span>config<span class="token operator">:</span> AxiosRequestConfig<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u63A5\u53E3\u8BF7\u6C42\u7684\u6240\u6709\u914D\u7F6E\uFF0C\u53EF\u4EE5\u5728axios.defaults\u4FEE\u6539\u914D\u7F6E</span>
      <span class="token keyword">return</span> config
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token builtin">Promise</span><span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
 	
  	<span class="token comment">// \u54CD\u5E94\u62E6\u622A</span>
    instance<span class="token punctuation">.</span>interceptors<span class="token punctuation">.</span>response<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token punctuation">(</span>res<span class="token operator">:</span> AxiosResponse<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> <span class="token punctuation">{</span> data <span class="token punctuation">}</span> <span class="token operator">=</span> res 
      <span class="token keyword">const</span> <span class="token punctuation">{</span> code<span class="token punctuation">,</span> msg <span class="token punctuation">}</span> <span class="token operator">=</span> data
      <span class="token keyword">if</span> <span class="token punctuation">(</span>code <span class="token operator">!==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span> 
      <span class="token punctuation">}</span>
      <span class="token keyword">return</span> res
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> 
      <span class="token keyword">return</span> <span class="token builtin">Promise</span><span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><p>\u5230\u8FD9\u91CC\u5C01\u88C5\u7684\u5C31\u5DEE\u4E0D\u591A\u4E86\uFF0C\u4E00\u822C\u670D\u52A1\u7AEF\u4F1A\u5C06\u72B6\u6001\u7801\u3001\u63D0\u793A\u4FE1\u606F\u548C\u6570\u636E\u5C01\u88C5\u5728\u4E00\u8D77\uFF0C\u7136\u540E\u4F5C\u4E3A\u6570\u636E\u8FD4\u56DE\uFF0C\u6240\u4EE5\u6240\u6709\u8BF7\u6C42\u8FD4\u56DE\u7684\u6570\u636E\u683C\u5F0F\u90FD\u662F\u4E00\u6837\u7684\uFF0C\u6240\u4EE5\u5C31\u53EF\u4EE5\u5B9A\u4E49\u4E00\u4E2A\u63A5\u53E3\u6765\u6307\u5B9A\u8FD4\u56DE\u7684\u6570\u636E\u7ED3\u6784\uFF0C\u53EF\u4EE5\u5B9A\u4E49\u4E00\u4E2A\u63A5\u53E3\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">ResponseData</span> <span class="token punctuation">{</span>
  code<span class="token operator">:</span> <span class="token builtin">number</span>
  data<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">any</span>
  msg<span class="token operator">:</span> <span class="token builtin">string</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>\u63A5\u4E0B\u6765\u770B\u770B\u4F7F\u7528TypeScript\u5C01\u88C5\u7684Axios\u8BE5\u5982\u4F55\u4F7F\u7528\u3002\u53EF\u4EE5\u5148\u5B9A\u4E49\u4E00\u4E2A\u8BF7\u6C42\u5B9E\u4F8B\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> HttpRequest <span class="token keyword">from</span> <span class="token string">&#39;@/utils/axios&#39;</span>
<span class="token keyword">export</span> <span class="token operator">*</span> <span class="token keyword">from</span> <span class="token string">&#39;@/utils/axios&#39;</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">new</span> <span class="token class-name">HttpRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u8FD9\u91CC\u628A\u8BF7\u6C42\u7C7B\u5BFC\u5165\u8FDB\u6765\uFF0C\u9ED8\u8BA4\u5BFC\u51FA\u8FD9\u4E2A\u7C7B\u7684\u5B9E\u4F8B\u3002\u4E4B\u540E\u521B\u5EFA\u4E00\u4E2A\u767B\u9646\u63A5\u53E3\u8BF7\u6C42\u65B9\u6CD5\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> axios<span class="token punctuation">,</span> <span class="token punctuation">{</span> ResponseData <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./index&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> AxiosPromise <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;axios&#39;</span>

<span class="token keyword">interface</span> <span class="token class-name">ILogin</span> <span class="token punctuation">{</span>
  user<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  password<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">|</span> <span class="token builtin">string</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> loginReq <span class="token operator">=</span> <span class="token punctuation">(</span>data<span class="token operator">:</span> ILogin<span class="token punctuation">)</span><span class="token operator">:</span> AxiosPromise<span class="token operator">&lt;</span>ResponseData<span class="token operator">&gt;</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> axios<span class="token punctuation">.</span><span class="token function">request</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    url<span class="token operator">:</span> <span class="token string">&#39;/api/user/login&#39;</span><span class="token punctuation">,</span>
    data<span class="token punctuation">,</span>
    method<span class="token operator">:</span> <span class="token string">&#39;POST&#39;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p>\u8FD9\u91CC\u5C01\u88C5\u767B\u5F55\u8BF7\u6C42\u65B9\u6CD5loginReq\uFF0C\u4ED6\u7684\u53C2\u6570\u5FC5\u987B\u662F\u6211\u4EEC\u5B9A\u4E49\u7684ILogin\u63A5\u53E3\u7684\u7C7B\u578B\u3002\u8FD9\u4E2A\u65B9\u6CD5\u8FD4\u56DE\u4E00\u4E2A\u7C7B\u578B\u4E3A<code>AxiosPromise</code>\u7684Promise\uFF0CAxiosPromise\u662Faxios\u58F0\u660E\u6587\u4EF6\u5185\u7F6E\u7684\u7C7B\u578B\uFF0C\u53EF\u4EE5\u4F20\u5165\u4E00\u4E2A\u6CDB\u578B\u53D8\u91CF\u53C2\u6570\uFF0C\u7528\u4E8E\u6307\u5B9A\u8FD4\u56DE\u7684\u7ED3\u679C\u4E2Ddata\u5B57\u6BB5\u7684\u7C7B\u578B\u3002 \u200B \u63A5\u4E0B\u6765\u53EF\u4EE5\u8C03\u7528\u4E00\u4E0B\u8FD9\u4E2A\u767B\u5F55\u7684\u63A5\u53E3\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> loginReq <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/api/user&#39;</span>

<span class="token keyword">const</span> Home<span class="token operator">:</span> <span class="token function-variable function">FC</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token function-variable function">login</span> <span class="token operator">=</span> <span class="token punctuation">(</span>params<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  	<span class="token function">loginReq</span><span class="token punctuation">(</span>params<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    	<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>data<span class="token punctuation">.</span>code<span class="token punctuation">)</span>
  	<span class="token punctuation">}</span><span class="token punctuation">)</span>	
  <span class="token punctuation">}</span>  
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>\u901A\u8FC7\u8FD9\u79CD\u65B9\u5F0F\uFF0C\u5F53\u6211\u4EEC\u8C03\u7528<code>loginReq</code>\u63A5\u53E3\u65F6\uFF0C\u5C31\u4F1A\u63D0\u793A\u6211\u4EEC\uFF0C\u53C2\u6570\u7684\u7C7B\u578B\u662F<code>ILogin</code>\uFF0C\u9700\u8981\u4F20\u5165\u51E0\u4E2A\u53C2\u6570\u3002\u8FD9\u6837\u7F16\u5199\u4EE3\u7801\u7684\u4F53\u9A8C\u5C31\u4F1A\u597D\u5F88\u591A\u3002</p><h2 id="\u516B-\u5176\u4ED6" tabindex="-1"><a class="header-anchor" href="#\u516B-\u5176\u4ED6" aria-hidden="true">#</a> \u516B. \u5176\u4ED6</h2><h3 id="_1-import-react" tabindex="-1"><a class="header-anchor" href="#_1-import-react" aria-hidden="true">#</a> 1. import React</h3><p>\u5728React\u9879\u76EE\u4E2D\u4F7F\u7528TypeScript\u65F6\uFF0C\u666E\u901A\u7EC4\u4EF6\u6587\u4EF6\u540E\u7F00\u4E3A.tsx\uFF0C\u516C\u5171\u65B9\u6CD5\u6587\u4EF6\u540E\u7F00\u4E3A.ts\u3002\u5728. tsx \u6587\u4EF6\u4E2D\u5BFC\u5165 React \u7684\u65B9\u5F0F\u5982\u4E0B\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> React <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span>
<span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> ReactDOM <span class="token keyword">from</span> <span class="token string">&#39;react-dom&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>\u8FD9\u662F\u4E00\u79CD\u9762\u5411\u672A\u6765\u7684\u5BFC\u5165\u65B9\u5F0F\uFF0C\u5982\u679C\u60F3\u5728\u9879\u76EE\u4E2D\u4F7F\u7528\u4EE5\u4E0B\u5BFC\u5165\u65B9\u5F0F\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">&quot;react&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> ReactDOM <span class="token keyword">from</span> <span class="token string">&quot;react-dom&quot;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>\u5C31\u9700\u8981\u5728<code>tsconfig.json</code>\u914D\u7F6E\u6587\u4EF6\u4E2D\u8FDB\u884C\u5982\u4E0B\u914D\u7F6E\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token string-property property">&quot;compilerOptions&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5141\u8BB8\u9ED8\u8BA4\u4ECE\u6CA1\u6709\u9ED8\u8BA4\u5BFC\u51FA\u7684\u6A21\u5757\u5BFC\u5165\u3002</span>
    <span class="token string-property property">&quot;allowSyntheticDefaultImports&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="_2-types-or-interfaces" tabindex="-1"><a class="header-anchor" href="#_2-types-or-interfaces" aria-hidden="true">#</a> 2. Types or Interfaces\uFF1F</h3><p>\u6211\u4EEC\u53EF\u4EE5\u4F7F\u7528<code>types</code>\u6216\u8005<code>Interfaces</code>\u6765\u5B9A\u4E49\u7C7B\u578B\u5417\uFF0C\u90A3\u4E48\u8BE5\u5982\u4F55\u9009\u62E9\u4ED6\u4FE9\u5462\uFF1F\u5EFA\u8BAE\u5982\u4E0B\uFF1A</p><ul><li><p>\u5728\u5B9A\u4E49\u516C\u5171 <code>API</code> \u65F6(\u6BD4\u5982\u7F16\u8F91\u4E00\u4E2A\u5E93\uFF09\u4F7F\u7528 <code>interface</code>\uFF0C\u8FD9\u6837\u53EF\u4EE5\u65B9\u4FBF\u4F7F\u7528\u8005\u7EE7\u627F\u63A5\u53E3\uFF0C\u8FD9\u6837\u5141\u8BB8\u4F7F\u7528\u6700\u901A\u8FC7\u58F0\u660E\u5408\u5E76\u6765\u6269\u5C55\u5B83\u4EEC\uFF1B</p></li><li><p>\u5728\u5B9A\u4E49\u7EC4\u4EF6\u5C5E\u6027\uFF08<code>Props</code>\uFF09\u548C\u72B6\u6001\uFF08<code>State</code>\uFF09\u65F6\uFF0C\u5EFA\u8BAE\u4F7F\u7528 <code>type</code>\uFF0C\u56E0\u4E3A <code>type</code> \u7684\u7EA6\u675F\u6027\u66F4\u5F3A\u3002</p></li></ul><p><code>interface</code> \u548C <code>type</code> \u5728 ts \u4E2D\u662F\u4E24\u4E2A\u4E0D\u540C\u7684\u6982\u5FF5\uFF0C\u4F46\u5728 React \u5927\u90E8\u5206\u4F7F\u7528\u7684 case \u4E2D\uFF0Cinterface \u548C type \u53EF\u4EE5\u8FBE\u5230\u76F8\u540C\u7684\u529F\u80FD\u6548\u679C\uFF0C<code>type \u548C interface \u6700\u5927\u7684\u533A\u522B\u662F\uFF1Atype \u7C7B\u578B\u4E0D\u80FD\u4E8C\u6B21\u7F16\u8F91\uFF0C\u800C interface \u53EF\u4EE5\u968F\u65F6\u6269\u5C55</code>\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">Animal</span> <span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token builtin">string</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u53EF\u4EE5\u7EE7\u7EED\u5728\u539F\u5C5E\u6027\u57FA\u7840\u4E0A\uFF0C\u6DFB\u52A0\u65B0\u5C5E\u6027\uFF1Acolor</span>
<span class="token keyword">interface</span> <span class="token class-name">Animal</span> <span class="token punctuation">{</span>
  color<span class="token operator">:</span> <span class="token builtin">string</span>
<span class="token punctuation">}</span>

<span class="token keyword">type</span> <span class="token class-name">Animal</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token builtin">string</span>
<span class="token punctuation">}</span>
<span class="token comment">// type\u7C7B\u578B\u4E0D\u652F\u6301\u5C5E\u6027\u6269\u5C55</span>
<span class="token comment">// Error: Duplicate identifier &#39;Animal&#39;</span>
<span class="token keyword">type</span> <span class="token class-name">Animal</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  color<span class="token operator">:</span> <span class="token builtin">string</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p><code>type</code>\u5BF9\u4E8E\u8054\u5408\u7C7B\u578B\u662F\u5F88\u6709\u7528\u7684\uFF0C\u6BD4\u5982\uFF1A<code>type Type = TypeA | TypeB</code>\u3002\u800C<code>interface</code>\u66F4\u9002\u5408\u58F0\u660E\u5B57\u5178\u7C7B\u884C\uFF0C\u7136\u540E\u5B9A\u4E49\u6216\u8005\u6269\u5C55\u5B83\u3002</p><h3 id="_3-\u61D2\u52A0\u8F7D\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#_3-\u61D2\u52A0\u8F7D\u7C7B\u578B" aria-hidden="true">#</a> 3. \u61D2\u52A0\u8F7D\u7C7B\u578B</h3><p>\u5982\u679C\u6211\u4EEC\u60F3\u5728<code>React router</code>\u4E2D\u4F7F\u7528\u61D2\u52A0\u8F7D\uFF0CReact\u4E5F\u4E3A\u6211\u4EEC\u63D0\u4F9B\u4E86\u61D2\u52A0\u8F7D\u65B9\u6CD5\u7684\u7C7B\u578B\uFF0C\u6765\u770B\u4E0B\u9762\u7684\u4F8B\u5B50\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">RouteType</span> <span class="token punctuation">{</span>
    pathname<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
    component<span class="token operator">:</span> LazyExoticComponent<span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
    exact<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
    title<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
    icon<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
    children<span class="token operator">?</span><span class="token operator">:</span> RouteType<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> AppRoutes<span class="token operator">:</span> RouteType<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
        pathname<span class="token operator">:</span> <span class="token string">&#39;/login&#39;</span><span class="token punctuation">,</span>
        component<span class="token operator">:</span> <span class="token function">lazy</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;../views/Login/Login&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        exact<span class="token operator">:</span> <span class="token boolean">true</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
        pathname<span class="token operator">:</span> <span class="token string">&#39;/404&#39;</span><span class="token punctuation">,</span>
        component<span class="token operator">:</span> <span class="token function">lazy</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;../views/404/404&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        exact<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
        pathname<span class="token operator">:</span> <span class="token string">&#39;/&#39;</span><span class="token punctuation">,</span>
        exact<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
        component<span class="token operator">:</span> <span class="token function">lazy</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;../views/Admin/Admin&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><p>\u4E0B\u9762\u662F<code>\u61D2\u52A0\u8F7D\u7C7B\u578B</code>\u548C<code>lazy\u65B9\u6CD5</code>\u5728\u58F0\u660E\u6587\u4EF6\u4E2D\u7684\u5B9A\u4E49\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">LazyExoticComponent<span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> ComponentType<span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token operator">&gt;&gt;</span></span> <span class="token operator">=</span> ExoticComponent<span class="token operator">&lt;</span>ComponentPropsWithRef<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;&gt;</span> <span class="token operator">&amp;</span> <span class="token punctuation">{</span>
  <span class="token keyword">readonly</span> _result<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token generic-function"><span class="token function">lazy</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> ComponentType<span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token operator">&gt;&gt;</span></span></span><span class="token punctuation">(</span>
<span class="token function-variable function">factory</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token punctuation">{</span> <span class="token keyword">default</span><span class="token operator">:</span> <span class="token constant">T</span> <span class="token punctuation">}</span><span class="token operator">&gt;</span>
<span class="token punctuation">)</span><span class="token operator">:</span> LazyExoticComponent<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="_4-\u7C7B\u578B\u65AD\u8A00" tabindex="-1"><a class="header-anchor" href="#_4-\u7C7B\u578B\u65AD\u8A00" aria-hidden="true">#</a> 4. \u7C7B\u578B\u65AD\u8A00</h3><p>\u7C7B\u578B\u65AD\u8A00\uFF08<code>Type Assertion</code>\uFF09\u53EF\u4EE5\u7528\u6765\u624B\u52A8\u6307\u5B9A\u4E00\u4E2A\u503C\u7684\u7C7B\u578B\u3002\u5728React\u9879\u76EE\u4E2D\uFF0C\u65AD\u8A00\u8FD8\u662F\u5F88\u6709\u7528\u7684\uFF0C\u3002\u6709\u65F6\u5019\u63A8\u65AD\u51FA\u6765\u7684\u7C7B\u578B\u5E76\u4E0D\u662F\u771F\u6B63\u7684\u7C7B\u578B\uFF0C\u5F88\u591A\u65F6\u5019\u6211\u4EEC\u53EF\u80FD\u4F1A\u6BD4TS\u66F4\u61C2\u6211\u4EEC\u7684\u4EE3\u7801\uFF0C\u6240\u4EE5\u53EF\u4EE5\u4F7F\u7528\u65AD\u8A00\uFF08\u4F7F\u7528<code>as</code>\u5173\u952E\u5B57\uFF09\u6765\u5B9A\u4E49\u4E00\u4E2A\u503C\u5F97\u7C7B\u578B\u3002\u200B</p><p>\u6765\u770B\u4E0B\u9762\u7684\u4F8B\u5B50\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> getLength <span class="token operator">=</span> <span class="token punctuation">(</span>target<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>target<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// error \u7C7B\u578B&quot;string | number&quot;\u4E0A\u4E0D\u5B58\u5728\u5C5E\u6027&quot;length&quot;</span>
    <span class="token keyword">return</span> target<span class="token punctuation">.</span>length<span class="token punctuation">;</span> <span class="token comment">// error  \u7C7B\u578B&quot;number&quot;\u4E0A\u4E0D\u5B58\u5728\u5C5E\u6027&quot;length&quot;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> target<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>\u5F53<code>TypeScript</code>\u4E0D\u786E\u5B9A\u4E00\u4E2A\u8054\u5408\u7C7B\u578B\u7684\u53D8\u91CF\u5230\u5E95\u662F\u54EA\u4E2A\u7C7B\u578B\u65F6\uFF0C\u5C31\u53EA\u80FD\u8BBF\u95EE\u6B64\u8054\u5408\u7C7B\u578B\u7684\u6240\u6709\u7C7B\u578B\u91CC\u5171\u6709\u7684\u5C5E\u6027\u6216\u65B9\u6CD5\uFF0C\u6240\u4EE5\u73B0\u5728\u52A0\u4E86\u5BF9\u53C2\u6570<code>target</code>\u548C\u8FD4\u56DE\u503C\u7684\u7C7B\u578B\u5B9A\u4E49\u4E4B\u540E\u5C31\u4F1A\u62A5\u9519\u3002\u8FD9\u65F6\u5C31\u53EF\u4EE5\u4F7F\u7528\u65AD\u8A00\uFF0C\u5C06<code>target</code>\u7684\u7C7B\u578B\u65AD\u8A00\u6210<code>string</code>\u7C7B\u578B\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> getStrLength <span class="token operator">=</span> <span class="token punctuation">(</span>target<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>target <span class="token keyword">as</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>      
    <span class="token keyword">return</span> <span class="token punctuation">(</span>target <span class="token keyword">as</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span> 
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> target<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>\u9700\u8981\u6CE8\u610F\uFF0C\u7C7B\u578B\u65AD\u8A00\u5E76\u4E0D\u662F\u7C7B\u578B\u8F6C\u6362\uFF0C\u65AD\u8A00\u6210\u4E00\u4E2A\u8054\u5408\u7C7B\u578B\u4E2D\u4E0D\u5B58\u5728\u7684\u7C7B\u578B\u662F\u4E0D\u5141\u8BB8\u7684\u3002\u200B</p><p>\u518D\u6765\u770B\u4E00\u4E2A\u4F8B\u5B50\uFF0C\u5728\u8C03\u7528\u4E00\u4E2A\u65B9\u6CD5\u65F6\u4F20\u5165\u53C2\u6570\uFF1A \u8FD9\u91CC\u5C31\u63D0\u793A\u6211\u4EEC\u8FD9\u4E2A\u53C2\u6570\u53EF\u80FD\u662Fundefined\uFF0C\u800C\u901A\u8FC7\u4E1A\u52A1\u77E5\u9053\u8FD9\u4E2A\u503C\u662F\u4E00\u5B9A\u5B58\u5728\u7684\uFF0C\u6240\u4EE5\u5C31\u53EF\u4EE5\u5C06\u5B83\u65AD\u8A00\u6210\u6570\u5B57\uFF1A<code>data?.subjectId as number\u200B</code></p>`,115),E=["src"],R=n("p",null,"\u9664\u6B64\u4E4B\u5916\uFF0C\u4E0A\u9762\u6240\u8BF4\u7684\u6807\u7B7E\u7C7B\u578B\u3001\u7EC4\u4EF6\u7C7B\u578B\u3001\u65F6\u95F4\u7C7B\u578B\u90FD\u53EF\u4EE5\u4F7F\u7528\u65AD\u8A00\u6765\u6307\u5B9A\u7ED9\u4E00\u4E9B\u6570\u636E\uFF0C\u8FD8\u662F\u8981\u6839\u636E\u5B9E\u9645\u7684\u4E1A\u52A1\u573A\u666F\u6765\u4F7F\u7528\u3002\u200B",-1),C=n("h3",{id:"_5-\u679A\u4E3E\u7C7B\u578B",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_5-\u679A\u4E3E\u7C7B\u578B","aria-hidden":"true"},"#"),o(" 5. \u679A\u4E3E\u7C7B\u578B")],-1),q=n("p",null,"\u679A\u4E3E\u7C7B\u578B\u5728\u9879\u76EE\u4E2D\u7684\u4F5C\u7528\u4E5F\u662F\u4E0D\u53EF\u5FFD\u89C6\u7684\uFF0C\u4F7F\u7528\u679A\u4E3E\u7C7B\u578B\u53EF\u4EE5\u8BA9\u4EE3\u7801\u7684\u6269\u5C55\u6027\u66F4\u597D\uFF0C\u5F53\u6211\u60F3\u66F4\u6539\u67D0\u5C5E\u6027\u503C\u65F6\uFF0C\u65E0\u9700\u53BB\u5168\u5C40\u66F4\u6539\u8FD9\u4E2A\u5C5E\u6027\uFF0C\u53EA\u8981\u66F4\u6539\u679A\u4E3E\u4E2D\u7684\u503C\u5373\u53EF\u3002\u901A\u5E38\u60C5\u51B5\u4E0B\uFF0C\u6700\u597D\u65B0\u5EFA\u4E00\u4E2A\u6587\u4EF6\u4E13\u95E8\u6765\u5B9A\u4E49\u679A\u4E3E\u503C\uFF0C\u4FBF\u4E8E\u5F15\u7528\u3002",-1);function P(s,S){return p(),e(t,null,[r,n("img",{src:s.$withBase("/assets/performance/react/7e833cb140aa41c7a0c38f4216ff5902_tplv-k3u1fbpfcp-watermark.awebp"),alt:"demo"},null,8,u),i,n("img",{src:s.$withBase("/assets/performance/react/aec80bdbd1a64ad3b2da185657869bdf_tplv-k3u1fbpfcp-watermark.awebp"),alt:"demo"},null,8,k),b,n("img",{src:s.$withBase("/assets/performance/react/439c3eeb15a54a47aea7ccaa6d687e21_tplv-k3u1fbpfcp-watermark.awebp"),alt:"demo"},null,8,d),m,n("img",{src:s.$withBase("/assets/performance/react/aa6f409391494f51bfb5c3e905f9fc1f_tplv-k3u1fbpfcp-watermark.awebp"),alt:"demo"},null,8,g),y,n("img",{src:s.$withBase("/assets/performance/react/10417c4c14704f3eabde9e658535fbc7_tplv-k3u1fbpfcp-watermark.awebp"),alt:"demo"},null,8,v),h,n("img",{src:s.$withBase("/assets/performance/react/be7d97e6011a4e61bc1d18c141a4c4bd_tplv-k3u1fbpfcp-watermark.awebp"),alt:"demo"},null,8,f),w,n("img",{src:s.$withBase("/assets/performance/react/c1dbae29dbaa45fc96da354807199b6f_tplv-k3u1fbpfcp-watermark.awebp"),alt:"demo"},null,8,x),T,n("img",{src:s.$withBase("/assets/performance/react/c1b4f7d1031e43c2a8194eae2aa15640_tplv-k3u1fbpfcp-watermark.awebp"),alt:"demo"},null,8,E),R,C,q],64)}var _=c(l,[["render",P]]);export{_ as default};
