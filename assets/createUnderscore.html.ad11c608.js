import{o as a,c as p,b as t,F as o,a as n}from"./app.6f963528.js";import{_ as e}from"./plugin-vue_export-helper.21dcd24c.js";const c={},l=n(`<h1 id="underscore-\u7CFB\u5217\u4E4B\u5982\u4F55\u5199\u81EA\u5DF1\u7684-underscore" tabindex="-1"><a class="header-anchor" href="#underscore-\u7CFB\u5217\u4E4B\u5982\u4F55\u5199\u81EA\u5DF1\u7684-underscore" aria-hidden="true">#</a> underscore \u7CFB\u5217\u4E4B\u5982\u4F55\u5199\u81EA\u5DF1\u7684 underscore</h1><h2 id="\u81EA\u5DF1\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#\u81EA\u5DF1\u5B9E\u73B0" aria-hidden="true">#</a> \u81EA\u5DF1\u5B9E\u73B0</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">var</span> root <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>

    <span class="token keyword">var</span> _ <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

    root<span class="token punctuation">.</span>_ <span class="token operator">=</span> _<span class="token punctuation">;</span>

    <span class="token comment">// \u5728\u8FD9\u91CC\u6DFB\u52A0\u81EA\u5DF1\u7684\u65B9\u6CD5</span>
    _<span class="token punctuation">.</span><span class="token function-variable function">reverse</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">string</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> string<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

_<span class="token punctuation">.</span><span class="token function">reverse</span><span class="token punctuation">(</span><span class="token string">&#39;hello&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token operator">=&gt;</span> <span class="token string">&#39;olleh&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><p>\u6211\u4EEC\u5C06\u6240\u6709\u7684\u65B9\u6CD5\u6DFB\u52A0\u5230\u4E00\u4E2A\u540D\u4E3A <code>_</code> \u7684\u5BF9\u8C61\u4E0A\uFF0C\u7136\u540E\u5C06\u8BE5\u5BF9\u8C61\u6302\u8F7D\u5230\u5168\u5C40\u5BF9\u8C61\u4E0A\u3002</p><p>\u4E4B\u6240\u4EE5\u4E0D\u76F4\u63A5 <code>window._ = _</code> \u662F\u56E0\u4E3A\u6211\u4EEC\u5199\u7684\u662F\u4E00\u4E2A\u5DE5\u5177\u51FD\u6570\u5E93\uFF0C\u4E0D\u4EC5\u8981\u6C42\u53EF\u4EE5\u8FD0\u884C\u5728\u6D4F\u89C8\u5668\u7AEF\uFF0C\u8FD8\u53EF\u4EE5\u8FD0\u884C\u5728\u8BF8\u5982 Node \u7B49\u73AF\u5883\u4E2D\u3002</p><h2 id="root" tabindex="-1"><a class="header-anchor" href="#root" aria-hidden="true">#</a> root</h2><p>\u7136\u800C underscore \u53EF\u4E0D\u4F1A\u5199\u5F97\u5982\u6B64\u7B80\u5355\uFF0C\u6211\u4EEC\u4ECE <code>var root = this</code> \u5F00\u59CB\u8BF4\u8D77\u3002</p><p>\u4E4B\u6240\u4EE5\u5199\u8FD9\u4E00\u53E5\uFF0C\u662F\u56E0\u4E3A\u6211\u4EEC\u8981\u901A\u8FC7 this \u83B7\u5F97\u5168\u5C40\u5BF9\u8C61\uFF0C\u7136\u540E\u5C06 <code>_</code> \u5BF9\u8C61\uFF0C\u6302\u8F7D\u4E0A\u53BB\u3002</p><p>\u7136\u800C\u5728\u4E25\u683C\u6A21\u5F0F\u4E0B\uFF0Cthis \u8FD4\u56DE undefined\uFF0C\u800C\u4E0D\u662F\u6307\u5411 Window\uFF0C\u5E78\u8FD0\u7684\u662F underscore \u5E76\u6CA1\u6709\u91C7\u7528\u4E25\u683C\u6A21\u5F0F\uFF0C\u53EF\u662F\u5373\u4FBF\u5982\u6B64\uFF0C\u4E5F\u4E0D\u80FD\u907F\u514D\uFF0C\u56E0\u4E3A\u5728 ES6 \u4E2D\u6A21\u5757\u811A\u672C\u81EA\u52A8\u91C7\u7528\u4E25\u683C\u6A21\u5F0F\uFF0C\u4E0D\u7BA1\u6709\u6CA1\u6709\u58F0\u660E <code>use strict</code>\u3002</p><p>\u5982\u679C <code>this</code> \u8FD4\u56DE <code>undefined</code>\uFF0C\u4EE3\u7801\u5C31\u4F1A\u62A5\u9519\uFF0C\u6240\u4EE5\u6211\u4EEC\u7684\u601D\u8DEF\u662F\u5BF9\u73AF\u5883\u8FDB\u884C\u68C0\u6D4B\uFF0C\u7136\u540E\u6302\u8F7D\u5230\u6B63\u786E\u7684\u5BF9\u8C61\u4E0A\u3002\u6211\u4EEC\u4FEE\u6539\u4E00\u4E0B\u4EE3\u7801\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> root <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> window <span class="token operator">==</span> <span class="token string">&#39;object&#39;</span> <span class="token operator">&amp;&amp;</span> window<span class="token punctuation">.</span>window <span class="token operator">==</span> window <span class="token operator">&amp;&amp;</span> window<span class="token punctuation">)</span> <span class="token operator">||</span>
           <span class="token punctuation">(</span><span class="token keyword">typeof</span> global <span class="token operator">==</span> <span class="token string">&#39;object&#39;</span> <span class="token operator">&amp;&amp;</span> global<span class="token punctuation">.</span>global <span class="token operator">==</span> global <span class="token operator">&amp;&amp;</span> global<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="web-worker" tabindex="-1"><a class="header-anchor" href="#web-worker" aria-hidden="true">#</a> Web Worker</h2><p>Web Worker \u5C5E\u4E8E HTML5 \u4E2D\u7684\u5185\u5BB9\uFF0C\u5F15\u7528\u300AJavaScript\u6743\u5A01\u6307\u5357\u300B\u4E2D\u7684\u8BDD\u5C31\u662F\uFF1A</p><blockquote><p>\u5728 Web Worker \u6807\u51C6\u4E2D\uFF0C\u5B9A\u4E49\u4E86\u89E3\u51B3\u5BA2\u6237\u7AEF JavaScript \u65E0\u6CD5\u591A\u7EBF\u7A0B\u7684\u95EE\u9898\u3002\u5176\u4E2D\u5B9A\u4E49\u7684 \u201Cworker\u201D \u662F\u6307\u6267\u884C\u4EE3\u7801\u7684\u5E76\u884C\u8FC7\u7A0B\u3002\u4E0D\u8FC7\uFF0CWeb Worker \u5904\u5728\u4E00\u4E2A\u81EA\u5305\u542B\u7684\u6267\u884C\u73AF\u5883\u4E2D\uFF0C\u65E0\u6CD5\u8BBF\u95EE Window \u5BF9\u8C61\u548C Document \u5BF9\u8C61\uFF0C\u548C\u4E3B\u7EBF\u7A0B\u4E4B\u95F4\u7684\u901A\u4FE1\u4E1A\u53EA\u80FD\u901A\u8FC7\u5F02\u6B65\u6D88\u606F\u4F20\u9012\u673A\u5236\u6765\u5B9E\u73B0\u3002</p></blockquote><p>\u5728 Web Worker \u4E2D\uFF0C\u662F\u65E0\u6CD5\u8BBF\u95EE Window \u5BF9\u8C61\u7684\uFF0C\u6240\u4EE5 <code>typeof window</code> \u548C <code>typeof global</code> \u7684\u7ED3\u679C\u90FD\u662F <code>undefined</code>\uFF0C\u6240\u4EE5\u6700\u7EC8 root \u7684\u503C\u4E3A false\uFF0C\u5C06\u4E00\u4E2A\u57FA\u672C\u7C7B\u578B\u7684\u503C\u50CF\u5BF9\u8C61\u4E00\u6837\u6DFB\u52A0\u5C5E\u6027\u548C\u65B9\u6CD5\uFF0C\u81EA\u7136\u662F\u4F1A\u62A5\u9519\u7684\u3002</p><p>\u867D\u7136\u5728 <code>Web Worker</code> \u4E2D\u4E0D\u80FD\u8BBF\u95EE\u5230 <code>Window</code> \u5BF9\u8C61\uFF0C\u4F46\u662F\u6211\u4EEC\u5374\u80FD\u901A\u8FC7 <code>self</code> \u8BBF\u95EE\u5230 <code>Worker</code> \u73AF\u5883\u4E2D\u7684\u5168\u5C40\u5BF9\u8C61\u3002\u6211\u4EEC\u53EA\u662F\u8981\u627E\u5168\u5C40\u53D8\u91CF\u6302\u8F7D\u800C\u5DF2\uFF0C\u6240\u4EE5\u5B8C\u5168\u53EF\u4EE5\u6302\u5230 <code>self</code> \u4E2D\u561B\u3002</p><p>\u800C\u4E14\u5728\u6D4F\u89C8\u5668\u4E2D\uFF0C\u9664\u4E86 <code>window</code> \u5C5E\u6027\uFF0C\u6211\u4EEC\u4E5F\u53EF\u4EE5\u901A\u8FC7 <code>self</code> \u5C5E\u6027\u76F4\u63A5\u8BBF\u95EE\u5230 <code>Window</code> \u5BF9\u8C61\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>window<span class="token punctuation">.</span>window <span class="token operator">===</span> window<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>window<span class="token punctuation">.</span>self <span class="token operator">===</span> window<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>\u8003\u8651\u5230\u4F7F\u7528 <code>self</code> \u8FD8\u53EF\u4EE5\u989D\u5916\u652F\u6301 <code>Web Worker</code>\uFF0C\u6211\u4EEC\u76F4\u63A5\u5C06\u4EE3\u7801\u6539\u6210 <code>self</code>\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> root <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> self <span class="token operator">==</span> <span class="token string">&#39;object&#39;</span> <span class="token operator">&amp;&amp;</span> self<span class="token punctuation">.</span>self <span class="token operator">==</span> self <span class="token operator">&amp;&amp;</span> self<span class="token punctuation">)</span> <span class="token operator">||</span>
           <span class="token punctuation">(</span><span class="token keyword">typeof</span> global <span class="token operator">==</span> <span class="token string">&#39;object&#39;</span> <span class="token operator">&amp;&amp;</span> global<span class="token punctuation">.</span>global <span class="token operator">==</span> global <span class="token operator">&amp;&amp;</span> global<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="node-vm" tabindex="-1"><a class="header-anchor" href="#node-vm" aria-hidden="true">#</a> node vm</h2><p>\u5230\u4E86\u8FD9\u91CC\uFF0C\u4F9D\u7136\u6CA1\u5B8C\uFF0C\u8BA9\u4F60\u60F3\u4E0D\u5230\u7684\u662F\uFF0C\u5728 <code>node</code> \u7684 <code>vm</code> \u6A21\u5757\u4E2D\uFF0C\u4E5F\u5C31\u662F\u6C99\u76D2\u6A21\u5757\uFF0C<code>runInContext</code> \u65B9\u6CD5\u4E2D\uFF0C\u662F\u4E0D\u5B58\u5728 <code>window</code>\uFF0C\u4E5F\u4E0D\u5B58\u5728 <code>global</code> \u53D8\u91CF\u7684</p><p>\u4F46\u662F\u6211\u4EEC\u5374\u53EF\u4EE5\u901A\u8FC7 <code>this</code> \u8BBF\u95EE\u5230\u5168\u5C40\u5BF9\u8C61\uFF0C\u6240\u4EE5\u5C31\u6709\u4EBA\u53D1\u8D77\u4E86\u4E00\u4E2A PR\uFF0C\u4EE3\u7801\u6539\u6210\u4E86\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> root <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> self <span class="token operator">==</span> <span class="token string">&#39;object&#39;</span> <span class="token operator">&amp;&amp;</span> self<span class="token punctuation">.</span>self <span class="token operator">==</span> self <span class="token operator">&amp;&amp;</span> self<span class="token punctuation">)</span> <span class="token operator">||</span>
           <span class="token punctuation">(</span><span class="token keyword">typeof</span> global <span class="token operator">==</span> <span class="token string">&#39;object&#39;</span> <span class="token operator">&amp;&amp;</span> global<span class="token punctuation">.</span>global <span class="token operator">==</span> global <span class="token operator">&amp;&amp;</span> global<span class="token punctuation">)</span> <span class="token operator">||</span>
           <span class="token keyword">this</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="\u5FAE\u4FE1\u5C0F\u7A0B\u5E8F" tabindex="-1"><a class="header-anchor" href="#\u5FAE\u4FE1\u5C0F\u7A0B\u5E8F" aria-hidden="true">#</a> \u5FAE\u4FE1\u5C0F\u7A0B\u5E8F</h2><p>\u56E0\u4E3A\u5728\u5FAE\u4FE1\u5C0F\u7A0B\u5E8F\u4E2D\uFF0C<code>window</code> \u548C <code>global</code> \u90FD\u662F <code>undefined</code>\uFF0C\u52A0\u4E0A\u53C8\u5F3A\u5236\u4F7F\u7528<code>\u4E25\u683C\u6A21\u5F0F</code>\uFF0C<code>this</code> \u4E3A <code>undefined</code>\uFF0C\u6302\u8F7D\u5C31\u4F1A\u53D1\u751F\u9519\u8BEF\uFF0C\u6240\u4EE5\u5C31\u6709\u4EBA\u53C8\u53D1\u4E86\u4E00\u4E2A PR\uFF0C\u4EE3\u7801\u53D8\u6210\u4E86\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> root <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> self <span class="token operator">==</span> <span class="token string">&#39;object&#39;</span> <span class="token operator">&amp;&amp;</span> self<span class="token punctuation">.</span>self <span class="token operator">==</span> self <span class="token operator">&amp;&amp;</span> self<span class="token punctuation">)</span> <span class="token operator">||</span>
           <span class="token punctuation">(</span><span class="token keyword">typeof</span> global <span class="token operator">==</span> <span class="token string">&#39;object&#39;</span> <span class="token operator">&amp;&amp;</span> global<span class="token punctuation">.</span>global <span class="token operator">==</span> global <span class="token operator">&amp;&amp;</span> global<span class="token punctuation">)</span> <span class="token operator">||</span>
           <span class="token keyword">this</span> <span class="token operator">||</span>
           <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="\u51FD\u6570\u5BF9\u8C61" tabindex="-1"><a class="header-anchor" href="#\u51FD\u6570\u5BF9\u8C61" aria-hidden="true">#</a> \u51FD\u6570\u5BF9\u8C61</h2><p>\u73B0\u5728\u6211\u4EEC\u8BB2\u7B2C\u4E8C\u53E5 <code>var _ = {};</code>\u3002</p><p>\u5982\u679C\u4EC5\u4EC5\u8BBE\u7F6E \u4E3A\u4E00\u4E2A\u7A7A\u5BF9\u8C61\uFF0C\u6211\u4EEC\u8C03\u7528\u65B9\u6CD5\u7684\u65F6\u5019\uFF0C\u53EA\u80FD\u4F7F\u7528 <code>.reverse(&#39;hello&#39;)</code> \u7684\u65B9\u5F0F\uFF0C\u5B9E\u9645\u4E0A\uFF0C<code>underscore</code> \u4E5F\u652F\u6301\u7C7B\u4F3C\u9762\u5411\u5BF9\u8C61\u7684\u65B9\u5F0F\u8C03\u7528\uFF0C\u5373\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">_</span><span class="token punctuation">(</span><span class="token string">&#39;hello&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &#39;olleh&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>\u518D\u4E3E\u4E2A\u4F8B\u5B50\u6BD4\u8F83\u4E0B\u4E24\u79CD\u8C03\u7528\u65B9\u5F0F\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u51FD\u6570\u5F0F\u98CE\u683C</span>
_<span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u9762\u5411\u5BF9\u8C61\u98CE\u683C</span>
<span class="token function">_</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>\u65E2\u7136\u4EE5 <code>_([1, 2, 3])</code> \u7684\u5F62\u5F0F\u53EF\u4EE5\u6267\u884C\uFF0C\u5C31\u8868\u660E <code>_</code> \u4E0D\u662F\u4E00\u4E2A\u5B57\u9762\u91CF\u5BF9\u8C61\uFF0C\u800C\u662F\u4E00\u4E2A\u51FD\u6570\uFF01</p><p>\u5E78\u8FD0\u7684\u662F\uFF0C\u5728 JavaScript \u4E2D\uFF0C\u51FD\u6570\u4E5F\u662F\u4E00\u79CD\u5BF9\u8C61\uFF0C\u6211\u4EEC\u4E3E\u4E2A\u4F8B\u5B50\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">_</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
_<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
_<span class="token punctuation">.</span><span class="token function-variable function">log</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">+</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>_<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 1</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>_<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>\u6211\u4EEC\u5B8C\u5168\u53EF\u4EE5\u5C06\u81EA\u5B9A\u4E49\u7684\u51FD\u6570\u5B9A\u4E49\u5728 <code>_</code> \u51FD\u6570\u4E0A\uFF01</p><blockquote><p>\u76EE\u524D\u7684\u5199\u6CD5\u4E3A\uFF1A</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> root <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> self <span class="token operator">==</span> <span class="token string">&#39;object&#39;</span> <span class="token operator">&amp;&amp;</span> self<span class="token punctuation">.</span>self <span class="token operator">==</span> self <span class="token operator">&amp;&amp;</span> self<span class="token punctuation">)</span> <span class="token operator">||</span>
           <span class="token punctuation">(</span><span class="token keyword">typeof</span> global <span class="token operator">==</span> <span class="token string">&#39;object&#39;</span> <span class="token operator">&amp;&amp;</span> global<span class="token punctuation">.</span>global <span class="token operator">==</span> global <span class="token operator">&amp;&amp;</span> global<span class="token punctuation">)</span> <span class="token operator">||</span>
           <span class="token keyword">this</span> <span class="token operator">||</span>
           <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> <span class="token function-variable function">_</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

root<span class="token punctuation">.</span>_ <span class="token operator">=</span> _<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>\u5982\u4F55\u505A\u5230 <code>_([1, 2, 3]).each(...)</code>\u5462\uFF1F\u5373 \u51FD\u6570\u8FD4\u56DE\u4E00\u4E2A\u5BF9\u8C61\uFF0C\u8FD9\u4E2A\u5BF9\u8C61\uFF0C\u5982\u4F55\u8C03\u7528\u6302\u5728 \u51FD\u6570\u4E0A\u7684\u65B9\u6CD5\u5462\uFF1F</p><blockquote><p><code>underscore</code> \u662F\u5982\u4F55\u5B9E\u73B0\u7684\uFF1A</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">_</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">(</span><span class="token keyword">this</span> <span class="token keyword">instanceof</span> <span class="token class-name">_</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">_</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>_wrapped <span class="token operator">=</span> obj<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token function">_</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>\u6211\u4EEC\u5206\u6790\u4E0B <code>_([1, 2, 3])</code> \u7684\u6267\u884C\u8FC7\u7A0B\uFF1A</p><ol><li><p>\u6267\u884C <code>this instanceof _</code>\uFF0Cthis \u6307\u5411 window \uFF0C<code>window instanceof _</code> \u4E3A false\uFF0C<code>!</code>\u64CD\u4F5C\u7B26\u53D6\u53CD\uFF0C\u6240\u4EE5\u6267\u884C <code>new _(obj)</code>\u3002</p></li><li><p><code>new _(obj)</code> \u4E2D\uFF0Cthis \u6307\u5411\u5B9E\u4F8B\u5BF9\u8C61\uFF0C<code>this instanceof _</code> \u4E3A true\uFF0C\u53D6\u53CD\u540E\uFF0C\u4EE3\u7801\u63A5\u7740\u6267\u884C</p></li><li><p>\u6267\u884C <code>this._wrapped = obj</code>\uFF0C \u51FD\u6570\u6267\u884C\u7ED3\u675F</p></li><li><p>\u603B\u7ED3\uFF0C<code>_([1, 2, 3])</code> \u8FD4\u56DE\u4E00\u4E2A\u5BF9\u8C61\uFF0C\u4E3A <code>{_wrapped: [1, 2, 3]}</code>\uFF0C\u8BE5\u5BF9\u8C61\u7684\u539F\u578B\u6307\u5411 <code>_.prototype</code></p></li></ol>`,44),u=["src"],r=n(`<p>\u7136\u540E\u95EE\u9898\u6765\u4E86\uFF0C\u6211\u4EEC\u662F\u5C06\u65B9\u6CD5\u6302\u8F7D\u5230 <code>_</code> \u51FD\u6570\u5BF9\u8C61\u4E0A\uFF0C\u5E76\u6CA1\u6709\u6302\u5230\u51FD\u6570\u7684\u539F\u578B\u4E0A\u5450\uFF0C\u6240\u4EE5\u8FD4\u56DE\u4E86\u7684\u5B9E\u4F8B\uFF0C\u5176\u5B9E\u662F\u65E0\u6CD5\u8C03\u7528 <code>_</code> \u51FD\u6570\u5BF9\u8C61\u4E0A\u7684\u65B9\u6CD5\u7684\uFF01</p><blockquote><p>\u4F8B\u5B50\uFF1A</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">var</span> root <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> self <span class="token operator">==</span> <span class="token string">&#39;object&#39;</span> <span class="token operator">&amp;&amp;</span> self<span class="token punctuation">.</span>self <span class="token operator">==</span> self <span class="token operator">&amp;&amp;</span> self<span class="token punctuation">)</span> <span class="token operator">||</span>
               <span class="token punctuation">(</span><span class="token keyword">typeof</span> global <span class="token operator">==</span> <span class="token string">&#39;object&#39;</span> <span class="token operator">&amp;&amp;</span> global<span class="token punctuation">.</span>global <span class="token operator">==</span> global <span class="token operator">&amp;&amp;</span> global<span class="token punctuation">)</span> <span class="token operator">||</span>
               <span class="token keyword">this</span> <span class="token operator">||</span>
               <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

    <span class="token keyword">var</span> <span class="token function-variable function">_</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">(</span><span class="token keyword">this</span> <span class="token keyword">instanceof</span> <span class="token class-name">_</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">_</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>_wrapped <span class="token operator">=</span> obj<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    root<span class="token punctuation">.</span>_ <span class="token operator">=</span> _<span class="token punctuation">;</span>

    _<span class="token punctuation">.</span><span class="token function-variable function">log</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token function">_</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// _(...).log is not a function</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><p>\u786E\u5B9E\u6709\u8FD9\u4E2A\u95EE\u9898\uFF0C\u6240\u4EE5\u6211\u4EEC\u8FD8\u9700\u8981\u4E00\u4E2A\u65B9\u6CD5\u5C06 <code>_</code>\u4E0A\u7684\u65B9\u6CD5\u590D\u5236\u5230 <code>_.prototype</code> \u4E0A\uFF0C\u8FD9\u4E2A\u65B9\u6CD5\u5C31\u662F <code>_.mixin</code>\u3002</p><h2 id="functions" tabindex="-1"><a class="header-anchor" href="#functions" aria-hidden="true">#</a> _.functions</h2><p>\u4E3A\u4E86\u5C06 <code>_</code> \u4E0A\u7684\u65B9\u6CD5\u590D\u5236\u5230\u539F\u578B\u4E0A\uFF0C\u9996\u5148\u6211\u4EEC\u8981\u83B7\u5F97 <code>_</code> \u4E0A\u7684\u65B9\u6CD5\uFF0C\u6240\u4EE5\u6211\u4EEC\u5148\u5199\u4E2A <code>_.functions</code> \u65B9\u6CD5\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>_<span class="token punctuation">.</span><span class="token function-variable function">functions</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> names <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> key <span class="token keyword">in</span> obj<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>_<span class="token punctuation">.</span><span class="token function">isFunction</span><span class="token punctuation">(</span>obj<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> names<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> names<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="mixin" tabindex="-1"><a class="header-anchor" href="#mixin" aria-hidden="true">#</a> _.mixin</h2><blockquote><p>\u53EF\u4EE5\u5199 <code>mixin</code> \u65B9\u6CD5</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> ArrayProto <span class="token operator">=</span> <span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">;</span>
<span class="token keyword">var</span> push <span class="token operator">=</span> ArrayProto<span class="token punctuation">.</span>push<span class="token punctuation">;</span>

_<span class="token punctuation">.</span><span class="token function-variable function">mixin</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    _<span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span>_<span class="token punctuation">.</span><span class="token function">functions</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">var</span> func <span class="token operator">=</span> _<span class="token punctuation">[</span>name<span class="token punctuation">]</span> <span class="token operator">=</span> obj<span class="token punctuation">[</span>name<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token class-name">_</span><span class="token punctuation">.</span>prototype<span class="token punctuation">[</span>name<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">var</span> args <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">.</span>_wrapped<span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token function">push</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>args<span class="token punctuation">,</span> arguments<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token function">func</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>_<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> _<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

_<span class="token punctuation">.</span><span class="token function">mixin</span><span class="token punctuation">(</span>_<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><p>\u503C\u5F97\u6CE8\u610F\u7684\u662F\uFF1A\u56E0\u4E3A <code>_[name] = obj[name]</code> \u7684\u7F18\u6545\uFF0C\u6211\u4EEC\u53EF\u4EE5\u7ED9 <code>underscore</code> \u62D3\u5C55\u81EA\u5B9A\u4E49\u7684\u65B9\u6CD5:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>_<span class="token punctuation">.</span><span class="token function">mixin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token function-variable function">addOne</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">num</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> num <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">_</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addOne</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 3</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="\u5BFC\u51FA" tabindex="-1"><a class="header-anchor" href="#\u5BFC\u51FA" aria-hidden="true">#</a> \u5BFC\u51FA</h2><p>\u7EC8\u4E8E\u5230\u4E86\u8BB2\u6700\u540E\u4E00\u6B65 <code>root._ = _</code>\uFF0C\u6211\u4EEC\u76F4\u63A5\u770B\u6E90\u7801\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> exports <span class="token operator">!=</span> <span class="token string">&#39;undefined&#39;</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>exports<span class="token punctuation">.</span>nodeType<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> module <span class="token operator">!=</span> <span class="token string">&#39;undefined&#39;</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>module<span class="token punctuation">.</span>nodeType <span class="token operator">&amp;&amp;</span> module<span class="token punctuation">.</span>exports<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        exports <span class="token operator">=</span> module<span class="token punctuation">.</span>exports <span class="token operator">=</span> _<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    exports<span class="token punctuation">.</span>_ <span class="token operator">=</span> _<span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    root<span class="token punctuation">.</span>_ <span class="token operator">=</span> _<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>\u4E3A\u4E86\u652F\u6301\u6A21\u5757\u5316\uFF0C\u6211\u4EEC\u9700\u8981\u5C06 <code>_</code> \u5728\u5408\u9002\u7684\u73AF\u5883\u4E2D\u4F5C\u4E3A\u6A21\u5757\u5BFC\u51FA\uFF0C\u4F46\u662F nodejs \u6A21\u5757\u7684 API \u66FE\u7ECF\u53D1\u751F\u8FC7\u6539\u53D8</p><blockquote><p>\u65E9\u671F\u7248\u672C\u4E2D\uFF1A</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// add.js</span>
exports<span class="token punctuation">.</span><span class="token function-variable function">addOne</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">num</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> num <span class="token operator">+</span> <span class="token number">1</span>
<span class="token punctuation">}</span>

<span class="token comment">// index.js</span>
<span class="token keyword">var</span> add <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./add&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
add<span class="token punctuation">.</span><span class="token function">addOne</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><blockquote><p>\u5728\u65B0\u7248\u672C\u4E2D\uFF1A</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// add.js</span>
module<span class="token punctuation">.</span><span class="token function-variable function">exports</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter"><span class="token number">1</span></span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">return</span> num <span class="token operator">+</span> <span class="token number">1</span>
<span class="token punctuation">}</span>

<span class="token comment">// index.js</span>
<span class="token keyword">var</span> addOne <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./add.js&#39;</span><span class="token punctuation">)</span>
<span class="token function">addOne</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>\u6240\u4EE5\u6211\u4EEC\u6839\u636E exports \u548C module \u662F\u5426\u5B58\u5728\u6765\u9009\u62E9\u4E0D\u540C\u7684\u5BFC\u51FA\u65B9\u5F0F\uFF0C\u90A3\u4E3A\u4EC0\u4E48\u5728\u65B0\u7248\u672C\u4E2D\uFF0C\u6211\u4EEC\u8FD8\u8981\u4F7F\u7528 <code>exports = module.exports = _</code> \u5462\uFF1F</p><p>\u8FD9\u662F\u56E0\u4E3A\u5728 <code>nodejs</code> \u4E2D\uFF0C<code>exports</code> \u662F <code>module.exports</code> \u7684\u4E00\u4E2A\u5F15\u7528\uFF0C\u5F53\u4F60\u4F7F\u7528\u4E86 <code>module.exports = function(){}</code>\uFF0C\u5B9E\u9645\u4E0A\u8986\u76D6\u4E86 <code>module.exports</code>\uFF0C\u4F46\u662F <code>exports</code> \u5E76\u672A\u53D1\u751F\u6539\u53D8\uFF0C\u4E3A\u4E86\u907F\u514D\u540E\u9762\u518D\u4FEE\u6539 <code>exports</code> \u800C\u5BFC\u81F4\u4E0D\u80FD\u6B63\u786E\u8F93\u51FA\uFF0C\u5C31\u5199\u6210\u8FD9\u6837\uFF0C\u5C06\u4E24\u8005\u4FDD\u6301\u7EDF\u4E00\u3002</p><ol><li>\u7B2C\u4E00\u4E2A demo\uFF1A</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// exports \u662F module.exports \u7684\u4E00\u4E2A\u5F15\u7528</span>
module<span class="token punctuation">.</span>exports<span class="token punctuation">.</span>num <span class="token operator">=</span> <span class="token string">&#39;1&#39;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>exports<span class="token punctuation">.</span>num<span class="token punctuation">)</span> <span class="token comment">// 1</span>

exports<span class="token punctuation">.</span>num <span class="token operator">=</span> <span class="token string">&#39;2&#39;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>module<span class="token punctuation">.</span>exports<span class="token punctuation">.</span>num<span class="token punctuation">)</span> <span class="token comment">// 2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><ol start="2"><li>\u7B2C\u4E8C\u4E2A demo\uFF1A</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// addOne.js</span>
module<span class="token punctuation">.</span><span class="token function-variable function">exports</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">num</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">return</span> num <span class="token operator">+</span> <span class="token number">1</span>
<span class="token punctuation">}</span>

exports<span class="token punctuation">.</span>num <span class="token operator">=</span> <span class="token string">&#39;3&#39;</span>

<span class="token comment">// result.js \u4E2D\u5F15\u5165 addOne.js</span>
<span class="token keyword">var</span> addOne <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./addOne.js&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">addOne</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// 2</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>addOne<span class="token punctuation">.</span>num<span class="token punctuation">)</span> <span class="token comment">// undefined</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><ol start="3"><li>\u7B2C\u4E09\u4E2A demo\uFF1A</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// addOne.js</span>
exports <span class="token operator">=</span> module<span class="token punctuation">.</span><span class="token function-variable function">exports</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">num</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">return</span> num <span class="token operator">+</span> <span class="token number">1</span>
<span class="token punctuation">}</span>

exports<span class="token punctuation">.</span>num <span class="token operator">=</span> <span class="token string">&#39;3&#39;</span>

<span class="token comment">// result.js \u4E2D\u5F15\u5165 addOne.js</span>
<span class="token keyword">var</span> addOne <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./addOne.js&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">addOne</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// 2</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>addOne<span class="token punctuation">.</span>num<span class="token punctuation">)</span> <span class="token comment">// 3</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>\u6700\u540E\u4E3A\u4EC0\u4E48\u8981\u8FDB\u884C\u4E00\u4E2A <code>exports.nodeType</code> \u5224\u65AD\u5462\uFF1F\u8FD9\u662F\u56E0\u4E3A\u5982\u679C\u4F60\u5728 <code>HTML</code> \u9875\u9762\u4E2D\u52A0\u5165\u4E00\u4E2A <code>id</code> \u4E3A <code>exports</code> \u7684\u5143\u7D20\uFF0C\u6BD4\u5982</p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>exports<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>\u5C31\u4F1A\u751F\u6210\u4E00\u4E2A <code>window.exports</code> \u5168\u5C40\u53D8\u91CF\uFF0C\u4F60\u53EF\u4EE5\u76F4\u63A5\u5728\u6D4F\u89C8\u5668\u547D\u4EE4\u884C\u4E2D\u6253\u5370\u8BE5\u53D8\u91CF\u3002</p><p>\u6B64\u65F6\u5728\u6D4F\u89C8\u5668\u4E2D\uFF0C<code>typeof exports != &#39;undefined&#39;</code> \u7684\u5224\u65AD\u5C31\u4F1A\u751F\u6548\uFF0C\u7136\u540E <code>exports._ = _</code>\uFF0C\u7136\u800C\u5728\u6D4F\u89C8\u5668\u4E2D\uFF0C\u6211\u4EEC\u9700\u8981\u5C06 <code>_</code> \u6302\u8F7D\u5230\u5168\u5C40\u53D8\u91CF\u4E0A\u5450\uFF0C\u6240\u4EE5\u5728\u8FD9\u91CC\uFF0C\u6211\u4EEC\u8FD8\u9700\u8981\u8FDB\u884C\u4E00\u4E2A\u662F\u5426\u662F DOM \u8282\u70B9\u7684\u5224\u65AD\u3002</p><h2 id="\u6E90\u7801" tabindex="-1"><a class="header-anchor" href="#\u6E90\u7801" aria-hidden="true">#</a> \u6E90\u7801</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token keyword">var</span> root <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> self <span class="token operator">==</span> <span class="token string">&#39;object&#39;</span> <span class="token operator">&amp;&amp;</span> self<span class="token punctuation">.</span>self <span class="token operator">==</span> self <span class="token operator">&amp;&amp;</span> self<span class="token punctuation">)</span> <span class="token operator">||</span>
        <span class="token punctuation">(</span><span class="token keyword">typeof</span> global <span class="token operator">==</span> <span class="token string">&#39;object&#39;</span> <span class="token operator">&amp;&amp;</span> global<span class="token punctuation">.</span>global <span class="token operator">==</span> global <span class="token operator">&amp;&amp;</span> global<span class="token punctuation">)</span> <span class="token operator">||</span>
        <span class="token keyword">this</span> <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

    <span class="token keyword">var</span> ArrayProto <span class="token operator">=</span> <span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">;</span>

    <span class="token keyword">var</span> push <span class="token operator">=</span> ArrayProto<span class="token punctuation">.</span>push<span class="token punctuation">;</span>

    <span class="token keyword">var</span> <span class="token function-variable function">_</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>obj <span class="token keyword">instanceof</span> <span class="token class-name">_</span><span class="token punctuation">)</span> <span class="token keyword">return</span> obj<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">(</span><span class="token keyword">this</span> <span class="token keyword">instanceof</span> <span class="token class-name">_</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">_</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>_wrapped <span class="token operator">=</span> obj<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> exports <span class="token operator">!=</span> <span class="token string">&#39;undefined&#39;</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>exports<span class="token punctuation">.</span>nodeType<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> module <span class="token operator">!=</span> <span class="token string">&#39;undefined&#39;</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>module<span class="token punctuation">.</span>nodeType <span class="token operator">&amp;&amp;</span> module<span class="token punctuation">.</span>exports<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            exports <span class="token operator">=</span> module<span class="token punctuation">.</span>exports <span class="token operator">=</span> _<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        exports<span class="token punctuation">.</span>_ <span class="token operator">=</span> _<span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        root<span class="token punctuation">.</span>_ <span class="token operator">=</span> _<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    _<span class="token punctuation">.</span><span class="token constant">VERSION</span> <span class="token operator">=</span> <span class="token string">&#39;0.1&#39;</span><span class="token punctuation">;</span>

    <span class="token keyword">var</span> <span class="token constant">MAX_ARRAY_INDEX</span> <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">53</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>

    <span class="token keyword">var</span> <span class="token function-variable function">isArrayLike</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">collection</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">var</span> length <span class="token operator">=</span> collection<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">typeof</span> length <span class="token operator">==</span> <span class="token string">&#39;number&#39;</span> <span class="token operator">&amp;&amp;</span> length <span class="token operator">&gt;=</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> length <span class="token operator">&lt;=</span> <span class="token constant">MAX_ARRAY_INDEX</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>

    _<span class="token punctuation">.</span><span class="token function-variable function">each</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">obj<span class="token punctuation">,</span> callback</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">var</span> length<span class="token punctuation">,</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isArrayLike</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            length <span class="token operator">=</span> obj<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">callback</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>obj<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> obj<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token keyword">in</span> obj<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">callback</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>obj<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> obj<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">return</span> obj<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    _<span class="token punctuation">.</span><span class="token function-variable function">isFunction</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">typeof</span> obj <span class="token operator">==</span> <span class="token string">&#39;function&#39;</span> <span class="token operator">||</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>

    _<span class="token punctuation">.</span><span class="token function-variable function">functions</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">var</span> names <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> key <span class="token keyword">in</span> obj<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>_<span class="token punctuation">.</span><span class="token function">isFunction</span><span class="token punctuation">(</span>obj<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> names<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> names<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * \u5728 _.mixin(_) \u524D\u6DFB\u52A0\u81EA\u5DF1\u5B9A\u4E49\u7684\u65B9\u6CD5
     */</span>
    _<span class="token punctuation">.</span><span class="token function-variable function">reverse</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">string</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> string<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    _<span class="token punctuation">.</span><span class="token function-variable function">mixin</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        _<span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span>_<span class="token punctuation">.</span><span class="token function">functions</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">var</span> func <span class="token operator">=</span> _<span class="token punctuation">[</span>name<span class="token punctuation">]</span> <span class="token operator">=</span> obj<span class="token punctuation">[</span>name<span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token class-name">_</span><span class="token punctuation">.</span>prototype<span class="token punctuation">[</span>name<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">var</span> args <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">.</span>_wrapped<span class="token punctuation">]</span><span class="token punctuation">;</span>

                <span class="token function">push</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>args<span class="token punctuation">,</span> arguments<span class="token punctuation">)</span><span class="token punctuation">;</span>

                <span class="token keyword">return</span> <span class="token function">func</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>_<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> _<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>

    _<span class="token punctuation">.</span><span class="token function">mixin</span><span class="token punctuation">(</span>_<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br></div></div>`,34);function i(s,k){return a(),p(o,null,[l,t("img",{src:s.$withBase("/assets/designFrame/15fbda0fcc455412_tplv-t2oaga2asx-watermark.awebp"),alt:"demo"},null,8,u),r],64)}var m=e(c,[["render",i]]);export{m as default};
