import{r as c,o as r,c as l,b as n,d as a,w as o,F as u,a as p,e as s}from"./app.ee3fc36b.js";import{_ as i}from"./plugin-vue_export-helper.21dcd24c.js";const k={},d=p('<h1 id="react-context-\u539F\u7406" tabindex="-1"><a class="header-anchor" href="#react-context-\u539F\u7406" aria-hidden="true">#</a> React Context \u539F\u7406</h1><p>\u7B80\u5355\u6765\u8BB2, <code>Context</code>\u63D0\u4F9B\u4E86\u4E00\u79CD\u76F4\u63A5\u8BBF\u95EE\u7956\u5148\u8282\u70B9\u4E0A\u7684\u72B6\u6001\u7684\u65B9\u6CD5, \u907F\u514D\u4E86\u591A\u7EA7\u7EC4\u4EF6\u5C42\u5C42\u4F20\u9012<code>props</code>.</p><p>\u6709\u5173<code>Context</code>\u7684\u7528\u6CD5, \u8BF7\u76F4\u63A5\u67E5\u770B\u5B98\u65B9\u6587\u6863, \u672C\u6587\u5C06\u4ECE<code>fiber\u6811\u6784\u9020</code>\u7684\u89C6\u89D2, \u5206\u6790<code>Context</code>\u7684\u5B9E\u73B0\u539F\u7406.</p><h2 id="\u521B\u5EFA-context" tabindex="-1"><a class="header-anchor" href="#\u521B\u5EFA-context" aria-hidden="true">#</a> \u521B\u5EFA Context</h2>',4),b=s("\u6839\u636E\u5B98\u7F51\u793A\u4F8B, \u901A\u8FC7"),m=n("code",null,"React.createContext",-1),_=s("\u8FD9\u4E2A api \u6765\u521B\u5EFA"),h=n("code",null,"context",-1),y=s("\u5BF9\u8C61. \u5728"),x={href:"https://github.com/facebook/react/blob/v17.0.2/packages/react/src/ReactContext.js#L14-L152",target:"_blank",rel:"noopener noreferrer"},w=s("createContext"),g=s("\u4E2D, \u53EF\u4EE5\u770B\u5230"),f=n("code",null,"context",-1),C=s("\u5BF9\u8C61\u7684\u6570\u636E\u7ED3\u6784:"),v=p(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">function</span> createContext<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>
  <span class="token literal-property property">defaultValue</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span>
  <span class="token literal-property property">calculateChangedBits</span><span class="token operator">:</span> <span class="token operator">?</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span> <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token constant">T</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> number<span class="token punctuation">,</span>
<span class="token punctuation">)</span><span class="token operator">:</span> ReactContext<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>calculateChangedBits <span class="token operator">===</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    calculateChangedBits <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">const</span> <span class="token literal-property property">context</span><span class="token operator">:</span> ReactContext<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    $$<span class="token keyword">typeof</span><span class="token operator">:</span> <span class="token constant">REACT_CONTEXT_TYPE</span><span class="token punctuation">,</span>
    <span class="token literal-property property">_calculateChangedBits</span><span class="token operator">:</span> calculateChangedBits<span class="token punctuation">,</span>
    <span class="token comment">// As a workaround to support multiple concurrent renderers, we categorize</span>
    <span class="token comment">// some renderers as primary and others as secondary. We only expect</span>
    <span class="token comment">// there to be two concurrent renderers at most: React Native (primary) and</span>
    <span class="token comment">// Fabric (secondary); React DOM (primary) and React ART (secondary).</span>
    <span class="token comment">// Secondary renderers store their context values on separate fields.</span>
    <span class="token literal-property property">_currentValue</span><span class="token operator">:</span> defaultValue<span class="token punctuation">,</span>
    <span class="token literal-property property">_currentValue2</span><span class="token operator">:</span> defaultValue<span class="token punctuation">,</span>
    <span class="token literal-property property">_threadCount</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
    <span class="token literal-property property">Provider</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token keyword">null</span><span class="token operator">:</span> any<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token literal-property property">Consumer</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token keyword">null</span><span class="token operator">:</span> any<span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  context<span class="token punctuation">.</span>Provider <span class="token operator">=</span> <span class="token punctuation">{</span>
    $$<span class="token keyword">typeof</span><span class="token operator">:</span> <span class="token constant">REACT_PROVIDER_TYPE</span><span class="token punctuation">,</span>
    <span class="token literal-property property">_context</span><span class="token operator">:</span> context<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  context<span class="token punctuation">.</span>Consumer <span class="token operator">=</span> context<span class="token punctuation">;</span>
  <span class="token keyword">return</span> context<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br></div></div><p><code>createContext</code>\u6838\u5FC3\u903B\u8F91:</p><ul><li>\u5176\u521D\u59CB\u503C\u4FDD\u5B58\u5728<code>context._currentValue</code>(\u540C\u65F6\u4FDD\u5B58\u5230<code>context._currentValue2</code>. \u82F1\u6587\u6CE8\u91CA\u5DF2\u7ECF\u89E3\u91CA, \u4FDD\u5B58 2 \u4E2A value \u662F\u4E3A\u4E86\u652F\u6301\u591A\u4E2A\u6E32\u67D3\u5668\u5E76\u53D1\u6E32\u67D3)</li><li>\u540C\u65F6\u521B\u5EFA\u4E86<code>context.Provider</code>, <code>context.Consumer</code>2 \u4E2A<code>reactElement</code>\u5BF9\u8C61.</li></ul><p>\u6BD4\u5982, \u521B\u5EFA<code>const MyContext = React.createContext(defaultValue);</code>, \u4E4B\u540E\u4F7F\u7528<code>&lt;MyContext.Provider value={/* \u67D0\u4E2A\u503C */}&gt;</code>\u58F0\u660E\u4E00\u4E2A<code>ContextProvider</code>\u7C7B\u578B\u7684\u7EC4\u4EF6.</p>`,4),P=s("\u5728"),L=n("code",null,"fiber\u6811\u6E32\u67D3",-1),R=s("\u65F6, \u5728"),I=n("code",null,"beginWork",-1),F=s("\u4E2D"),V=n("code",null,"ContextProvider",-1),j=s("\u7C7B\u578B\u7684\u8282\u70B9\u5BF9\u5E94\u7684\u5904\u7406\u51FD\u6570\u662F"),T={href:"https://github.com/facebook/react/blob/v17.0.2/packages/react-reconciler/src/ReactFiberBeginWork.old.js#L2842-L2898",target:"_blank",rel:"noopener noreferrer"},B=s("updateContextProvider"),N=s(":"),W=p(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">beginWork</span><span class="token punctuation">(</span>
  <span class="token parameter"><span class="token literal-property property">current</span><span class="token operator">:</span> Fiber <span class="token operator">|</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
  <span class="token literal-property property">workInProgress</span><span class="token operator">:</span> Fiber<span class="token punctuation">,</span>
  <span class="token literal-property property">renderLanes</span><span class="token operator">:</span> Lanes<span class="token punctuation">,</span></span>
<span class="token punctuation">)</span><span class="token operator">:</span> Fiber <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> updateLanes <span class="token operator">=</span> workInProgress<span class="token punctuation">.</span>lanes<span class="token punctuation">;</span>
  workInProgress<span class="token punctuation">.</span>lanes <span class="token operator">=</span> NoLanes<span class="token punctuation">;</span>
  <span class="token comment">// ...\u7701\u7565\u65E0\u5173\u4EE3\u7801</span>
  <span class="token keyword">switch</span> <span class="token punctuation">(</span>workInProgress<span class="token punctuation">.</span>tag<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">case</span> <span class="token literal-property property">ContextProvider</span><span class="token operator">:</span>
      <span class="token keyword">return</span> <span class="token function">updateContextProvider</span><span class="token punctuation">(</span>current<span class="token punctuation">,</span> workInProgress<span class="token punctuation">,</span> renderLanes<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> <span class="token literal-property property">ContextConsumer</span><span class="token operator">:</span>
      <span class="token keyword">return</span> <span class="token function">updateContextConsumer</span><span class="token punctuation">(</span>current<span class="token punctuation">,</span> workInProgress<span class="token punctuation">,</span> renderLanes<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">updateContextProvider</span><span class="token punctuation">(</span>
  <span class="token parameter"><span class="token literal-property property">current</span><span class="token operator">:</span> Fiber <span class="token operator">|</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
  <span class="token literal-property property">workInProgress</span><span class="token operator">:</span> Fiber<span class="token punctuation">,</span>
  <span class="token literal-property property">renderLanes</span><span class="token operator">:</span> Lanes<span class="token punctuation">,</span></span>
<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...\u7701\u7565\u65E0\u5173\u4EE3\u7801</span>
  <span class="token keyword">const</span> <span class="token literal-property property">providerType</span><span class="token operator">:</span> ReactProviderType<span class="token operator">&lt;</span>any<span class="token operator">&gt;</span> <span class="token operator">=</span> workInProgress<span class="token punctuation">.</span>type<span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token literal-property property">context</span><span class="token operator">:</span> ReactContext<span class="token operator">&lt;</span>any<span class="token operator">&gt;</span> <span class="token operator">=</span> providerType<span class="token punctuation">.</span>_context<span class="token punctuation">;</span>

  <span class="token keyword">const</span> newProps <span class="token operator">=</span> workInProgress<span class="token punctuation">.</span>pendingProps<span class="token punctuation">;</span>
  <span class="token keyword">const</span> oldProps <span class="token operator">=</span> workInProgress<span class="token punctuation">.</span>memoizedProps<span class="token punctuation">;</span>
  <span class="token comment">// \u63A5\u6536\u65B0value</span>
  <span class="token keyword">const</span> newValue <span class="token operator">=</span> newProps<span class="token punctuation">.</span>value<span class="token punctuation">;</span>

  <span class="token comment">// \u66F4\u65B0 ContextProvider._currentValue</span>
  <span class="token function">pushProvider</span><span class="token punctuation">(</span>workInProgress<span class="token punctuation">,</span> newValue<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span>oldProps <span class="token operator">!==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// ... \u7701\u7565\u66F4\u65B0context\u7684\u903B\u8F91, \u4E0B\u6587\u8BA8\u8BBA</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">const</span> newChildren <span class="token operator">=</span> newProps<span class="token punctuation">.</span>children<span class="token punctuation">;</span>
  <span class="token function">reconcileChildren</span><span class="token punctuation">(</span>current<span class="token punctuation">,</span> workInProgress<span class="token punctuation">,</span> newChildren<span class="token punctuation">,</span> renderLanes<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> workInProgress<span class="token punctuation">.</span>child<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br></div></div><p><code>updateContextProvider()</code>\u5728<code>fiber\u521D\u6B21\u521B\u5EFA</code>\u65F6\u5341\u5206\u7B80\u5355, \u4EC5\u4EC5\u5C31\u662F\u4FDD\u5B58\u4E86<code>pendingProps.value</code>\u505A\u4E3A<code>context</code>\u7684\u6700\u65B0\u503C, \u4E4B\u540E\u8FD9\u4E2A\u6700\u65B0\u7684\u503C\u7528\u4E8E\u4F9B\u7ED9\u6D88\u8D39.</p><h3 id="context-currentvalue-\u5B58\u50A8" tabindex="-1"><a class="header-anchor" href="#context-currentvalue-\u5B58\u50A8" aria-hidden="true">#</a> context._currentValue \u5B58\u50A8</h3>`,3),M=s("\u6CE8\u610F"),O=n("code",null,"updateContextProvider -> pushProvider",-1),E=s("\u4E2D\u7684"),A={href:"https://github.com/facebook/react/blob/v17.0.2/packages/react-reconciler/src/ReactFiberNewContext.old.js#L75-L113",target:"_blank",rel:"noopener noreferrer"},D=s("pushProvider(workInProgress, newValue)"),U=s(":"),S=p(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// ...\u7701\u7565\u65E0\u5173\u4EE3\u7801</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> pushProvider<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>providerFiber<span class="token operator">:</span> Fiber<span class="token punctuation">,</span> <span class="token literal-property property">nextValue</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token literal-property property">context</span><span class="token operator">:</span> ReactContext<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token operator">=</span> providerFiber<span class="token punctuation">.</span>type<span class="token punctuation">.</span>_context<span class="token punctuation">;</span>
  <span class="token function">push</span><span class="token punctuation">(</span>valueCursor<span class="token punctuation">,</span> context<span class="token punctuation">.</span>_currentValue<span class="token punctuation">,</span> providerFiber<span class="token punctuation">)</span><span class="token punctuation">;</span>
  context<span class="token punctuation">.</span>_currentValue <span class="token operator">=</span> nextValue<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p><code>pushProvider</code>\u5B9E\u9645\u4E0A\u662F\u4E00\u4E2A\u5B58\u50A8\u51FD\u6570, \u5229\u7528<code>\u6808</code>\u7684\u7279\u6027, \u5148\u628A<code>context._currentValue</code>\u538B\u6808, \u4E4B\u540E\u66F4\u65B0<code>context._currentValue = nextValue</code>.</p>`,2),$=s("\u4E0E"),z=n("code",null,"pushProvider",-1),H=s("\u5BF9\u5E94\u7684\u8FD8\u6709"),X={href:"https://github.com/facebook/react/blob/v17.0.2/packages/react-reconciler/src/ReactFiberNewContext.old.js#L115-L126",target:"_blank",rel:"noopener noreferrer"},Y=s("popProvider"),q=s(", \u540C\u6837\u5229\u7528"),J=n("code",null,"\u6808",-1),Q=s("\u7684\u7279\u6027, \u628A"),G=n("code",null,"\u6808",-1),K=s("\u4E2D\u7684\u503C\u5F39\u51FA, \u8FD8\u539F\u5230"),Z=n("code",null,"context._currentValue",-1),nn=s("\u4E2D."),sn=s("\u672C\u8282\u91CD\u70B9\u5206\u6790"),an=n("code",null,"Context Api",-1),en=s("\u5728"),pn=n("code",null,"fiber\u6811\u6784\u9020",-1),tn=s("\u8FC7\u7A0B\u4E2D\u7684\u4F5C\u7528. \u6709\u5173"),on=n("code",null,"pushProvider/popProvider",-1),cn=s("\u7684\u5177\u4F53\u5B9E\u73B0\u8FC7\u7A0B(\u6808\u5B58\u50A8), \u5728"),rn=s("React \u7B97\u6CD5\u4E4B\u6808\u64CD\u4F5C"),ln=s("\u4E2D\u6709\u8BE6\u7EC6\u56FE\u89E3."),un=p('<h2 id="\u6D88\u8D39-context" tabindex="-1"><a class="header-anchor" href="#\u6D88\u8D39-context" aria-hidden="true">#</a> \u6D88\u8D39 Context</h2><p>\u4F7F\u7528\u4E86<code>MyContext.Provider</code>\u7EC4\u4EF6\u4E4B\u540E, \u5728<code>fiber\u6811\u6784\u9020</code>\u8FC7\u7A0B\u4E2D, context \u7684\u503C\u4F1A\u88AB<code>ContextProvider</code>\u7C7B\u578B\u7684<code>fiber</code>\u8282\u70B9\u6240\u66F4\u65B0. \u5728\u540E\u7EED\u7684\u8FC7\u7A0B\u4E2D, \u5982\u4F55\u8BFB\u53D6<code>context._currentValue</code>?</p><p>\u5728<code>react</code>\u4E2D, \u5171\u63D0\u4F9B\u4E86 3 \u79CD\u65B9\u5F0F\u53EF\u4EE5\u6D88\u8D39<code>Context</code>:</p>',3),kn=n("p",null,[s("\u4F7F\u7528"),n("code",null,"MyContext.Consumer"),s("\u7EC4\u4EF6: \u7528\u4E8E"),n("code",null,"JSX"),s(". \u5982, "),n("code",null,"<MyContext.Consumer>(value)=>{}</MyContext.Consumer>")],-1),dn=n("code",null,"beginWork",-1),bn=s("\u4E2D, \u5BF9\u4E8E"),mn=n("code",null,"ContextConsumer",-1),_n=s("\u7C7B\u578B\u7684\u8282\u70B9, \u5BF9\u5E94\u7684\u5904\u7406\u51FD\u6570\u662F"),hn={href:"https://github.com/facebook/react/blob/v17.0.2/packages/react-reconciler/src/ReactFiberBeginWork.old.js#L2902-L2963",target:"_blank",rel:"noopener noreferrer"},yn=s("updateContextConsumer"),xn=p(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">updateContextConsumer</span><span class="token punctuation">(</span>
  <span class="token parameter"><span class="token literal-property property">current</span><span class="token operator">:</span> Fiber <span class="token operator">|</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
  <span class="token literal-property property">workInProgress</span><span class="token operator">:</span> Fiber<span class="token punctuation">,</span>
  <span class="token literal-property property">renderLanes</span><span class="token operator">:</span> Lanes<span class="token punctuation">,</span></span>
<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> <span class="token literal-property property">context</span><span class="token operator">:</span> ReactContext<span class="token operator">&lt;</span>any<span class="token operator">&gt;</span> <span class="token operator">=</span> workInProgress<span class="token punctuation">.</span>type<span class="token punctuation">;</span>
  <span class="token keyword">const</span> newProps <span class="token operator">=</span> workInProgress<span class="token punctuation">.</span>pendingProps<span class="token punctuation">;</span>
  <span class="token keyword">const</span> render <span class="token operator">=</span> newProps<span class="token punctuation">.</span>children<span class="token punctuation">;</span>

  <span class="token comment">// \u8BFB\u53D6context</span>
  <span class="token function">prepareToReadContext</span><span class="token punctuation">(</span>workInProgress<span class="token punctuation">,</span> renderLanes<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> newValue <span class="token operator">=</span> <span class="token function">readContext</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> newProps<span class="token punctuation">.</span>unstable_observedBits<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> newChildren<span class="token punctuation">;</span>

  <span class="token comment">// ...\u7701\u7565\u65E0\u5173\u4EE3\u7801</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div>`,1),wn=n("p",null,[s("\u4F7F\u7528"),n("code",null,"useContext"),s(": \u7528\u4E8E"),n("code",null,"function"),s("\u4E2D. \u5982, "),n("code",null,"const value = useContext(MyContext)")],-1),gn=n("li",null,[s("\u8FDB\u5165"),n("code",null,"updateFunctionComponent"),s("\u540E, \u4F1A\u8C03\u7528"),n("code",null,"prepareToReadContext")],-1),fn=s("\u65E0\u8BBA\u662F\u521D\u6B21"),Cn={href:"https://github.com/facebook/react/blob/v17.0.2/packages/react-reconciler/src/ReactFiberHooks.old.js#L1780",target:"_blank",rel:"noopener noreferrer"},vn=s("\u521B\u5EFA\u9636\u6BB5"),Pn=s(", \u8FD8\u662F"),Ln={href:"https://github.com/facebook/react/blob/v17.0.2/packages/react-reconciler/src/ReactFiberHooks.old.js#L1801",target:"_blank",rel:"noopener noreferrer"},Rn=s("\u66F4\u65B0\u9636\u6BB5"),In=s(", "),Fn=n("code",null,"useContext",-1),Vn=s("\u90FD\u76F4\u63A5\u8C03\u7528\u4E86"),jn=n("code",null,"readeContext",-1),Tn=n("p",null,[n("code",null,"class"),s("\u7EC4\u4EF6\u4E2D, \u4F7F\u7528\u4E00\u4E2A\u9759\u6001\u5C5E\u6027"),n("code",null,"contextType"),s(": \u7528\u4E8E"),n("code",null,"class"),s("\u7EC4\u4EF6\u4E2D\u83B7\u53D6"),n("code",null,"context"),s(". \u5982, "),n("code",null,"MyClass.contextType = MyContext;")],-1),Bn=n("li",null,[s("\u8FDB\u5165"),n("code",null,"updateClassComponent"),s("\u540E, \u4F1A\u8C03\u7528"),n("code",null,"prepareToReadContext")],-1),Nn=s("\u65E0\u8BBA"),Wn={href:"https://github.com/facebook/react/blob/v17.0.2/packages/react-reconciler/src/ReactFiberClassComponent.old.js#L573",target:"_blank",rel:"noopener noreferrer"},Mn=s("constructClassInstance"),On=s(","),En={href:"https://github.com/facebook/react/blob/v17.0.2/packages/react-reconciler/src/ReactFiberClassComponent.old.js#L807",target:"_blank",rel:"noopener noreferrer"},An=s("mountClassInstance"),Dn=s(", "),Un={href:"https://github.com/facebook/react/blob/v17.0.2/packages/react-reconciler/src/ReactFiberClassComponent.old.js#L1031",target:"_blank",rel:"noopener noreferrer"},Sn=s("updateClassInstance"),$n=s("\u5185\u90E8\u90FD\u8C03\u7528"),zn=n("code",null,"context = readContext((contextType: any));",-1),Hn=s("\u6240\u4EE5\u8FD9 3 \u79CD\u65B9\u5F0F\u53EA\u662F"),Xn=n("code",null,"react",-1),Yn=s("\u6839\u636E\u4E0D\u540C\u4F7F\u7528\u573A\u666F\u5C01\u88C5\u7684"),qn=n("code",null,"api",-1),Jn=s(", \u5185\u90E8\u90FD\u4F1A\u8C03\u7528"),Qn={href:"https://github.com/facebook/react/blob/v17.0.2/packages/react-reconciler/src/ReactFiberNewContext.old.js#L297-L317",target:"_blank",rel:"noopener noreferrer"},Gn=s("prepareToReadContext"),Kn=s("\u548C"),Zn={href:"https://github.com/facebook/react/blob/v17.0.2/packages/react-reconciler/src/ReactFiberNewContext.old.js#L319-L381",target:"_blank",rel:"noopener noreferrer"},ns=s("readContext(contextType)"),ss=s("."),as=p(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// ... \u7701\u7565\u65E0\u5173\u4EE3\u7801</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">prepareToReadContext</span><span class="token punctuation">(</span>
  <span class="token parameter"><span class="token literal-property property">workInProgress</span><span class="token operator">:</span> Fiber<span class="token punctuation">,</span>
  <span class="token literal-property property">renderLanes</span><span class="token operator">:</span> Lanes<span class="token punctuation">,</span></span>
<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>
  <span class="token comment">// 1. \u8BBE\u7F6E\u5168\u5C40\u53D8\u91CF, \u4E3AreadContext\u505A\u51C6\u5907</span>
  currentlyRenderingFiber <span class="token operator">=</span> workInProgress<span class="token punctuation">;</span>
  lastContextDependency <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
  lastContextWithAllBitsObserved <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> dependencies <span class="token operator">=</span> workInProgress<span class="token punctuation">.</span>dependencies<span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>dependencies <span class="token operator">!==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> firstContext <span class="token operator">=</span> dependencies<span class="token punctuation">.</span>firstContext<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>firstContext <span class="token operator">!==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">includesSomeLane</span><span class="token punctuation">(</span>dependencies<span class="token punctuation">.</span>lanes<span class="token punctuation">,</span> renderLanes<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// Context list has a pending update. Mark that this fiber performed work.</span>
        <span class="token function">markWorkInProgressReceivedUpdate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token comment">// Reset the work-in-progress list</span>
      dependencies<span class="token punctuation">.</span>firstContext <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">// ... \u7701\u7565\u65E0\u5173\u4EE3\u7801</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> readContext<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>
  <span class="token literal-property property">context</span><span class="token operator">:</span> ReactContext<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">observedBits</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token operator">|</span> number <span class="token operator">|</span> boolean<span class="token punctuation">,</span>
<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> contextItem <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">context</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>context<span class="token operator">:</span> any<span class="token punctuation">)</span><span class="token operator">:</span> ReactContext<span class="token operator">&lt;</span>mixed<span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token literal-property property">observedBits</span><span class="token operator">:</span> resolvedObservedBits<span class="token punctuation">,</span>
    <span class="token literal-property property">next</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token comment">// 1. \u6784\u9020\u4E00\u4E2AcontextItem, \u52A0\u5165\u5230 workInProgress.dependencies\u94FE\u8868\u4E4B\u540E</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>lastContextDependency <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    lastContextDependency <span class="token operator">=</span> contextItem<span class="token punctuation">;</span>
    currentlyRenderingFiber<span class="token punctuation">.</span>dependencies <span class="token operator">=</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">lanes</span><span class="token operator">:</span> NoLanes<span class="token punctuation">,</span>
      <span class="token literal-property property">firstContext</span><span class="token operator">:</span> contextItem<span class="token punctuation">,</span>
      <span class="token literal-property property">responders</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    lastContextDependency <span class="token operator">=</span> lastContextDependency<span class="token punctuation">.</span>next <span class="token operator">=</span> contextItem<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// 2. \u8FD4\u56DE currentValue</span>
  <span class="token keyword">return</span> isPrimaryRenderer <span class="token operator">?</span> context<span class="token punctuation">.</span>_currentValue <span class="token operator">:</span> context<span class="token punctuation">.</span>_currentValue2<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br></div></div><p>\u6838\u5FC3\u903B\u8F91:</p><ol><li><code>prepareToReadContext</code>: \u8BBE\u7F6E<code>currentlyRenderingFiber = workInProgress</code>, \u5E76\u91CD\u7F6E<code>lastContextDependency</code>\u7B49\u5168\u5C40\u53D8\u91CF.</li><li><code>readContext</code>: \u8FD4\u56DE<code>context._currentValue</code>, \u5E76\u6784\u9020\u4E00\u4E2A<code>contextItem</code>\u6DFB\u52A0\u5230<code>workInProgress.dependencies</code>\u94FE\u8868\u4E4B\u540E.</li></ol><p>\u6CE8\u610F: \u8FD9\u4E2A<code>readContext</code>\u5E76\u4E0D\u662F\u7EAF\u51FD\u6570, \u5B83\u8FD8\u6709\u4E00\u4E9B\u526F\u4F5C\u7528, \u4F1A\u66F4\u6539<code>workInProgress.dependencies</code>, \u5176\u4E2D<code>contextItem.context</code>\u4FDD\u5B58\u4E86\u5F53\u524D<code>context</code>\u7684\u5F15\u7528. \u8FD9\u4E2A<code>dependencies</code>\u5C5E\u6027\u4F1A\u5728\u66F4\u65B0\u65F6\u4F7F\u7528, \u7528\u4E8E\u5224\u5B9A\u662F\u5426\u4F9D\u8D56\u4E86<code>ContextProvider</code>\u4E2D\u7684\u503C.</p><p>\u8FD4\u56DE<code>context._currentValue</code>\u4E4B\u540E, \u4E4B\u540E\u7EE7\u7EED\u8FDB\u884C<code>fiber\u6811\u6784\u9020</code>\u76F4\u5230\u5168\u90E8\u5B8C\u6210\u5373\u53EF.</p><h2 id="\u66F4\u65B0-context" tabindex="-1"><a class="header-anchor" href="#\u66F4\u65B0-context" aria-hidden="true">#</a> \u66F4\u65B0 Context</h2><p>\u6765\u5230\u66F4\u65B0\u9636\u6BB5, \u540C\u6837\u8FDB\u5165<code>updateContextConsumer</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">updateContextProvider</span><span class="token punctuation">(</span>
  <span class="token parameter"><span class="token literal-property property">current</span><span class="token operator">:</span> Fiber <span class="token operator">|</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
  <span class="token literal-property property">workInProgress</span><span class="token operator">:</span> Fiber<span class="token punctuation">,</span>
  <span class="token literal-property property">renderLanes</span><span class="token operator">:</span> Lanes<span class="token punctuation">,</span></span>
<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token literal-property property">providerType</span><span class="token operator">:</span> ReactProviderType<span class="token operator">&lt;</span>any<span class="token operator">&gt;</span> <span class="token operator">=</span> workInProgress<span class="token punctuation">.</span>type<span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token literal-property property">context</span><span class="token operator">:</span> ReactContext<span class="token operator">&lt;</span>any<span class="token operator">&gt;</span> <span class="token operator">=</span> providerType<span class="token punctuation">.</span>_context<span class="token punctuation">;</span>

  <span class="token keyword">const</span> newProps <span class="token operator">=</span> workInProgress<span class="token punctuation">.</span>pendingProps<span class="token punctuation">;</span>
  <span class="token keyword">const</span> oldProps <span class="token operator">=</span> workInProgress<span class="token punctuation">.</span>memoizedProps<span class="token punctuation">;</span>

  <span class="token keyword">const</span> newValue <span class="token operator">=</span> newProps<span class="token punctuation">.</span>value<span class="token punctuation">;</span>

  <span class="token function">pushProvider</span><span class="token punctuation">(</span>workInProgress<span class="token punctuation">,</span> newValue<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span>oldProps <span class="token operator">!==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u66F4\u65B0\u9636\u6BB5\u8FDB\u5165</span>
    <span class="token keyword">const</span> oldValue <span class="token operator">=</span> oldProps<span class="token punctuation">.</span>value<span class="token punctuation">;</span>
    <span class="token comment">// \u5BF9\u6BD4 newValue \u548C oldValue</span>
    <span class="token keyword">const</span> changedBits <span class="token operator">=</span> <span class="token function">calculateChangedBits</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> newValue<span class="token punctuation">,</span> oldValue<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>changedBits <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// value\u6CA1\u6709\u53D8\u52A8, \u8FDB\u5165 Bailout \u903B\u8F91</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>
        oldProps<span class="token punctuation">.</span>children <span class="token operator">===</span> newProps<span class="token punctuation">.</span>children <span class="token operator">&amp;&amp;</span>
        <span class="token operator">!</span><span class="token function">hasLegacyContextChanged</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">bailoutOnAlreadyFinishedWork</span><span class="token punctuation">(</span>
          current<span class="token punctuation">,</span>
          workInProgress<span class="token punctuation">,</span>
          renderLanes<span class="token punctuation">,</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token comment">// value\u53D8\u52A8, \u67E5\u627E\u5BF9\u5E94\u7684consumers, \u5E76\u4F7F\u5176\u80FD\u591F\u88AB\u66F4\u65B0</span>
      <span class="token function">propagateContextChange</span><span class="token punctuation">(</span>workInProgress<span class="token punctuation">,</span> context<span class="token punctuation">,</span> changedBits<span class="token punctuation">,</span> renderLanes<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// ... \u7701\u7565\u65E0\u5173\u4EE3\u7801</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br></div></div><p>\u6838\u5FC3\u903B\u8F91:</p>`,9),es=n("code",null,"value",-1),ps=s("\u6CA1\u6709\u6539\u53D8, \u76F4\u63A5\u8FDB\u5165"),ts=n("code",null,"Bailout",-1),os=s("(\u53EF\u4EE5\u56DE\u987E"),cs=s("fiber \u6811\u6784\u9020(\u5BF9\u6BD4\u66F4\u65B0)"),rs=s("\u4E2D\u5BF9"),ls=n("code",null,"bailout",-1),us=s("\u7684\u89E3\u91CA)."),is=n("li",null,[n("code",null,"value"),s("\u6539\u53D8, \u8C03\u7528"),n("code",null,"propagateContextChange")],-1),ks={href:"https://github.com/facebook/react/blob/v17.0.2/packages/react-reconciler/src/ReactFiberNewContext.old.js#L182-L295",target:"_blank",rel:"noopener noreferrer"},ds=s("propagateContextChange"),bs=s(":"),ms=p(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">propagateContextChange</span><span class="token punctuation">(</span>
  <span class="token parameter"><span class="token literal-property property">workInProgress</span><span class="token operator">:</span> Fiber<span class="token punctuation">,</span>
  <span class="token literal-property property">context</span><span class="token operator">:</span> ReactContext<span class="token operator">&lt;</span>mixed<span class="token operator">&gt;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">changedBits</span><span class="token operator">:</span> number<span class="token punctuation">,</span>
  <span class="token literal-property property">renderLanes</span><span class="token operator">:</span> Lanes<span class="token punctuation">,</span></span>
<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> fiber <span class="token operator">=</span> workInProgress<span class="token punctuation">.</span>child<span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>fiber <span class="token operator">!==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// Set the return pointer of the child to the work-in-progress fiber.</span>
    fiber<span class="token punctuation">.</span>return <span class="token operator">=</span> workInProgress<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span>fiber <span class="token operator">!==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> nextFiber<span class="token punctuation">;</span>
    <span class="token keyword">const</span> list <span class="token operator">=</span> fiber<span class="token punctuation">.</span>dependencies<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>list <span class="token operator">!==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      nextFiber <span class="token operator">=</span> fiber<span class="token punctuation">.</span>child<span class="token punctuation">;</span>
      <span class="token keyword">let</span> dependency <span class="token operator">=</span> list<span class="token punctuation">.</span>firstContext<span class="token punctuation">;</span>
      <span class="token keyword">while</span> <span class="token punctuation">(</span>dependency <span class="token operator">!==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u68C0\u67E5 dependency\u4E2D\u4F9D\u8D56\u7684context</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>
          dependency<span class="token punctuation">.</span>context <span class="token operator">===</span> context <span class="token operator">&amp;&amp;</span>
          <span class="token punctuation">(</span>dependency<span class="token punctuation">.</span>observedBits <span class="token operator">&amp;</span> changedBits<span class="token punctuation">)</span> <span class="token operator">!==</span> <span class="token number">0</span>
        <span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token comment">// \u7B26\u5408\u6761\u4EF6, \u5B89\u6392\u8C03\u5EA6</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span>fiber<span class="token punctuation">.</span>tag <span class="token operator">===</span> ClassComponent<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// class \u7EC4\u4EF6\u9700\u8981\u521B\u5EFA\u4E00\u4E2Aupdate\u5BF9\u8C61, \u6DFB\u52A0\u5230updateQueue\u961F\u5217</span>
            <span class="token keyword">const</span> update <span class="token operator">=</span> <span class="token function">createUpdate</span><span class="token punctuation">(</span>
              NoTimestamp<span class="token punctuation">,</span>
              <span class="token function">pickArbitraryLane</span><span class="token punctuation">(</span>renderLanes<span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token punctuation">)</span><span class="token punctuation">;</span>
            update<span class="token punctuation">.</span>tag <span class="token operator">=</span> ForceUpdate<span class="token punctuation">;</span> <span class="token comment">// \u6CE8\u610FForceUpdate, \u4FDD\u8BC1class\u7EC4\u4EF6\u4E00\u5B9A\u6267\u884Crender</span>
            <span class="token function">enqueueUpdate</span><span class="token punctuation">(</span>fiber<span class="token punctuation">,</span> update<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
          fiber<span class="token punctuation">.</span>lanes <span class="token operator">=</span> <span class="token function">mergeLanes</span><span class="token punctuation">(</span>fiber<span class="token punctuation">.</span>lanes<span class="token punctuation">,</span> renderLanes<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token keyword">const</span> alternate <span class="token operator">=</span> fiber<span class="token punctuation">.</span>alternate<span class="token punctuation">;</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span>alternate <span class="token operator">!==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            alternate<span class="token punctuation">.</span>lanes <span class="token operator">=</span> <span class="token function">mergeLanes</span><span class="token punctuation">(</span>alternate<span class="token punctuation">.</span>lanes<span class="token punctuation">,</span> renderLanes<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
          <span class="token comment">// \u5411\u4E0A</span>
          <span class="token function">scheduleWorkOnParentPath</span><span class="token punctuation">(</span>fiber<span class="token punctuation">.</span>return<span class="token punctuation">,</span> renderLanes<span class="token punctuation">)</span><span class="token punctuation">;</span>

          <span class="token comment">// \u6807\u8BB0\u4F18\u5148\u7EA7</span>
          list<span class="token punctuation">.</span>lanes <span class="token operator">=</span> <span class="token function">mergeLanes</span><span class="token punctuation">(</span>list<span class="token punctuation">.</span>lanes<span class="token punctuation">,</span> renderLanes<span class="token punctuation">)</span><span class="token punctuation">;</span>

          <span class="token comment">// \u9000\u51FA\u67E5\u627E</span>
          <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        dependency <span class="token operator">=</span> dependency<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// ...\u7701\u7565\u65E0\u5173\u4EE3\u7801</span>
    <span class="token comment">// ...\u7701\u7565\u65E0\u5173\u4EE3\u7801</span>

    fiber <span class="token operator">=</span> nextFiber<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br></div></div><p><code>propagateContextChange</code>\u6E90\u7801\u6BD4\u8F83\u957F, \u6838\u5FC3\u903B\u8F91\u5982\u4E0B:</p>`,2),_s=n("li",null,[s("\u5411\u4E0B\u904D\u5386: \u4ECE"),n("code",null,"ContextProvider"),s("\u7C7B\u578B\u7684\u8282\u70B9\u5F00\u59CB, \u5411\u4E0B\u67E5\u627E\u6240\u6709"),n("code",null,"fiber.dependencies"),s("\u4F9D\u8D56\u8BE5"),n("code",null,"context"),s("\u7684\u8282\u70B9(\u5047\u8BBE\u53EB\u505A"),n("code",null,"consumer"),s(").")],-1),hs=s("\u5411\u4E0A\u904D\u5386: \u4ECE"),ys=n("code",null,"consumer",-1),xs=s("\u8282\u70B9\u5F00\u59CB, \u5411\u4E0A\u904D\u5386, \u4FEE\u6539\u7236\u8DEF\u5F84\u4E0A\u6240\u6709\u8282\u70B9\u7684"),ws=n("code",null,"fiber.childLanes",-1),gs=s("\u5C5E\u6027, \u8868\u660E\u5176\u5B50\u8282\u70B9\u6709\u6539\u52A8, \u5B50\u8282\u70B9\u4F1A\u8FDB\u5165\u66F4\u65B0\u903B\u8F91. "),fs=s("\u8FD9\u4E00\u6B65\u901A\u8FC7\u8C03\u7528"),Cs={href:"https://github.com/facebook/react/blob/v17.0.2/packages/react-reconciler/src/ReactFiberNewContext.old.js#L155-L180",target:"_blank",rel:"noopener noreferrer"},vs=s("scheduleWorkOnParentPath(fiber.return, renderLanes)"),Ps=p(`\u5B9E\u73B0.<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">scheduleWorkOnParentPath</span><span class="token punctuation">(</span>
  <span class="token parameter"><span class="token literal-property property">parent</span><span class="token operator">:</span> Fiber <span class="token operator">|</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
  <span class="token literal-property property">renderLanes</span><span class="token operator">:</span> Lanes<span class="token punctuation">,</span></span>
<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// Update the child lanes of all the ancestors, including the alternates.</span>
  <span class="token keyword">let</span> node <span class="token operator">=</span> parent<span class="token punctuation">;</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span>node <span class="token operator">!==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> alternate <span class="token operator">=</span> node<span class="token punctuation">.</span>alternate<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isSubsetOfLanes</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>childLanes<span class="token punctuation">,</span> renderLanes<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      node<span class="token punctuation">.</span>childLanes <span class="token operator">=</span> <span class="token function">mergeLanes</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>childLanes<span class="token punctuation">,</span> renderLanes<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>alternate <span class="token operator">!==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        alternate<span class="token punctuation">.</span>childLanes <span class="token operator">=</span> <span class="token function">mergeLanes</span><span class="token punctuation">(</span>
          alternate<span class="token punctuation">.</span>childLanes<span class="token punctuation">,</span>
          renderLanes<span class="token punctuation">,</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>
      alternate <span class="token operator">!==</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span>
      <span class="token operator">!</span><span class="token function">isSubsetOfLanes</span><span class="token punctuation">(</span>alternate<span class="token punctuation">.</span>childLanes<span class="token punctuation">,</span> renderLanes<span class="token punctuation">)</span>
    <span class="token punctuation">)</span> <span class="token punctuation">{</span>
      alternate<span class="token punctuation">.</span>childLanes <span class="token operator">=</span> <span class="token function">mergeLanes</span><span class="token punctuation">(</span>alternate<span class="token punctuation">.</span>childLanes<span class="token punctuation">,</span> renderLanes<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token comment">// Neither alternate was updated, which means the rest of the</span>
      <span class="token comment">// ancestor path already has sufficient priority.</span>
      <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    node <span class="token operator">=</span> node<span class="token punctuation">.</span>return<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br></div></div>`,2),Ls=n("code",null,"scheduleWorkOnParentPath",-1),Rs=s("\u4E0E"),Is={href:"https://github.com/facebook/react/blob/v17.0.2/packages/react-reconciler/src/ReactFiberWorkLoop.old.js#L625-L667",target:"_blank",rel:"noopener noreferrer"},Fs=s("markUpdateLaneFromFiberToRoot"),Vs=s("\u7684\u4F5C\u7528\u76F8\u4F3C, \u5177\u4F53\u53EF\u4EE5\u56DE\u987E"),js=s("fiber \u6811\u6784\u9020(\u5BF9\u6BD4\u66F4\u65B0)"),Ts=p('<p>\u901A\u8FC7\u4EE5\u4E0A 2 \u4E2A\u6B65\u9AA4, \u4FDD\u8BC1\u4E86\u6240\u6709\u6D88\u8D39\u8BE5<code>context</code>\u7684\u5B50\u8282\u70B9\u90FD\u4F1A\u88AB\u91CD\u65B0\u6784\u9020, \u8FDB\u800C\u4FDD\u8BC1\u4E86\u72B6\u6001\u7684\u4E00\u81F4\u6027, \u5B9E\u73B0\u4E86<code>context</code>\u66F4\u65B0.</p><h2 id="\u603B\u7ED3" tabindex="-1"><a class="header-anchor" href="#\u603B\u7ED3" aria-hidden="true">#</a> \u603B\u7ED3</h2><p><code>Context</code>\u7684\u5B9E\u73B0\u601D\u8DEF\u8FD8\u662F\u6BD4\u8F83\u6E05\u6670, \u603B\u4F53\u5206\u4E3A 2 \u6B65.</p><ol><li>\u5728\u6D88\u8D39\u72B6\u6001\u65F6,<code>ContextConsumer</code>\u8282\u70B9\u8C03\u7528<code>readContext(MyContext)</code>\u83B7\u53D6\u6700\u65B0\u72B6\u6001.</li><li>\u5728\u66F4\u65B0\u72B6\u6001\u65F6, \u7531<code>ContextProvider</code>\u8282\u70B9\u8D1F\u8D23\u67E5\u627E\u6240\u6709<code>ContextConsumer</code>\u8282\u70B9, \u5E76\u8BBE\u7F6E\u6D88\u8D39\u8282\u70B9\u7684\u7236\u8DEF\u5F84\u4E0A\u6240\u6709\u8282\u70B9\u7684<code>fiber.childLanes</code>, \u4FDD\u8BC1\u6D88\u8D39\u8282\u70B9\u53EF\u4EE5\u5F97\u5230\u66F4\u65B0.</li></ol>',4);function Bs(Ns,Ws){const e=c("ExternalLinkIcon"),t=c("RouterLink");return r(),l(u,null,[d,n("p",null,[b,m,_,h,y,n("a",x,[w,a(e)]),g,f,C]),v,n("p",null,[P,L,R,I,F,V,j,n("a",T,[B,a(e)]),N]),W,n("p",null,[M,O,E,n("a",A,[D,a(e)]),U]),S,n("p",null,[$,z,H,n("a",X,[Y,a(e)]),q,J,Q,G,K,Z,nn]),n("p",null,[sn,an,en,pn,tn,on,cn,a(t,{to:"/react-illustration-series/algorithm/stack.html#context"},{default:o(()=>[rn]),_:1}),ln]),un,n("ol",null,[n("li",null,[kn,n("ul",null,[n("li",null,[dn,bn,mn,_n,n("a",hn,[yn,a(e)])])]),xn]),n("li",null,[wn,n("ul",null,[gn,n("li",null,[fn,n("a",Cn,[vn,a(e)]),Pn,n("a",Ln,[Rn,a(e)]),In,Fn,Vn,jn])])]),n("li",null,[Tn,n("ul",null,[Bn,n("li",null,[Nn,n("a",Wn,[Mn,a(e)]),On,n("a",En,[An,a(e)]),Dn,n("a",Un,[Sn,a(e)]),$n,zn])])])]),n("p",null,[Hn,Xn,Yn,qn,Jn,n("a",Qn,[Gn,a(e)]),Kn,n("a",Zn,[ns,a(e)]),ss]),as,n("ol",null,[n("li",null,[es,ps,ts,os,a(t,{to:"/react-illustration-series/main/fibertree-update.html#bailout"},{default:o(()=>[cs]),_:1}),rs,ls,us]),is]),n("p",null,[n("a",ks,[ds,a(e)]),bs]),ms,n("ol",null,[_s,n("li",null,[hs,ys,xs,ws,gs,n("ul",null,[n("li",null,[fs,n("a",Cs,[vs,a(e)]),Ps]),n("li",null,[Ls,Rs,n("a",Is,[Fs,a(e)]),Vs,a(t,{to:"/react-illustration-series/main/fibertree-update.html#markUpdateLaneFromFiberToRoot"},{default:o(()=>[js]),_:1})])])])]),Ts],64)}var Es=i(k,[["render",Bs]]);export{Es as default};
