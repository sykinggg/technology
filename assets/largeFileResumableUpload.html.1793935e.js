import{r as o,o as c,c as l,b as n,d as e,F as u,a as p,e as a}from"./app.ee3fc36b.js";import{_ as r}from"./plugin-vue_export-helper.21dcd24c.js";const i={},k=p(`<h1 id="\u5927\u6587\u4EF6\u4E0A\u4F20\u548C\u65AD\u70B9\u7EED\u4F20" tabindex="-1"><a class="header-anchor" href="#\u5927\u6587\u4EF6\u4E0A\u4F20\u548C\u65AD\u70B9\u7EED\u4F20" aria-hidden="true">#</a> \u5927\u6587\u4EF6\u4E0A\u4F20\u548C\u65AD\u70B9\u7EED\u4F20</h1><p>\u524D\u7AEF\uFF1A<code>vue</code> <code>element-ui</code></p><p>\u670D\u52A1\u7AEF\uFF1A<code>nodejs</code></p><h2 id="\u5927\u6587\u4EF6\u4E0A\u4F20" tabindex="-1"><a class="header-anchor" href="#\u5927\u6587\u4EF6\u4E0A\u4F20" aria-hidden="true">#</a> \u5927\u6587\u4EF6\u4E0A\u4F20</h2><h3 id="\u6574\u4F53\u601D\u8DEF" tabindex="-1"><a class="header-anchor" href="#\u6574\u4F53\u601D\u8DEF" aria-hidden="true">#</a> \u6574\u4F53\u601D\u8DEF</h3><h4 id="\u524D\u7AEF" tabindex="-1"><a class="header-anchor" href="#\u524D\u7AEF" aria-hidden="true">#</a> \u524D\u7AEF</h4><p>\u524D\u7AEF\u5927\u6587\u4EF6\u4E0A\u4F20\u7F51\u4E0A\u7684\u5927\u90E8\u5206\u6587\u7AE0\u5DF2\u7ECF\u7ED9\u51FA\u4E86\u89E3\u51B3\u65B9\u6848\uFF0C\u6838\u5FC3\u662F\u5229\u7528 <code>Blob.prototype.slice</code> \u65B9\u6CD5\uFF0C\u548C\u6570\u7EC4\u7684 <code>slice</code> \u65B9\u6CD5\u76F8\u4F3C\uFF0C\u8C03\u7528\u7684 <code>slice</code> \u65B9\u6CD5\u53EF\u4EE5\u8FD4\u56DE\u539F\u6587\u4EF6\u7684\u67D0\u4E2A\u5207\u7247</p><p>\u8FD9\u6837\u6211\u4EEC\u5C31\u53EF\u4EE5\u6839\u636E\u9884\u5148\u8BBE\u7F6E\u597D\u7684\u5207\u7247\u6700\u5927\u6570\u91CF\u5C06\u6587\u4EF6\u5207\u5206\u4E3A\u4E00\u4E2A\u4E2A\u5207\u7247\uFF0C\u7136\u540E\u501F\u52A9 http \u7684\u53EF\u5E76\u53D1\u6027\uFF0C<code>\u540C\u65F6</code>\u4E0A\u4F20\u591A\u4E2A\u5207\u7247\uFF0C\u8FD9\u6837\u4ECE\u539F\u672C\u4F20\u4E00\u4E2A\u5927\u6587\u4EF6\uFF0C\u53D8\u6210\u4E86\u540C\u65F6\u4F20\u591A\u4E2A\u5C0F\u7684\u6587\u4EF6\u5207\u7247\uFF0C\u53EF\u4EE5\u5927\u5927\u51CF\u5C11\u4E0A\u4F20\u65F6\u95F4</p><p>\u53E6\u5916\u7531\u4E8E\u662F\u5E76\u53D1\uFF0C\u4F20\u8F93\u5230\u670D\u52A1\u7AEF\u7684\u987A\u5E8F\u53EF\u80FD\u4F1A\u53D1\u751F\u53D8\u5316\uFF0C\u6240\u4EE5\u6211\u4EEC\u8FD8\u9700\u8981\u7ED9\u6BCF\u4E2A\u5207\u7247\u8BB0\u5F55\u987A\u5E8F</p><h4 id="\u670D\u52A1\u7AEF" tabindex="-1"><a class="header-anchor" href="#\u670D\u52A1\u7AEF" aria-hidden="true">#</a> \u670D\u52A1\u7AEF</h4><p>\u670D\u52A1\u7AEF\u9700\u8981\u8D1F\u8D23\u63A5\u53D7\u8FD9\u4E9B\u5207\u7247\uFF0C\u5E76\u5728\u63A5\u6536\u5230\u6240\u6709\u5207\u7247\u540E<code>\u5408\u5E76</code>\u5207\u7247</p><p>\u8FD9\u91CC\u53C8\u5F15\u4F38\u51FA\u4E24\u4E2A\u95EE\u9898</p><ol><li><p>\u4F55\u65F6\u5408\u5E76\u5207\u7247\uFF0C\u5373\u5207\u7247\u4EC0\u4E48\u65F6\u5019\u4F20\u8F93\u5B8C\u6210</p></li><li><p>\u5982\u4F55\u5408\u5E76\u5207\u7247</p></li></ol><p>\u7B2C\u4E00\u4E2A\u95EE\u9898\u9700\u8981\u524D\u7AEF\u8FDB\u884C\u914D\u5408\uFF0C\u524D\u7AEF\u5728\u6BCF\u4E2A\u5207\u7247\u4E2D\u90FD\u643A\u5E26\u5207\u7247\u6700\u5927\u6570\u91CF\u7684\u4FE1\u606F\uFF0C\u5F53\u670D\u52A1\u7AEF\u63A5\u53D7\u5230\u8FD9\u4E2A\u6570\u91CF\u7684\u5207\u7247\u65F6\u81EA\u52A8\u5408\u5E76\uFF0C\u4E5F\u53EF\u4EE5\u989D\u5916\u53D1\u4E00\u4E2A\u8BF7\u6C42\u4E3B\u52A8\u901A\u77E5\u670D\u52A1\u7AEF\u8FDB\u884C\u5207\u7247\u7684\u5408\u5E76</p><p>\u7B2C\u4E8C\u4E2A\u95EE\u9898\uFF0C\u5177\u4F53\u5982\u4F55\u5408\u5E76\u5207\u7247\u5462\uFF1F\u8FD9\u91CC\u53EF\u4EE5\u4F7F\u7528 nodejs \u7684 \u8BFB\u5199\u6D41\uFF08readStream/writeStream\uFF09\uFF0C\u5C06\u6240\u6709\u5207\u7247\u7684\u6D41\u4F20\u8F93\u5230\u6700\u7EC8\u6587\u4EF6\u7684\u6D41\u91CC</p><h2 id="\u524D\u7AEF\u90E8\u5206" tabindex="-1"><a class="header-anchor" href="#\u524D\u7AEF\u90E8\u5206" aria-hidden="true">#</a> \u524D\u7AEF\u90E8\u5206</h2><p>\u524D\u7AEF\u4F7F\u7528 Vue \u4F5C\u4E3A\u5F00\u53D1\u6846\u67B6\uFF0C\u5BF9\u754C\u9762\u6CA1\u6709\u592A\u5927\u8981\u6C42\uFF0C\u539F\u751F\u4E5F\u53EF\u4EE5\uFF0C\u8003\u8651\u5230\u7F8E\u89C2\u4F7F\u7528 element-ui \u4F5C\u4E3A UI \u6846\u67B6</p><h3 id="\u4E0A\u4F20\u63A7\u4EF6" tabindex="-1"><a class="header-anchor" href="#\u4E0A\u4F20\u63A7\u4EF6" aria-hidden="true">#</a> \u4E0A\u4F20\u63A7\u4EF6</h3><p>\u9996\u5148\u521B\u5EFA\u9009\u62E9\u6587\u4EF6\u7684\u63A7\u4EF6\uFF0C\u76D1\u542C change \u4E8B\u4EF6\u4EE5\u53CA\u4E0A\u4F20\u6309\u94AE</p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>file<span class="token punctuation">&quot;</span></span> <span class="token attr-name">@change</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>handleFileChange<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>handleUpload<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\u4E0A\u4F20<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-button</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  <span class="token function-variable function">data</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">container</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">file</span><span class="token operator">:</span> <span class="token keyword">null</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span>
     <span class="token function">handleFileChange</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> <span class="token punctuation">[</span>file<span class="token punctuation">]</span> <span class="token operator">=</span> e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>files<span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>file<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>
      Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$data<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$options<span class="token punctuation">.</span><span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>container<span class="token punctuation">.</span>file <span class="token operator">=</span> file<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token keyword">async</span> <span class="token function">handleUpload</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div>`,20),b=["src"],m=p(`<h3 id="\u8BF7\u6C42\u903B\u8F91" tabindex="-1"><a class="header-anchor" href="#\u8BF7\u6C42\u903B\u8F91" aria-hidden="true">#</a> \u8BF7\u6C42\u903B\u8F91</h3><p>\u8003\u8651\u5230\u901A\u7528\u6027\uFF0C\u8FD9\u91CC\u6CA1\u6709\u7528\u7B2C\u4E09\u65B9\u7684\u8BF7\u6C42\u5E93\uFF0C\u800C\u662F\u7528\u539F\u751F XMLHttpRequest \u505A\u4E00\u5C42\u7B80\u5355\u7684\u5C01\u88C5\u6765\u53D1\u8BF7\u6C42</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">request</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      url<span class="token punctuation">,</span>
      method <span class="token operator">=</span> <span class="token string">&quot;post&quot;</span><span class="token punctuation">,</span>
      data<span class="token punctuation">,</span>
      headers <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
      requestList
    <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token parameter">resolve</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> xhr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XMLHttpRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        xhr<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span>method<span class="token punctuation">,</span> url<span class="token punctuation">)</span><span class="token punctuation">;</span>
        Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>headers<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">key</span> <span class="token operator">=&gt;</span>
          xhr<span class="token punctuation">.</span><span class="token function">setRequestHeader</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> headers<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
        xhr<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
        xhr<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token parameter">e</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
            <span class="token literal-property property">data</span><span class="token operator">:</span> e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>response
          <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><h3 id="\u4E0A\u4F20\u5207\u7247" tabindex="-1"><a class="header-anchor" href="#\u4E0A\u4F20\u5207\u7247" aria-hidden="true">#</a> \u4E0A\u4F20\u5207\u7247</h3><p>\u63A5\u7740\u5B9E\u73B0\u6BD4\u8F83\u91CD\u8981\u7684\u4E0A\u4F20\u529F\u80FD\uFF0C\u4E0A\u4F20\u9700\u8981\u505A\u4E24\u4EF6\u4E8B</p><ul><li><p>\u5BF9\u6587\u4EF6\u8FDB\u884C\u5207\u7247</p></li><li><p>\u5C06\u5207\u7247\u4F20\u8F93\u7ED9\u670D\u52A1\u7AEF</p></li></ul><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>file<span class="token punctuation">&quot;</span></span> <span class="token attr-name">@change</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>handleFileChange<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>handleUpload<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\u4E0A\u4F20<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-button</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token operator">+</span> <span class="token keyword">const</span> <span class="token constant">SIZE</span> <span class="token operator">=</span> <span class="token number">10</span> <span class="token operator">*</span> <span class="token number">1024</span> <span class="token operator">*</span> <span class="token number">1024</span><span class="token punctuation">;</span> <span class="token comment">// \u5207\u7247\u5927\u5C0F</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  <span class="token function-variable function">data</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">container</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">file</span><span class="token operator">:</span> <span class="token keyword">null</span>
    <span class="token punctuation">}</span>\uFF0C
<span class="token operator">+</span>   data<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token function">request</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function">handleFileChange</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token operator">+</span>    <span class="token comment">// \u751F\u6210\u6587\u4EF6\u5207\u7247</span>
<span class="token operator">+</span>    <span class="token function">createFileChunk</span><span class="token punctuation">(</span><span class="token parameter">file<span class="token punctuation">,</span> size <span class="token operator">=</span> <span class="token constant">SIZE</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token operator">+</span>     <span class="token keyword">const</span> fileChunkList <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token operator">+</span>      <span class="token keyword">let</span> cur <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token operator">+</span>      <span class="token keyword">while</span> <span class="token punctuation">(</span>cur <span class="token operator">&lt;</span> file<span class="token punctuation">.</span>size<span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token operator">+</span>        fileChunkList<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">file</span><span class="token operator">:</span> file<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>cur<span class="token punctuation">,</span> cur <span class="token operator">+</span> size<span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token operator">+</span>        cur <span class="token operator">+=</span> size<span class="token punctuation">;</span>
<span class="token operator">+</span>      <span class="token punctuation">}</span>
<span class="token operator">+</span>      <span class="token keyword">return</span> fileChunkList<span class="token punctuation">;</span>
<span class="token operator">+</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token operator">+</span>   <span class="token comment">// \u4E0A\u4F20\u5207\u7247</span>
<span class="token operator">+</span>    <span class="token keyword">async</span> <span class="token function">uploadChunks</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token operator">+</span>      <span class="token keyword">const</span> requestList <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>data
<span class="token operator">+</span>        <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> chunk\uFF0Chash <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
<span class="token operator">+</span>          <span class="token keyword">const</span> formData <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FormData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token operator">+</span>          formData<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;chunk&quot;</span><span class="token punctuation">,</span> chunk<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token operator">+</span>          formData<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;hash&quot;</span><span class="token punctuation">,</span> hash<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token operator">+</span>          formData<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;filename&quot;</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>container<span class="token punctuation">.</span>file<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token operator">+</span>          <span class="token keyword">return</span> <span class="token punctuation">{</span> formData <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token operator">+</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token operator">+</span>        <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> formData <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
<span class="token operator">+</span>          <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">request</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
<span class="token operator">+</span>            url<span class="token operator">:</span> <span class="token string">&quot;http://localhost:3000&quot;</span><span class="token punctuation">,</span>
<span class="token operator">+</span>            data<span class="token operator">:</span> formData
<span class="token operator">+</span>          <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token operator">+</span>        <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token operator">+</span>      <span class="token keyword">await</span> Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span>requestList<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u5E76\u53D1\u5207\u7247</span>
<span class="token operator">+</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token operator">+</span>    <span class="token keyword">async</span> <span class="token function">handleUpload</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token operator">+</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>container<span class="token punctuation">.</span>file<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>
<span class="token operator">+</span>      <span class="token keyword">const</span> fileChunkList <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">createFileChunk</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>container<span class="token punctuation">.</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token operator">+</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>data <span class="token operator">=</span> fileChunkList<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> file <span class="token punctuation">}</span>\uFF0Cindex</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span>
<span class="token operator">+</span>        chunk<span class="token operator">:</span> file<span class="token punctuation">,</span>
<span class="token operator">+</span>        hash<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>container<span class="token punctuation">.</span>file<span class="token punctuation">.</span>name <span class="token operator">+</span> <span class="token string">&quot;-&quot;</span> <span class="token operator">+</span> index <span class="token comment">// \u6587\u4EF6\u540D + \u6570\u7EC4\u4E0B\u6807</span>
<span class="token operator">+</span>      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token operator">+</span>      <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">uploadChunks</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token operator">+</span>    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br></div></div><p>\u5F53\u70B9\u51FB\u4E0A\u4F20\u6309\u94AE\u65F6\uFF0C\u8C03\u7528 <code>createFileChunk</code> \u5C06\u6587\u4EF6\u5207\u7247\uFF0C\u5207\u7247\u6570\u91CF\u901A\u8FC7\u6587\u4EF6\u5927\u5C0F\u63A7\u5236\uFF0C\u8FD9\u91CC\u8BBE\u7F6E 10MB\uFF0C\u4E5F\u5C31\u662F\u8BF4 100 MB \u7684\u6587\u4EF6\u4F1A\u88AB\u5206\u6210 10 \u4E2A\u5207\u7247</p><p>createFileChunk \u5185\u4F7F\u7528 while \u5FAA\u73AF\u548C slice \u65B9\u6CD5\u5C06\u5207\u7247\u653E\u5165 <code>fileChunkList</code> \u6570\u7EC4\u4E2D\u8FD4\u56DE</p><p>\u5728\u751F\u6210\u6587\u4EF6\u5207\u7247\u65F6\uFF0C\u9700\u8981\u7ED9\u6BCF\u4E2A\u5207\u7247\u4E00\u4E2A\u6807\u8BC6\u4F5C\u4E3A hash\uFF0C\u8FD9\u91CC\u6682\u65F6\u4F7F\u7528<code>\u6587\u4EF6\u540D + \u4E0B\u6807</code>\uFF0C\u8FD9\u6837\u540E\u7AEF\u53EF\u4EE5\u77E5\u9053\u5F53\u524D\u5207\u7247\u662F\u7B2C\u51E0\u4E2A\u5207\u7247\uFF0C\u7528\u4E8E\u4E4B\u540E\u7684\u5408\u5E76\u5207\u7247</p><p>\u968F\u540E\u8C03\u7528 <code>uploadChunks</code> \u4E0A\u4F20\u6240\u6709\u7684\u6587\u4EF6\u5207\u7247\uFF0C\u5C06\u6587\u4EF6\u5207\u7247\uFF0C\u5207\u7247 hash\uFF0C\u4EE5\u53CA\u6587\u4EF6\u540D\u653E\u5165 FormData \u4E2D\uFF0C\u518D\u8C03\u7528\u4E0A\u4E00\u6B65\u7684 <code>request</code> \u51FD\u6570\u8FD4\u56DE\u4E00\u4E2A proimise\uFF0C\u6700\u540E\u8C03\u7528 Promise.all \u5E76\u53D1\u4E0A\u4F20\u6240\u6709\u7684\u5207\u7247</p><h3 id="\u53D1\u9001\u5408\u5E76\u8BF7\u6C42" tabindex="-1"><a class="header-anchor" href="#\u53D1\u9001\u5408\u5E76\u8BF7\u6C42" aria-hidden="true">#</a> \u53D1\u9001\u5408\u5E76\u8BF7\u6C42</h3><p>\u8FD9\u91CC\u4F7F\u7528\u6574\u4F53\u601D\u8DEF\u4E2D\u63D0\u5230\u7684\u7B2C\u4E8C\u79CD\u5408\u5E76\u5207\u7247\u7684\u65B9\u5F0F\uFF0C\u5373\u524D\u7AEF\u4E3B\u52A8\u901A\u77E5\u670D\u52A1\u7AEF\u8FDB\u884C\u5408\u5E76\uFF0C\u6240\u4EE5\u524D\u7AEF\u8FD8\u9700\u8981\u989D\u5916\u53D1\u8BF7\u6C42\uFF0C\u670D\u52A1\u7AEF\u63A5\u53D7\u5230\u8FD9\u4E2A\u8BF7\u6C42\u65F6\u4E3B\u52A8\u5408\u5E76\u5207\u7247</p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>file<span class="token punctuation">&quot;</span></span> <span class="token attr-name">@change</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>handleFileChange<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>handleUpload<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\u4E0A\u4F20<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-button</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  <span class="token function-variable function">data</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">container</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">file</span><span class="token operator">:</span> <span class="token keyword">null</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token function">request</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function">handleFileChange</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function">createFileChunk</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token comment">// \u4E0A\u4F20\u5207\u7247\uFF0C\u540C\u65F6\u8FC7\u6EE4\u5DF2\u4E0A\u4F20\u7684\u5207\u7247</span>
    <span class="token keyword">async</span> <span class="token function">uploadChunks</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> requestList <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>data
        <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> chunk\uFF0Chash <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token keyword">const</span> formData <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FormData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          formData<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;chunk&quot;</span><span class="token punctuation">,</span> chunk<span class="token punctuation">)</span><span class="token punctuation">;</span>
          formData<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;hash&quot;</span><span class="token punctuation">,</span> hash<span class="token punctuation">)</span><span class="token punctuation">;</span>
          formData<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;filename&quot;</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>container<span class="token punctuation">.</span>file<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token keyword">return</span> <span class="token punctuation">{</span> formData <span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> formData <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
          <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">request</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
            <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">&quot;http://localhost:3000&quot;</span><span class="token punctuation">,</span>
            <span class="token literal-property property">data</span><span class="token operator">:</span> formData
          <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">await</span> Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span>requestList<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token operator">+</span>      <span class="token comment">// \u5408\u5E76\u5207\u7247</span>
<span class="token operator">+</span>     <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">mergeRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token operator">+</span>    <span class="token keyword">async</span> <span class="token function">mergeRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token operator">+</span>      <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">request</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
<span class="token operator">+</span>        url<span class="token operator">:</span> <span class="token string">&quot;http://localhost:3000/merge&quot;</span><span class="token punctuation">,</span>
<span class="token operator">+</span>        headers<span class="token operator">:</span> <span class="token punctuation">{</span>
<span class="token operator">+</span>          <span class="token string">&quot;content-type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;application/json&quot;</span>
<span class="token operator">+</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token operator">+</span>        data<span class="token operator">:</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
<span class="token operator">+</span>          filename<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>container<span class="token punctuation">.</span>file<span class="token punctuation">.</span>name
<span class="token operator">+</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token operator">+</span>      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token operator">+</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    
    <span class="token keyword">async</span> <span class="token function">handleUpload</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br></div></div><h2 id="\u670D\u52A1\u7AEF\u90E8\u5206" tabindex="-1"><a class="header-anchor" href="#\u670D\u52A1\u7AEF\u90E8\u5206" aria-hidden="true">#</a> \u670D\u52A1\u7AEF\u90E8\u5206</h2><p>\u7B80\u5355\u4F7F\u7528 http \u6A21\u5757\u642D\u5EFA\u670D\u52A1\u7AEF</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> http <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;http&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> server <span class="token operator">=</span> http<span class="token punctuation">.</span><span class="token function">createServer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

server<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;request&quot;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  res<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">&quot;Access-Control-Allow-Origin&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;*&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  res<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">&quot;Access-Control-Allow-Headers&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;*&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>req<span class="token punctuation">.</span>method <span class="token operator">===</span> <span class="token string">&quot;OPTIONS&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    res<span class="token punctuation">.</span>status <span class="token operator">=</span> <span class="token number">200</span><span class="token punctuation">;</span>
    res<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

server<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">3000</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;\u6B63\u5728\u76D1\u542C 3000 \u7AEF\u53E3&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h3 id="\u63A5\u53D7\u5207\u7247" tabindex="-1"><a class="header-anchor" href="#\u63A5\u53D7\u5207\u7247" aria-hidden="true">#</a> \u63A5\u53D7\u5207\u7247</h3><p>\u4F7F\u7528 <code>multiparty</code> \u5305\u5904\u7406\u524D\u7AEF\u4F20\u6765\u7684 FormData</p><p>\u5728 multiparty.parse \u7684\u56DE\u8C03\u4E2D\uFF0Cfiles \u53C2\u6570\u4FDD\u5B58\u4E86 FormData \u4E2D\u6587\u4EF6\uFF0Cfields \u53C2\u6570\u4FDD\u5B58\u4E86 FormData \u4E2D\u975E\u6587\u4EF6\u7684\u5B57\u6BB5</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> http <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;http&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;path&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> fse <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;fs-extra&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> multiparty <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;multiparty&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> server <span class="token operator">=</span> http<span class="token punctuation">.</span><span class="token function">createServer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token operator">+</span> <span class="token keyword">const</span> <span class="token constant">UPLOAD_DIR</span> <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&quot;..&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;target&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u5927\u6587\u4EF6\u5B58\u50A8\u76EE\u5F55</span>

server<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;request&quot;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  res<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">&quot;Access-Control-Allow-Origin&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;*&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  res<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">&quot;Access-Control-Allow-Headers&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;*&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>req<span class="token punctuation">.</span>method <span class="token operator">===</span> <span class="token string">&quot;OPTIONS&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    res<span class="token punctuation">.</span>status <span class="token operator">=</span> <span class="token number">200</span><span class="token punctuation">;</span>
    res<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

<span class="token operator">+</span>  <span class="token keyword">const</span> multipart <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">multiparty<span class="token punctuation">.</span>Form</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token operator">+</span>  multipart<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>req<span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> fields<span class="token punctuation">,</span> files</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
<span class="token operator">+</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token operator">+</span>      <span class="token keyword">return</span><span class="token punctuation">;</span>
<span class="token operator">+</span>    <span class="token punctuation">}</span>
<span class="token operator">+</span>    <span class="token keyword">const</span> <span class="token punctuation">[</span>chunk<span class="token punctuation">]</span> <span class="token operator">=</span> files<span class="token punctuation">.</span>chunk<span class="token punctuation">;</span>
<span class="token operator">+</span>    <span class="token keyword">const</span> <span class="token punctuation">[</span>hash<span class="token punctuation">]</span> <span class="token operator">=</span> fields<span class="token punctuation">.</span>hash<span class="token punctuation">;</span>
<span class="token operator">+</span>    <span class="token keyword">const</span> <span class="token punctuation">[</span>filename<span class="token punctuation">]</span> <span class="token operator">=</span> fields<span class="token punctuation">.</span>filename<span class="token punctuation">;</span>
<span class="token operator">+</span>    <span class="token keyword">const</span> chunkDir <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token constant">UPLOAD_DIR</span><span class="token punctuation">,</span> filename<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token operator">+</span>   <span class="token comment">// \u5207\u7247\u76EE\u5F55\u4E0D\u5B58\u5728\uFF0C\u521B\u5EFA\u5207\u7247\u76EE\u5F55</span>
<span class="token operator">+</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>fse<span class="token punctuation">.</span><span class="token function">existsSync</span><span class="token punctuation">(</span>chunkDir<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token operator">+</span>      <span class="token keyword">await</span> fse<span class="token punctuation">.</span><span class="token function">mkdirs</span><span class="token punctuation">(</span>chunkDir<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token operator">+</span>    <span class="token punctuation">}</span>

<span class="token operator">+</span>      <span class="token comment">// fs-extra \u4E13\u7528\u65B9\u6CD5\uFF0C\u7C7B\u4F3C fs.rename \u5E76\u4E14\u8DE8\u5E73\u53F0</span>
<span class="token operator">+</span>      <span class="token comment">// fs-extra \u7684 rename \u65B9\u6CD5 windows \u5E73\u53F0\u4F1A\u6709\u6743\u9650\u95EE\u9898</span>
<span class="token operator">+</span>      <span class="token comment">// https://github.com/meteor/meteor/issues/7852#issuecomment-255767835</span>
<span class="token operator">+</span>      <span class="token keyword">await</span> fse<span class="token punctuation">.</span><span class="token function">move</span><span class="token punctuation">(</span>chunk<span class="token punctuation">.</span>path<span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>chunkDir<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>hash<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token operator">+</span>    res<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token string">&quot;received file chunk&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token operator">+</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

server<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">3000</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;\u6B63\u5728\u76D1\u542C 3000 \u7AEF\u53E3&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br></div></div>`,21),d=["src"],h=n("p",null,"\u67E5\u770B multiparty \u5904\u7406\u540E\u7684 chunk \u5BF9\u8C61\uFF0Cpath \u662F\u5B58\u50A8\u4E34\u65F6\u6587\u4EF6\u7684\u8DEF\u5F84\uFF0Csize \u662F\u4E34\u65F6\u6587\u4EF6\u5927\u5C0F\uFF0C\u5728 multiparty \u6587\u6863\u4E2D\u63D0\u5230\u53EF\u4EE5\u4F7F\u7528 fs.rename(\u7531\u4E8E\u6211\u7528\u7684\u662F fs-extra\uFF0C\u5B83\u7684 rename \u65B9\u6CD5 windows \u5E73\u53F0\u6743\u9650\u95EE\u9898\uFF0C\u6240\u4EE5\u6362\u6210\u4E86 fse.move) \u79FB\u52A8\u4E34\u65F6\u6587\u4EF6\uFF0C\u5373\u79FB\u52A8\u6587\u4EF6\u5207\u7247",-1),f=n("p",null,"\u5728\u63A5\u53D7\u6587\u4EF6\u5207\u7247\u65F6\uFF0C\u9700\u8981\u5148\u521B\u5EFA\u5B58\u50A8\u5207\u7247\u7684\u6587\u4EF6\u5939\uFF0C\u7531\u4E8E\u524D\u7AEF\u5728\u53D1\u9001\u6BCF\u4E2A\u5207\u7247\u65F6\u989D\u5916\u643A\u5E26\u4E86\u552F\u4E00\u503C hash\uFF0C\u6240\u4EE5\u4EE5 hash \u4F5C\u4E3A\u6587\u4EF6\u540D\uFF0C\u5C06\u5207\u7247\u4ECE\u4E34\u65F6\u8DEF\u5F84\u79FB\u52A8\u5207\u7247\u6587\u4EF6\u5939\u4E2D\uFF0C\u6700\u540E\u7684\u7ED3\u679C\u5982\u4E0B",-1),g=["src"],y=p(`<h3 id="\u5408\u5E76\u5207\u7247" tabindex="-1"><a class="header-anchor" href="#\u5408\u5E76\u5207\u7247" aria-hidden="true">#</a> \u5408\u5E76\u5207\u7247</h3><p>\u5728\u63A5\u6536\u5230\u524D\u7AEF\u53D1\u9001\u7684\u5408\u5E76\u8BF7\u6C42\u540E\uFF0C\u670D\u52A1\u7AEF\u5C06\u6587\u4EF6\u5939\u4E0B\u7684\u6240\u6709\u5207\u7247\u8FDB\u884C\u5408\u5E76</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> http <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;http&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;path&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> fse <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;fs-extra&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> server <span class="token operator">=</span> http<span class="token punctuation">.</span><span class="token function">createServer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token constant">UPLOAD_DIR</span> <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&quot;..&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;target&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u5927\u6587\u4EF6\u5B58\u50A8\u76EE\u5F55</span>

<span class="token operator">+</span> <span class="token keyword">const</span> <span class="token function-variable function">resolvePost</span> <span class="token operator">=</span> <span class="token parameter">req</span> <span class="token operator">=&gt;</span>
<span class="token operator">+</span>   <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token parameter">resolve</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
<span class="token operator">+</span>     <span class="token keyword">let</span> chunk <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
<span class="token operator">+</span>     req<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;data&quot;</span><span class="token punctuation">,</span> <span class="token parameter">data</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
<span class="token operator">+</span>       chunk <span class="token operator">+=</span> data<span class="token punctuation">;</span>
<span class="token operator">+</span>     <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token operator">+</span>     req<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;end&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
<span class="token operator">+</span>       <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>chunk<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token operator">+</span>     <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token operator">+</span>   <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token operator">+</span> <span class="token keyword">const</span> <span class="token function-variable function">pipeStream</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">path<span class="token punctuation">,</span> writeStream</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
<span class="token operator">+</span>  <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token parameter">resolve</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
<span class="token operator">+</span>    <span class="token keyword">const</span> readStream <span class="token operator">=</span> fse<span class="token punctuation">.</span><span class="token function">createReadStream</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token operator">+</span>    readStream<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;end&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
<span class="token operator">+</span>      fse<span class="token punctuation">.</span><span class="token function">unlinkSync</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token operator">+</span>      <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token operator">+</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token operator">+</span>    readStream<span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>writeStream<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token operator">+</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u5408\u5E76\u5207\u7247</span>
<span class="token operator">+</span> <span class="token keyword">const</span> <span class="token function-variable function">mergeFileChunk</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">filePath<span class="token punctuation">,</span> filename<span class="token punctuation">,</span> size</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
<span class="token operator">+</span>  <span class="token keyword">const</span> chunkDir <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token constant">UPLOAD_DIR</span><span class="token punctuation">,</span> filename<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token operator">+</span>  <span class="token keyword">const</span> chunkPaths <span class="token operator">=</span> <span class="token keyword">await</span> fse<span class="token punctuation">.</span><span class="token function">readdir</span><span class="token punctuation">(</span>chunkDir<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token operator">+</span>  <span class="token comment">// \u6839\u636E\u5207\u7247\u4E0B\u6807\u8FDB\u884C\u6392\u5E8F</span>
<span class="token operator">+</span>  <span class="token comment">// \u5426\u5219\u76F4\u63A5\u8BFB\u53D6\u76EE\u5F55\u7684\u83B7\u5F97\u7684\u987A\u5E8F\u53EF\u80FD\u4F1A\u9519\u4E71</span>
<span class="token operator">+</span>  chunkPaths<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> a<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;-&quot;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">-</span> b<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;-&quot;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token operator">+</span>  <span class="token keyword">await</span> Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span>
<span class="token operator">+</span>    chunkPaths<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">chunkPath<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
<span class="token operator">+</span>      <span class="token function">pipeStream</span><span class="token punctuation">(</span>
<span class="token operator">+</span>        path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>chunkDir<span class="token punctuation">,</span> chunkPath<span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token operator">+</span>        <span class="token comment">// \u6307\u5B9A\u4F4D\u7F6E\u521B\u5EFA\u53EF\u5199\u6D41</span>
<span class="token operator">+</span>        fse<span class="token punctuation">.</span><span class="token function">createWriteStream</span><span class="token punctuation">(</span>filePath<span class="token punctuation">,</span> <span class="token punctuation">{</span>
<span class="token operator">+</span>          start<span class="token operator">:</span> index <span class="token operator">*</span> size<span class="token punctuation">,</span>
<span class="token operator">+</span>          end<span class="token operator">:</span> <span class="token punctuation">(</span>index <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> size
<span class="token operator">+</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token operator">+</span>      <span class="token punctuation">)</span>
<span class="token operator">+</span>    <span class="token punctuation">)</span>
<span class="token operator">+</span>  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token operator">+</span>  fse<span class="token punctuation">.</span><span class="token function">rmdirSync</span><span class="token punctuation">(</span>chunkDir<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u5408\u5E76\u540E\u5220\u9664\u4FDD\u5B58\u5207\u7247\u7684\u76EE\u5F55</span>
<span class="token operator">+</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

server<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;request&quot;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  res<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">&quot;Access-Control-Allow-Origin&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;*&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  res<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">&quot;Access-Control-Allow-Headers&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;*&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>req<span class="token punctuation">.</span>method <span class="token operator">===</span> <span class="token string">&quot;OPTIONS&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    res<span class="token punctuation">.</span>status <span class="token operator">=</span> <span class="token number">200</span><span class="token punctuation">;</span>
    res<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

<span class="token operator">+</span>   <span class="token keyword">if</span> <span class="token punctuation">(</span>req<span class="token punctuation">.</span>url <span class="token operator">===</span> <span class="token string">&quot;/merge&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token operator">+</span>     <span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">resolvePost</span><span class="token punctuation">(</span>req<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token operator">+</span>     <span class="token keyword">const</span> <span class="token punctuation">{</span> filename<span class="token punctuation">,</span>size <span class="token punctuation">}</span> <span class="token operator">=</span> data<span class="token punctuation">;</span>
<span class="token operator">+</span>     <span class="token keyword">const</span> filePath <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token constant">UPLOAD_DIR</span><span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>filename<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token operator">+</span>     <span class="token keyword">await</span> <span class="token function">mergeFileChunk</span><span class="token punctuation">(</span>filePath<span class="token punctuation">,</span> filename<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token operator">+</span>     res<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span>
<span class="token operator">+</span>       <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
<span class="token operator">+</span>         code<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
<span class="token operator">+</span>         message<span class="token operator">:</span> <span class="token string">&quot;file merged success&quot;</span>
<span class="token operator">+</span>       <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token operator">+</span>     <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token operator">+</span>   <span class="token punctuation">}</span>

<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

server<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">3000</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;\u6B63\u5728\u76D1\u542C 3000 \u7AEF\u53E3&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br></div></div><p>\u7531\u4E8E\u524D\u7AEF\u5728\u53D1\u9001\u5408\u5E76\u8BF7\u6C42\u65F6\u4F1A\u643A\u5E26\u6587\u4EF6\u540D\uFF0C\u670D\u52A1\u7AEF\u6839\u636E\u6587\u4EF6\u540D\u53EF\u4EE5\u627E\u5230\u4E0A\u4E00\u6B65\u521B\u5EFA\u7684\u5207\u7247\u6587\u4EF6\u5939</p><p>\u63A5\u7740\u4F7F\u7528 <code>fs.createWriteStream</code> \u521B\u5EFA\u4E00\u4E2A\u53EF\u5199\u6D41\uFF0C\u53EF\u5199\u6D41\u6587\u4EF6\u540D\u5C31\u662F<strong>\u5207\u7247\u6587\u4EF6\u5939\u540D + \u540E\u7F00</strong>\u540D\u7EC4\u5408\u800C\u6210</p><p>\u968F\u540E\u904D\u5386\u6574\u4E2A\u5207\u7247\u6587\u4EF6\u5939\uFF0C\u5C06\u5207\u7247\u901A\u8FC7 <code>fs.createReadStream</code> \u521B\u5EFA\u53EF\u8BFB\u6D41\uFF0C\u4F20\u8F93\u5408\u5E76\u5230\u76EE\u6807\u6587\u4EF6\u4E2D</p><p>\u503C\u5F97\u6CE8\u610F\u7684\u662F\u6BCF\u6B21\u53EF\u8BFB\u6D41\u90FD\u4F1A\u4F20\u8F93\u5230\u53EF\u5199\u6D41\u7684\u6307\u5B9A\u4F4D\u7F6E\uFF0C\u8FD9\u662F\u901A\u8FC7 <code>createWriteStream</code> \u7684\u7B2C\u4E8C\u4E2A\u53C2\u6570 <code>start/end</code> \u63A7\u5236\u7684\uFF0C\u76EE\u7684\u662F\u80FD\u591F\u5E76\u53D1\u5408\u5E76\u591A\u4E2A\u53EF\u8BFB\u6D41\u5230\u53EF\u5199\u6D41\u4E2D\uFF0C\u8FD9\u6837\u5373\u4F7F\u6D41\u7684\u987A\u5E8F\u4E0D\u540C\u4E5F\u80FD\u4F20\u8F93\u5230\u6B63\u786E\u7684\u4F4D\u7F6E\uFF0C\u6240\u4EE5\u8FD9\u91CC\u8FD8\u9700\u8981\u8BA9\u524D\u7AEF\u5728\u8BF7\u6C42\u7684\u65F6\u5019\u591A\u63D0\u4F9B\u4E00\u4E2A <code>size</code> \u53C2\u6570</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>   <span class="token keyword">async</span> <span class="token function">mergeRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">request</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">&quot;http://localhost:3000/merge&quot;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">headers</span><span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token string-property property">&quot;content-type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;application/json&quot;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
<span class="token operator">+</span>         size<span class="token operator">:</span> <span class="token constant">SIZE</span><span class="token punctuation">,</span>
          <span class="token literal-property property">filename</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>container<span class="token punctuation">.</span>file<span class="token punctuation">.</span>name
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div>`,8),w=["src"],q=n("p",null,"\u5176\u5B9E\u4E5F\u53EF\u4EE5\u7B49\u4E0A\u4E00\u4E2A\u5207\u7247\u5408\u5E76\u5B8C\u540E\u518D\u5408\u5E76\u4E0B\u4E2A\u5207\u7247\uFF0C\u8FD9\u6837\u5C31\u4E0D\u9700\u8981\u6307\u5B9A\u4F4D\u7F6E\uFF0C\u4F46\u4F20\u8F93\u901F\u5EA6\u4F1A\u964D\u4F4E\uFF0C\u6240\u4EE5\u4F7F\u7528\u4E86\u5E76\u53D1\u5408\u5E76\u7684\u624B\u6BB5\uFF0C\u63A5\u7740\u53EA\u8981\u4FDD\u8BC1\u6BCF\u6B21\u5408\u5E76\u5B8C\u6210\u540E\u5220\u9664\u8FD9\u4E2A\u5207\u7247\uFF0C\u7B49\u6240\u6709\u5207\u7247\u90FD\u5408\u5E76\u5B8C\u6BD5\u540E\u6700\u540E\u5220\u9664\u5207\u7247\u6587\u4EF6\u5939\u5373\u53EF",-1),v=["src"],x=p(`<p>\u81F3\u6B64\u4E00\u4E2A\u7B80\u5355\u7684\u5927\u6587\u4EF6\u4E0A\u4F20\u5C31\u5B8C\u6210\u4E86\uFF0C\u63A5\u4E0B\u6765\u6211\u4EEC\u518D\u6B64\u57FA\u7840\u4E0A\u6269\u5C55\u4E00\u4E9B\u989D\u5916\u7684\u529F\u80FD</p><h2 id="\u663E\u793A\u4E0A\u4F20\u8FDB\u5EA6\u6761" tabindex="-1"><a class="header-anchor" href="#\u663E\u793A\u4E0A\u4F20\u8FDB\u5EA6\u6761" aria-hidden="true">#</a> \u663E\u793A\u4E0A\u4F20\u8FDB\u5EA6\u6761</h2><p>\u4E0A\u4F20\u8FDB\u5EA6\u5206\u4E24\u79CD\uFF0C\u4E00\u4E2A\u662F\u6BCF\u4E2A\u5207\u7247\u7684\u4E0A\u4F20\u8FDB\u5EA6\uFF0C\u53E6\u4E00\u4E2A\u662F\u6574\u4E2A\u6587\u4EF6\u7684\u4E0A\u4F20\u8FDB\u5EA6\uFF0C\u800C\u6574\u4E2A\u6587\u4EF6\u7684\u4E0A\u4F20\u8FDB\u5EA6\u662F\u57FA\u4E8E\u6BCF\u4E2A\u5207\u7247\u4E0A\u4F20\u8FDB\u5EA6\u8BA1\u7B97\u800C\u6765\uFF0C\u6240\u4EE5\u6211\u4EEC\u5148\u5B9E\u73B0\u5207\u7247\u7684\u4E0A\u4F20\u8FDB\u5EA6</p><h3 id="\u5207\u7247\u8FDB\u5EA6\u6761" tabindex="-1"><a class="header-anchor" href="#\u5207\u7247\u8FDB\u5EA6\u6761" aria-hidden="true">#</a> \u5207\u7247\u8FDB\u5EA6\u6761</h3><p><code>XMLHttpRequest</code> \u539F\u751F\u652F\u6301\u4E0A\u4F20\u8FDB\u5EA6\u7684\u76D1\u542C\uFF0C\u53EA\u9700\u8981\u76D1\u542C <code>upload.onprogress</code> \u5373\u53EF\uFF0C\u6211\u4EEC\u5728\u539F\u6765\u7684 <code>request</code> \u57FA\u7840\u4E0A\u4F20\u5165 <code>onProgress</code> \u53C2\u6570\uFF0C\u7ED9 <code>XMLHttpRequest</code> \u6CE8\u518C\u76D1\u542C\u4E8B\u4EF6</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code> <span class="token comment">// xhr</span>
    <span class="token function">request</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      url<span class="token punctuation">,</span>
      method <span class="token operator">=</span> <span class="token string">&quot;post&quot;</span><span class="token punctuation">,</span>
      data<span class="token punctuation">,</span>
      headers <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token operator">+</span>      <span class="token function-variable function">onProgress</span> <span class="token operator">=</span> <span class="token parameter">e</span> <span class="token operator">=&gt;</span> e<span class="token punctuation">,</span>
      requestList
    <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token parameter">resolve</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> xhr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XMLHttpRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token operator">+</span>       xhr<span class="token punctuation">.</span>upload<span class="token punctuation">.</span>onprogress <span class="token operator">=</span> onProgress<span class="token punctuation">;</span>
        xhr<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span>method<span class="token punctuation">,</span> url<span class="token punctuation">)</span><span class="token punctuation">;</span>
        Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>headers<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">key</span> <span class="token operator">=&gt;</span>
          xhr<span class="token punctuation">.</span><span class="token function">setRequestHeader</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> headers<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
        xhr<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
        xhr<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token parameter">e</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
            <span class="token literal-property property">data</span><span class="token operator">:</span> e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>response
          <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><p>\u7531\u4E8E\u6BCF\u4E2A\u5207\u7247\u90FD\u9700\u8981\u89E6\u53D1\u72EC\u7ACB\u7684\u76D1\u542C\u4E8B\u4EF6\uFF0C\u6240\u4EE5\u8FD8\u9700\u8981\u4E00\u4E2A\u5DE5\u5382\u51FD\u6570\uFF0C\u6839\u636E\u4F20\u5165\u7684\u5207\u7247\u8FD4\u56DE\u4E0D\u540C\u7684\u76D1\u542C\u51FD\u6570</p><p>\u5728\u539F\u5148\u7684\u524D\u7AEF\u4E0A\u4F20\u903B\u8F91\u4E2D\u65B0\u589E\u76D1\u542C\u51FD\u6570\u90E8\u5206</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>    <span class="token comment">// \u4E0A\u4F20\u5207\u7247\uFF0C\u540C\u65F6\u8FC7\u6EE4\u5DF2\u4E0A\u4F20\u7684\u5207\u7247</span>
    <span class="token keyword">async</span> <span class="token function">uploadChunks</span><span class="token punctuation">(</span><span class="token parameter">uploadedList <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> requestList <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>data
<span class="token operator">+</span>       <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> chunk<span class="token punctuation">,</span>hash<span class="token punctuation">,</span>index <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token keyword">const</span> formData <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FormData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          formData<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;chunk&quot;</span><span class="token punctuation">,</span> chunk<span class="token punctuation">)</span><span class="token punctuation">;</span>
          formData<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;hash&quot;</span><span class="token punctuation">,</span> hash<span class="token punctuation">)</span><span class="token punctuation">;</span>
          formData<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;filename&quot;</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>container<span class="token punctuation">.</span>file<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token operator">+</span>         <span class="token keyword">return</span> <span class="token punctuation">{</span> formData<span class="token punctuation">,</span>index <span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token operator">+</span>       <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> formData<span class="token punctuation">,</span>index <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
          <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">request</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
            <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">&quot;http://localhost:3000&quot;</span><span class="token punctuation">,</span>
            <span class="token literal-property property">data</span><span class="token operator">:</span> formData\uFF0C
<span class="token operator">+</span>           onProgress<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">createProgressHandler</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
          <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">await</span> Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span>requestList<span class="token punctuation">)</span><span class="token punctuation">;</span>
       <span class="token comment">// \u5408\u5E76\u5207\u7247</span>
      <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">mergeRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token keyword">async</span> <span class="token function">handleUpload</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>container<span class="token punctuation">.</span>file<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>
      <span class="token keyword">const</span> fileChunkList <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">createFileChunk</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>container<span class="token punctuation">.</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>data <span class="token operator">=</span> fileChunkList<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> file <span class="token punctuation">}</span>\uFF0Cindex</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">chunk</span><span class="token operator">:</span> file<span class="token punctuation">,</span>
<span class="token operator">+</span>       index<span class="token punctuation">,</span>
        <span class="token literal-property property">hash</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>container<span class="token punctuation">.</span>file<span class="token punctuation">.</span>name <span class="token operator">+</span> <span class="token string">&quot;-&quot;</span> <span class="token operator">+</span> index
<span class="token operator">+</span>       percentage<span class="token operator">:</span><span class="token number">0</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">uploadChunks</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>    
<span class="token operator">+</span>   <span class="token function">createProgressHandler</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token operator">+</span>      <span class="token keyword">return</span> <span class="token parameter">e</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
<span class="token operator">+</span>        item<span class="token punctuation">.</span>percentage <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>loaded <span class="token operator">/</span> e<span class="token punctuation">.</span>total<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token operator">+</span>      <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token operator">+</span>    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br></div></div><p>\u6BCF\u4E2A\u5207\u7247\u5728\u4E0A\u4F20\u65F6\u90FD\u4F1A\u901A\u8FC7\u76D1\u542C\u51FD\u6570\u66F4\u65B0 <code>data</code> \u6570\u7EC4\u5BF9\u5E94\u5143\u7D20\u7684 <code>percentage</code> \u5C5E\u6027\uFF0C\u4E4B\u540E\u628A\u5C06 <code>data</code> \u6570\u7EC4\u653E\u5230\u89C6\u56FE\u4E2D\u5C55\u793A\u5373\u53EF</p><h3 id="\u6587\u4EF6\u8FDB\u5EA6\u6761" tabindex="-1"><a class="header-anchor" href="#\u6587\u4EF6\u8FDB\u5EA6\u6761" aria-hidden="true">#</a> \u6587\u4EF6\u8FDB\u5EA6\u6761</h3><p>\u5C06\u6BCF\u4E2A\u5207\u7247\u5DF2\u4E0A\u4F20\u7684\u90E8\u5206\u7D2F\u52A0\uFF0C\u9664\u4EE5\u6574\u4E2A\u6587\u4EF6\u7684\u5927\u5C0F\uFF0C\u5C31\u80FD\u5F97\u51FA\u5F53\u524D\u6587\u4EF6\u7684\u4E0A\u4F20\u8FDB\u5EA6\uFF0C\u6240\u4EE5\u8FD9\u91CC\u4F7F\u7528 <code>Vue</code> \u8BA1\u7B97\u5C5E\u6027</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token literal-property property">computed</span><span class="token operator">:</span> <span class="token punctuation">{</span>
       <span class="token function">uploadPercentage</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>container<span class="token punctuation">.</span>file <span class="token operator">||</span> <span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
          <span class="token keyword">const</span> loaded <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>data
            <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> item<span class="token punctuation">.</span>size <span class="token operator">*</span> item<span class="token punctuation">.</span>percentage<span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">acc<span class="token punctuation">,</span> cur</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> acc <span class="token operator">+</span> cur<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token keyword">return</span> <span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token punctuation">(</span>loaded <span class="token operator">/</span> <span class="token keyword">this</span><span class="token punctuation">.</span>container<span class="token punctuation">.</span>file<span class="token punctuation">.</span>size<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
 <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>\u6700\u7EC8\u89C6\u56FE\u5982\u4E0B</p>`,14),_=["src"],L=p(`<h2 id="\u65AD\u70B9\u7EED\u4F20" tabindex="-1"><a class="header-anchor" href="#\u65AD\u70B9\u7EED\u4F20" aria-hidden="true">#</a> \u65AD\u70B9\u7EED\u4F20</h2><p>\u65AD\u70B9\u7EED\u4F20\u7684\u539F\u7406\u5728\u4E8E\u524D\u7AEF/\u670D\u52A1\u7AEF\u9700\u8981<code>\u8BB0\u4F4F</code>\u5DF2\u4E0A\u4F20\u7684\u5207\u7247\uFF0C\u8FD9\u6837\u4E0B\u6B21\u4E0A\u4F20\u5C31\u53EF\u4EE5\u8DF3\u8FC7\u4E4B\u524D\u5DF2\u4E0A\u4F20\u7684\u90E8\u5206\uFF0C\u6709\u4E24\u79CD\u65B9\u6848\u5B9E\u73B0\u8BB0\u5FC6\u7684\u529F\u80FD</p><ul><li><p>\u524D\u7AEF\u4F7F\u7528 <code>localStorage</code> \u8BB0\u5F55\u5DF2\u4E0A\u4F20\u7684\u5207\u7247 <code>hash</code></p></li><li><p>\u670D\u52A1\u7AEF\u4FDD\u5B58\u5DF2\u4E0A\u4F20\u7684\u5207\u7247 <code>hash</code>\uFF0C\u524D\u7AEF\u6BCF\u6B21\u4E0A\u4F20\u524D\u5411\u670D\u52A1\u7AEF\u83B7\u53D6\u5DF2\u4E0A\u4F20\u7684\u5207\u7247</p></li></ul><p>\u7B2C\u4E00\u79CD\u662F\u524D\u7AEF\u7684\u89E3\u51B3\u65B9\u6848\uFF0C\u7B2C\u4E8C\u79CD\u662F\u670D\u52A1\u7AEF\uFF0C\u800C\u524D\u7AEF\u65B9\u6848\u6709\u4E00\u4E2A\u7F3A\u9677\uFF0C\u5982\u679C\u6362\u4E86\u4E2A\u6D4F\u89C8\u5668\u5C31\u5931\u53BB\u4E86\u8BB0\u5FC6\u7684\u6548\u679C\uFF0C\u6240\u4EE5\u8FD9\u91CC\u9009\u53D6\u540E\u8005</p><h2 id="\u751F\u6210-hash" tabindex="-1"><a class="header-anchor" href="#\u751F\u6210-hash" aria-hidden="true">#</a> \u751F\u6210 hash</h2><p>\u65E0\u8BBA\u662F\u524D\u7AEF\u8FD8\u662F\u670D\u52A1\u7AEF\uFF0C\u90FD\u5FC5\u987B\u8981\u751F\u6210\u6587\u4EF6\u548C\u5207\u7247\u7684 hash\uFF0C<code>\u4E4B\u524D\u6211\u4EEC\u4F7F\u7528\u6587\u4EF6\u540D + \u5207\u7247\u4E0B\u6807\u4F5C\u4E3A\u5207\u7247 hash</code>\uFF0C\u8FD9\u6837\u505A\u6587\u4EF6\u540D\u4E00\u65E6\u4FEE\u6539\u5C31\u5931\u53BB\u4E86\u6548\u679C\uFF0C\u800C\u4E8B\u5B9E\u4E0A\u53EA\u8981\u6587\u4EF6\u5185\u5BB9\u4E0D\u53D8\uFF0Chash \u5C31\u4E0D\u5E94\u8BE5\u53D8\u5316\uFF0C\u6240\u4EE5\u6B63\u786E\u7684\u505A\u6CD5\u662F<code>\u6839\u636E\u6587\u4EF6\u5185\u5BB9\u751F\u6210 hash</code>\uFF0C\u6240\u4EE5\u6211\u4EEC\u4FEE\u6539\u4E00\u4E0B hash \u7684\u751F\u6210\u89C4\u5219</p><p>\u8FD9\u91CC\u7528\u5230\u53E6\u4E00\u4E2A\u5E93 <code>spark-md5</code>\uFF0C\u5B83\u53EF\u4EE5\u6839\u636E\u6587\u4EF6\u5185\u5BB9\u8BA1\u7B97\u51FA\u6587\u4EF6\u7684 <code>hash</code> \u503C\uFF0C\u53E6\u5916\u8003\u8651\u5230\u5982\u679C\u4E0A\u4F20\u4E00\u4E2A\u8D85\u5927\u6587\u4EF6\uFF0C\u8BFB\u53D6\u6587\u4EF6\u5185\u5BB9\u8BA1\u7B97 <code>hash</code> \u662F\u975E\u5E38\u8017\u8D39\u65F6\u95F4\u7684\uFF0C\u5E76\u4E14\u4F1A<code>\u5F15\u8D77 UI \u7684\u963B\u585E</code>\uFF0C\u5BFC\u81F4\u9875\u9762\u5047\u6B7B\u72B6\u6001\uFF0C\u6240\u4EE5\u6211\u4EEC\u4F7F\u7528 <code>web-worker</code> \u5728 <code>worker</code> \u7EBF\u7A0B\u8BA1\u7B97 <code>hash</code>\uFF0C\u8FD9\u6837\u7528\u6237\u4ECD\u53EF\u4EE5\u5728\u4E3B\u754C\u9762\u6B63\u5E38\u7684\u4EA4\u4E92</p><p>\u7531\u4E8E\u5B9E\u4F8B\u5316 <code>web-worker</code> \u65F6\uFF0C\u53C2\u6570\u662F\u4E00\u4E2A <code>js</code> \u6587\u4EF6\u8DEF\u5F84\u4E14\u4E0D\u80FD\u8DE8\u57DF\uFF0C\u6240\u4EE5\u6211\u4EEC\u5355\u72EC\u521B\u5EFA\u4E00\u4E2A <code>hash.js</code> \u6587\u4EF6\u653E\u5728 <code>public</code> \u76EE\u5F55\u4E0B\uFF0C\u53E6\u5916\u5728 <code>worker</code> \u4E2D\u4E5F\u662F\u4E0D\u5141\u8BB8\u8BBF\u95EE <code>dom</code> \u7684\uFF0C\u4F46\u5B83\u63D0\u4F9B\u4E86<code>importScripts</code> \u51FD\u6570\u7528\u4E8E\u5BFC\u5165\u5916\u90E8\u811A\u672C\uFF0C\u901A\u8FC7\u5B83\u5BFC\u5165 <code>spark-md5</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// /public/hash.js</span>
self<span class="token punctuation">.</span><span class="token function">importScripts</span><span class="token punctuation">(</span><span class="token string">&quot;/spark-md5.min.js&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u5BFC\u5165\u811A\u672C</span>

<span class="token comment">// \u751F\u6210\u6587\u4EF6 hash</span>
self<span class="token punctuation">.</span><span class="token function-variable function">onmessage</span> <span class="token operator">=</span> <span class="token parameter">e</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> fileChunkList <span class="token punctuation">}</span> <span class="token operator">=</span> e<span class="token punctuation">.</span>data<span class="token punctuation">;</span>
  <span class="token keyword">const</span> spark <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">self<span class="token punctuation">.</span>SparkMD5<span class="token punctuation">.</span>ArrayBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> percentage <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token function-variable function">loadNext</span> <span class="token operator">=</span> <span class="token parameter">index</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> reader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    reader<span class="token punctuation">.</span><span class="token function">readAsArrayBuffer</span><span class="token punctuation">(</span>fileChunkList<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">.</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>
    reader<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token parameter">e</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      count<span class="token operator">++</span><span class="token punctuation">;</span>
      spark<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>count <span class="token operator">===</span> fileChunkList<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        self<span class="token punctuation">.</span><span class="token function">postMessage</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
          <span class="token literal-property property">percentage</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>
          <span class="token literal-property property">hash</span><span class="token operator">:</span> spark<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        self<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        percentage <span class="token operator">+=</span> <span class="token number">100</span> <span class="token operator">/</span> fileChunkList<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
        self<span class="token punctuation">.</span><span class="token function">postMessage</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
          percentage
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u9012\u5F52\u8BA1\u7B97\u4E0B\u4E00\u4E2A\u5207\u7247</span>
        <span class="token function">loadNext</span><span class="token punctuation">(</span>count<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token function">loadNext</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br></div></div><p>\u5728 <code>worker</code> \u7EBF\u7A0B\u4E2D\uFF0C\u63A5\u53D7\u6587\u4EF6\u5207\u7247 <code>fileChunkList</code>\uFF0C\u5229\u7528 <code>FileReader</code> \u8BFB\u53D6\u6BCF\u4E2A\u5207\u7247\u7684 <code>ArrayBuffer</code> \u5E76\u4E0D\u65AD\u4F20\u5165 <code>spark-md5</code> \u4E2D\uFF0C\u6BCF\u8BA1\u7B97\u5B8C\u4E00\u4E2A\u5207\u7247\u901A\u8FC7 <code>postMessage</code> \u5411\u4E3B\u7EBF\u7A0B\u53D1\u9001\u4E00\u4E2A\u8FDB\u5EA6\u4E8B\u4EF6\uFF0C\u5168\u90E8\u5B8C\u6210\u540E\u5C06\u6700\u7EC8\u7684 <code>hash</code> \u53D1\u9001\u7ED9\u4E3B\u7EBF\u7A0B</p><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>spark-md5 \u9700\u8981\u6839\u636E\u6240\u6709\u5207\u7247\u624D\u80FD\u7B97\u51FA\u4E00\u4E2A hash \u503C\uFF0C\u4E0D\u80FD\u76F4\u63A5\u5C06\u6574\u4E2A\u6587\u4EF6\u653E\u5165\u8BA1\u7B97\uFF0C\u5426\u5219\u5373\u4F7F\u4E0D\u540C\u6587\u4EF6\u4E5F\u4F1A\u6709\u76F8\u540C\u7684 hash\uFF0C\u5177\u4F53\u53EF\u4EE5\u770B\u5B98\u65B9\u6587\u6863</p></div>`,11),j={href:"https://link.juejin.cn/?target=https%3A%2F%2Fwww.npmjs.com%2Fpackage%2Fspark-md5",target:"_blank",rel:"noopener noreferrer"},P=a("spark-md5"),D=p(`<p>\u63A5\u7740\u7F16\u5199\u4E3B\u7EBF\u7A0B\u4E0E <code>worker</code> \u7EBF\u7A0B\u901A\u8BAF\u7684\u903B\u8F91</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token operator">+</span>	   <span class="token comment">// \u751F\u6210\u6587\u4EF6 hash\uFF08web-worker\uFF09</span>
<span class="token operator">+</span>    <span class="token function">calculateHash</span><span class="token punctuation">(</span><span class="token parameter">fileChunkList</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token operator">+</span>      <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token parameter">resolve</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
<span class="token operator">+</span>       <span class="token comment">// \u6DFB\u52A0 worker \u5C5E\u6027</span>
<span class="token operator">+</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>container<span class="token punctuation">.</span>worker <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Worker</span><span class="token punctuation">(</span><span class="token string">&quot;/hash.js&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token operator">+</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>container<span class="token punctuation">.</span>worker<span class="token punctuation">.</span><span class="token function">postMessage</span><span class="token punctuation">(</span><span class="token punctuation">{</span> fileChunkList <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token operator">+</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>container<span class="token punctuation">.</span>worker<span class="token punctuation">.</span><span class="token function-variable function">onmessage</span> <span class="token operator">=</span> <span class="token parameter">e</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
<span class="token operator">+</span>          <span class="token keyword">const</span> <span class="token punctuation">{</span> percentage<span class="token punctuation">,</span> hash <span class="token punctuation">}</span> <span class="token operator">=</span> e<span class="token punctuation">.</span>data<span class="token punctuation">;</span>
<span class="token operator">+</span>          <span class="token keyword">this</span><span class="token punctuation">.</span>hashPercentage <span class="token operator">=</span> percentage<span class="token punctuation">;</span>
<span class="token operator">+</span>          <span class="token keyword">if</span> <span class="token punctuation">(</span>hash<span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token operator">+</span>            <span class="token function">resolve</span><span class="token punctuation">(</span>hash<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token operator">+</span>          <span class="token punctuation">}</span>
<span class="token operator">+</span>        <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token operator">+</span>      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token keyword">async</span> <span class="token function">handleUpload</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>container<span class="token punctuation">.</span>file<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>
      <span class="token keyword">const</span> fileChunkList <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">createFileChunk</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>container<span class="token punctuation">.</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token operator">+</span>     <span class="token keyword">this</span><span class="token punctuation">.</span>container<span class="token punctuation">.</span>hash <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">calculateHash</span><span class="token punctuation">(</span>fileChunkList<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>data <span class="token operator">=</span> fileChunkList<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> file <span class="token punctuation">}</span>\uFF0Cindex</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span>
<span class="token operator">+</span>       fileHash<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>container<span class="token punctuation">.</span>hash<span class="token punctuation">,</span>
        <span class="token literal-property property">chunk</span><span class="token operator">:</span> file<span class="token punctuation">,</span>
        <span class="token literal-property property">hash</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>container<span class="token punctuation">.</span>file<span class="token punctuation">.</span>name <span class="token operator">+</span> <span class="token string">&quot;-&quot;</span> <span class="token operator">+</span> index<span class="token punctuation">,</span> <span class="token comment">// \u6587\u4EF6\u540D + \u6570\u7EC4\u4E0B\u6807</span>
        <span class="token literal-property property">percentage</span><span class="token operator">:</span><span class="token number">0</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">uploadChunks</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br></div></div><p>\u4E3B\u7EBF\u7A0B\u4F7F\u7528 <code>postMessage</code> \u7ED9 <code>worker</code> \u7EBF\u7A0B\u4F20\u5165\u6240\u6709\u5207\u7247 <code>fileChunkList</code>\uFF0C\u5E76\u76D1\u542C <code>worker</code> \u7EBF\u7A0B\u53D1\u51FA\u7684 <code>postMessage</code> \u4E8B\u4EF6\u62FF\u5230\u6587\u4EF6 <code>hash</code></p><p>\u52A0\u4E0A\u663E\u793A\u8BA1\u7B97 <code>hash</code> \u7684\u8FDB\u5EA6\u6761\uFF0C\u770B\u8D77\u6765\u50CF\u8FD9\u6837</p>`,4),C=["src"],S=n("p",null,[a("\u81F3\u6B64\u524D\u7AEF\u9700\u8981\u5C06\u4E4B\u524D\u7528\u6587\u4EF6\u540D\u4F5C\u4E3A "),n("code",null,"hash"),a(" \u7684\u5730\u65B9\u6539\u5199\u4E3A "),n("code",null,"workder"),a(" \u8FD4\u56DE\u7684\u8FD9\u4E2A "),n("code",null,"hash")],-1),U=["src"],I=n("p",null,[a("\u670D\u52A1\u7AEF\u5219\u4F7F\u7528 "),n("code",null,"hash"),a(" \u4F5C\u4E3A\u5207\u7247\u6587\u4EF6\u5939\u540D\uFF0C"),n("code",null,"hash + \u4E0B\u6807\u4F5C\u4E3A\u5207\u7247\u540D"),a("\uFF0C"),n("code",null,"hash + \u6269\u5C55\u540D\u4F5C\u4E3A\u6587\u4EF6\u540D"),a("\uFF0C\u6CA1\u6709\u65B0\u589E\u7684\u903B\u8F91")],-1),H=["src"],F=["src"],O=p(`<h2 id="\u6587\u4EF6\u79D2\u4F20" tabindex="-1"><a class="header-anchor" href="#\u6587\u4EF6\u79D2\u4F20" aria-hidden="true">#</a> \u6587\u4EF6\u79D2\u4F20</h2><p>\u5728\u5B9E\u73B0\u65AD\u70B9\u7EED\u4F20\u524D\u5148\u7B80\u5355\u4ECB\u7ECD\u4E00\u4E0B\u6587\u4EF6\u79D2\u4F20</p><p>\u6240\u8C13\u7684\u6587\u4EF6\u79D2\u4F20\uFF0C\u5373\u5728\u670D\u52A1\u7AEF\u5DF2\u7ECF\u5B58\u5728\u4E86\u4E0A\u4F20\u7684\u8D44\u6E90\uFF0C\u6240\u4EE5\u5F53\u7528\u6237<code>\u518D\u6B21\u4E0A\u4F20</code>\u65F6\u4F1A\u76F4\u63A5\u63D0\u793A\u4E0A\u4F20\u6210\u529F</p><p>\u6587\u4EF6\u79D2\u4F20\u9700\u8981\u4F9D\u8D56\u4E0A\u4E00\u6B65\u751F\u6210\u7684 hash\uFF0C\u5373\u5728<code>\u4E0A\u4F20\u524D</code>\uFF0C\u5148\u8BA1\u7B97\u51FA\u6587\u4EF6 hash\uFF0C\u5E76\u628A hash \u53D1\u9001\u7ED9\u670D\u52A1\u7AEF\u8FDB\u884C\u9A8C\u8BC1\uFF0C\u7531\u4E8E hash \u7684\u552F\u4E00\u6027\uFF0C\u6240\u4EE5\u4E00\u65E6\u670D\u52A1\u7AEF\u80FD\u627E\u5230 hash \u76F8\u540C\u7684\u6587\u4EF6\uFF0C\u5219\u76F4\u63A5\u8FD4\u56DE\u4E0A\u4F20\u6210\u529F\u7684\u4FE1\u606F\u5373\u53EF</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token operator">+</span>    <span class="token keyword">async</span> <span class="token function">verifyUpload</span><span class="token punctuation">(</span><span class="token parameter">filename<span class="token punctuation">,</span> fileHash</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token operator">+</span>       <span class="token keyword">const</span> <span class="token punctuation">{</span> data <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">request</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
<span class="token operator">+</span>         url<span class="token operator">:</span> <span class="token string">&quot;http://localhost:3000/verify&quot;</span><span class="token punctuation">,</span>
<span class="token operator">+</span>         headers<span class="token operator">:</span> <span class="token punctuation">{</span>
<span class="token operator">+</span>           <span class="token string">&quot;content-type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;application/json&quot;</span>
<span class="token operator">+</span>         <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token operator">+</span>         data<span class="token operator">:</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
<span class="token operator">+</span>           filename<span class="token punctuation">,</span>
<span class="token operator">+</span>           fileHash
<span class="token operator">+</span>         <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token operator">+</span>       <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token operator">+</span>       <span class="token keyword">return</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token operator">+</span>     <span class="token punctuation">}</span><span class="token punctuation">,</span>
   <span class="token keyword">async</span> <span class="token function">handleUpload</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>container<span class="token punctuation">.</span>file<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>
      <span class="token keyword">const</span> fileChunkList <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">createFileChunk</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>container<span class="token punctuation">.</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>container<span class="token punctuation">.</span>hash <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">calculateHash</span><span class="token punctuation">(</span>fileChunkList<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token operator">+</span>     <span class="token keyword">const</span> <span class="token punctuation">{</span> shouldUpload <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">verifyUpload</span><span class="token punctuation">(</span>
<span class="token operator">+</span>       <span class="token keyword">this</span><span class="token punctuation">.</span>container<span class="token punctuation">.</span>file<span class="token punctuation">.</span>name<span class="token punctuation">,</span>
<span class="token operator">+</span>       <span class="token keyword">this</span><span class="token punctuation">.</span>container<span class="token punctuation">.</span>hash
<span class="token operator">+</span>     <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token operator">+</span>     <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>shouldUpload<span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token operator">+</span>       <span class="token keyword">this</span><span class="token punctuation">.</span>$message<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token string">&quot;\u79D2\u4F20\uFF1A\u4E0A\u4F20\u6210\u529F&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token operator">+</span>       <span class="token keyword">return</span><span class="token punctuation">;</span>
<span class="token operator">+</span>    <span class="token punctuation">}</span>
     <span class="token keyword">this</span><span class="token punctuation">.</span>data <span class="token operator">=</span> fileChunkList<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> file <span class="token punctuation">}</span><span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">fileHash</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>container<span class="token punctuation">.</span>hash<span class="token punctuation">,</span>
        index<span class="token punctuation">,</span>
        <span class="token literal-property property">hash</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>container<span class="token punctuation">.</span>hash <span class="token operator">+</span> <span class="token string">&quot;-&quot;</span> <span class="token operator">+</span> index<span class="token punctuation">,</span>
        <span class="token literal-property property">chunk</span><span class="token operator">:</span> file<span class="token punctuation">,</span>
        <span class="token literal-property property">percentage</span><span class="token operator">:</span> <span class="token number">0</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">uploadChunks</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br></div></div><p>\u79D2\u4F20\u5176\u5B9E\u5C31\u662F\u7ED9\u7528\u6237\u770B\u7684\u969C\u773C\u6CD5\uFF0C\u5B9E\u8D28\u4E0A\u6839\u672C\u6CA1\u6709\u4E0A\u4F20</p><p>\u670D\u52A1\u7AEF\u7684\u903B\u8F91\u975E\u5E38\u7B80\u5355\uFF0C\u65B0\u589E\u4E00\u4E2A\u9A8C\u8BC1\u63A5\u53E3\uFF0C\u9A8C\u8BC1\u6587\u4EF6\u662F\u5426\u5B58\u5728\u5373\u53EF</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token operator">+</span> <span class="token keyword">const</span> <span class="token function-variable function">extractExt</span> <span class="token operator">=</span> <span class="token parameter">filename</span> <span class="token operator">=&gt;</span>
<span class="token operator">+</span>  filename<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>filename<span class="token punctuation">.</span><span class="token function">lastIndexOf</span><span class="token punctuation">(</span><span class="token string">&quot;.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> filename<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u63D0\u53D6\u540E\u7F00\u540D</span>
<span class="token keyword">const</span> <span class="token constant">UPLOAD_DIR</span> <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&quot;..&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;target&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u5927\u6587\u4EF6\u5B58\u50A8\u76EE\u5F55</span>

<span class="token keyword">const</span> <span class="token function-variable function">resolvePost</span> <span class="token operator">=</span> <span class="token parameter">req</span> <span class="token operator">=&gt;</span>
  <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token parameter">resolve</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> chunk <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
    req<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;data&quot;</span><span class="token punctuation">,</span> <span class="token parameter">data</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      chunk <span class="token operator">+=</span> data<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    req<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;end&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>chunk<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

server<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;request&quot;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>req<span class="token punctuation">.</span>url <span class="token operator">===</span> <span class="token string">&quot;/verify&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token operator">+</span>    <span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">resolvePost</span><span class="token punctuation">(</span>req<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token operator">+</span>    <span class="token keyword">const</span> <span class="token punctuation">{</span> fileHash<span class="token punctuation">,</span> filename <span class="token punctuation">}</span> <span class="token operator">=</span> data<span class="token punctuation">;</span>
<span class="token operator">+</span>    <span class="token keyword">const</span> ext <span class="token operator">=</span> <span class="token function">extractExt</span><span class="token punctuation">(</span>filename<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token operator">+</span>    <span class="token keyword">const</span> filePath <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token constant">UPLOAD_DIR</span><span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>fileHash<span class="token interpolation-punctuation punctuation">}</span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>ext<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token operator">+</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>fse<span class="token punctuation">.</span><span class="token function">existsSync</span><span class="token punctuation">(</span>filePath<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token operator">+</span>      res<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span>
<span class="token operator">+</span>        <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
<span class="token operator">+</span>          shouldUpload<span class="token operator">:</span> <span class="token boolean">false</span>
<span class="token operator">+</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token operator">+</span>      <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token operator">+</span>    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
<span class="token operator">+</span>      res<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span>
<span class="token operator">+</span>        <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
<span class="token operator">+</span>          shouldUpload<span class="token operator">:</span> <span class="token boolean">true</span>
<span class="token operator">+</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token operator">+</span>      <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token operator">+</span>    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
server<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">3000</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;\u6B63\u5728\u76D1\u542C 3000 \u7AEF\u53E3&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br></div></div><h2 id="\u6682\u505C\u4E0A\u4F20" tabindex="-1"><a class="header-anchor" href="#\u6682\u505C\u4E0A\u4F20" aria-hidden="true">#</a> \u6682\u505C\u4E0A\u4F20</h2><p>\u8BB2\u5B8C\u4E86\u751F\u6210 hash \u548C\u6587\u4EF6\u79D2\u4F20\uFF0C\u56DE\u5230\u65AD\u70B9\u7EED\u4F20</p><p>\u65AD\u70B9\u7EED\u4F20\u987E\u540D\u601D\u4E49\u5373\u65AD\u70B9 + \u7EED\u4F20\uFF0C\u6240\u4EE5\u6211\u4EEC\u7B2C\u4E00\u6B65\u5148\u5B9E\u73B0\u201C\u65AD\u70B9\u201D\uFF0C\u4E5F\u5C31\u662F\u6682\u505C\u4E0A\u4F20</p><p>\u539F\u7406\u662F\u4F7F\u7528 <code>XMLHttpRequest</code> \u7684 <code>abort</code> \u65B9\u6CD5\uFF0C\u53EF\u4EE5\u53D6\u6D88\u4E00\u4E2A <code>xhr</code> \u8BF7\u6C42\u7684\u53D1\u9001\uFF0C\u4E3A\u6B64\u6211\u4EEC\u9700\u8981\u5C06\u4E0A\u4F20\u6BCF\u4E2A\u5207\u7247\u7684 <code>xhr</code> \u5BF9\u8C61\u4FDD\u5B58\u8D77\u6765\uFF0C\u6211\u4EEC\u518D\u6539\u9020\u4E00\u4E0B <code>request</code> \u65B9\u6CD5</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>   <span class="token function">request</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      url<span class="token punctuation">,</span>
      method <span class="token operator">=</span> <span class="token string">&quot;post&quot;</span><span class="token punctuation">,</span>
      data<span class="token punctuation">,</span>
      headers <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token function-variable function">onProgress</span> <span class="token operator">=</span> <span class="token parameter">e</span> <span class="token operator">=&gt;</span> e<span class="token punctuation">,</span>
<span class="token operator">+</span>     requestList
    <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token parameter">resolve</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> xhr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XMLHttpRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        xhr<span class="token punctuation">.</span>upload<span class="token punctuation">.</span>onprogress <span class="token operator">=</span> onProgress<span class="token punctuation">;</span>
        xhr<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span>method<span class="token punctuation">,</span> url<span class="token punctuation">)</span><span class="token punctuation">;</span>
        Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>headers<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">key</span> <span class="token operator">=&gt;</span>
          xhr<span class="token punctuation">.</span><span class="token function">setRequestHeader</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> headers<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
        xhr<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
        xhr<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token parameter">e</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
<span class="token operator">+</span>          <span class="token comment">// \u5C06\u8BF7\u6C42\u6210\u529F\u7684 xhr \u4ECE\u5217\u8868\u4E2D\u5220\u9664</span>
<span class="token operator">+</span>          <span class="token keyword">if</span> <span class="token punctuation">(</span>requestList<span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token operator">+</span>            <span class="token keyword">const</span> xhrIndex <span class="token operator">=</span> requestList<span class="token punctuation">.</span><span class="token function">findIndex</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> item <span class="token operator">===</span> xhr<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token operator">+</span>            requestList<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>xhrIndex<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token operator">+</span>          <span class="token punctuation">}</span>
          <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
            <span class="token literal-property property">data</span><span class="token operator">:</span> e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>response
          <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token operator">+</span>        <span class="token comment">// \u66B4\u9732\u5F53\u524D xhr \u7ED9\u5916\u90E8</span>
<span class="token operator">+</span>        requestList<span class="token operator">?.</span><span class="token function">push</span><span class="token punctuation">(</span>xhr<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br></div></div><p>\u8FD9\u6837\u5728\u4E0A\u4F20\u5207\u7247\u65F6\u4F20\u5165 <code>requestList</code> \u6570\u7EC4\u4F5C\u4E3A\u53C2\u6570\uFF0C<code>request</code> \u65B9\u6CD5\u5C31\u4F1A\u5C06\u6240\u6709\u7684 <code>xhr</code> \u4FDD\u5B58\u5728\u6570\u7EC4\u4E2D\u4E86</p>`,14),R=["src"],A=p(`<p>\u6BCF\u5F53\u4E00\u4E2A\u5207\u7247\u4E0A\u4F20\u6210\u529F\u65F6\uFF0C\u5C06\u5BF9\u5E94\u7684 xhr \u4ECE requestList \u4E2D\u5220\u9664\uFF0C\u6240\u4EE5 requestList \u4E2D\u53EA\u4FDD\u5B58<code>\u6B63\u5728\u4E0A\u4F20\u5207\u7247\u7684 xhr</code></p><p>\u4E4B\u540E\u65B0\u5EFA\u4E00\u4E2A\u6682\u505C\u6309\u94AE\uFF0C\u5F53\u70B9\u51FB\u6309\u94AE\u65F6\uFF0C\u8C03\u7528\u4FDD\u5B58\u5728 requestList \u4E2D xhr \u7684 abort \u65B9\u6CD5\uFF0C\u5373\u53D6\u6D88\u5E76\u6E05\u7A7A\u6240\u6709\u6B63\u5728\u4E0A\u4F20\u7684\u5207\u7247</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">handlePause</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>requestList<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">xhr</span> <span class="token operator">=&gt;</span> xhr<span class="token operator">?.</span><span class="token function">abort</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>requestList <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div>`,3),$=["src"],B=n("p",null,[a("\u70B9\u51FB\u6682\u505C\u6309\u94AE\u53EF\u4EE5\u770B\u5230 "),n("code",null,"xhr"),a(" \u90FD\u88AB\u53D6\u6D88\u4E86")],-1),N=["src"],M=p(`<h2 id="\u6062\u590D\u4E0A\u4F20" tabindex="-1"><a class="header-anchor" href="#\u6062\u590D\u4E0A\u4F20" aria-hidden="true">#</a> \u6062\u590D\u4E0A\u4F20</h2><p>\u4E4B\u524D\u5728\u4ECB\u7ECD\u65AD\u70B9\u7EED\u4F20\u7684\u65F6\u63D0\u5230\u4F7F\u7528\u7B2C\u4E8C\u79CD\u670D\u52A1\u7AEF\u5B58\u50A8\u7684\u65B9\u5F0F\u5B9E\u73B0\u7EED\u4F20</p><p>\u7531\u4E8E\u5F53\u6587\u4EF6\u5207\u7247\u4E0A\u4F20\u540E\uFF0C\u670D\u52A1\u7AEF\u4F1A\u5EFA\u7ACB\u4E00\u4E2A\u6587\u4EF6\u5939\u5B58\u50A8\u6240\u6709\u4E0A\u4F20\u7684\u5207\u7247\uFF0C\u6240\u4EE5\u6BCF\u6B21\u524D\u7AEF\u4E0A\u4F20\u524D\u53EF\u4EE5\u8C03\u7528\u4E00\u4E2A\u63A5\u53E3\uFF0C\u670D\u52A1\u7AEF\u5C06\u5DF2\u4E0A\u4F20\u7684\u5207\u7247\u7684\u5207\u7247\u540D\u8FD4\u56DE\uFF0C\u524D\u7AEF\u518D\u8DF3\u8FC7\u8FD9\u4E9B\u5DF2\u7ECF\u4E0A\u4F20\u5207\u7247\uFF0C\u8FD9\u6837\u5C31\u5B9E\u73B0\u4E86\u201C\u7EED\u4F20\u201D\u7684\u6548\u679C</p><p>\u800C\u8FD9\u4E2A\u63A5\u53E3\u53EF\u4EE5\u548C\u4E4B\u524D\u79D2\u4F20\u7684\u9A8C\u8BC1\u63A5\u53E3\u5408\u5E76\uFF0C\u524D\u7AEF\u6BCF\u6B21\u4E0A\u4F20\u524D\u53D1\u9001\u4E00\u4E2A\u9A8C\u8BC1\u7684\u8BF7\u6C42\uFF0C\u8FD4\u56DE\u4E24\u79CD\u7ED3\u679C</p><ul><li><p>\u670D\u52A1\u7AEF\u5DF2\u5B58\u5728\u8BE5\u6587\u4EF6\uFF0C\u4E0D\u9700\u8981\u518D\u6B21\u4E0A\u4F20</p></li><li><p>\u670D\u52A1\u7AEF\u4E0D\u5B58\u5728\u8BE5\u6587\u4EF6\u6216\u8005\u5DF2\u4E0A\u4F20\u90E8\u5206\u6587\u4EF6\u5207\u7247\uFF0C\u901A\u77E5\u524D\u7AEF\u8FDB\u884C\u4E0A\u4F20\uFF0C\u5E76\u628A\u5DF2\u4E0A\u4F20\u7684\u6587\u4EF6\u5207\u7247\u8FD4\u56DE\u7ED9\u524D\u7AEF</p></li></ul><p>\u6240\u4EE5\u6211\u4EEC\u6539\u9020\u4E00\u4E0B\u4E4B\u524D\u6587\u4EF6\u79D2\u4F20\u7684\u670D\u52A1\u7AEF\u9A8C\u8BC1\u63A5\u53E3</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">extractExt</span> <span class="token operator">=</span> <span class="token parameter">filename</span> <span class="token operator">=&gt;</span>
  filename<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>filename<span class="token punctuation">.</span><span class="token function">lastIndexOf</span><span class="token punctuation">(</span><span class="token string">&quot;.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> filename<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u63D0\u53D6\u540E\u7F00\u540D</span>
<span class="token keyword">const</span> <span class="token constant">UPLOAD_DIR</span> <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&quot;..&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;target&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u5927\u6587\u4EF6\u5B58\u50A8\u76EE\u5F55</span>

<span class="token keyword">const</span> <span class="token function-variable function">resolvePost</span> <span class="token operator">=</span> <span class="token parameter">req</span> <span class="token operator">=&gt;</span>
  <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token parameter">resolve</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> chunk <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
    req<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;data&quot;</span><span class="token punctuation">,</span> <span class="token parameter">data</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      chunk <span class="token operator">+=</span> data<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    req<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;end&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>chunk<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  
<span class="token operator">+</span>  <span class="token comment">// \u8FD4\u56DE\u5DF2\u7ECF\u4E0A\u4F20\u5207\u7247\u540D\u5217\u8868</span>
<span class="token operator">+</span> <span class="token keyword">const</span> <span class="token function-variable function">createUploadedList</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token parameter">fileHash</span> <span class="token operator">=&gt;</span>
<span class="token operator">+</span>   fse<span class="token punctuation">.</span><span class="token function">existsSync</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token constant">UPLOAD_DIR</span><span class="token punctuation">,</span> fileHash<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token operator">+</span>    <span class="token operator">?</span> <span class="token keyword">await</span> fse<span class="token punctuation">.</span><span class="token function">readdir</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token constant">UPLOAD_DIR</span><span class="token punctuation">,</span> fileHash<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token operator">+</span>    <span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

server<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;request&quot;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>req<span class="token punctuation">.</span>url <span class="token operator">===</span> <span class="token string">&quot;/verify&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">resolvePost</span><span class="token punctuation">(</span>req<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> fileHash<span class="token punctuation">,</span> filename <span class="token punctuation">}</span> <span class="token operator">=</span> data<span class="token punctuation">;</span>
    <span class="token keyword">const</span> ext <span class="token operator">=</span> <span class="token function">extractExt</span><span class="token punctuation">(</span>filename<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> filePath <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token constant">UPLOAD_DIR</span><span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>fileHash<span class="token interpolation-punctuation punctuation">}</span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>ext<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>fse<span class="token punctuation">.</span><span class="token function">existsSync</span><span class="token punctuation">(</span>filePath<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      res<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span>
        <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
          <span class="token literal-property property">shouldUpload</span><span class="token operator">:</span> <span class="token boolean">false</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
      <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      res<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span>
        <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
          <span class="token literal-property property">shouldUpload</span><span class="token operator">:</span> <span class="token boolean">true</span>\uFF0C
<span class="token operator">+</span>         uploadedList<span class="token operator">:</span> <span class="token keyword">await</span> <span class="token function">createUploadedList</span><span class="token punctuation">(</span>fileHash<span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
      <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
server<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">3000</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;\u6B63\u5728\u76D1\u542C 3000 \u7AEF\u53E3&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br></div></div><p>\u63A5\u7740\u56DE\u5230\u524D\u7AEF\uFF0C\u524D\u7AEF\u6709\u4E24\u4E2A\u5730\u65B9\u9700\u8981\u8C03\u7528\u9A8C\u8BC1\u7684\u63A5\u53E3</p><ul><li><p>\u70B9\u51FB\u4E0A\u4F20\u65F6\uFF0C\u68C0\u67E5\u662F\u5426\u9700\u8981\u4E0A\u4F20\u548C\u5DF2\u4E0A\u4F20\u7684\u5207\u7247</p></li><li><p>\u70B9\u51FB\u6682\u505C\u540E\u7684\u6062\u590D\u4E0A\u4F20\uFF0C\u8FD4\u56DE\u5DF2\u4E0A\u4F20\u7684\u5207\u7247</p></li></ul><p>\u65B0\u589E\u6062\u590D\u6309\u94AE\u5E76\u6539\u9020\u539F\u6765\u4E0A\u4F20\u5207\u7247\u7684\u903B\u8F91</p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span>
        <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>file<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name">@change</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>handleFileChange<span class="token punctuation">&quot;</span></span>
      <span class="token punctuation">/&gt;</span></span>
       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>handleUpload<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\u4E0A\u4F20<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-button</span><span class="token punctuation">&gt;</span></span>
       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>handlePause<span class="token punctuation">&quot;</span></span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>isPaused<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\u6682\u505C<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-button</span><span class="token punctuation">&gt;</span></span>
+      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>handleResume<span class="token punctuation">&quot;</span></span> <span class="token attr-name">v-else</span><span class="token punctuation">&gt;</span></span>\u6062\u590D<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-button</span><span class="token punctuation">&gt;</span></span>
      //...
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>

+   async handleResume() {
+      const { uploadedList } = await this.verifyUpload(
+        this.container.file.name,
+        this.container.hash
+      );
+      await this.uploadChunks(uploadedList);
    },
    async handleUpload() {
      if (!this.container.file) return;
      const fileChunkList = this.createFileChunk(this.container.file);
      this.container.hash = await this.calculateHash(fileChunkList);

+     const { shouldUpload, uploadedList } = await this.verifyUpload(
        this.container.file.name,
        this.container.hash
      );
      if (!shouldUpload) {
        this.$message.success(&quot;\u79D2\u4F20\uFF1A\u4E0A\u4F20\u6210\u529F&quot;);
        return;
      }

      this.data = fileChunkList.map(({ file }, index) =&gt; ({
        fileHash: this.container.hash,
        index,
        hash: this.container.hash + &quot;-&quot; + index,
        chunk: file\uFF0C
        percentage: 0
      }));

+      await this.uploadChunks(uploadedList);
    },
   // \u4E0A\u4F20\u5207\u7247\uFF0C\u540C\u65F6\u8FC7\u6EE4\u5DF2\u4E0A\u4F20\u7684\u5207\u7247
+   async uploadChunks(uploadedList = []) {
      const requestList = this.data
+        .filter(({ hash }) =&gt; !uploadedList.includes(hash))
        .map(({ chunk, hash, index }) =&gt; {
          const formData = new FormData();
          formData.append(&quot;chunk&quot;, chunk);
          formData.append(&quot;hash&quot;, hash);
          formData.append(&quot;filename&quot;, this.container.file.name);
          formData.append(&quot;fileHash&quot;, this.container.hash);
          return { formData, index };
        })
        .map(async ({ formData, index }) =&gt;
          this.request({
            url: &quot;http://localhost:3000&quot;,
            data: formData,
            onProgress: this.createProgressHandler(this.data[index]),
            requestList: this.requestList
          })
        );
      await Promise.all(requestList);
      // \u4E4B\u524D\u4E0A\u4F20\u7684\u5207\u7247\u6570\u91CF + \u672C\u6B21\u4E0A\u4F20\u7684\u5207\u7247\u6570\u91CF = \u6240\u6709\u5207\u7247\u6570\u91CF\u65F6
      // \u5408\u5E76\u5207\u7247
+      if (uploadedList.length + requestList.length === this.data.length) {
         await this.mergeRequest();
+      }
    }
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br></div></div>`,11),z=["src"],E=p(`<p>\u8FD9\u91CC\u7ED9\u539F\u6765\u4E0A\u4F20\u5207\u7247\u7684\u51FD\u6570\u65B0\u589E <code>uploadedList</code> \u53C2\u6570\uFF0C\u5373\u4E0A\u56FE\u4E2D\u670D\u52A1\u7AEF\u8FD4\u56DE\u7684\u5207\u7247\u540D\u5217\u8868\uFF0C\u901A\u8FC7 <code>filter</code> \u8FC7\u6EE4\u6389\u5DF2\u4E0A\u4F20\u7684\u5207\u7247\uFF0C\u5E76\u4E14\u7531\u4E8E\u65B0\u589E\u4E86\u5DF2\u4E0A\u4F20\u7684\u90E8\u5206\uFF0C\u6240\u4EE5\u4E4B\u524D\u5408\u5E76\u63A5\u53E3\u7684\u89E6\u53D1\u6761\u4EF6\u505A\u4E86\u4E00\u4E9B\u6539\u52A8</p><p>\u5230\u8FD9\u91CC\u65AD\u70B9\u7EED\u4F20\u7684\u529F\u80FD\u57FA\u672C\u5B8C\u6210\u4E86</p><h2 id="\u8FDB\u5EA6\u6761\u6539\u8FDB" tabindex="-1"><a class="header-anchor" href="#\u8FDB\u5EA6\u6761\u6539\u8FDB" aria-hidden="true">#</a> \u8FDB\u5EA6\u6761\u6539\u8FDB</h2><p>\u867D\u7136\u5B9E\u73B0\u4E86\u65AD\u70B9\u7EED\u4F20\uFF0C\u4F46\u8FD8\u9700\u8981\u4FEE\u6539\u4E00\u4E0B\u8FDB\u5EA6\u6761\u7684\u663E\u793A\u89C4\u5219\uFF0C\u5426\u5219\u5728\u6682\u505C\u4E0A\u4F20/\u63A5\u6536\u5230\u5DF2\u4E0A\u4F20\u5207\u7247\u65F6\u7684\u8FDB\u5EA6\u6761\u4F1A\u51FA\u73B0\u504F\u5DEE</p><h3 id="\u5207\u7247\u8FDB\u5EA6\u6761-1" tabindex="-1"><a class="header-anchor" href="#\u5207\u7247\u8FDB\u5EA6\u6761-1" aria-hidden="true">#</a> \u5207\u7247\u8FDB\u5EA6\u6761</h3><p>\u7531\u4E8E\u5728\u70B9\u51FB\u4E0A\u4F20/\u6062\u590D\u4E0A\u4F20\u65F6\uFF0C\u4F1A\u8C03\u7528\u9A8C\u8BC1\u63A5\u53E3\u8FD4\u56DE\u5DF2\u4E0A\u4F20\u7684\u5207\u7247\uFF0C\u6240\u4EE5\u9700\u8981\u5C06\u5DF2\u4E0A\u4F20\u5207\u7247\u7684\u8FDB\u5EA6\u53D8\u6210 100%</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>   <span class="token keyword">async</span> <span class="token function">handleUpload</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>container<span class="token punctuation">.</span>file<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>
      <span class="token keyword">const</span> fileChunkList <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">createFileChunk</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>container<span class="token punctuation">.</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>container<span class="token punctuation">.</span>hash <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">calculateHash</span><span class="token punctuation">(</span>fileChunkList<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">const</span> <span class="token punctuation">{</span> shouldUpload<span class="token punctuation">,</span> uploadedList <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">verifyUpload</span><span class="token punctuation">(</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>container<span class="token punctuation">.</span>file<span class="token punctuation">.</span>name<span class="token punctuation">,</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>container<span class="token punctuation">.</span>hash
      <span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>shouldUpload<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>$message<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token string">&quot;\u79D2\u4F20\uFF1A\u4E0A\u4F20\u6210\u529F&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>data <span class="token operator">=</span> fileChunkList<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> file <span class="token punctuation">}</span><span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">fileHash</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>container<span class="token punctuation">.</span>hash<span class="token punctuation">,</span>
        index<span class="token punctuation">,</span>
        <span class="token literal-property property">hash</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>container<span class="token punctuation">.</span>hash <span class="token operator">+</span> <span class="token string">&quot;-&quot;</span> <span class="token operator">+</span> index<span class="token punctuation">,</span>
        <span class="token literal-property property">chunk</span><span class="token operator">:</span> file<span class="token punctuation">,</span>
<span class="token operator">+</span>       percentage<span class="token operator">:</span> uploadedList<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token number">100</span> <span class="token operator">:</span> <span class="token number">0</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">uploadChunks</span><span class="token punctuation">(</span>uploadedList<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><p><code>uploadedList</code> \u4F1A\u8FD4\u56DE\u5DF2\u4E0A\u4F20\u7684\u5207\u7247\uFF0C\u5728\u904D\u5386\u6240\u6709\u5207\u7247\u65F6\u5224\u65AD\u5F53\u524D\u5207\u7247\u662F\u5426\u5728\u5DF2\u4E0A\u4F20\u5217\u8868\u91CC\u5373\u53EF</p><h3 id="\u6587\u4EF6\u8FDB\u5EA6\u6761-1" tabindex="-1"><a class="header-anchor" href="#\u6587\u4EF6\u8FDB\u5EA6\u6761-1" aria-hidden="true">#</a> \u6587\u4EF6\u8FDB\u5EA6\u6761</h3><p>\u4E4B\u524D\u8BF4\u5230\u6587\u4EF6\u8FDB\u5EA6\u6761\u662F\u4E00\u4E2A\u8BA1\u7B97\u5C5E\u6027\uFF0C\u6839\u636E\u6240\u6709\u5207\u7247\u7684\u4E0A\u4F20\u8FDB\u5EA6\u8BA1\u7B97\u800C\u6765\uFF0C\u8FD9\u5C31\u9047\u5230\u4E86\u4E00\u4E2A\u95EE\u9898</p>`,10),J=["src"],X=n("p",null,[a("\u70B9\u51FB\u6682\u505C\u4F1A\u53D6\u6D88\u5E76\u6E05\u7A7A\u5207\u7247\u7684 "),n("code",null,"xhr"),a(" \u8BF7\u6C42\uFF0C\u6B64\u65F6\u5982\u679C\u5DF2\u7ECF\u4E0A\u4F20\u4E86\u4E00\u90E8\u5206\uFF0C\u5C31\u4F1A\u53D1\u73B0\u6587\u4EF6\u8FDB\u5EA6\u6761\u6709"),n("code",null,"\u5012\u9000"),a("\u7684\u73B0\u8C61")],-1),V=["src"],T=p(`<p>\u5F53\u70B9\u51FB\u6062\u590D\u65F6\uFF0C\u7531\u4E8E\u91CD\u65B0\u521B\u5EFA\u4E86 <code>xhr</code> \u5BFC\u81F4\u5207\u7247\u8FDB\u5EA6\u6E05\u96F6\uFF0C\u6240\u4EE5\u603B\u8FDB\u5EA6\u6761\u5C31\u4F1A\u5012\u9000</p><p>\u89E3\u51B3\u65B9\u6848\u662F\u521B\u5EFA\u4E00\u4E2A\u201C\u5047\u201D\u7684\u8FDB\u5EA6\u6761\uFF0C\u8FD9\u4E2A\u5047\u8FDB\u5EA6\u6761\u57FA\u4E8E\u6587\u4EF6\u8FDB\u5EA6\u6761\uFF0C\u4F46\u53EA\u4F1A\u505C\u6B62\u548C\u589E\u52A0\uFF0C\u7136\u540E\u7ED9\u7528\u6237\u5C55\u793A\u8FD9\u4E2A\u5047\u7684\u8FDB\u5EA6\u6761</p><p>\u8FD9\u91CC\u6211\u4EEC\u4F7F\u7528 <code>Vue</code> \u7684\u76D1\u542C\u5C5E\u6027</p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code>  data: () =&gt; ({
+    fakeUploadPercentage: 0
  }),
  computed: {
    uploadPercentage() {
      if (!this.container.file || !this.data.length) return 0;
      const loaded = this.data
        .map(item =&gt; item.size * item.percentage)
        .reduce((acc, cur) =&gt; acc + cur);
      return parseInt((loaded / this.container.file.size).toFixed(2));
    }
  },  
  watch: {
+    uploadPercentage(now) {
+      if (now &gt; this.fakeUploadPercentage) {
+        this.fakeUploadPercentage = now;
+      }
    }
  },
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><p>\u5F53 <code>uploadPercentage</code> \u5373\u771F\u7684\u6587\u4EF6\u8FDB\u5EA6\u6761\u589E\u52A0\u65F6\uFF0C<code>fakeUploadPercentage</code> \u4E5F\u589E\u52A0\uFF0C\u4E00\u65E6\u6587\u4EF6\u8FDB\u5EA6\u6761\u540E\u9000\uFF0C\u5047\u7684\u8FDB\u5EA6\u6761\u53EA\u9700\u505C\u6B62\u5373\u53EF</p><p>\u81F3\u6B64\u4E00\u4E2A\u5927\u6587\u4EF6\u4E0A\u4F20 + \u65AD\u70B9\u7EED\u4F20\u7684\u89E3\u51B3\u65B9\u6848\u5C31\u5B8C\u6210\u4E86</p><h2 id="\u603B\u7ED3" tabindex="-1"><a class="header-anchor" href="#\u603B\u7ED3" aria-hidden="true">#</a> \u603B\u7ED3</h2><p>\u5927\u6587\u4EF6\u4E0A\u4F20</p><ul><li><p>\u524D\u7AEF\u4E0A\u4F20\u5927\u6587\u4EF6\u65F6\u4F7F\u7528 <code>Blob.prototype.slice</code> \u5C06\u6587\u4EF6\u5207\u7247\uFF0C\u5E76\u53D1\u4E0A\u4F20\u591A\u4E2A\u5207\u7247\uFF0C\u6700\u540E\u53D1\u9001\u4E00\u4E2A\u5408\u5E76\u7684\u8BF7\u6C42\u901A\u77E5\u670D\u52A1\u7AEF\u5408\u5E76\u5207\u7247</p></li><li><p>\u670D\u52A1\u7AEF\u63A5\u6536\u5207\u7247\u5E76\u5B58\u50A8\uFF0C\u6536\u5230\u5408\u5E76\u8BF7\u6C42\u540E\u4F7F\u7528\u6D41\u5C06\u5207\u7247\u5408\u5E76\u5230\u6700\u7EC8\u6587\u4EF6</p></li><li><p>\u539F\u751F <code>XMLHttpRequest</code> \u7684 <code>upload.onprogress</code> \u5BF9\u5207\u7247\u4E0A\u4F20\u8FDB\u5EA6\u7684\u76D1\u542C</p></li><li><p>\u4F7F\u7528 <code>Vue</code> \u8BA1\u7B97\u5C5E\u6027\u6839\u636E\u6BCF\u4E2A\u5207\u7247\u7684\u8FDB\u5EA6\u7B97\u51FA\u6574\u4E2A\u6587\u4EF6\u7684\u4E0A\u4F20\u8FDB\u5EA6</p></li></ul><p>\u65AD\u70B9\u7EED\u4F20</p><ul><li><p>\u4F7F\u7528 <code>spark-md5</code> \u6839\u636E\u6587\u4EF6\u5185\u5BB9\u7B97\u51FA\u6587\u4EF6 <code>hash</code></p></li><li><p>\u901A\u8FC7 <code>hash</code> \u53EF\u4EE5\u5224\u65AD\u670D\u52A1\u7AEF\u662F\u5426\u5DF2\u7ECF\u4E0A\u4F20\u8BE5\u6587\u4EF6\uFF0C\u4ECE\u800C\u76F4\u63A5\u63D0\u793A\u7528\u6237\u4E0A\u4F20\u6210\u529F\uFF08\u79D2\u4F20\uFF09</p></li><li><p>\u901A\u8FC7 <code>XMLHttpRequest</code> \u7684 <code>abort</code> \u65B9\u6CD5\u6682\u505C\u5207\u7247\u7684\u4E0A\u4F20</p></li><li><p>\u4E0A\u4F20\u524D\u670D\u52A1\u7AEF\u8FD4\u56DE\u5DF2\u7ECF\u4E0A\u4F20\u7684\u5207\u7247\u540D\uFF0C\u524D\u7AEF\u8DF3\u8FC7\u8FD9\u4E9B\u5207\u7247\u7684\u4E0A\u4F20</p></li></ul>`,11),W={href:"https://github.com/yeyan1996/file-upload",target:"_blank",rel:"noopener noreferrer"},Z=a("file-upload-demo");function G(s,K){const t=o("ExternalLinkIcon");return c(),l(u,null,[k,n("img",{src:s.$withBase("/assets/jsInterview/16f7ff98adb6bcdd_tplv-t2oaga2asx-watermark.awebp"),alt:"demo"},null,8,b),m,n("img",{src:s.$withBase("/assets/jsInterview/16f905fb6a626f47_tplv-t2oaga2asx-watermark.awebp"),alt:"demo"},null,8,d),h,f,n("img",{src:s.$withBase("/assets/jsInterview/16f83c3caac8eb65_tplv-t2oaga2asx-watermark.awebp"),alt:"demo"},null,8,g),y,n("img",{src:s.$withBase("/assets/jsInterview/16fccc5d950c2275_tplv-t2oaga2asx-watermark.awebp"),alt:"demo"},null,8,w),q,n("img",{src:s.$withBase("/assets/jsInterview/16f8414c7fae1c1f_tplv-t2oaga2asx-watermark.awebp"),alt:"demo"},null,8,v),x,n("img",{src:s.$withBase("/assets/jsInterview/16f84ad6b4848423_tplv-t2oaga2asx-watermark.awebp"),alt:"demo"},null,8,_),L,n("p",null,[n("a",j,[P,e(t)])]),D,n("img",{src:s.$withBase("/assets/jsInterview/16f84ae4f233e891_tplv-t2oaga2asx-watermark.awebp"),alt:"demo"},null,8,C),S,n("img",{src:s.$withBase("/assets/jsInterview/16f84b3bba953304_tplv-t2oaga2asx-watermark.awebp"),alt:"demo"},null,8,U),I,n("img",{src:s.$withBase("/assets/jsInterview/16f84b50117e4db2_tplv-t2oaga2asx-watermark.awebp"),alt:"demo"},null,8,H),n("img",{src:s.$withBase("/assets/jsInterview/16f84b33bbceaa48_tplv-t2oaga2asx-watermark.awebp"),alt:"demo"},null,8,F),O,n("img",{src:s.$withBase("/assets/jsInterview/16f8563491ea7793_tplv-t2oaga2asx-watermark.awebp"),alt:"demo"},null,8,R),A,n("img",{src:s.$withBase("/assets/jsInterview/16f890e598dd6afb_tplv-t2oaga2asx-watermark.awebp"),alt:"demo"},null,8,$),B,n("img",{src:s.$withBase("/assets/jsInterview/16f85644dc27459e_tplv-t2oaga2asx-watermark.awebp"),alt:"demo"},null,8,N),M,n("img",{src:s.$withBase("/assets/jsInterview/16f890e598de0946_tplv-t2oaga2asx-watermark.awebp"),alt:"demo"},null,8,z),E,n("img",{src:s.$withBase("/assets/jsInterview/16f8845dcca1427c_tplv-t2oaga2asx-watermark.awebp"),alt:"demo"},null,8,J),X,n("img",{src:s.$withBase("/assets/jsInterview/16f884633f3acfd9_tplv-t2oaga2asx-watermark.awebp"),alt:"demo"},null,8,V),T,n("p",null,[n("a",W,[Z,e(t)])])],64)}var nn=r(i,[["render",G]]);export{nn as default};
