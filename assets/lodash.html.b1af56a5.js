import{o as p,c as t,b as n,F as e,a,e as o}from"./app.6f963528.js";import{_ as c}from"./plugin-vue_export-helper.21dcd24c.js";const l={},u=a(`<h1 id="lodash-\u6E90\u7801\u6574\u4F53\u67B6\u6784" tabindex="-1"><a class="header-anchor" href="#lodash-\u6E90\u7801\u6574\u4F53\u67B6\u6784" aria-hidden="true">#</a> lodash \u6E90\u7801\u6574\u4F53\u67B6\u6784</h1><div class="custom-container tip"><p class="custom-container-title">\u6CE8\u610F</p><p><code>lodash</code>\u7684\u7248\u672C\u662F\uFF1A<code>v4.17.15</code></p><p><code>unpkg.com</code>\u5730\u5740 https://unpkg.com/lodash@4.17.15/lodash.js</p></div><h2 id="\u533F\u540D\u51FD\u6570\u6267\u884C" tabindex="-1"><a class="header-anchor" href="#\u533F\u540D\u51FD\u6570\u6267\u884C" aria-hidden="true">#</a> \u533F\u540D\u51FD\u6570\u6267\u884C</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">;</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

<span class="token punctuation">}</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><blockquote><p>\u66B4\u9732 lodash</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> _ <span class="token operator">=</span> <span class="token function">runInContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="runincontext-\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#runincontext-\u51FD\u6570" aria-hidden="true">#</a> runInContext \u51FD\u6570</h2><blockquote><p>\u8FD9\u91CC\u7684\u7B80\u7248\u6E90\u7801\uFF0C\u53EA\u5173\u6CE8\u51FD\u6570\u5165\u53E3\u548C\u8FD4\u56DE\u503C\u3002</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> runInContext <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token function">runInContext</span><span class="token punctuation">(</span><span class="token parameter">context</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
 <span class="token comment">// \u6D4F\u89C8\u5668\u4E2D\u5904\u7406context\u4E3Awindow</span>
 <span class="token comment">// ...</span>
 <span class="token keyword">function</span> <span class="token function">lodash</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">LodashWrapper</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span>
 <span class="token comment">// ...</span>
 <span class="token keyword">return</span> lodash<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>\u53EF\u4EE5\u770B\u5230\u7533\u660E\u4E86\u4E00\u4E2A<code>runInContext</code>\u51FD\u6570\u3002\u91CC\u9762\u6709\u4E00\u4E2A<code>lodash</code>\u51FD\u6570\uFF0C\u6700\u540E\u5904\u7406\u8FD4\u56DE\u8FD9\u4E2A<code>lodash</code>\u51FD\u6570\u3002</p><p>\u518D\u770B<code>lodash</code>\u51FD\u6570\u4E2D\u7684\u8FD4\u56DE\u503C <code>new LodashWrapper(value)</code>\u3002</p><h3 id="lodashwrapper-\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#lodashwrapper-\u51FD\u6570" aria-hidden="true">#</a> LodashWrapper \u51FD\u6570</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">LodashWrapper</span><span class="token punctuation">(</span><span class="token parameter">value<span class="token punctuation">,</span> chainAll</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
 <span class="token keyword">this</span><span class="token punctuation">.</span>__wrapped__ <span class="token operator">=</span> value<span class="token punctuation">;</span>
 <span class="token keyword">this</span><span class="token punctuation">.</span>__actions__ <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
 <span class="token keyword">this</span><span class="token punctuation">.</span>__chain__ <span class="token operator">=</span> <span class="token operator">!</span><span class="token operator">!</span>chainAll<span class="token punctuation">;</span>
 <span class="token keyword">this</span><span class="token punctuation">.</span>__index__ <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
 <span class="token keyword">this</span><span class="token punctuation">.</span>__values__ <span class="token operator">=</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><blockquote><p>\u8BBE\u7F6E\u4E86\u8FD9\u4E9B\u5C5E\u6027\uFF1A</p></blockquote><ul><li><p><code>__wrapped__</code>\uFF1A\u5B58\u653E\u53C2\u6570<code>value</code>\u3002</p></li><li><p><code>__actions__</code>\uFF1A\u5B58\u653E\u5F85\u6267\u884C\u7684\u51FD\u6570\u4F53<code>func</code>\uFF0C \u51FD\u6570\u53C2\u6570 <code>args</code>\uFF0C\u51FD\u6570\u6267\u884C\u7684<code>this</code> \u6307\u5411 <code>thisArg</code>\u3002</p></li><li><p><code>__chain__</code>\u3001<code>undefined</code>\u4E24\u6B21\u53D6\u53CD\u8F6C\u6210\u5E03\u5C14\u503C<code>false</code>\uFF0C\u4E0D\u652F\u6301\u94FE\u5F0F\u8C03\u7528\u3002\u548C<code>underscore</code>\u4E00\u6837\uFF0C\u9ED8\u8BA4\u662F\u4E0D\u652F\u6301\u94FE\u5F0F\u8C03\u7528\u7684\u3002</p></li><li><p><code>__index__</code>\uFF1A\u7D22\u5F15\u503C \u9ED8\u8BA4 0\u3002</p></li><li><p><code>__values__</code>\uFF1A\u4E3B\u8981<code>clone</code>\u65F6\u4F7F\u7528\u3002</p></li></ul><p>\u63A5\u7740\u5F80\u4E0B\u641C\u7D22\u6E90\u7801\uFF0C<code>LodashWrapper</code>\uFF0C \u4F1A\u53D1\u73B0\u8FD9\u4E24\u884C\u4EE3\u7801\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token class-name">LodashWrapper</span><span class="token punctuation">.</span>prototype <span class="token operator">=</span> <span class="token function">baseCreate</span><span class="token punctuation">(</span>baseLodash<span class="token punctuation">.</span>prototype<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">LodashWrapper</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>constructor <span class="token operator">=</span> LodashWrapper<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>\u63A5\u7740\u5F80\u4E0A\u627E<code>baseCreate</code>\u3001<code>baseLodash</code>\u8FD9\u4E24\u4E2A\u51FD\u6570\u3002</p><h3 id="basecreate-\u539F\u578B\u7EE7\u627F" tabindex="-1"><a class="header-anchor" href="#basecreate-\u539F\u578B\u7EE7\u627F" aria-hidden="true">#</a> baseCreate \u539F\u578B\u7EE7\u627F</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//  \u7ACB\u5373\u6267\u884C\u533F\u540D\u51FD\u6570</span>
<span class="token comment">// \u8FD4\u56DE\u4E00\u4E2A\u51FD\u6570\uFF0C\u7528\u4E8E\u8BBE\u7F6E\u539F\u578B \u53EF\u4EE5\u7406\u89E3\u4E3A\u662F __proto__</span>
<span class="token keyword">var</span> baseCreate <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
 <span class="token comment">// \u8FD9\u53E5\u653E\u5728\u51FD\u6570\u5916\uFF0C\u662F\u4E3A\u4E86\u4E0D\u7528\u6BCF\u6B21\u8C03\u7528baseCreate\u90FD\u91CD\u590D\u7533\u660E object</span>
 <span class="token comment">// underscore \u6E90\u7801\u4E2D\uFF0C\u628A\u8FD9\u53E5\u653E\u5728\u5F00\u5934\u5C31\u7533\u660E\u4E86\u4E00\u4E2A\u7A7A\u51FD\u6570 \`Ctor\`</span>
 <span class="token keyword">function</span> <span class="token function">object</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
 <span class="token keyword">return</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">proto</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u5982\u679C\u4F20\u5165\u7684\u53C2\u6570\u4E0D\u662Fobject\u4E5F\u4E0D\u662Ffunction \u662Fnull</span>
  <span class="token comment">// \u5219\u8FD4\u56DE\u7A7A\u5BF9\u8C61\u3002</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isObject</span><span class="token punctuation">(</span>proto<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u5982\u679C\u652F\u6301Object.create\u65B9\u6CD5\uFF0C\u5219\u8FD4\u56DE Object.create</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>objectCreate<span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token comment">// Object.create</span>
   <span class="token keyword">return</span> <span class="token function">objectCreate</span><span class="token punctuation">(</span>proto<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u5982\u679C\u4E0D\u652F\u6301Object.create \u7528 ployfill new</span>
  object<span class="token punctuation">.</span>prototype <span class="token operator">=</span> proto<span class="token punctuation">;</span>
  <span class="token keyword">var</span> result <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">object</span><span class="token punctuation">;</span>
  <span class="token comment">// \u8FD8\u539F prototype</span>
  object<span class="token punctuation">.</span>prototype <span class="token operator">=</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> result<span class="token punctuation">;</span>
 <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u7A7A\u51FD\u6570</span>
<span class="token keyword">function</span> <span class="token function">baseLodash</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
 <span class="token comment">// No operation performed.</span>
<span class="token punctuation">}</span>

<span class="token comment">// Ensure wrappers are instances of \`baseLodash\`.</span>
lodash<span class="token punctuation">.</span>prototype <span class="token operator">=</span> baseLodash<span class="token punctuation">.</span>prototype<span class="token punctuation">;</span>
<span class="token comment">// \u4E3A\u4EC0\u4E48\u4F1A\u6709\u8FD9\u4E00\u53E5\uFF1F\u56E0\u4E3A\u4E0A\u4E00\u53E5\u628Alodash.prototype.construtor \u8BBE\u7F6E\u4E3AObject\u4E86\u3002\u8FD9\u4E00\u53E5\u4FEE\u6B63constructor</span>
lodash<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>constructor <span class="token operator">=</span> lodash<span class="token punctuation">;</span>

<span class="token class-name">LodashWrapper</span><span class="token punctuation">.</span>prototype <span class="token operator">=</span> <span class="token function">baseCreate</span><span class="token punctuation">(</span>baseLodash<span class="token punctuation">.</span>prototype<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">LodashWrapper</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>constructor <span class="token operator">=</span> LodashWrapper<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br></div></div>`,20),r=["src"],i=a(`<h3 id="\u884D\u751F\u7684-isobject-\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#\u884D\u751F\u7684-isobject-\u51FD\u6570" aria-hidden="true">#</a> \u884D\u751F\u7684 isObject \u51FD\u6570</h3><blockquote><p>\u5224\u65AD<code>typeof value</code>\u4E0D\u7B49\u4E8E<code>null</code>\uFF0C\u5E76\u4E14\u662F<code>object</code>\u6216\u8005<code>function</code>\u3002</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">isObject</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
 <span class="token keyword">var</span> type <span class="token operator">=</span> <span class="token keyword">typeof</span> value<span class="token punctuation">;</span>
 <span class="token keyword">return</span> value <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>type <span class="token operator">==</span> <span class="token string">&#39;object&#39;</span> <span class="token operator">||</span> type <span class="token operator">==</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="object-create-\u7528\u6CD5\u4E3E\u4F8B" tabindex="-1"><a class="header-anchor" href="#object-create-\u7528\u6CD5\u4E3E\u4F8B" aria-hidden="true">#</a> Object.create() \u7528\u6CD5\u4E3E\u4F8B</h3><p><code>lodash</code>\u4E0A\u6709\u5F88\u591A\u65B9\u6CD5\u548C\u5C5E\u6027\uFF0C\u4F46\u5728<code>lodash.prototype</code>\u4E5F\u6709\u5F88\u591A\u4E0E<code>lodash</code>\u4E0A\u76F8\u540C\u7684\u65B9\u6CD5\u3002\u80AF\u5B9A\u4E0D\u662F\u5728<code>lodash.prototype</code>\u4E0A\u91CD\u65B0\u5199\u4E00\u904D\u3002\u800C\u662F\u901A\u8FC7<code>mixin</code>\u6302\u8F7D\u7684\u3002</p><h2 id="mixin" tabindex="-1"><a class="header-anchor" href="#mixin" aria-hidden="true">#</a> mixin</h2><h3 id="mixin-\u5177\u4F53\u7528\u6CD5" tabindex="-1"><a class="header-anchor" href="#mixin-\u5177\u4F53\u7528\u6CD5" aria-hidden="true">#</a> mixin \u5177\u4F53\u7528\u6CD5</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>_<span class="token punctuation">.</span><span class="token function">mixin</span><span class="token punctuation">(</span><span class="token punctuation">[</span>object<span class="token operator">=</span>lodash<span class="token punctuation">]</span><span class="token punctuation">,</span> source<span class="token punctuation">,</span> <span class="token punctuation">[</span>options<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><blockquote><p>\u6DFB\u52A0\u6765\u6E90\u5BF9\u8C61\u81EA\u8EAB\u7684\u6240\u6709\u53EF\u679A\u4E3E\u51FD\u6570\u5C5E\u6027\u5230\u76EE\u6807\u5BF9\u8C61\u3002 \u5982\u679C object \u662F\u4E2A\u51FD\u6570\uFF0C\u90A3\u4E48\u51FD\u6570\u65B9\u6CD5\u5C06\u88AB\u6DFB\u52A0\u5230\u539F\u578B\u94FE\u4E0A\u3002</p></blockquote><blockquote><p>\u6CE8\u610F: \u4F7F\u7528 _.runInContext \u6765\u521B\u5EFA\u539F\u59CB\u7684 lodash \u51FD\u6570\u6765\u907F\u514D\u4FEE\u6539\u9020\u6210\u7684\u51B2\u7A81\u3002</p></blockquote><p><strong>\u6DFB\u52A0\u7248\u672C</strong></p><blockquote><p>0.1.0</p></blockquote><p><strong>\u53C2\u6570</strong></p><blockquote><p>[object=lodash] (Function|Object): \u76EE\u6807\u5BF9\u8C61\u3002</p></blockquote><blockquote><p>source (Object): \u6765\u6E90\u5BF9\u8C61\u3002</p></blockquote><blockquote><p>[options={}] (Object): \u9009\u9879\u5BF9\u8C61\u3002</p></blockquote><blockquote><p>[options.chain=true] (boolean): \u662F\u5426\u5F00\u542F\u94FE\u5F0F\u64CD\u4F5C\u3002</p></blockquote><p><strong>\u8FD4\u56DE</strong></p><blockquote><p>(*): \u8FD4\u56DE object.</p></blockquote><h3 id="mixin-\u6E90\u7801" tabindex="-1"><a class="header-anchor" href="#mixin-\u6E90\u7801" aria-hidden="true">#</a> mixin \u6E90\u7801</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">mixin</span><span class="token punctuation">(</span><span class="token parameter">object<span class="token punctuation">,</span> source<span class="token punctuation">,</span> options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
 <span class="token keyword">var</span> props <span class="token operator">=</span> <span class="token function">keys</span><span class="token punctuation">(</span>source<span class="token punctuation">)</span><span class="token punctuation">,</span>
  methodNames <span class="token operator">=</span> <span class="token function">baseFunctions</span><span class="token punctuation">(</span>source<span class="token punctuation">,</span> props<span class="token punctuation">)</span><span class="token punctuation">;</span>

 <span class="token keyword">if</span> <span class="token punctuation">(</span>options <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span>
  <span class="token operator">!</span><span class="token punctuation">(</span><span class="token function">isObject</span><span class="token punctuation">(</span>source<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>methodNames<span class="token punctuation">.</span>length <span class="token operator">||</span> <span class="token operator">!</span>props<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  options <span class="token operator">=</span> source<span class="token punctuation">;</span>
  source <span class="token operator">=</span> object<span class="token punctuation">;</span>
  object <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
  methodNames <span class="token operator">=</span> <span class="token function">baseFunctions</span><span class="token punctuation">(</span>source<span class="token punctuation">,</span> <span class="token function">keys</span><span class="token punctuation">(</span>source<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span>
 <span class="token keyword">var</span> chain <span class="token operator">=</span> <span class="token operator">!</span><span class="token punctuation">(</span><span class="token function">isObject</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token string">&#39;chain&#39;</span> <span class="token keyword">in</span> options<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token operator">!</span><span class="token operator">!</span>options<span class="token punctuation">.</span>chain<span class="token punctuation">,</span>
  isFunc <span class="token operator">=</span> <span class="token function">isFunction</span><span class="token punctuation">(</span>object<span class="token punctuation">)</span><span class="token punctuation">;</span>

 <span class="token function">arrayEach</span><span class="token punctuation">(</span>methodNames<span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">methodName</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> func <span class="token operator">=</span> source<span class="token punctuation">[</span>methodName<span class="token punctuation">]</span><span class="token punctuation">;</span>
  object<span class="token punctuation">[</span>methodName<span class="token punctuation">]</span> <span class="token operator">=</span> func<span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>isFunc<span class="token punctuation">)</span> <span class="token punctuation">{</span>
   object<span class="token punctuation">.</span>prototype<span class="token punctuation">[</span>methodName<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> chainAll <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>__chain__<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>chain <span class="token operator">||</span> chainAll<span class="token punctuation">)</span> <span class="token punctuation">{</span>
     <span class="token keyword">var</span> result <span class="token operator">=</span> <span class="token function">object</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>__wrapped__<span class="token punctuation">)</span><span class="token punctuation">,</span>
      actions <span class="token operator">=</span> result<span class="token punctuation">.</span>__actions__ <span class="token operator">=</span> <span class="token function">copyArray</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>__actions__<span class="token punctuation">)</span><span class="token punctuation">;</span>

     actions<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token string-property property">&#39;func&#39;</span><span class="token operator">:</span> func<span class="token punctuation">,</span> <span class="token string-property property">&#39;args&#39;</span><span class="token operator">:</span> arguments<span class="token punctuation">,</span> <span class="token string-property property">&#39;thisArg&#39;</span><span class="token operator">:</span> object <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
     result<span class="token punctuation">.</span>__chain__ <span class="token operator">=</span> chainAll<span class="token punctuation">;</span>
     <span class="token keyword">return</span> result<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token function">func</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>object<span class="token punctuation">,</span> <span class="token function">arrayPush</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span> arguments<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
 <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

 <span class="token keyword">return</span> object<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br></div></div><h3 id="mixin-\u884D\u751F\u7684\u51FD\u6570-keys" tabindex="-1"><a class="header-anchor" href="#mixin-\u884D\u751F\u7684\u51FD\u6570-keys" aria-hidden="true">#</a> mixin \u884D\u751F\u7684\u51FD\u6570 keys</h3><p>\u5728 <code>mixin</code> \u51FD\u6570\u4E2D \u5176\u5B9E\u6700\u7EC8\u8C03\u7528\u7684\u5C31\u662F <code>Object.keys</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">keys</span><span class="token punctuation">(</span><span class="token parameter">object</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
 <span class="token keyword">return</span> <span class="token function">isArrayLike</span><span class="token punctuation">(</span>object<span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token function">arrayLikeKeys</span><span class="token punctuation">(</span>object<span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token function">baseKeys</span><span class="token punctuation">(</span>object<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="mixin-\u884D\u751F\u7684\u51FD\u6570-basefunctions" tabindex="-1"><a class="header-anchor" href="#mixin-\u884D\u751F\u7684\u51FD\u6570-basefunctions" aria-hidden="true">#</a> mixin \u884D\u751F\u7684\u51FD\u6570 baseFunctions</h3><p>\u8FD4\u56DE\u51FD\u6570\u6570\u7EC4\u96C6\u5408</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">baseFunctions</span><span class="token punctuation">(</span><span class="token parameter">object<span class="token punctuation">,</span> props</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
 <span class="token keyword">return</span> <span class="token function">arrayFilter</span><span class="token punctuation">(</span>props<span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">key</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token function">isFunction</span><span class="token punctuation">(</span>object<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="mixin-\u884D\u751F\u7684\u51FD\u6570-isfunction" tabindex="-1"><a class="header-anchor" href="#mixin-\u884D\u751F\u7684\u51FD\u6570-isfunction" aria-hidden="true">#</a> mixin \u884D\u751F\u7684\u51FD\u6570 isFunction</h3><p>\u5224\u65AD\u53C2\u6570\u662F\u5426\u662F\u51FD\u6570</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">isFunction</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
 <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isObject</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span>
 <span class="token comment">// The use of \`Object#toString\` avoids issues with the \`typeof\` operator</span>
 <span class="token comment">// in Safari 9 which returns &#39;object&#39; for typed arrays and other constructors.</span>
 <span class="token keyword">var</span> tag <span class="token operator">=</span> <span class="token function">baseGetTag</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token keyword">return</span> tag <span class="token operator">==</span> funcTag <span class="token operator">||</span> tag <span class="token operator">==</span> genTag <span class="token operator">||</span> tag <span class="token operator">==</span> asyncTag <span class="token operator">||</span> tag <span class="token operator">==</span> proxyTag<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h3 id="mixin-\u884D\u751F\u7684\u51FD\u6570-arrayeach" tabindex="-1"><a class="header-anchor" href="#mixin-\u884D\u751F\u7684\u51FD\u6570-arrayeach" aria-hidden="true">#</a> mixin \u884D\u751F\u7684\u51FD\u6570 arrayEach</h3><p>\u7C7B\u4F3C <code>[].forEarch</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">arrayEach</span><span class="token punctuation">(</span><span class="token parameter">array<span class="token punctuation">,</span> iteratee</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
 <span class="token keyword">var</span> index <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span>
  length <span class="token operator">=</span> array <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">?</span> <span class="token number">0</span> <span class="token operator">:</span> array<span class="token punctuation">.</span>length<span class="token punctuation">;</span>

 <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">++</span>index <span class="token operator">&lt;</span> length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">iteratee</span><span class="token punctuation">(</span>array<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">,</span> index<span class="token punctuation">,</span> array<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token keyword">break</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
 <span class="token punctuation">}</span>
 <span class="token keyword">return</span> array<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h3 id="mixin-\u884D\u751F\u7684\u51FD\u6570-arraypush" tabindex="-1"><a class="header-anchor" href="#mixin-\u884D\u751F\u7684\u51FD\u6570-arraypush" aria-hidden="true">#</a> mixin \u884D\u751F\u7684\u51FD\u6570 arrayPush</h3><p>\u7C7B\u4F3C <code>[].push</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">arrayPush</span><span class="token punctuation">(</span><span class="token parameter">array<span class="token punctuation">,</span> values</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
 <span class="token keyword">var</span> index <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span>
  length <span class="token operator">=</span> values<span class="token punctuation">.</span>length<span class="token punctuation">,</span>
  offset <span class="token operator">=</span> array<span class="token punctuation">.</span>length<span class="token punctuation">;</span>

 <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">++</span>index <span class="token operator">&lt;</span> length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
 array<span class="token punctuation">[</span>offset <span class="token operator">+</span> index<span class="token punctuation">]</span> <span class="token operator">=</span> values<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span>
 <span class="token keyword">return</span> array<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h3 id="mixin-\u884D\u751F\u7684\u51FD\u6570-copyarray" tabindex="-1"><a class="header-anchor" href="#mixin-\u884D\u751F\u7684\u51FD\u6570-copyarray" aria-hidden="true">#</a> mixin \u884D\u751F\u7684\u51FD\u6570 copyArray</h3><p>\u62F7\u8D1D\u6570\u7EC4</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">copyArray</span><span class="token punctuation">(</span><span class="token parameter">source<span class="token punctuation">,</span> array</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
 <span class="token keyword">var</span> index <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span>
  length <span class="token operator">=</span> source<span class="token punctuation">.</span>length<span class="token punctuation">;</span>

 array <span class="token operator">||</span> <span class="token punctuation">(</span>array <span class="token operator">=</span> <span class="token function">Array</span><span class="token punctuation">(</span>length<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">++</span>index <span class="token operator">&lt;</span> length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  array<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">=</span> source<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span>
 <span class="token keyword">return</span> array<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h3 id="mixin-\u6E90\u7801\u89E3\u6790" tabindex="-1"><a class="header-anchor" href="#mixin-\u6E90\u7801\u89E3\u6790" aria-hidden="true">#</a> mixin \u6E90\u7801\u89E3\u6790</h3><p><code>lodash</code> \u6E90\u7801\u4E2D\u4E24\u6B21\u8C03\u7528 <code>mixin</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// Add methods that return wrapped values in chain sequences.</span>
lodash<span class="token punctuation">.</span>after <span class="token operator">=</span> after<span class="token punctuation">;</span>
<span class="token comment">// code ... \u7B49 153 \u4E2A\u652F\u6301\u94FE\u5F0F\u8C03\u7528\u7684\u65B9\u6CD5</span>

<span class="token comment">// Add methods to \`lodash.prototype\`.</span>
<span class="token comment">// \u628Alodash\u4E0A\u7684\u9759\u6001\u65B9\u6CD5\u8D4B\u503C\u5230 lodash.prototype \u4E0A</span>
<span class="token function">mixin</span><span class="token punctuation">(</span>lodash<span class="token punctuation">,</span> lodash<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Add methods that return unwrapped values in chain sequences.</span>
lodash<span class="token punctuation">.</span>add <span class="token operator">=</span> add<span class="token punctuation">;</span>
<span class="token comment">// code ... \u7B49 152 \u4E2A\u4E0D\u652F\u6301\u94FE\u5F0F\u8C03\u7528\u7684\u65B9\u6CD5</span>


<span class="token comment">// \u8FD9\u91CC\u5176\u5B9E\u5C31\u662F\u8FC7\u6EE4 after \u7B49\u652F\u6301\u94FE\u5F0F\u8C03\u7528\u7684\u65B9\u6CD5\uFF0C\u83B7\u53D6\u5230 lodash \u4E0A\u7684 add \u7B49 \u6DFB\u52A0\u5230lodash.prototype \u4E0A\u3002</span>
<span class="token function">mixin</span><span class="token punctuation">(</span>lodash<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
 <span class="token keyword">var</span> source <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
 <span class="token comment">// baseForOwn \u8FD9\u91CC\u5176\u5B9E\u5C31\u662F\u904D\u5386lodash\u4E0A\u7684\u9759\u6001\u65B9\u6CD5\uFF0C\u6267\u884C\u56DE\u8C03\u51FD\u6570</span>
 <span class="token function">baseForOwn</span><span class="token punctuation">(</span>lodash<span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">func<span class="token punctuation">,</span> methodName</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u7B2C\u4E00\u6B21 mixin \u8C03\u7528\u4E86\u6240\u4EE5\u8D4B\u503C\u5230\u4E86lodash.prototype</span>
  <span class="token comment">// \u6240\u4EE5\u8FD9\u91CC\u7528 Object.hasOwnProperty \u6392\u9664\u4E0D\u5728lodash.prototype \u4E0A\u7684\u65B9\u6CD5\u3002\u4E5F\u5C31\u662F add \u7B49 152 \u4E2A\u4E0D\u652F\u6301\u94FE\u5F0F\u8C03\u7528\u7684\u65B9\u6CD5\u3002</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">hasOwnProperty</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>lodash<span class="token punctuation">.</span>prototype<span class="token punctuation">,</span> methodName<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
   source<span class="token punctuation">[</span>methodName<span class="token punctuation">]</span> <span class="token operator">=</span> func<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
 <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token keyword">return</span> source<span class="token punctuation">;</span>
<span class="token comment">// \u6700\u540E\u4E00\u4E2A\u53C2\u6570options \u7279\u610F\u6CE8\u660E\u4E0D\u652F\u6301\u94FE\u5F0F\u8C03\u7528</span>
<span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token string-property property">&#39;chain&#39;</span><span class="token operator">:</span> <span class="token boolean">false</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br></div></div><p>\u7ED3\u5408\u4E24\u6B21\u8C03\u7528<code>mixin</code> \u4EE3\u5165\u5230\u6E90\u7801\u89E3\u6790\u5982\u4E0B</p><h3 id="mixin\u6E90\u7801\u53CA\u6CE8\u91CA" tabindex="-1"><a class="header-anchor" href="#mixin\u6E90\u7801\u53CA\u6CE8\u91CA" aria-hidden="true">#</a> mixin\u6E90\u7801\u53CA\u6CE8\u91CA</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">mixin</span><span class="token punctuation">(</span><span class="token parameter">object<span class="token punctuation">,</span> source<span class="token punctuation">,</span> options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
 <span class="token comment">// source \u5BF9\u8C61\u4E2D\u53EF\u4EE5\u679A\u4E3E\u7684\u5C5E\u6027</span>
 <span class="token keyword">var</span> props <span class="token operator">=</span> <span class="token function">keys</span><span class="token punctuation">(</span>source<span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token comment">// source \u5BF9\u8C61\u4E2D\u7684\u65B9\u6CD5\u540D\u79F0\u6570\u7EC4</span>
  methodNames <span class="token operator">=</span> <span class="token function">baseFunctions</span><span class="token punctuation">(</span>source<span class="token punctuation">,</span> props<span class="token punctuation">)</span><span class="token punctuation">;</span>

 <span class="token keyword">if</span> <span class="token punctuation">(</span>options <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span>
  <span class="token operator">!</span><span class="token punctuation">(</span><span class="token function">isObject</span><span class="token punctuation">(</span>source<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>methodNames<span class="token punctuation">.</span>length <span class="token operator">||</span> <span class="token operator">!</span>props<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u5982\u679C options \u6CA1\u4F20\u4E3A undefined  undefined == null \u4E3Atrue</span>
  <span class="token comment">// \u4E14 \u5982\u679Csource \u4E0D\u4E3A \u5BF9\u8C61\u6216\u8005\u4E0D\u662F\u51FD\u6570</span>
  <span class="token comment">// \u4E14 source\u5BF9\u8C61\u7684\u51FD\u6570\u51FD\u6570\u957F\u5EA6 \u6216\u8005 source \u5BF9\u8C61\u7684\u5C5E\u6027\u957F\u5EA6\u4E0D\u4E3A0</span>
  <span class="token comment">// \u628A options \u8D4B\u503C\u4E3A source</span>
  options <span class="token operator">=</span> source<span class="token punctuation">;</span>
  <span class="token comment">// \u628A source \u8D4B\u503C\u4E3A object</span>
  source <span class="token operator">=</span> object<span class="token punctuation">;</span>
  <span class="token comment">// \u628A object \u8D4B\u503C\u4E3A this \u4E5F\u5C31\u662F _ (lodash)</span>
  object <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
  <span class="token comment">// \u83B7\u53D6\u5230\u6240\u6709\u7684\u65B9\u6CD5\u540D\u79F0\u6570\u7EC4</span>
  methodNames <span class="token operator">=</span> <span class="token function">baseFunctions</span><span class="token punctuation">(</span>source<span class="token punctuation">,</span> <span class="token function">keys</span><span class="token punctuation">(</span>source<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span>
 <span class="token comment">// \u662F\u5426\u652F\u6301 \u94FE\u5F0F\u8C03\u7528</span>
 <span class="token comment">// options  \u4E0D\u662F\u5BF9\u8C61\u6216\u8005\u4E0D\u662F\u51FD\u6570\uFF0C\u662Fnull\u6216\u8005\u5176\u4ED6\u503C</span>
 <span class="token comment">// \u5224\u65ADoptions\u662F\u5426\u662F\u5BF9\u8C61\u6216\u8005\u51FD\u6570\uFF0C\u5982\u679C\u4E0D\u662F\u6216\u8005\u51FD\u6570\u5219\u4E0D\u4F1A\u6267\u884C &#39;chain&#39; in options \u4E5F\u5C31\u4E0D\u4F1A\u62A5\u9519</span>
 <span class="token comment">//  \u4E14 chain \u5728 options\u7684\u5BF9\u8C61\u6216\u8005\u539F\u578B\u94FE\u4E2D</span>
 <span class="token comment">// \u77E5\u8BC6\u70B9 in [MDN in :  https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/in</span>
 <span class="token comment">// \u5982\u679C\u6307\u5B9A\u7684\u5C5E\u6027\u5728\u6307\u5B9A\u7684\u5BF9\u8C61\u6216\u5176\u539F\u578B\u94FE\u4E2D\uFF0C\u5219in \u8FD0\u7B97\u7B26\u8FD4\u56DEtrue\u3002</span>

 <span class="token comment">// \u6216\u8005 options.chain \u8F6C\u5E03\u5C14\u503C</span>
 <span class="token keyword">var</span> chain <span class="token operator">=</span> <span class="token operator">!</span><span class="token punctuation">(</span><span class="token function">isObject</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token string">&#39;chain&#39;</span> <span class="token keyword">in</span> options<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token operator">!</span><span class="token operator">!</span>options<span class="token punctuation">.</span>chain<span class="token punctuation">,</span>
  <span class="token comment">// object \u662F\u51FD\u6570</span>
  isFunc <span class="token operator">=</span> <span class="token function">isFunction</span><span class="token punctuation">(</span>object<span class="token punctuation">)</span><span class="token punctuation">;</span>

 <span class="token comment">// \u5FAA\u73AF \u65B9\u6CD5\u540D\u79F0\u6570\u7EC4</span>
 <span class="token function">arrayEach</span><span class="token punctuation">(</span>methodNames<span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">methodName</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u51FD\u6570\u672C\u8EAB</span>
  <span class="token keyword">var</span> func <span class="token operator">=</span> source<span class="token punctuation">[</span>methodName<span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token comment">// object \u901A\u5E38\u662F lodash  \u4E5F\u8D4B\u503C\u8FD9\u4E2A\u51FD\u6570\u3002</span>
  object<span class="token punctuation">[</span>methodName<span class="token punctuation">]</span> <span class="token operator">=</span> func<span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>isFunc<span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token comment">// \u5982\u679Cobject\u662F\u51FD\u6570 \u8D4B\u503C\u5230  object prototype  \u4E0A\uFF0C\u901A\u5E38\u662Flodash</span>
   object<span class="token punctuation">.</span>prototype<span class="token punctuation">[</span>methodName<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5B9E\u4F8B\u4E0A\u7684__chain__ \u5C5E\u6027 \u662F\u5426\u652F\u6301\u94FE\u5F0F\u8C03\u7528</span>
    <span class="token comment">// \u8FD9\u91CC\u7684 this \u662F new LodashWrapper \u5B9E\u4F8B \u7C7B\u4F3C\u5982\u4E0B</span>
    <span class="token doc-comment comment">/**
     <span class="token punctuation">{</span>
     __actions__: [],
     __chain__: true
     __index__: 0
     __values__: undefined
     __wrapped__: []
     <span class="token punctuation">}</span>
     **/</span>

    <span class="token keyword">var</span> chainAll <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>__chain__<span class="token punctuation">;</span>
    <span class="token comment">// options \u4E2D\u7684 chain \u5C5E\u6027 \u662F\u5426\u652F\u6301\u94FE\u5F0F\u8C03\u7528</span>
    <span class="token comment">// \u4E24\u8005\u6709\u4E00\u4E2A\u7B26\u5408\u94FE\u5F0F\u8C03\u7528  \u6267\u884C\u4E0B\u9762\u7684\u4EE3\u7801</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>chain <span class="token operator">||</span> chainAll<span class="token punctuation">)</span> <span class="token punctuation">{</span>
     <span class="token comment">// \u901A\u5E38\u662F lodash</span>
     <span class="token keyword">var</span> result <span class="token operator">=</span> <span class="token function">object</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>__wrapped__<span class="token punctuation">)</span><span class="token punctuation">,</span>
     <span class="token comment">// \u590D\u5236 \u5B9E\u4F8B\u4E0A\u7684 __action__ \u5230 result.__action__ \u548C action \u4E0A</span>
     actions <span class="token operator">=</span> result<span class="token punctuation">.</span>__actions__ <span class="token operator">=</span> <span class="token function">copyArray</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>__actions__<span class="token punctuation">)</span><span class="token punctuation">;</span>

     <span class="token comment">// action \u6DFB\u52A0 \u51FD\u6570 \u548C args \u548C this \u6307\u5411\uFF0C\u5EF6\u8FDF\u8BA1\u7B97\u8C03\u7528\u3002</span>
     actions<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token string-property property">&#39;func&#39;</span><span class="token operator">:</span> func<span class="token punctuation">,</span> <span class="token string-property property">&#39;args&#39;</span><span class="token operator">:</span> arguments<span class="token punctuation">,</span> <span class="token string-property property">&#39;thisArg&#39;</span><span class="token operator">:</span> object <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
     <span class="token comment">//\u5B9E\u4F8B\u4E0A\u7684__chain__ \u5C5E\u6027  \u8D4B\u503C\u7ED9 result \u7684 \u5C5E\u6027 __chain__</span>
     result<span class="token punctuation">.</span>__chain__ <span class="token operator">=</span> chainAll<span class="token punctuation">;</span>
     <span class="token comment">// \u6700\u540E\u8FD4\u56DE\u8FD9\u4E2A\u5B9E\u4F8B</span>
     <span class="token keyword">return</span> result<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// \u90FD\u4E0D\u652F\u6301\u94FE\u5F0F\u8C03\u7528\u3002\u76F4\u63A5\u8C03\u7528</span>
    <span class="token comment">// \u628A\u5F53\u524D\u5B9E\u4F8B\u7684 value \u548C arguments \u5BF9\u8C61 \u4F20\u9012\u7ED9 func \u51FD\u6570\u4F5C\u4E3A\u53C2\u6570\u8C03\u7528\u3002\u8FD4\u56DE\u8C03\u7528\u7ED3\u679C\u3002</span>
    <span class="token keyword">return</span> <span class="token function">func</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>object<span class="token punctuation">,</span> <span class="token function">arrayPush</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span> arguments<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
 <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

 <span class="token comment">// \u6700\u540E\u8FD4\u56DE\u5BF9\u8C61 object</span>
 <span class="token keyword">return</span> object<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br></div></div><div class="custom-container tip"><p class="custom-container-title">\u5C0F\u7ED3</p><p>\u7B80\u5355\u8BF4\u5C31\u662F\u628A<code>lodash</code>\u4E0A\u7684\u9759\u6001\u65B9\u6CD5\u8D4B\u503C\u5230<code>lodash.prototype</code>\u4E0A\u3002\u5206\u4E24\u6B21\u7B2C\u4E00\u6B21\u662F\u652F\u6301\u94FE\u5F0F\u8C03\u7528\uFF08<code>lodash.after</code>\u7B49 <code>153</code>\u4E2A\u652F\u6301\u94FE\u5F0F\u8C03\u7528\u7684\u65B9\u6CD5\uFF09\uFF0C\u7B2C\u4E8C\u6B21\u662F\u4E0D\u652F\u6301\u94FE\u5F0F\u8C03\u7528\u7684\u65B9\u6CD5\uFF08<code>lodash.add</code>\u7B49<code>152</code>\u4E2A\u4E0D\u652F\u6301\u94FE\u5F0F\u8C03\u7528\u7684\u65B9\u6CD5\uFF09\u3002</p></div><h2 id="lodash-\u7A76\u7ADF\u5728-\u548C-prototype\u6302\u8F7D\u4E86\u591A\u5C11\u65B9\u6CD5\u548C\u5C5E\u6027" tabindex="-1"><a class="header-anchor" href="#lodash-\u7A76\u7ADF\u5728-\u548C-prototype\u6302\u8F7D\u4E86\u591A\u5C11\u65B9\u6CD5\u548C\u5C5E\u6027" aria-hidden="true">#</a> lodash \u7A76\u7ADF\u5728_\u548C_.prototype\u6302\u8F7D\u4E86\u591A\u5C11\u65B9\u6CD5\u548C\u5C5E\u6027</h2><p>\u518D\u6765\u770B\u4E0B<code>lodash</code>\u7A76\u7ADF\u6302\u8F7D\u5728<code>_</code>\u51FD\u6570\u5BF9\u8C61\u4E0A\u6709\u591A\u5C11\u9759\u6001\u65B9\u6CD5\u548C\u5C5E\u6027\uFF0C\u548C\u6302\u8F7D<code>_.prototype</code>\u4E0A\u6709\u591A\u5C11\u65B9\u6CD5\u548C\u5C5E\u6027\u3002</p><p>\u4F7F\u7528<code>for in</code>\u5FAA\u73AF\u4E00\u8BD5\u4FBF\u77E5\u3002\u770B\u5982\u4E0B\u4EE3\u7801\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> staticMethods <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> staticProperty <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> name <span class="token keyword">in</span> _<span class="token punctuation">)</span><span class="token punctuation">{</span>
 <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> _<span class="token punctuation">[</span>name<span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  staticMethods<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span>
 <span class="token keyword">else</span><span class="token punctuation">{</span>
  staticProperty<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>staticProperty<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [&quot;templateSettings&quot;, &quot;VERSION&quot;] 2\u4E2A</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>staticMethods<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [&quot;after&quot;, &quot;ary&quot;, &quot;assign&quot;, &quot;assignIn&quot;, &quot;assignInWith&quot;, ...] 305\u4E2A</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>\u5176\u5B9E\u5C31\u662F\u4E0A\u6587\u63D0\u53CA\u7684 <code>lodash.after</code> \u7B49<code>153</code>\u4E2A\u652F\u6301\u94FE\u5F0F\u8C03\u7528\u7684\u51FD\u6570 \u3001<code>lodash.add</code> \u7B49 <code>152</code>\u4E0D\u652F\u6301\u94FE\u5F0F\u8C03\u7528\u7684\u51FD\u6570\u8D4B\u503C\u800C\u6765\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> prototypeMethods <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> prototypeProperty <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> name <span class="token keyword">in</span> <span class="token class-name">_</span><span class="token punctuation">.</span>prototype<span class="token punctuation">)</span><span class="token punctuation">{</span>
 <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> <span class="token class-name">_</span><span class="token punctuation">.</span>prototype<span class="token punctuation">[</span>name<span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  prototypeMethods<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span>
 <span class="token keyword">else</span><span class="token punctuation">{</span>
  prototypeProperty<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>prototypeProperty<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// []</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>prototypeMethods<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [&quot;after&quot;, &quot;all&quot;, &quot;allKeys&quot;, &quot;any&quot;, &quot;assign&quot;, ...] 317\u4E2A</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>\u76F8\u6BD4<code>lodash</code>\u4E0A\u7684\u9759\u6001\u65B9\u6CD5\u591A\u4E86<code>12</code>\u4E2A\uFF0C\u8BF4\u660E\u9664\u4E86 <code>mixin</code> \u5916\uFF0C\u8FD8\u6709<code>12</code>\u4E2A\u5176\u4ED6\u5F62\u5F0F\u8D4B\u503C\u800C\u6765\u3002</p><p>\u652F\u6301\u94FE\u5F0F\u8C03\u7528\u7684\u65B9\u6CD5\u6700\u540E\u8FD4\u56DE\u662F\u5B9E\u4F8B\u5BF9\u8C61\uFF0C\u83B7\u53D6\u6700\u540E\u7684\u5904\u7406\u7684\u7ED3\u679C\u503C\uFF0C\u6700\u540E\u9700\u8981\u8C03\u7528<code>value</code>\u65B9\u6CD5\u3002</p>`,54),k=["src"],b=a(`<h2 id="\u8BF7\u51FA\u8D2F\u7A7F\u4E0B\u6587\u7684\u7B80\u5355\u7684\u4F8B\u5B50" tabindex="-1"><a class="header-anchor" href="#\u8BF7\u51FA\u8D2F\u7A7F\u4E0B\u6587\u7684\u7B80\u5355\u7684\u4F8B\u5B50" aria-hidden="true">#</a> \u8BF7\u51FA\u8D2F\u7A7F\u4E0B\u6587\u7684\u7B80\u5355\u7684\u4F8B\u5B50</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> result <span class="token operator">=</span> _<span class="token punctuation">.</span><span class="token function">chain</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">el</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
 console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>el<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 1, 2, 3</span>
 <span class="token keyword">return</span> el <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token function">take</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// lodash\u4E2D\u8FD9\u91CC\u7684\`map\`\u4EC5\u6267\u884C\u4E86\`3\`\u6B21\u3002</span>
<span class="token comment">// \u5177\u4F53\u529F\u80FD\u4E5F\u5F88\u7B80\u5355 \u6570\u7EC4 1-5 \u52A0\u4E00\uFF0C\u6700\u540E\u83B7\u53D6\u5176\u4E2D\u4E09\u4E2A\u503C\u3002</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;result:&#39;</span><span class="token punctuation">,</span> result<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p><strong>\u4E5F\u5C31\u662F\u8BF4\u8FD9\u91CC<code>lodash</code>\u806A\u660E\u7684\u77E5\u9053\u4E86\u6700\u540E\u9700\u8981\u51E0\u4E2A\u503C\uFF0C\u5C31\u6267\u884C\u51E0\u6B21<code>map</code>\u5FAA\u73AF\uFF0C\u5BF9\u4E8E\u5F88\u5927\u7684\u6570\u7EC4\uFF0C\u63D0\u5347\u6027\u80FD\u5F88\u6709\u5E2E\u52A9\u3002</strong></p><p>\u800C<code>underscore</code>\u6267\u884C\u8FD9\u6BB5\u4EE3\u7801\u5176\u4E2D<code>map</code>\u6267\u884C\u4E865\u6B21\u3002 \u5982\u679C\u662F\u5E73\u5E38\u5B9E\u73B0\u8BE5\u529F\u80FD\u4E5F\u7B80\u5355\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">el</span> <span class="token operator">=&gt;</span> el <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;result:&#39;</span><span class="token punctuation">,</span> result<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>\u800C\u76F8\u6BD4<code>lodash</code>\u8FD9\u91CC\u7684<code>map</code>\u6267\u884C\u4E86<code>5</code>\u6B21\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u4E0D\u4F7F\u7528 map\u3001slice</span>
<span class="token keyword">var</span> result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
 result<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">,</span> <span class="token string">&#39;result&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>\u7B80\u5355\u8BF4\u8FD9\u91CC\u7684<code>map</code>\u65B9\u6CD5\uFF0C\u6DFB\u52A0 <code>LazyWrapper</code> \u7684\u65B9\u6CD5\u5230 <code>lodash.prototype</code>\u5B58\u50A8\u4E0B\u6765\uFF0C\u6700\u540E\u8C03\u7528 <code>value</code>\u65F6\u518D\u8C03\u7528\u3002 \u5177\u4F53\u770B\u4E0B\u6587\u6E90\u7801\u5B9E\u73B0\u3002</p><h2 id="\u6DFB\u52A0-lazywrapper-\u7684\u65B9\u6CD5\u5230-lodash-prototype" tabindex="-1"><a class="header-anchor" href="#\u6DFB\u52A0-lazywrapper-\u7684\u65B9\u6CD5\u5230-lodash-prototype" aria-hidden="true">#</a> \u6DFB\u52A0 LazyWrapper \u7684\u65B9\u6CD5\u5230 lodash.prototype</h2><p>\u4E3B\u8981\u662F\u5982\u4E0B\u65B9\u6CD5\u6DFB\u52A0\u5230\u5230 <code>lodash.prototype</code> \u539F\u578B\u4E0A\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// &quot;constructor&quot;</span>
<span class="token punctuation">[</span><span class="token string">&quot;drop&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;dropRight&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;take&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;takeRight&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;filter&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;map&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;takeWhile&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;head&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;last&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;initial&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;tail&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;compact&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;find&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;findLast&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;invokeMap&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;reject&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;slice&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;takeRightWhile&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;toArray&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;clone&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;reverse&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;value&quot;</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="\u6E90\u7801-\u6CE8\u91CA" tabindex="-1"><a class="header-anchor" href="#\u6E90\u7801-\u6CE8\u91CA" aria-hidden="true">#</a> \u6E90\u7801&amp;\u6CE8\u91CA</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// Add \`LazyWrapper\` methods to \`lodash.prototype\`.</span>
<span class="token comment">// baseForOwn \u8FD9\u91CC\u5176\u5B9E\u5C31\u662F\u904D\u5386LazyWrapper.prototype\u4E0A\u7684\u65B9\u6CD5\uFF0C\u6267\u884C\u56DE\u8C03\u51FD\u6570</span>
<span class="token function">baseForOwn</span><span class="token punctuation">(</span><span class="token class-name">LazyWrapper</span><span class="token punctuation">.</span>prototype<span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">func<span class="token punctuation">,</span> methodName</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
 <span class="token comment">// \u68C0\u6D4B\u51FD\u6570\u540D\u79F0\u662F\u5426\u662F\u8FED\u4EE3\u5668\u4E5F\u5C31\u662F\u5FAA\u73AF</span>
 <span class="token keyword">var</span> checkIteratee <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^(?:filter|find|map|reject)|While$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>methodName<span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token comment">// \u68C0\u6D4B\u51FD\u6570\u540D\u79F0\u662F\u5426head\u548Clast</span>
  <span class="token comment">// \u987A\u4FBF\u63D0\u4E00\u4E0B ()\u8FD9\u4E2A\u662F\u6355\u83B7\u5206\u7EC4 \u800C\u52A0\u4E0A ?:  \u5219\u662F\u975E\u6355\u83B7\u5206\u7EC4 \u4E5F\u5C31\u662F\u8BF4\u4E0D\u7528\u4E8E\u5176\u4ED6\u64CD\u4F5C</span>
  isTaker <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^(?:head|last)$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>methodName<span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token comment">// lodashFunc \u662F \u6839\u636E isTaker \u7EC4\u5408 takeRight take methodName</span>
  lodashFunc <span class="token operator">=</span> lodash<span class="token punctuation">[</span>isTaker <span class="token operator">?</span> <span class="token punctuation">(</span><span class="token string">&#39;take&#39;</span> <span class="token operator">+</span> <span class="token punctuation">(</span>methodName <span class="token operator">==</span> <span class="token string">&#39;last&#39;</span> <span class="token operator">?</span> <span class="token string">&#39;Right&#39;</span> <span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">:</span> methodName<span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token comment">// \u6839\u636EisTaker \u548C \u662F find \u5224\u65AD\u7ED3\u679C\u662F\u5426 \u5305\u88C5</span>
  retUnwrapped <span class="token operator">=</span> isTaker <span class="token operator">||</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^find</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>methodName<span class="token punctuation">)</span><span class="token punctuation">;</span>

 <span class="token comment">// \u5982\u679C\u4E0D\u5B58\u5728\u8FD9\u4E2A\u51FD\u6570\uFF0C\u5C31\u4E0D\u5F80\u4E0B\u6267\u884C</span>
 <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>lodashFunc<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span>
 <span class="token comment">// \u628A lodash.prototype \u65B9\u6CD5\u8D4B\u503C\u5230lodash.prototype</span>
 lodash<span class="token punctuation">.</span>prototype<span class="token punctuation">[</span>methodName<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u53D6\u5B9E\u4F8B\u4E2D\u7684__wrapped__ \u503C \u4F8B\u5B50\u4E2D\u5219\u662F [1,2,3,4,5]</span>
  <span class="token keyword">var</span> value <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>__wrapped__<span class="token punctuation">,</span>
   <span class="token comment">// \u5982\u679C\u662Fhead\u548Clast \u65B9\u6CD5 isTaker \u8FD4\u56DE [1], \u5426\u5219\u662Farguments\u5BF9\u8C61</span>
   args <span class="token operator">=</span> isTaker <span class="token operator">?</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">:</span> arguments<span class="token punctuation">,</span>
   <span class="token comment">// \u5982\u679Cvalue \u662FLayeWrapper\u7684\u5B9E\u4F8B</span>
   isLazy <span class="token operator">=</span> value <span class="token keyword">instanceof</span> <span class="token class-name">LazyWrapper</span><span class="token punctuation">,</span>
   <span class="token comment">// \u8FED\u4EE3\u5668 \u5FAA\u73AF</span>
   iteratee <span class="token operator">=</span> args<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
   <span class="token comment">// \u4F7F\u7528useLazy isLazy value\u6216\u8005\u662F\u6570\u7EC4</span>
   useLazy <span class="token operator">=</span> isLazy <span class="token operator">||</span> <span class="token function">isArray</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">var</span> <span class="token function-variable function">interceptor</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token comment">// \u51FD\u6570\u6267\u884C value args \u7EC4\u5408\u6210\u6570\u7EC4\u53C2\u6570</span>
   <span class="token keyword">var</span> result <span class="token operator">=</span> <span class="token function">lodashFunc</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>lodash<span class="token punctuation">,</span> <span class="token function">arrayPush</span><span class="token punctuation">(</span><span class="token punctuation">[</span>value<span class="token punctuation">]</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token comment">// \u5982\u679C\u662F head \u548C last (isTaker) \u652F\u6301\u94FE\u5F0F\u8C03\u7528 \u8FD4\u56DE\u7ED3\u679C\u7684\u7B2C\u4E00\u4E2A\u53C2\u6570 \u5426\u5219 \u8FD4\u56DEresult</span>
   <span class="token keyword">return</span> <span class="token punctuation">(</span>isTaker <span class="token operator">&amp;&amp;</span> chainAll<span class="token punctuation">)</span> <span class="token operator">?</span> result<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">:</span> result<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token comment">// useLazy true \u5E76\u4E14 \u51FD\u6570checkIteratee \u4E14\u8FED\u4EE3\u5668\u662F\u51FD\u6570\uFF0C\u4E14\u8FED\u4EE3\u5668\u53C2\u6570\u4E2A\u6570\u4E0D\u7B49\u4E8E1</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>useLazy <span class="token operator">&amp;&amp;</span> checkIteratee <span class="token operator">&amp;&amp;</span> <span class="token keyword">typeof</span> iteratee <span class="token operator">==</span> <span class="token string">&#39;function&#39;</span> <span class="token operator">&amp;&amp;</span> iteratee<span class="token punctuation">.</span>length <span class="token operator">!=</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token comment">// Avoid lazy use if the iteratee has a &quot;length&quot; value other than \`1\`.</span>
   <span class="token comment">// useLazy \u8D4B\u503C\u4E3A false</span>
   <span class="token comment">// isLazy \u8D4B\u503C\u4E3A false</span>
   isLazy <span class="token operator">=</span> useLazy <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u53D6\u5B9E\u4F8B\u4E0A\u7684 __chain__</span>
  <span class="token keyword">var</span> chainAll <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>__chain__<span class="token punctuation">,</span>
   <span class="token comment">// \u5B58\u50A8\u7684\u5F85\u6267\u884C\u7684\u51FD\u6570 __actions__ \u4E8C\u6B21\u53D6\u53CD\u662F\u5E03\u5C14\u503C \u4E5F\u5C31\u662F\u7B49\u4E8E0\u6216\u8005\u5927\u4E8E0\u4E24\u79CD\u7ED3\u679C</span>
   isHybrid <span class="token operator">=</span> <span class="token operator">!</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>__actions__<span class="token punctuation">.</span>length<span class="token punctuation">,</span>
   <span class="token comment">// \u662F\u5426\u4E0D\u5305\u88C5 \u7528\u7ED3\u679C\u662F\u5426\u4E0D\u5305\u88C5 \u4E14 \u4E0D\u652F\u6301\u94FE\u5F0F\u8C03\u7528</span>
   isUnwrapped <span class="token operator">=</span> retUnwrapped <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>chainAll<span class="token punctuation">,</span>
   <span class="token comment">// \u662F\u5426\u4EC5Lazy \u7528isLazy \u548C \u5B58\u50A8\u7684\u51FD\u6570</span>
   onlyLazy <span class="token operator">=</span> isLazy <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>isHybrid<span class="token punctuation">;</span>

  <span class="token comment">// \u7ED3\u679C\u4E0D\u5305\u88C5 \u4E14 useLazy \u4E3A true</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>retUnwrapped <span class="token operator">&amp;&amp;</span> useLazy<span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token comment">// \u5B9E\u4F8B new LazyWrapper \u8FD9\u91CC\u7684this \u662F new LodashWrapper()</span>
   value <span class="token operator">=</span> onlyLazy <span class="token operator">?</span> value <span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">LazyWrapper</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token comment">// result \u6267\u884C\u51FD\u6570\u7ED3\u679C</span>
   <span class="token keyword">var</span> result <span class="token operator">=</span> <span class="token function">func</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>

   <span class="token comment">/*
   *
   // _.thru(value, interceptor)
   // \u8FD9\u4E2A\u65B9\u6CD5\u7C7B\u4F3C _.tap\uFF0C \u9664\u4E86\u5B83\u8FD4\u56DE interceptor \u7684\u8FD4\u56DE\u7ED3\u679C\u3002\u8BE5\u65B9\u6CD5\u7684\u76EE\u7684\u662F&quot;\u4F20\u9012&quot; \u503C\u5230\u4E00\u4E2A\u65B9\u6CD5\u94FE\u5E8F\u5217\u4EE5\u53D6\u4EE3\u4E2D\u95F4\u7ED3\u679C\u3002
   _([1, 2, 3])
   .tap(function(array) {
    // \u6539\u53D8\u4F20\u5165\u7684\u6570\u7EC4
    array.pop();
   })
   .reverse()
   .value();
   // =&gt; [2, 1]
   */</span>

   <span class="token comment">// thisArg \u6307\u5411undefined \u6216\u8005null \u975E\u4E25\u683C\u6A21\u5F0F\u4E0B\u662F\u6307\u5411window\uFF0C\u4E25\u683C\u6A21\u5F0F\u662Fundefined \u6216\u8005nll</span>
   result<span class="token punctuation">.</span>__actions__<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token string-property property">&#39;func&#39;</span><span class="token operator">:</span> thru<span class="token punctuation">,</span> <span class="token string-property property">&#39;args&#39;</span><span class="token operator">:</span> <span class="token punctuation">[</span>interceptor<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string-property property">&#39;thisArg&#39;</span><span class="token operator">:</span> <span class="token keyword">undefined</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token comment">// \u8FD4\u56DE\u5B9E\u4F8B lodashWrapper</span>
   <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">LodashWrapper</span><span class="token punctuation">(</span>result<span class="token punctuation">,</span> chainAll<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u4E0D\u5305\u88C5 \u4E14 onlyLazy \u4E3A true</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>isUnwrapped <span class="token operator">&amp;&amp;</span> onlyLazy<span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token comment">// \u6267\u884C\u51FD\u6570</span>
   <span class="token keyword">return</span> <span class="token function">func</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u4E0A\u9762\u90FD\u6CA1\u6709\u6267\u884C\uFF0C\u6267\u884C\u5230\u8FD9\u91CC\u4E86</span>
  <span class="token comment">// \u6267\u884C thru \u51FD\u6570\uFF0C\u56DE\u8C03\u51FD\u6570 \u662F interceptor</span>
  result <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">thru</span><span class="token punctuation">(</span>interceptor<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> isUnwrapped <span class="token operator">?</span> <span class="token punctuation">(</span>isTaker <span class="token operator">?</span> result<span class="token punctuation">.</span><span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">:</span> result<span class="token punctuation">.</span><span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">:</span> result<span class="token punctuation">;</span>
 <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br></div></div><div class="custom-container tip"><p class="custom-container-title">\u5C0F\u7ED3</p><p>\u5176\u5B9E\u5C31\u662F\u7528<code>LazyWrapper.prototype</code> \u6539\u5199\u539F\u5148\u5728<code>lodash.prototype</code>\u7684\u51FD\u6570\uFF0C\u5224\u65AD\u51FD\u6570\u662F\u5426\u9700\u8981\u4F7F\u7528\u60F0\u6027\u6C42\u503C\uFF0C\u9700\u8981\u65F6\u518D\u8C03\u7528\u3002</p></div><h3 id="\u4F8B\u5B50\u7684chain\u548Cmap\u6267\u884C\u540E\u7684debugger\u622A\u56FE" tabindex="-1"><a class="header-anchor" href="#\u4F8B\u5B50\u7684chain\u548Cmap\u6267\u884C\u540E\u7684debugger\u622A\u56FE" aria-hidden="true">#</a> \u4F8B\u5B50\u7684chain\u548Cmap\u6267\u884C\u540E\u7684debugger\u622A\u56FE</h3>`,15),m=["src"],d=n("h3",{id:"\u4F8B\u5B50\u7684chain\u548Cmap\u6267\u884C\u540E\u7684\u7ED3\u679C\u622A\u56FE",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u4F8B\u5B50\u7684chain\u548Cmap\u6267\u884C\u540E\u7684\u7ED3\u679C\u622A\u56FE","aria-hidden":"true"},"#"),o(" \u4F8B\u5B50\u7684chain\u548Cmap\u6267\u884C\u540E\u7684\u7ED3\u679C\u622A\u56FE")],-1),h=["src"],y=a(`<p>\u94FE\u5F0F\u8C03\u7528\u6700\u540E\u90FD\u662F\u8FD4\u56DE\u5B9E\u4F8B\u5BF9\u8C61\uFF0C\u5B9E\u9645\u7684\u5904\u7406\u6570\u636E\u7684\u51FD\u6570\u90FD\u6CA1\u6709\u8C03\u7528\uFF0C\u800C\u662F\u88AB\u5B58\u50A8\u5B58\u50A8\u4E0B\u6765\u4E86\uFF0C\u6700\u540E\u8C03\u7528<code>value</code>\u65B9\u6CD5\uFF0C\u624D\u6267\u884C\u8FD9\u4E9B\u51FD\u6570\u3002</p><h2 id="lodash-prototype-value-\u5373-wrappervalue" tabindex="-1"><a class="header-anchor" href="#lodash-prototype-value-\u5373-wrappervalue" aria-hidden="true">#</a> lodash.prototype.value \u5373 wrapperValue</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">baseWrapperValue</span><span class="token punctuation">(</span><span class="token parameter">value<span class="token punctuation">,</span> actions</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
 <span class="token keyword">var</span> result <span class="token operator">=</span> value<span class="token punctuation">;</span>
 <span class="token comment">// \u5982\u679C\u662FlazyWrapper\u7684\u5B9E\u4F8B\uFF0C\u5219\u8C03\u7528LazyWrapper.prototype.value \u65B9\u6CD5\uFF0C\u4E5F\u5C31\u662F lazyValue \u65B9\u6CD5</span>
 <span class="token keyword">if</span> <span class="token punctuation">(</span>result <span class="token keyword">instanceof</span> <span class="token class-name">LazyWrapper</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  result <span class="token operator">=</span> result<span class="token punctuation">.</span><span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span>
 <span class="token comment">// \u7C7B\u4F3C [].reduce()\uFF0C\u628A\u4E0A\u4E00\u4E2A\u51FD\u6570\u8FD4\u56DE\u7ED3\u679C\u4F5C\u4E3A\u53C2\u6570\u4F20\u9012\u7ED9\u4E0B\u4E00\u4E2A\u51FD\u6570</span>
 <span class="token keyword">return</span> <span class="token function">arrayReduce</span><span class="token punctuation">(</span>actions<span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">result<span class="token punctuation">,</span> action</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> action<span class="token punctuation">.</span><span class="token function">func</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>action<span class="token punctuation">.</span>thisArg<span class="token punctuation">,</span> <span class="token function">arrayPush</span><span class="token punctuation">(</span><span class="token punctuation">[</span>result<span class="token punctuation">]</span><span class="token punctuation">,</span> action<span class="token punctuation">.</span>args<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span><span class="token punctuation">,</span> result<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">wrapperValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
 <span class="token keyword">return</span> <span class="token function">baseWrapperValue</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>__wrapped__<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>__actions__<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
lodash<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>toJSON <span class="token operator">=</span> lodash<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>valueOf <span class="token operator">=</span> lodash<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>value <span class="token operator">=</span> wrapperValue<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p>\u5982\u679C\u662F\u60F0\u6027\u6C42\u503C\uFF0C\u5219\u8C03\u7528\u7684\u662F <code>LazyWrapper.prototype.value</code> \u5373 <code>lazyValue</code>\u3002</p><h2 id="lazywrapper-prototype-value-\u5373-lazyvalue-\u60F0\u6027\u6C42\u503C" tabindex="-1"><a class="header-anchor" href="#lazywrapper-prototype-value-\u5373-lazyvalue-\u60F0\u6027\u6C42\u503C" aria-hidden="true">#</a> LazyWrapper.prototype.value \u5373 lazyValue \u60F0\u6027\u6C42\u503C</h2><h3 id="lazyvalue\u6E90\u7801\u53CA\u6CE8\u91CA" tabindex="-1"><a class="header-anchor" href="#lazyvalue\u6E90\u7801\u53CA\u6CE8\u91CA" aria-hidden="true">#</a> <code>lazyValue</code>\u6E90\u7801\u53CA\u6CE8\u91CA</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">LazyWrapper</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
 <span class="token comment">// \u53C2\u6570 value</span>
 <span class="token keyword">this</span><span class="token punctuation">.</span>__wrapped__ <span class="token operator">=</span> value<span class="token punctuation">;</span>
 <span class="token comment">// \u6267\u884C\u7684\u51FD\u6570</span>
 <span class="token keyword">this</span><span class="token punctuation">.</span>__actions__ <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
 <span class="token keyword">this</span><span class="token punctuation">.</span>__dir__ <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
 <span class="token comment">// \u8FC7\u6EE4</span>
 <span class="token keyword">this</span><span class="token punctuation">.</span>__filtered__ <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
 <span class="token comment">// \u5B58\u50A8\u8FED\u4EE3\u5668\u51FD\u6570</span>
 <span class="token keyword">this</span><span class="token punctuation">.</span>__iteratees__ <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
 <span class="token comment">// \u9ED8\u8BA4\u6700\u5927\u53D6\u503C\u4E2A\u6570</span>
 <span class="token keyword">this</span><span class="token punctuation">.</span>__takeCount__ <span class="token operator">=</span> <span class="token constant">MAX_ARRAY_LENGTH</span><span class="token punctuation">;</span>
 <span class="token comment">// \u5177\u4F53\u53D6\u503C\u591A\u5C11\u4E2A\uFF0C\u5B58\u50A8\u51FD\u6570\u548C\u7C7B\u578B</span>
 <span class="token keyword">this</span><span class="token punctuation">.</span>__views__ <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token doc-comment comment">/**
* Extracts the unwrapped value from its lazy wrapper.
*
* <span class="token keyword">@private</span>
* <span class="token keyword">@name</span> value
* <span class="token keyword">@memberOf</span> LazyWrapper
* <span class="token keyword">@returns</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token operator">*</span><span class="token punctuation">}</span></span> Returns the unwrapped value.
*/</span>
<span class="token keyword">function</span> <span class="token function">lazyValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
 <span class="token comment">// this.__wrapped__ \u662F new LodashWrapper \u5B9E\u4F8B \u6240\u4EE5\u6267\u884C.value \u83B7\u53D6\u539F\u59CB\u503C</span>
 <span class="token keyword">var</span> array <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>__wrapped__<span class="token punctuation">.</span><span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token comment">//</span>
  dir <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>__dir__<span class="token punctuation">,</span>
  <span class="token comment">// \u662F\u5426\u662F\u51FD\u6570</span>
  isArr <span class="token operator">=</span> <span class="token function">isArray</span><span class="token punctuation">(</span>array<span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token comment">// \u662F\u5426\u4ECE\u53F3\u8FB9\u5F00\u59CB</span>
  isRight <span class="token operator">=</span> dir <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">,</span>
  <span class="token comment">// \u6570\u7EC4\u7684\u957F\u5EA6\u3002\u5982\u679C\u4E0D\u662F\u6570\u7EC4\uFF0C\u5219\u662F0</span>
  arrLength <span class="token operator">=</span> isArr <span class="token operator">?</span> array<span class="token punctuation">.</span>length <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
  <span class="token comment">// \u83B7\u53D6 take(3) \u4E0A\u8FF0\u4F8B\u5B50\u4E2D \u5219\u662F start: 0\uFF0Cend: 3</span>
  view <span class="token operator">=</span> <span class="token function">getView</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> arrLength<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>__views__<span class="token punctuation">)</span><span class="token punctuation">,</span>
  start <span class="token operator">=</span> view<span class="token punctuation">.</span>start<span class="token punctuation">,</span>
  end <span class="token operator">=</span> view<span class="token punctuation">.</span>end<span class="token punctuation">,</span>
  <span class="token comment">// \u957F\u5EA6 3</span>
  length <span class="token operator">=</span> end <span class="token operator">-</span> start<span class="token punctuation">,</span>
  <span class="token comment">// \u5982\u679C\u662F\u662F\u4ECE\u53F3\u5F00\u59CB</span>
  index <span class="token operator">=</span> isRight <span class="token operator">?</span> end <span class="token operator">:</span> <span class="token punctuation">(</span>start <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token comment">// \u5B58\u50A8\u7684\u8FED\u4EE3\u5668\u6570\u7EC4</span>
  iteratees <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>__iteratees__<span class="token punctuation">,</span>
  <span class="token comment">// \u8FED\u4EE3\u5668\u6570\u7EC4\u957F\u5EA6</span>
  iterLength <span class="token operator">=</span> iteratees<span class="token punctuation">.</span>length<span class="token punctuation">,</span>
  <span class="token comment">// \u7ED3\u679CresIndex</span>
  resIndex <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>
  <span class="token comment">// \u6700\u540E\u83B7\u53D6\u51E0\u4E2A\u503C\uFF0C\u4E5F\u5C31\u662F 3</span>
  takeCount <span class="token operator">=</span> <span class="token function">nativeMin</span><span class="token punctuation">(</span>length<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>__takeCount__<span class="token punctuation">)</span><span class="token punctuation">;</span>

 <span class="token comment">// \u5982\u679C\u4E0D\u662F\u6570\u7EC4\uFF0C\u6216\u8005 \u4E0D\u662F\u4ECE\u53F3\u5F00\u59CB \u5E76\u4E14 \u53C2\u6570\u6570\u7EC4\u957F\u5EA6\u7B49\u4E8Etake\u7684\u957F\u5EA6 takeCount\u7B49\u4E8E\u957F\u5EA6</span>
 <span class="token comment">// \u5219\u76F4\u63A5\u8C03\u7528 baseWrapperValue \u4E0D\u9700\u8981</span>
 <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isArr <span class="token operator">||</span> <span class="token punctuation">(</span><span class="token operator">!</span>isRight <span class="token operator">&amp;&amp;</span> arrLength <span class="token operator">==</span> length <span class="token operator">&amp;&amp;</span> takeCount <span class="token operator">==</span> length<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token function">baseWrapperValue</span><span class="token punctuation">(</span>array<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>__actions__<span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span>
 <span class="token keyword">var</span> result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

 <span class="token comment">// \u6807\u7B7E\u8BED\u53E5 label</span>
 <span class="token comment">// MDN label \u94FE\u63A5</span>
 <span class="token comment">// https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Statements/label</span>
 <span class="token comment">// \u6807\u8BB0\u8BED\u53E5\u53EF\u4EE5\u548C break \u6216 continue \u8BED\u53E5\u4E00\u8D77\u4F7F\u7528\u3002\u6807\u8BB0\u5C31\u662F\u5728\u4E00\u6761\u8BED\u53E5\u524D\u9762\u52A0\u4E2A\u53EF\u4EE5\u5F15\u7528\u7684\u6807\u8BC6\u7B26\uFF08identifier\uFF09\u3002</span>
 <span class="token literal-property property">outer</span><span class="token operator">:</span>
 <span class="token keyword">while</span> <span class="token punctuation">(</span>length<span class="token operator">--</span> <span class="token operator">&amp;&amp;</span> resIndex <span class="token operator">&lt;</span> takeCount<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  index <span class="token operator">+=</span> dir<span class="token punctuation">;</span>

  <span class="token keyword">var</span> iterIndex <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span>
   <span class="token comment">// \u6570\u7EC4\u7B2C\u4E00\u9879</span>
   value <span class="token operator">=</span> array<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">;</span>

  <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">++</span>iterIndex <span class="token operator">&lt;</span> iterLength<span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token comment">// \u8FED\u4EE3\u5668\u6570\u7EC4 {iteratee: function{}, typy: 2}</span>
   <span class="token keyword">var</span> data <span class="token operator">=</span> iteratees<span class="token punctuation">[</span>iterIndex<span class="token punctuation">]</span><span class="token punctuation">,</span>
    iteratee <span class="token operator">=</span> data<span class="token punctuation">.</span>iteratee<span class="token punctuation">,</span>
    type <span class="token operator">=</span> data<span class="token punctuation">.</span>type<span class="token punctuation">,</span>
    <span class="token comment">// \u7ED3\u679C \u8FED\u4EE3\u5668\u6267\u884C\u7ED3\u679C</span>
    computed <span class="token operator">=</span> <span class="token function">iteratee</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>

   <span class="token keyword">if</span> <span class="token punctuation">(</span>type <span class="token operator">==</span> <span class="token constant">LAZY_MAP_FLAG</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5982\u679C type \u662F map \u7C7B\u578B\uFF0C\u7ED3\u679C computed \u8D4B\u503C\u7ED9value</span>
    value <span class="token operator">=</span> computed<span class="token punctuation">;</span>
   <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>computed<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>type <span class="token operator">==</span> <span class="token constant">LAZY_FILTER_FLAG</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
     <span class="token comment">// \u9000\u51FA\u5F53\u524D\u8FD9\u6B21\u5FAA\u73AF\uFF0C\u8FDB\u884C\u4E0B\u4E00\u6B21\u5FAA\u73AF</span>
     <span class="token keyword">continue</span> outer<span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
     <span class="token comment">// \u9000\u51FA\u6574\u4E2A\u5FAA\u73AF</span>
     <span class="token keyword">break</span> outer<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
   <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u6700\u7EC8\u6570\u7EC4</span>
  result<span class="token punctuation">[</span>resIndex<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token operator">=</span> value<span class="token punctuation">;</span>
 <span class="token punctuation">}</span>
 <span class="token comment">// \u8FD4\u56DE\u6570\u7EC4 \u4F8B\u5B50\u4E2D\u5219\u662F [2, 3, 4]</span>
 <span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// Ensure \`LazyWrapper\` is an instance of \`baseLodash\`.</span>
<span class="token class-name">LazyWrapper</span><span class="token punctuation">.</span>prototype <span class="token operator">=</span> <span class="token function">baseCreate</span><span class="token punctuation">(</span>baseLodash<span class="token punctuation">.</span>prototype<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">LazyWrapper</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>constructor <span class="token operator">=</span> LazyWrapper<span class="token punctuation">;</span>

<span class="token class-name">LazyWrapper</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>value <span class="token operator">=</span> lazyValue<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br></div></div>`,7),v=["src"],f=a(`<div class="custom-container tip"><p class="custom-container-title">\u5C0F\u7ED3</p><p><code>lazyValue</code>\u7B80\u5355\u8BF4\u5B9E\u73B0\u7684\u529F\u80FD\u5C31\u662F\u628A\u4E4B\u524D\u8BB0\u5F55\u7684\u9700\u8981\u6267\u884C\u51E0\u6B21\uFF0C\u628A\u8BB0\u5F55\u5B58\u50A8\u7684\u51FD\u6570\u6267\u884C\u51E0\u6B21\uFF0C\u4E0D\u4F1A\u6709\u591A\u5C11\u9879\u6570\u636E\u5C31\u6267\u884C\u591A\u5C11\u6B21\uFF0C\u800C\u662F\u6839\u636E\u9700\u8981\u51E0\u9879\uFF0C\u6267\u884C\u51E0\u9879\u3002 \u4E5F\u5C31\u662F\u8BF4\u4EE5\u4E0B\u8FD9\u4E2A\u4F8B\u5B50\u4E2D\uFF0C<code>map</code>\u51FD\u6570\u53EA\u4F1A\u6267\u884C<code>3</code>\u6B21\u3002\u5982\u679C\u6CA1\u6709\u7528\u60F0\u6027\u6C42\u503C\uFF0C\u90A3\u4E48<code>map</code>\u51FD\u6570\u4F1A\u6267\u884C<code>5</code>\u6B21\u3002</p></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> result <span class="token operator">=</span> _<span class="token punctuation">.</span><span class="token function">chain</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">el</span> <span class="token operator">=&gt;</span> el <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token function">take</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="\u603B\u7ED3" tabindex="-1"><a class="header-anchor" href="#\u603B\u7ED3" aria-hidden="true">#</a> \u603B\u7ED3</h2><blockquote><p>\u6587\u7AE0\u4E3B\u8981\u5B66\u4E60\u4E86<code>runInContext()</code> \u5BFC\u51FA<code>_lodash</code>\u51FD\u6570\u4F7F\u7528<code>baseCreate</code>\u65B9\u6CD5\u539F\u578B\u7EE7\u627F<code>LodashWrapper</code>\u548C<code>LazyWrapper</code>\uFF0C<code>mixin</code>\u6302\u8F7D\u65B9\u6CD5\u5230<code>lodash.prototype</code>\u3001\u540E\u6587\u7528\u7ED3\u5408\u4F8B\u5B50\u89E3\u91CA<code>lodash.prototype.value(wrapperValue)</code>\u548C<code>Lazy.prototype.value(lazyValue)</code>\u60F0\u6027\u6C42\u503C\u7684\u6E90\u7801\u5177\u4F53\u5B9E\u73B0\u3002</p></blockquote><p><strong>\u5206\u4EAB\u4E00\u4E2A\u53EA\u77E5\u9053\u51FD\u6570\u540D\u627E\u6E90\u7801\u5B9A\u4F4D\u51FD\u6570\u7533\u660E\u4F4D\u7F6E\u7684<code>VSCode</code> \u6280\u5DE7</strong>\uFF1A<code>Ctrl + p</code>\u3002\u8F93\u5165 <code>@functionName</code> \u5B9A\u4F4D\u51FD\u6570<code>functionName</code>\u5728\u6E90\u7801\u6587\u4EF6\u4E2D\u7684\u5177\u4F53\u4F4D\u7F6E\u3002\u5982\u679C\u77E5\u9053\u8C03\u7528\u4F4D\u7F6E\uFF0C\u90A3\u76F4\u63A5\u6309<code>alt+\u9F20\u6807\u5DE6\u952E</code>\u5373\u53EF\u8DF3\u8F6C\u5230\u51FD\u6570\u7533\u660E\u7684\u4F4D\u7F6E\u3002</p>`,5);function g(s,w){return p(),t(e,null,[u,n("img",{src:s.$withBase("/assets/designFrame/16d19648b052f4cb_tplv-t2oaga2asx-watermark.awebp"),alt:"lodash \u539F\u578B\u5173\u7CFB\u56FE"},null,8,r),i,n("img",{src:s.$withBase("/assets/designFrame/16d2fe47c4bd70d6_tplv-t2oaga2asx-watermark.awebp"),alt:"lodash\u7684\u65B9\u6CD5\u548C\u5C5E\u6027\u6302\u8F7D\u5173\u7CFB"},null,8,k),b,n("img",{src:s.$withBase("/assets/designFrame/16d1965d6ddb9fad_tplv-t2oaga2asx-watermark.awebp"),alt:"demo"},null,8,m),d,n("img",{src:s.$withBase("/assets/designFrame/16d19661e13803e4_tplv-t2oaga2asx-watermark.awebp"),alt:"demo"},null,8,h),y,n("img",{src:s.$withBase("/assets/designFrame/16d1966cbe76d7c9_tplv-t2oaga2asx-watermark.awebp"),alt:"lodash\u548CLazyWrapper\u7684\u5173\u7CFB\u56FE"},null,8,v),f],64)}var j=c(l,[["render",g]]);export{j as default};
