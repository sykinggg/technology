import{a as n}from"./app.ee3fc36b.js";import{_ as s}from"./plugin-vue_export-helper.21dcd24c.js";const a={},p=n(`<h1 id="event" tabindex="-1"><a class="header-anchor" href="#event" aria-hidden="true">#</a> event</h1><p>\u5E73\u65F6\u5F00\u53D1\u5DE5\u4F5C\u4E2D\uFF0C\u5904\u7406\u7EC4\u4EF6\u95F4\u7684\u901A\u8BAF\uFF0C\u539F\u751F\u7684\u4EA4\u4E92\uFF0C\u90FD\u79BB\u4E0D\u5F00\u4E8B\u4EF6\u3002\u5BF9\u4E8E\u4E00\u4E2A\u7EC4\u4EF6\u5143\u7D20\uFF0C\u4E0D\u4EC5\u4EC5\u53EF\u4EE5\u7ED1\u5B9A\u539F\u751F\u7684 DOM \u4E8B\u4EF6\uFF0C\u8FD8\u53EF\u4EE5\u7ED1\u5B9A\u81EA\u5B9A\u4E49\u4E8B\u4EF6\uFF0C\u975E\u5E38\u7075\u6D3B\u548C\u65B9\u4FBF\u3002\u90A3\u4E48\u63A5\u4E0B\u6765\u4ECE\u6E90\u7801\u89D2\u5EA6\u6765\u770B\u770B\u5B83\u7684\u5B9E\u73B0\u539F\u7406\u3002</p><p>\u4E3A\u4E86\u66F4\u52A0\u76F4\u89C2\uFF0C\u901A\u8FC7\u4E00\u4E2A\u4F8B\u5B50\u6765\u5206\u6790\u5B83\u7684\u5B9E\u73B0\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> Child <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token string">&#39;&lt;button @click=&quot;clickHandler($event)&quot;&gt;&#39;</span> <span class="token operator">+</span>
  <span class="token string">&#39;click me&#39;</span> <span class="token operator">+</span>
  <span class="token string">&#39;&lt;/button&gt;&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token function">clickHandler</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Button clicked!&#39;</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$emit</span><span class="token punctuation">(</span><span class="token string">&#39;select&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">el</span><span class="token operator">:</span> <span class="token string">&#39;#app&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token string">&#39;&lt;div&gt;&#39;</span> <span class="token operator">+</span>
  <span class="token string">&#39;&lt;child @select=&quot;selectHandler&quot; @click.native.prevent=&quot;clickHandler&quot;&gt;&lt;/child&gt;&#39;</span> <span class="token operator">+</span>
  <span class="token string">&#39;&lt;/div&gt;&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token function">clickHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Child clicked!&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function">selectHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Child select!&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">components</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    Child
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br></div></div><h2 id="\u7F16\u8BD1" tabindex="-1"><a class="header-anchor" href="#\u7F16\u8BD1" aria-hidden="true">#</a> \u7F16\u8BD1</h2><p>\u5148\u4ECE\u7F16\u8BD1\u9636\u6BB5\u5F00\u59CB\u770B\u8D77\uFF0C\u5728 <code>parse</code> \u9636\u6BB5\uFF0C\u4F1A\u6267\u884C <code>processAttrs</code> \u65B9\u6CD5\uFF0C\u5B83\u7684\u5B9A\u4E49\u5728 <code>src/compiler/parser/index.js</code> \u4E2D\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> onRE <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^@|^v-on:</span><span class="token regex-delimiter">/</span></span>
<span class="token keyword">export</span> <span class="token keyword">const</span> dirRE <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^v-|^@|^:</span><span class="token regex-delimiter">/</span></span>
<span class="token keyword">export</span> <span class="token keyword">const</span> bindRE <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^:|^v-bind:</span><span class="token regex-delimiter">/</span></span>
<span class="token keyword">function</span> <span class="token function">processAttrs</span> <span class="token punctuation">(</span><span class="token parameter">el</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> list <span class="token operator">=</span> el<span class="token punctuation">.</span>attrsList
  <span class="token keyword">let</span> i<span class="token punctuation">,</span> l<span class="token punctuation">,</span> name<span class="token punctuation">,</span> rawName<span class="token punctuation">,</span> value<span class="token punctuation">,</span> modifiers<span class="token punctuation">,</span> isProp
  <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> l <span class="token operator">=</span> list<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> l<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    name <span class="token operator">=</span> rawName <span class="token operator">=</span> list<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>name
    value <span class="token operator">=</span> list<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>value
    <span class="token keyword">if</span> <span class="token punctuation">(</span>dirRE<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>   
      el<span class="token punctuation">.</span>hasBindings <span class="token operator">=</span> <span class="token boolean">true</span>
      modifiers <span class="token operator">=</span> <span class="token function">parseModifiers</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>modifiers<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        name <span class="token operator">=</span> name<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>modifierRE<span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>bindRE<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// ..</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>onRE<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        name <span class="token operator">=</span> name<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>onRE<span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
        <span class="token function">addHandler</span><span class="token punctuation">(</span>el<span class="token punctuation">,</span> name<span class="token punctuation">,</span> value<span class="token punctuation">,</span> modifiers<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> warn<span class="token punctuation">)</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token comment">// ...</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token comment">// ...</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">parseModifiers</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">name</span><span class="token operator">:</span> string</span><span class="token punctuation">)</span><span class="token operator">:</span> Object <span class="token operator">|</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> match <span class="token operator">=</span> name<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span>modifierRE<span class="token punctuation">)</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>match<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> ret <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
    match<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">m</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> ret<span class="token punctuation">[</span>m<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> ret
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br></div></div><p>\u5728\u5BF9\u6807\u7B7E\u5C5E\u6027\u7684\u5904\u7406\u8FC7\u7A0B\u4E2D\uFF0C\u5224\u65AD\u5982\u679C\u662F\u6307\u4EE4\uFF0C\u9996\u5148\u901A\u8FC7 <code>parseModifiers</code> \u89E3\u6790\u51FA\u4FEE\u9970\u7B26\uFF0C\u7136\u540E\u5224\u65AD\u5982\u679C\u4E8B\u4EF6\u7684\u6307\u4EE4\uFF0C\u5219\u6267\u884C <code>addHandler(el, name, value, modifiers, false, warn)</code> \u65B9\u6CD5\uFF0C\u5B83\u7684\u5B9A\u4E49\u5728 <code>src/compiler/helpers.js</code> \u4E2D\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">addHandler</span> <span class="token punctuation">(</span>
  <span class="token parameter"><span class="token literal-property property">el</span><span class="token operator">:</span> ASTElement<span class="token punctuation">,</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> string<span class="token punctuation">,</span>
  <span class="token literal-property property">value</span><span class="token operator">:</span> string<span class="token punctuation">,</span>
  <span class="token literal-property property">modifiers</span><span class="token operator">:</span> <span class="token operator">?</span>ASTModifiers<span class="token punctuation">,</span>
  important<span class="token operator">?</span><span class="token operator">:</span> boolean<span class="token punctuation">,</span>
  warn<span class="token operator">?</span><span class="token operator">:</span> Function</span>
<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  modifiers <span class="token operator">=</span> modifiers <span class="token operator">||</span> emptyObject
  <span class="token comment">// warn prevent and passive modifier</span>
  <span class="token comment">/* istanbul ignore if */</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>
    process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">!==</span> <span class="token string">&#39;production&#39;</span> <span class="token operator">&amp;&amp;</span> warn <span class="token operator">&amp;&amp;</span>
    modifiers<span class="token punctuation">.</span>prevent <span class="token operator">&amp;&amp;</span> modifiers<span class="token punctuation">.</span>passive
  <span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">warn</span><span class="token punctuation">(</span>
      <span class="token string">&#39;passive and prevent can\\&#39;t be used together. &#39;</span> <span class="token operator">+</span>
      <span class="token string">&#39;Passive handler can\\&#39;t prevent default event.&#39;</span>
    <span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// check capture modifier</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>modifiers<span class="token punctuation">.</span>capture<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">delete</span> modifiers<span class="token punctuation">.</span>capture
    name <span class="token operator">=</span> <span class="token string">&#39;!&#39;</span> <span class="token operator">+</span> name <span class="token comment">// mark the event as captured</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>modifiers<span class="token punctuation">.</span>once<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">delete</span> modifiers<span class="token punctuation">.</span>once
    name <span class="token operator">=</span> <span class="token string">&#39;~&#39;</span> <span class="token operator">+</span> name <span class="token comment">// mark the event as once</span>
  <span class="token punctuation">}</span>
  <span class="token comment">/* istanbul ignore if */</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>modifiers<span class="token punctuation">.</span>passive<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">delete</span> modifiers<span class="token punctuation">.</span>passive
    name <span class="token operator">=</span> <span class="token string">&#39;&amp;&#39;</span> <span class="token operator">+</span> name <span class="token comment">// mark the event as passive</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// normalize click.right and click.middle since they don&#39;t actually fire</span>
  <span class="token comment">// this is technically browser-specific, but at least for now browsers are</span>
  <span class="token comment">// the only target envs that have right/middle clicks.</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>name <span class="token operator">===</span> <span class="token string">&#39;click&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>modifiers<span class="token punctuation">.</span>right<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      name <span class="token operator">=</span> <span class="token string">&#39;contextmenu&#39;</span>
      <span class="token keyword">delete</span> modifiers<span class="token punctuation">.</span>right
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>modifiers<span class="token punctuation">.</span>middle<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      name <span class="token operator">=</span> <span class="token string">&#39;mouseup&#39;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">let</span> events
  <span class="token keyword">if</span> <span class="token punctuation">(</span>modifiers<span class="token punctuation">.</span>native<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">delete</span> modifiers<span class="token punctuation">.</span>native
    events <span class="token operator">=</span> el<span class="token punctuation">.</span>nativeEvents <span class="token operator">||</span> <span class="token punctuation">(</span>el<span class="token punctuation">.</span>nativeEvents <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    events <span class="token operator">=</span> el<span class="token punctuation">.</span>events <span class="token operator">||</span> <span class="token punctuation">(</span>el<span class="token punctuation">.</span>events <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">const</span> <span class="token literal-property property">newHandler</span><span class="token operator">:</span> any <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">value</span><span class="token operator">:</span> value<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>modifiers <span class="token operator">!==</span> emptyObject<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    newHandler<span class="token punctuation">.</span>modifiers <span class="token operator">=</span> modifiers
  <span class="token punctuation">}</span>

  <span class="token keyword">const</span> handlers <span class="token operator">=</span> events<span class="token punctuation">[</span>name<span class="token punctuation">]</span>
  <span class="token comment">/* istanbul ignore if */</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>handlers<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    important <span class="token operator">?</span> handlers<span class="token punctuation">.</span><span class="token function">unshift</span><span class="token punctuation">(</span>newHandler<span class="token punctuation">)</span> <span class="token operator">:</span> handlers<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>newHandler<span class="token punctuation">)</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>handlers<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    events<span class="token punctuation">[</span>name<span class="token punctuation">]</span> <span class="token operator">=</span> important <span class="token operator">?</span> <span class="token punctuation">[</span>newHandler<span class="token punctuation">,</span> handlers<span class="token punctuation">]</span> <span class="token operator">:</span> <span class="token punctuation">[</span>handlers<span class="token punctuation">,</span> newHandler<span class="token punctuation">]</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    events<span class="token punctuation">[</span>name<span class="token punctuation">]</span> <span class="token operator">=</span> newHandler
  <span class="token punctuation">}</span>

  el<span class="token punctuation">.</span>plain <span class="token operator">=</span> <span class="token boolean">false</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br></div></div><p><code>addHandler</code> \u51FD\u6570\u770B\u8D77\u6765\u957F\uFF0C\u5B9E\u9645\u4E0A\u5C31\u505A\u4E86 3 \u4EF6\u4E8B\u60C5\uFF0C\u9996\u5148\u6839\u636E <code>modifier</code> \u4FEE\u9970\u7B26\u5BF9\u4E8B\u4EF6\u540D <code>name</code> \u505A\u5904\u7406\uFF0C\u63A5\u7740\u6839\u636E <code>modifier.native</code> \u5224\u65AD\u662F\u4E00\u4E2A\u7EAF\u539F\u751F\u4E8B\u4EF6\u8FD8\u662F\u666E\u901A\u4E8B\u4EF6\uFF0C\u5206\u522B\u5BF9\u5E94 <code>el.nativeEvents</code> \u548C <code>el.events</code>\uFF0C\u6700\u540E\u6309\u7167 <code>name</code> \u5BF9\u4E8B\u4EF6\u505A\u5F52\u7C7B\uFF0C\u5E76\u628A\u56DE\u8C03\u51FD\u6570\u7684\u5B57\u7B26\u4E32\u4FDD\u7559\u5230\u5BF9\u5E94\u7684\u4E8B\u4EF6\u4E2D\u3002</p><p>\u5728\u7684\u4F8B\u5B50\u4E2D\uFF0C\u7236\u7EC4\u4EF6\u7684 <code>child</code> \u8282\u70B9\u751F\u6210\u7684 <code>el.events</code> \u548C <code>el.nativeEvents</code> \u5982\u4E0B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>el<span class="token punctuation">.</span>events <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">select</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&#39;selectHandler&#39;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

el<span class="token punctuation">.</span>nativeEvents <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">click</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&#39;clickHandler&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">modifiers</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">prevent</span><span class="token operator">:</span> <span class="token boolean">true</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p>\u5B50\u7EC4\u4EF6\u7684 <code>button</code> \u8282\u70B9\u751F\u6210\u7684 <code>el.events</code> \u5982\u4E0B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>el<span class="token punctuation">.</span>events <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">click</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&#39;clickHandler($event)&#39;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>\u7136\u540E\u5728 <code>codegen</code> \u7684\u9636\u6BB5\uFF0C\u4F1A\u5728 <code>genData</code> \u51FD\u6570\u4E2D\u6839\u636E AST \u5143\u7D20\u8282\u70B9\u4E0A\u7684 <code>events</code> \u548C <code>nativeEvents</code> \u751F\u6210 <code>data</code> \u6570\u636E\uFF0C\u5B83\u7684\u5B9A\u4E49\u5728 <code>src/compiler/codegen/index.js</code> \u4E2D\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">genData</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">el</span><span class="token operator">:</span> ASTElement<span class="token punctuation">,</span> <span class="token literal-property property">state</span><span class="token operator">:</span> CodegenState</span><span class="token punctuation">)</span><span class="token operator">:</span> string <span class="token punctuation">{</span>
  <span class="token keyword">let</span> data <span class="token operator">=</span> <span class="token string">&#39;{&#39;</span>
  <span class="token comment">// ...</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>el<span class="token punctuation">.</span>events<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    data <span class="token operator">+=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token function">genHandlers</span><span class="token punctuation">(</span>el<span class="token punctuation">.</span>events<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> state<span class="token punctuation">.</span>warn<span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">,</span><span class="token template-punctuation string">\`</span></span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>el<span class="token punctuation">.</span>nativeEvents<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    data <span class="token operator">+=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token function">genHandlers</span><span class="token punctuation">(</span>el<span class="token punctuation">.</span>nativeEvents<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span> state<span class="token punctuation">.</span>warn<span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">,</span><span class="token template-punctuation string">\`</span></span>
  <span class="token punctuation">}</span>
  <span class="token comment">// ...</span>
  <span class="token keyword">return</span> data
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>\u5BF9\u4E8E\u8FD9\u4E24\u4E2A\u5C5E\u6027\uFF0C\u4F1A\u8C03\u7528 <code>genHandlers</code> \u51FD\u6570\uFF0C\u5B9A\u4E49\u5728 <code>src/compiler/codegen/events.js</code> \u4E2D\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">genHandlers</span> <span class="token punctuation">(</span>
  <span class="token parameter"><span class="token literal-property property">events</span><span class="token operator">:</span> ASTElementHandlers<span class="token punctuation">,</span>
  <span class="token literal-property property">isNative</span><span class="token operator">:</span> boolean<span class="token punctuation">,</span>
  <span class="token literal-property property">warn</span><span class="token operator">:</span> Function</span>
<span class="token punctuation">)</span><span class="token operator">:</span> string <span class="token punctuation">{</span>
  <span class="token keyword">let</span> res <span class="token operator">=</span> isNative <span class="token operator">?</span> <span class="token string">&#39;nativeOn:{&#39;</span> <span class="token operator">:</span> <span class="token string">&#39;on:{&#39;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> name <span class="token keyword">in</span> events<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    res <span class="token operator">+=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token function">genHandler</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> events<span class="token punctuation">[</span>name<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">,</span><span class="token template-punctuation string">\`</span></span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> res<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&#39;}&#39;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> fnExpRE <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^\\s*([\\w$_]+|\\([^)]*?\\))\\s*=&gt;|^function\\s*\\(</span><span class="token regex-delimiter">/</span></span>
<span class="token keyword">const</span> simplePathRE <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^\\s*[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\[&#39;.*?&#39;]|\\[&quot;.*?&quot;]|\\[\\d+]|\\[[A-Za-z_$][\\w$]*])*\\s*$</span><span class="token regex-delimiter">/</span></span>
<span class="token keyword">function</span> <span class="token function">genHandler</span> <span class="token punctuation">(</span>
  <span class="token parameter"><span class="token literal-property property">name</span><span class="token operator">:</span> string<span class="token punctuation">,</span>
  <span class="token literal-property property">handler</span><span class="token operator">:</span> ASTElementHandler <span class="token operator">|</span> Array<span class="token operator">&lt;</span>ASTElementHandler<span class="token operator">&gt;</span></span>
<span class="token punctuation">)</span><span class="token operator">:</span> string <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>handler<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token string">&#39;function(){}&#39;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>handler<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">[</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>handler<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">handler</span> <span class="token operator">=&gt;</span> <span class="token function">genHandler</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> handler<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;,&#39;</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">]</span><span class="token template-punctuation string">\`</span></span>
  <span class="token punctuation">}</span>

  <span class="token keyword">const</span> isMethodPath <span class="token operator">=</span> simplePathRE<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>handler<span class="token punctuation">.</span>value<span class="token punctuation">)</span>
  <span class="token keyword">const</span> isFunctionExpression <span class="token operator">=</span> fnExpRE<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>handler<span class="token punctuation">.</span>value<span class="token punctuation">)</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>handler<span class="token punctuation">.</span>modifiers<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>isMethodPath <span class="token operator">||</span> isFunctionExpression<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> handler<span class="token punctuation">.</span>value
    <span class="token punctuation">}</span>
    <span class="token comment">/* istanbul ignore if */</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>__WEEX__ <span class="token operator">&amp;&amp;</span> handler<span class="token punctuation">.</span>params<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token function">genWeexHandler</span><span class="token punctuation">(</span>handler<span class="token punctuation">.</span>params<span class="token punctuation">,</span> handler<span class="token punctuation">.</span>value<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">function($event){</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>handler<span class="token punctuation">.</span>value<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">}</span><span class="token template-punctuation string">\`</span></span> <span class="token comment">// inline statement</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> code <span class="token operator">=</span> <span class="token string">&#39;&#39;</span>
    <span class="token keyword">let</span> genModifierCode <span class="token operator">=</span> <span class="token string">&#39;&#39;</span>
    <span class="token keyword">const</span> keys <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> key <span class="token keyword">in</span> handler<span class="token punctuation">.</span>modifiers<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>modifierCode<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        genModifierCode <span class="token operator">+=</span> modifierCode<span class="token punctuation">[</span>key<span class="token punctuation">]</span>
        <span class="token comment">// left/right</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>keyCodes<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          keys<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>key <span class="token operator">===</span> <span class="token string">&#39;exact&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> <span class="token literal-property property">modifiers</span><span class="token operator">:</span> ASTModifiers <span class="token operator">=</span> <span class="token punctuation">(</span>handler<span class="token punctuation">.</span>modifiers<span class="token operator">:</span> any<span class="token punctuation">)</span>
        genModifierCode <span class="token operator">+=</span> <span class="token function">genGuard</span><span class="token punctuation">(</span>
          <span class="token punctuation">[</span><span class="token string">&#39;ctrl&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;shift&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;alt&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;meta&#39;</span><span class="token punctuation">]</span>
            <span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">keyModifier</span> <span class="token operator">=&gt;</span> <span class="token operator">!</span>modifiers<span class="token punctuation">[</span>keyModifier<span class="token punctuation">]</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">keyModifier</span> <span class="token operator">=&gt;</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">$event.</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>keyModifier<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">Key</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;||&#39;</span><span class="token punctuation">)</span>
        <span class="token punctuation">)</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        keys<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>keys<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      code <span class="token operator">+=</span> <span class="token function">genKeyFilter</span><span class="token punctuation">(</span>keys<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// Make sure modifiers like prevent and stop get executed after key filtering</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>genModifierCode<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      code <span class="token operator">+=</span> genModifierCode
    <span class="token punctuation">}</span>
    <span class="token keyword">const</span> handlerCode <span class="token operator">=</span> isMethodPath
      <span class="token operator">?</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">return </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>handler<span class="token punctuation">.</span>value<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">($event)</span><span class="token template-punctuation string">\`</span></span>
      <span class="token operator">:</span> isFunctionExpression
        <span class="token operator">?</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">return (</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>handler<span class="token punctuation">.</span>value<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">)($event)</span><span class="token template-punctuation string">\`</span></span>
        <span class="token operator">:</span> handler<span class="token punctuation">.</span>value
    <span class="token comment">/* istanbul ignore if */</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>__WEEX__ <span class="token operator">&amp;&amp;</span> handler<span class="token punctuation">.</span>params<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token function">genWeexHandler</span><span class="token punctuation">(</span>handler<span class="token punctuation">.</span>params<span class="token punctuation">,</span> code <span class="token operator">+</span> handlerCode<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">function($event){</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>code<span class="token interpolation-punctuation punctuation">}</span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>handlerCode<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">}</span><span class="token template-punctuation string">\`</span></span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br></div></div><p><code>genHandlers</code> \u65B9\u6CD5\u904D\u5386\u4E8B\u4EF6\u5BF9\u8C61 <code>events</code>\uFF0C\u5BF9\u540C\u4E00\u4E2A\u4E8B\u4EF6\u540D\u79F0\u7684\u4E8B\u4EF6\u8C03\u7528 <code>genHandler(name, events[name])</code> \u65B9\u6CD5\uFF0C\u5B83\u7684\u5185\u5BB9\u770B\u8D77\u6765\u591A\uFF0C\u4F46\u5B9E\u9645\u4E0A\u903B\u8F91\u5F88\u7B80\u5355\uFF0C\u9996\u5148\u5148\u5224\u65AD\u5982\u679C <code>handler</code> \u662F\u4E00\u4E2A\u6570\u7EC4\uFF0C\u5C31\u904D\u5386\u5B83\u7136\u540E\u9012\u5F52\u8C03\u7528 <code>genHandler</code> \u65B9\u6CD5\u5E76\u62FC\u63A5\u7ED3\u679C\uFF0C\u7136\u540E\u5224\u65AD <code>hanlder.value</code> \u662F\u4E00\u4E2A\u51FD\u6570\u7684\u8C03\u7528\u8DEF\u5F84\u8FD8\u662F\u4E00\u4E2A\u51FD\u6570\u8868\u8FBE\u5F0F\uFF0C \u63A5\u7740\u5BF9 <code>modifiers</code> \u505A\u5224\u65AD\uFF0C\u5BF9\u4E8E\u6CA1\u6709 <code>modifiers</code> \u7684\u60C5\u51B5\uFF0C\u5C31\u6839\u636E <code>handler.value</code> \u4E0D\u540C\u60C5\u51B5\u5904\u7406\uFF0C\u8981\u4E48\u76F4\u63A5\u8FD4\u56DE\uFF0C\u8981\u4E48\u8FD4\u56DE\u4E00\u4E2A\u51FD\u6570\u5305\u88F9\u7684\u8868\u8FBE\u5F0F\uFF1B\u5BF9\u4E8E\u6709 <code>modifiers</code> \u7684\u60C5\u51B5\uFF0C\u5219\u5BF9\u5404\u79CD\u4E0D\u540C\u7684 <code>modifer</code> \u60C5\u51B5\u505A\u4E0D\u540C\u5904\u7406\uFF0C\u6DFB\u52A0\u76F8\u5E94\u7684\u4EE3\u7801\u4E32\u3002</p><p>\u90A3\u4E48\u5BF9\u4E8E\u7684\u4F8B\u5B50\u800C\u8A00\uFF0C\u7236\u7EC4\u4EF6\u751F\u6210\u7684 <code>data</code> \u4E32\u4E3A\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">{</span>
  <span class="token literal-property property">on</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token string-property property">&quot;select&quot;</span><span class="token operator">:</span> selectHandler<span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">nativeOn</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token string-property property">&quot;click&quot;</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">$event</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      $event<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> <span class="token function">clickHandler</span><span class="token punctuation">(</span>$event<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>\u5B50\u7EC4\u4EF6\u751F\u6210\u7684 <code>data</code> \u4E32\u4E3A\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">{</span>
  <span class="token literal-property property">on</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token string-property property">&quot;click&quot;</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">$event</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">clickHandler</span><span class="token punctuation">(</span>$event<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>\u90A3\u4E48\u5230\u8FD9\u91CC\uFF0C\u7F16\u8BD1\u90E8\u5206\u5B8C\u4E86\uFF0C\u63A5\u4E0B\u6765\u6765\u770B\u4E00\u4E0B\u8FD0\u884C\u65F6\u90E8\u5206\u662F\u5982\u4F55\u5B9E\u73B0\u7684\u3002\u5176\u5B9E Vue \u7684\u4E8B\u4EF6\u6709 2 \u79CD\uFF0C\u4E00\u79CD\u662F\u539F\u751F DOM \u4E8B\u4EF6\uFF0C\u4E00\u79CD\u662F\u7528\u6237\u81EA\u5B9A\u4E49\u4E8B\u4EF6\uFF0C\u5206\u522B\u6765\u770B\u3002</p><h2 id="dom-\u4E8B\u4EF6" tabindex="-1"><a class="header-anchor" href="#dom-\u4E8B\u4EF6" aria-hidden="true">#</a> DOM \u4E8B\u4EF6</h2><p>\u8FD8\u8BB0\u5F97\u4E4B\u524D\u5728 <code>patch</code> \u7684\u65F6\u5019\u6267\u884C\u5404\u79CD <code>module</code> \u7684\u94A9\u5B50\u51FD\u6570\u5417\uFF0C\u5F53\u65F6\u8FD9\u90E8\u5206\u662F\u7565\u8FC7\u7684\uFF0C\u4E4B\u524D\u53EA\u5206\u6790\u4E86 DOM \u662F\u5982\u4F55\u6E32\u67D3\u7684\uFF0C\u800C DOM \u5143\u7D20\u76F8\u5173\u7684\u5C5E\u6027\u3001\u6837\u5F0F\u3001\u4E8B\u4EF6\u7B49\u90FD\u662F\u901A\u8FC7\u8FD9\u4E9B <code>module</code> \u7684\u94A9\u5B50\u51FD\u6570\u5B8C\u6210\u8BBE\u7F6E\u7684\u3002</p><p>\u6240\u6709\u548C web \u76F8\u5173\u7684 <code>module</code> \u90FD\u5B9A\u4E49\u5728 <code>src/platforms/web/runtime/modules</code> \u76EE\u5F55\u4E0B\uFF0C\u8FD9\u6B21\u53EA\u5173\u6CE8\u76EE\u5F55\u4E0B\u7684 <code>events.js</code> \u5373\u53EF\u3002</p><p>\u5728 <code>patch</code> \u8FC7\u7A0B\u4E2D\u7684\u521B\u5EFA\u9636\u6BB5\u548C\u66F4\u65B0\u9636\u6BB5\u90FD\u4F1A\u6267\u884C <code>updateDOMListeners</code>\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> <span class="token literal-property property">target</span><span class="token operator">:</span> any
<span class="token keyword">function</span> <span class="token function">updateDOMListeners</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">oldVnode</span><span class="token operator">:</span> VNodeWithData<span class="token punctuation">,</span> <span class="token literal-property property">vnode</span><span class="token operator">:</span> VNodeWithData</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isUndef</span><span class="token punctuation">(</span>oldVnode<span class="token punctuation">.</span>data<span class="token punctuation">.</span>on<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">isUndef</span><span class="token punctuation">(</span>vnode<span class="token punctuation">.</span>data<span class="token punctuation">.</span>on<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">const</span> on <span class="token operator">=</span> vnode<span class="token punctuation">.</span>data<span class="token punctuation">.</span>on <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token keyword">const</span> oldOn <span class="token operator">=</span> oldVnode<span class="token punctuation">.</span>data<span class="token punctuation">.</span>on <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  target <span class="token operator">=</span> vnode<span class="token punctuation">.</span>elm
  <span class="token function">normalizeEvents</span><span class="token punctuation">(</span>on<span class="token punctuation">)</span>
  <span class="token function">updateListeners</span><span class="token punctuation">(</span>on<span class="token punctuation">,</span> oldOn<span class="token punctuation">,</span> add<span class="token punctuation">,</span> remove<span class="token punctuation">,</span> vnode<span class="token punctuation">.</span>context<span class="token punctuation">)</span>
  target <span class="token operator">=</span> <span class="token keyword">undefined</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>\u9996\u5148\u83B7\u53D6 <code>vnode.data.on</code>\uFF0C\u8FD9\u5C31\u662F\u4E4B\u524D\u7684\u751F\u6210\u7684 <code>data</code> \u4E2D\u5BF9\u5E94\u7684\u4E8B\u4EF6\u5BF9\u8C61\uFF0C<code>target</code> \u662F\u5F53\u524D <code>vnode</code> \u5BF9\u4E8E\u7684 DOM \u5BF9\u8C61\uFF0C<code>normalizeEvents</code> \u4E3B\u8981\u662F\u5BF9 <code>v-model</code> \u76F8\u5173\u7684\u5904\u7406\uFF0C\u4E4B\u540E\u5206\u6790 <code>v-model</code> \u7684\u65F6\u5019\u4F1A\u4ECB\u7ECD\uFF0C\u63A5\u7740\u8C03\u7528 <code>updateListeners(on, oldOn, add, remove, vnode.context)</code> \u65B9\u6CD5\uFF0C\u5B83\u7684\u5B9A\u4E49\u5728 <code>src/core/vdom/helpers/update-listeners.js</code> \u4E2D\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">updateListeners</span> <span class="token punctuation">(</span>
  <span class="token parameter"><span class="token literal-property property">on</span><span class="token operator">:</span> Object<span class="token punctuation">,</span>
  <span class="token literal-property property">oldOn</span><span class="token operator">:</span> Object<span class="token punctuation">,</span>
  <span class="token literal-property property">add</span><span class="token operator">:</span> Function<span class="token punctuation">,</span>
  <span class="token literal-property property">remove</span><span class="token operator">:</span> Function<span class="token punctuation">,</span>
  <span class="token literal-property property">vm</span><span class="token operator">:</span> Component</span>
<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> name<span class="token punctuation">,</span> def<span class="token punctuation">,</span> cur<span class="token punctuation">,</span> old<span class="token punctuation">,</span> event
  <span class="token keyword">for</span> <span class="token punctuation">(</span>name <span class="token keyword">in</span> on<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    def <span class="token operator">=</span> cur <span class="token operator">=</span> on<span class="token punctuation">[</span>name<span class="token punctuation">]</span>
    old <span class="token operator">=</span> oldOn<span class="token punctuation">[</span>name<span class="token punctuation">]</span>
    event <span class="token operator">=</span> <span class="token function">normalizeEvent</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span>
    <span class="token comment">/* istanbul ignore if */</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>__WEEX__ <span class="token operator">&amp;&amp;</span> <span class="token function">isPlainObject</span><span class="token punctuation">(</span>def<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      cur <span class="token operator">=</span> def<span class="token punctuation">.</span>handler
      event<span class="token punctuation">.</span>params <span class="token operator">=</span> def<span class="token punctuation">.</span>params
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isUndef</span><span class="token punctuation">(</span>cur<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">!==</span> <span class="token string">&#39;production&#39;</span> <span class="token operator">&amp;&amp;</span> <span class="token function">warn</span><span class="token punctuation">(</span>
        <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Invalid handler for event &quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>event<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;: got </span><span class="token template-punctuation string">\`</span></span> <span class="token operator">+</span> <span class="token function">String</span><span class="token punctuation">(</span>cur<span class="token punctuation">)</span><span class="token punctuation">,</span>
        vm
      <span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isUndef</span><span class="token punctuation">(</span>old<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isUndef</span><span class="token punctuation">(</span>cur<span class="token punctuation">.</span>fns<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        cur <span class="token operator">=</span> on<span class="token punctuation">[</span>name<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">createFnInvoker</span><span class="token punctuation">(</span>cur<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
      <span class="token function">add</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span>name<span class="token punctuation">,</span> cur<span class="token punctuation">,</span> event<span class="token punctuation">.</span>once<span class="token punctuation">,</span> event<span class="token punctuation">.</span>capture<span class="token punctuation">,</span> event<span class="token punctuation">.</span>passive<span class="token punctuation">,</span> event<span class="token punctuation">.</span>params<span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>cur <span class="token operator">!==</span> old<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      old<span class="token punctuation">.</span>fns <span class="token operator">=</span> cur
      on<span class="token punctuation">[</span>name<span class="token punctuation">]</span> <span class="token operator">=</span> old
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span>name <span class="token keyword">in</span> oldOn<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isUndef</span><span class="token punctuation">(</span>on<span class="token punctuation">[</span>name<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      event <span class="token operator">=</span> <span class="token function">normalizeEvent</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span>
      <span class="token function">remove</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span>name<span class="token punctuation">,</span> oldOn<span class="token punctuation">[</span>name<span class="token punctuation">]</span><span class="token punctuation">,</span> event<span class="token punctuation">.</span>capture<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br></div></div><p><code>updateListeners</code> \u7684\u903B\u8F91\u5F88\u7B80\u5355\uFF0C\u904D\u5386 <code>on</code> \u53BB\u6DFB\u52A0\u4E8B\u4EF6\u76D1\u542C\uFF0C\u904D\u5386 <code>oldOn</code> \u53BB\u79FB\u9664\u4E8B\u4EF6\u76D1\u542C\uFF0C\u5173\u4E8E\u76D1\u542C\u548C\u79FB\u9664\u4E8B\u4EF6\u7684\u65B9\u6CD5\u90FD\u662F\u5916\u90E8\u4F20\u5165\u7684\uFF0C\u56E0\u4E3A\u5B83\u65E2\u5904\u7406\u539F\u751F DOM \u4E8B\u4EF6\u7684\u6DFB\u52A0\u5220\u9664\uFF0C\u4E5F\u5904\u7406\u81EA\u5B9A\u4E49\u4E8B\u4EF6\u7684\u6DFB\u52A0\u5220\u9664\u3002</p><p>\u5BF9\u4E8E <code>on</code> \u7684\u904D\u5386\uFF0C\u9996\u5148\u83B7\u5F97\u6BCF\u4E00\u4E2A\u4E8B\u4EF6\u540D\uFF0C\u7136\u540E\u505A <code>normalizeEvent</code> \u7684\u5904\u7406\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> normalizeEvent <span class="token operator">=</span> <span class="token function">cached</span><span class="token punctuation">(</span><span class="token punctuation">(</span>name<span class="token operator">:</span> string<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> string<span class="token punctuation">,</span>
  <span class="token literal-property property">once</span><span class="token operator">:</span> boolean<span class="token punctuation">,</span>
  <span class="token literal-property property">capture</span><span class="token operator">:</span> boolean<span class="token punctuation">,</span>
  <span class="token literal-property property">passive</span><span class="token operator">:</span> boolean<span class="token punctuation">,</span>
  handler<span class="token operator">?</span><span class="token operator">:</span> Function<span class="token punctuation">,</span>
  params<span class="token operator">?</span><span class="token operator">:</span> Array<span class="token operator">&lt;</span>any<span class="token operator">&gt;</span>
<span class="token punctuation">}</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> passive <span class="token operator">=</span> name<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">&#39;&amp;&#39;</span>
  name <span class="token operator">=</span> passive <span class="token operator">?</span> name<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">:</span> name
  <span class="token keyword">const</span> once <span class="token operator">=</span> name<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">&#39;~&#39;</span> <span class="token comment">// Prefixed last, checked first</span>
  name <span class="token operator">=</span> once <span class="token operator">?</span> name<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">:</span> name
  <span class="token keyword">const</span> capture <span class="token operator">=</span> name<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">&#39;!&#39;</span>
  name <span class="token operator">=</span> capture <span class="token operator">?</span> name<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">:</span> name
  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    name<span class="token punctuation">,</span>
    once<span class="token punctuation">,</span>
    capture<span class="token punctuation">,</span>
    passive
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><p>\u6839\u636E\u7684\u7684\u4E8B\u4EF6\u540D\u7684\u4E00\u4E9B\u7279\u6B8A\u6807\u8BC6\uFF08\u4E4B\u524D\u5728 <code>addHandler</code> \u7684\u65F6\u5019\u6DFB\u52A0\u4E0A\u7684\uFF09\u533A\u5206\u51FA\u8FD9\u4E2A\u4E8B\u4EF6\u662F\u5426\u6709 <code>once</code>\u3001<code>capture</code>\u3001<code>passive</code> \u7B49\u4FEE\u9970\u7B26\u3002</p><p>\u5904\u7406\u5B8C\u4E8B\u4EF6\u540D\u540E\uFF0C\u53C8\u5BF9\u4E8B\u4EF6\u56DE\u8C03\u51FD\u6570\u505A\u5904\u7406\uFF0C\u5BF9\u4E8E\u7B2C\u4E00\u6B21\uFF0C\u6EE1\u8DB3 <code>isUndef(old)</code> \u5E76\u4E14 <code>isUndef(cur.fns)</code>\uFF0C\u4F1A\u6267\u884C <code>cur = on[name] = createFnInvoker(cur)</code> \u65B9\u6CD5\u53BB\u521B\u5EFA\u4E00\u4E2A\u56DE\u8C03\u51FD\u6570\uFF0C\u7136\u540E\u5728\u6267\u884C <code>add(event.name, cur, event.once, event.capture, event.passive, event.params)</code> \u5B8C\u6210\u4E00\u6B21\u4E8B\u4EF6\u7ED1\u5B9A\u3002\u5148\u770B\u4E00\u4E0B <code>createFnInvoker</code> \u7684\u5B9E\u73B0\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">createFnInvoker</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">fns</span><span class="token operator">:</span> Function <span class="token operator">|</span> Array<span class="token operator">&lt;</span>Function<span class="token operator">&gt;</span></span><span class="token punctuation">)</span><span class="token operator">:</span> Function <span class="token punctuation">{</span>
  <span class="token keyword">function</span> <span class="token function">invoker</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> fns <span class="token operator">=</span> invoker<span class="token punctuation">.</span>fns
    <span class="token keyword">if</span> <span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>fns<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> cloned <span class="token operator">=</span> fns<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> cloned<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        cloned<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> arguments<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token function">fns</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> arguments<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  invoker<span class="token punctuation">.</span>fns <span class="token operator">=</span> fns
  <span class="token keyword">return</span> invoker
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p>\u8FD9\u91CC\u5B9A\u4E49\u4E86 <code>invoker</code> \u65B9\u6CD5\u5E76\u8FD4\u56DE\uFF0C\u7531\u4E8E\u4E00\u4E2A\u4E8B\u4EF6\u53EF\u80FD\u4F1A\u5BF9\u5E94\u591A\u4E2A\u56DE\u8C03\u51FD\u6570\uFF0C\u6240\u4EE5\u8FD9\u91CC\u505A\u4E86\u6570\u7EC4\u7684\u5224\u65AD\uFF0C\u591A\u4E2A\u56DE\u8C03\u51FD\u6570\u5C31\u4F9D\u6B21\u8C03\u7528\u3002\u6CE8\u610F\u6700\u540E\u7684\u8D4B\u503C\u903B\u8F91\uFF0C <code>invoker.fns = fns</code>\uFF0C\u6BCF\u4E00\u6B21\u6267\u884C <code>invoker</code> \u51FD\u6570\u90FD\u662F\u4ECE <code>invoker.fns</code> \u91CC\u53D6\u6267\u884C\u7684\u56DE\u8C03\u51FD\u6570\uFF0C\u56DE\u5230 <code>updateListeners</code>\uFF0C\u5F53\u7B2C\u4E8C\u6B21\u6267\u884C\u8BE5\u51FD\u6570\u7684\u65F6\u5019\uFF0C\u5224\u65AD\u5982\u679C <code>cur !== old</code>\uFF0C\u90A3\u4E48\u53EA\u9700\u8981\u66F4\u6539 <code>old.fns = cur</code> \u628A\u4E4B\u524D\u7ED1\u5B9A\u7684 <code>involer.fns</code> \u8D4B\u503C\u4E3A\u65B0\u7684\u56DE\u8C03\u51FD\u6570\u5373\u53EF\uFF0C\u5E76\u4E14 \u901A\u8FC7 <code>on[name] = old</code> \u4FDD\u7559\u5F15\u7528\u5173\u7CFB\uFF0C\u8FD9\u6837\u5C31\u4FDD\u8BC1\u4E86\u4E8B\u4EF6\u56DE\u8C03\u53EA\u6DFB\u52A0\u4E00\u6B21\uFF0C\u4E4B\u540E\u4EC5\u4EC5\u53BB\u4FEE\u6539\u5B83\u7684\u56DE\u8C03\u51FD\u6570\u7684\u5F15\u7528\u3002</p><p><code>updateListeners</code> \u51FD\u6570\u7684\u6700\u540E\u904D\u5386 <code>oldOn</code> \u62FF\u5230\u4E8B\u4EF6\u540D\u79F0\uFF0C\u5224\u65AD\u5982\u679C\u6EE1\u8DB3 <code>isUndef(on[name])</code>\uFF0C\u5219\u6267\u884C <code>remove(event.name, oldOn[name], event.capture)</code> \u53BB\u79FB\u9664\u4E8B\u4EF6\u56DE\u8C03\u3002</p><p>\u4E86\u89E3\u4E86 <code>updateListeners</code> \u7684\u5B9E\u73B0\u540E\uFF0C\u6765\u770B\u4E00\u4E0B\u5728\u539F\u751F DOM \u4E8B\u4EF6\u4E2D\u771F\u6B63\u6DFB\u52A0\u56DE\u8C03\u548C\u79FB\u9664\u56DE\u8C03\u51FD\u6570\u7684\u5B9E\u73B0\uFF0C\u5B83\u4EEC\u7684\u5B9A\u4E49\u90FD\u5728 <code>src/platforms/web/runtime/modules/event.js</code> \u4E2D\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">add</span> <span class="token punctuation">(</span>
  <span class="token parameter"><span class="token literal-property property">event</span><span class="token operator">:</span> string<span class="token punctuation">,</span>
  <span class="token literal-property property">handler</span><span class="token operator">:</span> Function<span class="token punctuation">,</span>
  <span class="token literal-property property">once</span><span class="token operator">:</span> boolean<span class="token punctuation">,</span>
  <span class="token literal-property property">capture</span><span class="token operator">:</span> boolean<span class="token punctuation">,</span>
  <span class="token literal-property property">passive</span><span class="token operator">:</span> boolean</span>
<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  handler <span class="token operator">=</span> <span class="token function">withMacroTask</span><span class="token punctuation">(</span>handler<span class="token punctuation">)</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>once<span class="token punctuation">)</span> handler <span class="token operator">=</span> <span class="token function">createOnceHandler</span><span class="token punctuation">(</span>handler<span class="token punctuation">,</span> event<span class="token punctuation">,</span> capture<span class="token punctuation">)</span>
  target<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span>
    event<span class="token punctuation">,</span>
    handler<span class="token punctuation">,</span>
    supportsPassive
      <span class="token operator">?</span> <span class="token punctuation">{</span> capture<span class="token punctuation">,</span> passive <span class="token punctuation">}</span>
      <span class="token operator">:</span> capture
  <span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">remove</span> <span class="token punctuation">(</span>
  <span class="token parameter"><span class="token literal-property property">event</span><span class="token operator">:</span> string<span class="token punctuation">,</span>
  <span class="token literal-property property">handler</span><span class="token operator">:</span> Function<span class="token punctuation">,</span>
  <span class="token literal-property property">capture</span><span class="token operator">:</span> boolean<span class="token punctuation">,</span>
  _target<span class="token operator">?</span><span class="token operator">:</span> HTMLElement</span>
<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token punctuation">(</span>_target <span class="token operator">||</span> target<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">removeEventListener</span><span class="token punctuation">(</span>
    event<span class="token punctuation">,</span>
    handler<span class="token punctuation">.</span>_withTask <span class="token operator">||</span> handler<span class="token punctuation">,</span>
    capture
  <span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br></div></div><p><code>add</code> \u548C <code>remove</code> \u7684\u903B\u8F91\u5F88\u7B80\u5355\uFF0C\u5C31\u662F\u5B9E\u9645\u4E0A\u8C03\u7528\u539F\u751F <code>addEventListener</code> \u548C <code>removeEventListener</code>\uFF0C\u5E76\u6839\u636E\u53C2\u6570\u4F20\u9012\u4E00\u4E9B\u914D\u7F6E\uFF0C\u6CE8\u610F\u8FD9\u91CC\u7684 <code>hanlder</code> \u4F1A\u7528 <code>withMacroTask(hanlder)</code> \u5305\u88F9\u4E00\u4E0B\uFF0C\u5B83\u7684\u5B9A\u4E49\u5728 <code>src/core/util/next-tick.js</code> \u4E2D\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">withMacroTask</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">fn</span><span class="token operator">:</span> Function</span><span class="token punctuation">)</span><span class="token operator">:</span> Function <span class="token punctuation">{</span>
  <span class="token keyword">return</span> fn<span class="token punctuation">.</span>_withTask <span class="token operator">||</span> <span class="token punctuation">(</span>fn<span class="token punctuation">.</span><span class="token function-variable function">_withTask</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    useMacroTask <span class="token operator">=</span> <span class="token boolean">true</span>
    <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token function">fn</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> arguments<span class="token punctuation">)</span>
    useMacroTask <span class="token operator">=</span> <span class="token boolean">false</span>
    <span class="token keyword">return</span> res
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>\u5B9E\u9645\u4E0A\u5C31\u662F\u5F3A\u5236\u5728 DOM \u4E8B\u4EF6\u7684\u56DE\u8C03\u51FD\u6570\u6267\u884C\u671F\u95F4\u5982\u679C\u4FEE\u6539\u4E86\u6570\u636E\uFF0C\u90A3\u4E48\u8FD9\u4E9B\u6570\u636E\u66F4\u6539\u63A8\u5165\u7684\u961F\u5217\u4F1A\u88AB\u5F53\u505A <code>macroTask</code> \u5728 <code>nextTick</code> \u540E\u6267\u884C\u3002</p><h2 id="\u81EA\u5B9A\u4E49\u4E8B\u4EF6" tabindex="-1"><a class="header-anchor" href="#\u81EA\u5B9A\u4E49\u4E8B\u4EF6" aria-hidden="true">#</a> \u81EA\u5B9A\u4E49\u4E8B\u4EF6</h2><p>\u9664\u4E86\u539F\u751F DOM \u4E8B\u4EF6\uFF0CVue \u8FD8\u652F\u6301\u4E86\u81EA\u5B9A\u4E49\u4E8B\u4EF6\uFF0C\u5E76\u4E14\u81EA\u5B9A\u4E49\u4E8B\u4EF6\u53EA\u80FD\u4F5C\u7528\u5728\u7EC4\u4EF6\u4E0A\uFF0C\u5982\u679C\u5728\u7EC4\u4EF6\u4E0A\u4F7F\u7528\u539F\u751F\u4E8B\u4EF6\uFF0C\u9700\u8981\u52A0 <code>.native</code> \u4FEE\u9970\u7B26\uFF0C\u666E\u901A\u5143\u7D20\u4E0A\u4F7F\u7528 <code>.native</code> \u4FEE\u9970\u7B26\u65E0\u6548\uFF0C\u63A5\u4E0B\u6765\u5C31\u6765\u5206\u6790\u5B83\u7684\u5B9E\u73B0\u3002</p><p>\u5728 <code>render</code> \u9636\u6BB5\uFF0C\u5982\u679C\u662F\u4E00\u4E2A\u7EC4\u4EF6\u8282\u70B9\uFF0C\u5219\u901A\u8FC7 <code>createComponent</code> \u521B\u5EFA\u4E00\u4E2A\u7EC4\u4EF6 <code>vnode</code>\uFF0C\u518D\u6765\u56DE\u987E\u8FD9\u4E2A\u65B9\u6CD5\uFF0C\u5B9A\u4E49\u5728 <code>src/core/vdom/create-component.js</code> \u4E2D\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">createComponent</span> <span class="token punctuation">(</span>
  <span class="token parameter"><span class="token literal-property property">Ctor</span><span class="token operator">:</span> Class<span class="token operator">&lt;</span>Component<span class="token operator">&gt;</span> <span class="token operator">|</span> Function <span class="token operator">|</span> Object <span class="token operator">|</span> <span class="token keyword">void</span><span class="token punctuation">,</span>
  <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token operator">?</span>VNodeData<span class="token punctuation">,</span>
  <span class="token literal-property property">context</span><span class="token operator">:</span> Component<span class="token punctuation">,</span>
  <span class="token literal-property property">children</span><span class="token operator">:</span> <span class="token operator">?</span>Array<span class="token operator">&lt;</span>VNode<span class="token operator">&gt;</span><span class="token punctuation">,</span>
  tag<span class="token operator">?</span><span class="token operator">:</span> string</span>
<span class="token punctuation">)</span><span class="token operator">:</span> VNode <span class="token operator">|</span> Array<span class="token operator">&lt;</span>VNode<span class="token operator">&gt;</span> <span class="token operator">|</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
  <span class="token keyword">const</span> listeners <span class="token operator">=</span> data<span class="token punctuation">.</span>on
  
  data<span class="token punctuation">.</span>on <span class="token operator">=</span> data<span class="token punctuation">.</span>nativeOn
  
  <span class="token comment">// ...</span>
  <span class="token keyword">const</span> name <span class="token operator">=</span> Ctor<span class="token punctuation">.</span>options<span class="token punctuation">.</span>name <span class="token operator">||</span> tag
  <span class="token keyword">const</span> vnode <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">VNode</span><span class="token punctuation">(</span>
    <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">vue-component-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>Ctor<span class="token punctuation">.</span>cid<span class="token interpolation-punctuation punctuation">}</span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>name <span class="token operator">?</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span> <span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
    data<span class="token punctuation">,</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span> context<span class="token punctuation">,</span>
    <span class="token punctuation">{</span> Ctor<span class="token punctuation">,</span> propsData<span class="token punctuation">,</span> listeners<span class="token punctuation">,</span> tag<span class="token punctuation">,</span> children <span class="token punctuation">}</span><span class="token punctuation">,</span>
    asyncFactory
  <span class="token punctuation">)</span>

  <span class="token keyword">return</span> vnode
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><p>\u53EA\u5173\u6CE8\u4E8B\u4EF6\u76F8\u5173\u7684\u903B\u8F91\uFF0C\u53EF\u4EE5\u770B\u5230\uFF0C\u5B83\u628A <code>data.on</code> \u8D4B\u503C\u7ED9\u4E86 <code>listeners</code>\uFF0C\u628A <code>data.nativeOn</code> \u8D4B\u503C\u7ED9\u4E86 <code>data.on</code>\uFF0C\u8FD9\u6837\u6240\u6709\u7684\u539F\u751F DOM \u4E8B\u4EF6\u5904\u7406\u8DDF\u521A\u624D\u4ECB\u7ECD\u7684\u4E00\u6837\uFF0C\u5B83\u662F\u5728\u5F53\u524D\u7EC4\u4EF6\u73AF\u5883\u4E2D\u5904\u7406\u7684\u3002\u800C\u5BF9\u4E8E\u81EA\u5B9A\u4E49\u4E8B\u4EF6\uFF0C\u628A <code>listeners</code> \u4F5C\u4E3A <code>vnode</code> \u7684 <code>componentOptions</code> \u4F20\u5165\uFF0C\u5B83\u662F\u5728\u5B50\u7EC4\u4EF6\u521D\u59CB\u5316\u9636\u6BB5\u4E2D\u5904\u7406\u7684\uFF0C\u6240\u4EE5\u5B83\u7684\u5904\u7406\u73AF\u5883\u662F\u5B50\u7EC4\u4EF6\u3002</p><p>\u7136\u540E\u5728\u5B50\u7EC4\u4EF6\u7684\u521D\u59CB\u5316\u7684\u65F6\u5019\uFF0C\u4F1A\u6267\u884C <code>initInternalComponent</code> \u65B9\u6CD5\uFF0C\u5B83\u7684\u5B9A\u4E49\u5728 <code>src/core/instance/init.js</code> \u4E2D\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">initInternalComponent</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">vm</span><span class="token operator">:</span> Component<span class="token punctuation">,</span> <span class="token literal-property property">options</span><span class="token operator">:</span> InternalComponentOptions</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> opts <span class="token operator">=</span> vm<span class="token punctuation">.</span>$options <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>vm<span class="token punctuation">.</span>constructor<span class="token punctuation">.</span>options<span class="token punctuation">)</span>
  <span class="token comment">// ....</span>
  <span class="token keyword">const</span> vnodeComponentOptions <span class="token operator">=</span> parentVnode<span class="token punctuation">.</span>componentOptions
 
  opts<span class="token punctuation">.</span>_parentListeners <span class="token operator">=</span> vnodeComponentOptions<span class="token punctuation">.</span>listeners
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>\u8FD9\u91CC\u62FF\u5230\u4E86\u7236\u7EC4\u4EF6\u4F20\u5165\u7684 <code>listeners</code>\uFF0C\u7136\u540E\u5728\u6267\u884C <code>initEvents</code> \u7684\u8FC7\u7A0B\u4E2D\uFF0C\u4F1A\u5904\u7406\u8FD9\u4E2A <code>listeners</code>\uFF0C\u5B9A\u4E49\u5728 <code>src/core/instance/events.js</code> \u4E2D\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">initEvents</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">vm</span><span class="token operator">:</span> Component</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  vm<span class="token punctuation">.</span>_events <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span>
  vm<span class="token punctuation">.</span>_hasHookEvent <span class="token operator">=</span> <span class="token boolean">false</span>
  <span class="token comment">// init parent attached events</span>
  <span class="token keyword">const</span> listeners <span class="token operator">=</span> vm<span class="token punctuation">.</span>$options<span class="token punctuation">.</span>_parentListeners
  <span class="token keyword">if</span> <span class="token punctuation">(</span>listeners<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">updateComponentListeners</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> listeners<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>\u62FF\u5230 <code>listeners</code> \u540E\uFF0C\u6267\u884C <code>updateComponentListeners(vm, listeners)</code> \u65B9\u6CD5\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> <span class="token literal-property property">target</span><span class="token operator">:</span> any
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">updateComponentListeners</span> <span class="token punctuation">(</span>
  <span class="token parameter"><span class="token literal-property property">vm</span><span class="token operator">:</span> Component<span class="token punctuation">,</span>
  <span class="token literal-property property">listeners</span><span class="token operator">:</span> Object<span class="token punctuation">,</span>
  <span class="token literal-property property">oldListeners</span><span class="token operator">:</span> <span class="token operator">?</span>Object</span>
<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  target <span class="token operator">=</span> vm
  <span class="token function">updateListeners</span><span class="token punctuation">(</span>listeners<span class="token punctuation">,</span> oldListeners <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> add<span class="token punctuation">,</span> remove<span class="token punctuation">,</span> vm<span class="token punctuation">)</span>
  target <span class="token operator">=</span> <span class="token keyword">undefined</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p><code>updateListeners</code> \u4E4B\u524D\u4ECB\u7ECD\u8FC7\uFF0C\u6240\u4EE5\u5BF9\u4E8E\u81EA\u5B9A\u4E49\u4E8B\u4EF6\u548C\u539F\u751F DOM \u4E8B\u4EF6\u5904\u7406\u7684\u5DEE\u5F02\u5C31\u5728\u4E8B\u4EF6\u6DFB\u52A0\u548C\u5220\u9664\u7684\u5B9E\u73B0\u4E0A\uFF0C\u6765\u770B\u4E00\u4E0B\u81EA\u5B9A\u4E49\u4E8B\u4EF6 <code>add</code> \u548C <code>remove</code> \u7684\u5B9E\u73B0\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">add</span> <span class="token punctuation">(</span><span class="token parameter">event<span class="token punctuation">,</span> fn<span class="token punctuation">,</span> once</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>once<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    target<span class="token punctuation">.</span><span class="token function">$once</span><span class="token punctuation">(</span>event<span class="token punctuation">,</span> fn<span class="token punctuation">)</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    target<span class="token punctuation">.</span><span class="token function">$on</span><span class="token punctuation">(</span>event<span class="token punctuation">,</span> fn<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">remove</span> <span class="token punctuation">(</span><span class="token parameter">event<span class="token punctuation">,</span> fn</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  target<span class="token punctuation">.</span><span class="token function">$off</span><span class="token punctuation">(</span>event<span class="token punctuation">,</span> fn<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>\u5B9E\u9645\u4E0A\u662F\u5229\u7528 Vue \u5B9A\u4E49\u7684\u4E8B\u4EF6\u4E2D\u5FC3\uFF0C\u7B80\u5355\u5206\u6790\u4E00\u4E0B\u5B83\u7684\u5B9E\u73B0\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">eventsMixin</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">Vue</span><span class="token operator">:</span> Class<span class="token operator">&lt;</span>Component<span class="token operator">&gt;</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> hookRE <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^hook:</span><span class="token regex-delimiter">/</span></span>
  <span class="token class-name">Vue</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">$on</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">event</span><span class="token operator">:</span> string <span class="token operator">|</span> Array<span class="token operator">&lt;</span>string<span class="token operator">&gt;</span><span class="token punctuation">,</span> <span class="token literal-property property">fn</span><span class="token operator">:</span> Function</span><span class="token punctuation">)</span><span class="token operator">:</span> Component <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token literal-property property">vm</span><span class="token operator">:</span> Component <span class="token operator">=</span> <span class="token keyword">this</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> l <span class="token operator">=</span> event<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> l<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$on</span><span class="token punctuation">(</span>event<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> fn<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token punctuation">(</span>vm<span class="token punctuation">.</span>_events<span class="token punctuation">[</span>event<span class="token punctuation">]</span> <span class="token operator">||</span> <span class="token punctuation">(</span>vm<span class="token punctuation">.</span>_events<span class="token punctuation">[</span>event<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>fn<span class="token punctuation">)</span>
      <span class="token comment">// optimize hook:event cost by using a boolean flag marked at registration</span>
      <span class="token comment">// instead of a hash lookup</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>hookRE<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        vm<span class="token punctuation">.</span>_hasHookEvent <span class="token operator">=</span> <span class="token boolean">true</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> vm
  <span class="token punctuation">}</span>

  <span class="token class-name">Vue</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">$once</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">event</span><span class="token operator">:</span> string<span class="token punctuation">,</span> <span class="token literal-property property">fn</span><span class="token operator">:</span> Function</span><span class="token punctuation">)</span><span class="token operator">:</span> Component <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token literal-property property">vm</span><span class="token operator">:</span> Component <span class="token operator">=</span> <span class="token keyword">this</span>
    <span class="token keyword">function</span> <span class="token function">on</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      vm<span class="token punctuation">.</span><span class="token function">$off</span><span class="token punctuation">(</span>event<span class="token punctuation">,</span> on<span class="token punctuation">)</span>
      <span class="token function">fn</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> arguments<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    on<span class="token punctuation">.</span>fn <span class="token operator">=</span> fn
    vm<span class="token punctuation">.</span><span class="token function">$on</span><span class="token punctuation">(</span>event<span class="token punctuation">,</span> on<span class="token punctuation">)</span>
    <span class="token keyword">return</span> vm
  <span class="token punctuation">}</span>

  <span class="token class-name">Vue</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">$off</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">event<span class="token operator">?</span><span class="token operator">:</span> string <span class="token operator">|</span> Array<span class="token operator">&lt;</span>string<span class="token operator">&gt;</span><span class="token punctuation">,</span> fn<span class="token operator">?</span><span class="token operator">:</span> Function</span><span class="token punctuation">)</span><span class="token operator">:</span> Component <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token literal-property property">vm</span><span class="token operator">:</span> Component <span class="token operator">=</span> <span class="token keyword">this</span>
    <span class="token comment">// all</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>arguments<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      vm<span class="token punctuation">.</span>_events <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span>
      <span class="token keyword">return</span> vm
    <span class="token punctuation">}</span>
    <span class="token comment">// array of events</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> l <span class="token operator">=</span> event<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> l<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$off</span><span class="token punctuation">(</span>event<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> fn<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">return</span> vm
    <span class="token punctuation">}</span>
    <span class="token comment">// specific event</span>
    <span class="token keyword">const</span> cbs <span class="token operator">=</span> vm<span class="token punctuation">.</span>_events<span class="token punctuation">[</span>event<span class="token punctuation">]</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>cbs<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> vm
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>fn<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      vm<span class="token punctuation">.</span>_events<span class="token punctuation">[</span>event<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">null</span>
      <span class="token keyword">return</span> vm
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>fn<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// specific handler</span>
      <span class="token keyword">let</span> cb
      <span class="token keyword">let</span> i <span class="token operator">=</span> cbs<span class="token punctuation">.</span>length
      <span class="token keyword">while</span> <span class="token punctuation">(</span>i<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        cb <span class="token operator">=</span> cbs<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>cb <span class="token operator">===</span> fn <span class="token operator">||</span> cb<span class="token punctuation">.</span>fn <span class="token operator">===</span> fn<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          cbs<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>
          <span class="token keyword">break</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> vm
  <span class="token punctuation">}</span>

  <span class="token class-name">Vue</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">$emit</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">event</span><span class="token operator">:</span> string</span><span class="token punctuation">)</span><span class="token operator">:</span> Component <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token literal-property property">vm</span><span class="token operator">:</span> Component <span class="token operator">=</span> <span class="token keyword">this</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">!==</span> <span class="token string">&#39;production&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> lowerCaseEvent <span class="token operator">=</span> event<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>lowerCaseEvent <span class="token operator">!==</span> event <span class="token operator">&amp;&amp;</span> vm<span class="token punctuation">.</span>_events<span class="token punctuation">[</span>lowerCaseEvent<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">tip</span><span class="token punctuation">(</span>
          <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Event &quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>lowerCaseEvent<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot; is emitted in component </span><span class="token template-punctuation string">\`</span></span> <span class="token operator">+</span>
          <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token function">formatComponentName</span><span class="token punctuation">(</span>vm<span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> but the handler is registered for &quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>event<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;. </span><span class="token template-punctuation string">\`</span></span> <span class="token operator">+</span>
          <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Note that HTML attributes are case-insensitive and you cannot use </span><span class="token template-punctuation string">\`</span></span> <span class="token operator">+</span>
          <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">v-on to listen to camelCase events when using in-DOM templates. </span><span class="token template-punctuation string">\`</span></span> <span class="token operator">+</span>
          <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">You should probably use &quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token function">hyphenate</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot; instead of &quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>event<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;.</span><span class="token template-punctuation string">\`</span></span>
        <span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">let</span> cbs <span class="token operator">=</span> vm<span class="token punctuation">.</span>_events<span class="token punctuation">[</span>event<span class="token punctuation">]</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>cbs<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      cbs <span class="token operator">=</span> cbs<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">1</span> <span class="token operator">?</span> <span class="token function">toArray</span><span class="token punctuation">(</span>cbs<span class="token punctuation">)</span> <span class="token operator">:</span> cbs
      <span class="token keyword">const</span> args <span class="token operator">=</span> <span class="token function">toArray</span><span class="token punctuation">(</span>arguments<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>
      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> l <span class="token operator">=</span> cbs<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> l<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
          cbs<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> args<span class="token punctuation">)</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token function">handleError</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span> vm<span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">event handler for &quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>event<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> vm
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br></div></div><p>\u975E\u5E38\u7ECF\u5178\u7684\u4E8B\u4EF6\u4E2D\u5FC3\u7684\u5B9E\u73B0\uFF0C\u628A\u6240\u6709\u7684\u4E8B\u4EF6\u7528 <code>vm._events</code> \u5B58\u50A8\u8D77\u6765\uFF0C\u5F53\u6267\u884C <code>vm.$on(event,fn)</code> \u7684\u65F6\u5019\uFF0C\u6309\u4E8B\u4EF6\u7684\u540D\u79F0 <code>event</code> \u628A\u56DE\u8C03\u51FD\u6570 <code>fn</code> \u5B58\u50A8\u8D77\u6765 <code>vm._events[event].push(fn)</code>\u3002\u5F53\u6267\u884C <code>vm.$emit(event)</code> \u7684\u65F6\u5019\uFF0C\u6839\u636E\u4E8B\u4EF6\u540D <code>event</code> \u627E\u5230\u6240\u6709\u7684\u56DE\u8C03\u51FD\u6570 <code>let cbs = vm._events[event]</code>\uFF0C\u7136\u540E\u904D\u5386\u6267\u884C\u6240\u6709\u7684\u56DE\u8C03\u51FD\u6570\u3002\u5F53\u6267\u884C <code>vm.$off(event,fn)</code> \u7684\u65F6\u5019\u4F1A\u79FB\u9664\u6307\u5B9A\u4E8B\u4EF6\u540D <code>event</code> \u548C\u6307\u5B9A\u7684 <code>fn</code> \u5F53\u6267\u884C <code>vm.$once(event,fn)</code> \u7684\u65F6\u5019\uFF0C\u5185\u90E8\u5C31\u662F\u6267\u884C <code>vm.$on</code>\uFF0C\u5E76\u4E14\u5F53\u56DE\u8C03\u51FD\u6570\u6267\u884C\u4E00\u6B21\u540E\u518D\u901A\u8FC7 <code>vm.$off</code> \u79FB\u9664\u4E8B\u4EF6\u7684\u56DE\u8C03\uFF0C\u8FD9\u6837\u5C31\u786E\u4FDD\u4E86\u56DE\u8C03\u51FD\u6570\u53EA\u6267\u884C\u4E00\u6B21\u3002</p><p>\u6240\u4EE5\u5BF9\u4E8E\u7528\u6237\u81EA\u5B9A\u4E49\u7684\u4E8B\u4EF6\u6DFB\u52A0\u548C\u5220\u9664\u5C31\u662F\u5229\u7528\u4E86\u8FD9\u51E0\u4E2A\u4E8B\u4EF6\u4E2D\u5FC3\u7684 API\u3002\u9700\u8981\u6CE8\u610F\u7684\u4E8B\u4E00\u70B9\uFF0C<code>vm.$emit</code> \u662F\u7ED9\u5F53\u524D\u7684 <code>vm</code> \u4E0A\u6D3E\u53D1\u7684\u5B9E\u4F8B\uFF0C\u4E4B\u6240\u4EE5\u5E38\u7528\u5B83\u505A\u7236\u5B50\u7EC4\u4EF6\u901A\u8BAF\uFF0C\u662F\u56E0\u4E3A\u5B83\u7684\u56DE\u8C03\u51FD\u6570\u7684\u5B9A\u4E49\u662F\u5728\u7236\u7EC4\u4EF6\u4E2D\uFF0C\u5BF9\u4E8E\u8FD9\u4E2A\u4F8B\u5B50\u800C\u8A00\uFF0C\u5F53\u5B50\u7EC4\u4EF6\u7684 <code>button</code> \u88AB\u70B9\u51FB\u4E86\uFF0C\u5B83\u901A\u8FC7 <code>this.$emit(&#39;select&#39;)</code> \u6D3E\u53D1\u4E8B\u4EF6\uFF0C\u90A3\u4E48\u5B50\u7EC4\u4EF6\u7684\u5B9E\u4F8B\u5C31\u76D1\u542C\u5230\u4E86\u8FD9\u4E2A <code>select</code> \u4E8B\u4EF6\uFF0C\u5E76\u6267\u884C\u5B83\u7684\u56DE\u8C03\u51FD\u6570\u2014\u2014\u5B9A\u4E49\u5728\u7236\u7EC4\u4EF6\u4E2D\u7684 <code>selectHandler</code> \u65B9\u6CD5\uFF0C\u8FD9\u6837\u5C31\u76F8\u5F53\u4E8E\u5B8C\u6210\u4E86\u4E00\u6B21\u7236\u5B50\u7EC4\u4EF6\u7684\u901A\u8BAF\u3002</p><h2 id="\u603B\u7ED3" tabindex="-1"><a class="header-anchor" href="#\u603B\u7ED3" aria-hidden="true">#</a> \u603B\u7ED3</h2><p>\u90A3\u4E48\u81F3\u6B64\u5BF9 Vue \u7684\u4E8B\u4EF6\u5B9E\u73B0\u6709\u4E86\u8FDB\u4E00\u6B65\u7684\u4E86\u89E3\uFF0CVue \u652F\u6301 2 \u79CD\u4E8B\u4EF6\u7C7B\u578B\uFF0C\u539F\u751F DOM \u4E8B\u4EF6\u548C\u81EA\u5B9A\u4E49\u4E8B\u4EF6\uFF0C\u5B83\u4EEC\u4E3B\u8981\u7684\u533A\u522B\u5728\u4E8E\u6DFB\u52A0\u548C\u5220\u9664\u4E8B\u4EF6\u7684\u65B9\u5F0F\u4E0D\u4E00\u6837\uFF0C\u5E76\u4E14\u81EA\u5B9A\u4E49\u4E8B\u4EF6\u7684\u6D3E\u53D1\u662F\u5F80\u5F53\u524D\u5B9E\u4F8B\u4E0A\u6D3E\u53D1\uFF0C\u4F46\u662F\u53EF\u4EE5\u5229\u7528\u5728\u7236\u7EC4\u4EF6\u73AF\u5883\u5B9A\u4E49\u56DE\u8C03\u51FD\u6570\u6765\u5B9E\u73B0\u7236\u5B50\u7EC4\u4EF6\u7684\u901A\u8BAF\u3002\u53E6\u5916\u8981\u6CE8\u610F\u4E00\u70B9\uFF0C\u53EA\u6709\u7EC4\u4EF6\u8282\u70B9\u624D\u53EF\u4EE5\u6DFB\u52A0\u81EA\u5B9A\u4E49\u4E8B\u4EF6\uFF0C\u5E76\u4E14\u6DFB\u52A0\u539F\u751F DOM \u4E8B\u4EF6\u9700\u8981\u4F7F\u7528 <code>native</code> \u4FEE\u9970\u7B26\uFF1B\u800C\u666E\u901A\u5143\u7D20\u4F7F\u7528 <code>.native</code> \u4FEE\u9970\u7B26\u662F\u6CA1\u6709\u4F5C\u7528\u7684\uFF0C\u4E5F\u53EA\u80FD\u6DFB\u52A0\u539F\u751F DOM \u4E8B\u4EF6\u3002</p>`,63);function t(e,o){return p}var r=s(a,[["render",t]]);export{r as default};
