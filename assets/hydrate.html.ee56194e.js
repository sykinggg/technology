import{a as n}from"./app.b05da4ec.js";import{_ as s}from"./plugin-vue_export-helper.21dcd24c.js";const a={},p=n(`<h1 id="" tabindex="-1"><a class="header-anchor" href="#" aria-hidden="true">#</a></h1><h1 id="hydrate" tabindex="-1"><a class="header-anchor" href="#hydrate" aria-hidden="true">#</a> hydrate</h1><p><code>hydrate</code>\u662F React \u4E2D\u63D0\u4F9B\u5728\u521D\u6B21\u6E32\u67D3\u7684\u65F6\u5019\uFF0C\u53BB\u590D\u7528\u539F\u672C\u5DF2\u7ECF\u5B58\u5728\u7684 DOM \u8282\u70B9\uFF0C\u51CF\u5C11\u91CD\u65B0\u751F\u6210\u8282\u70B9\u4EE5\u53CA\u5220\u9664\u539F\u672C DOM \u8282\u70B9\u7684\u5F00\u9500\uFF0C\u6765\u52A0\u901F\u521D\u6B21\u6E32\u67D3\u7684\u529F\u80FD\u3002\u4E3B\u8981\u4F7F\u7528\u573A\u666F\u662F<strong>\u670D\u52A1\u7AEF\u6E32\u67D3\u6216\u8005\u50CF<code>prerender</code>\u7B49\u60C5\u51B5</strong>\u3002</p><p>\u51B3\u5B9A\u5728\u521D\u6B21\u6E32\u67D3\u65F6\u662F\u5426\u9700\u8981\u6267\u884C<code>hydrate</code>\u7684\u6807\u51C6\u53D6\u51B3\u4E8E\u4EE5\u4E0B\u6761\u4EF6</p><blockquote><p><strong>\u662F\u5426\u8C03\u7528\u65B9\u6CD5\u65F6\u5C31\u6307\u5B9A\u4F7F\u7528<code>hydrate</code></strong></p></blockquote><p>\u521D\u6B21\u6E32\u67D3\u53EF\u4EE5\u8C03\u7528\u4E24\u79CD\u65B9\u6CD5\uFF1A<code>ReactDOM.render</code>\u548C<code>ReactDOM.hydrate</code>\u3002\u540E\u8005\u5C31\u662F\u76F4\u63A5\u544A\u8BC9<code>ReactDOM</code>\u9700\u8981<code>hydrate</code>\uFF0C<strong>\u76EE\u524D\u6765\u8BF4\u5982\u679C\u4F60\u8C03\u7528\u7684\u662F<code>render</code>\uFF0C\u4F46\u662F React \u4F1A\u68C0\u6D4B\u662F\u5426\u53EF\u4EE5<code>hydrate</code>\uFF0C\u5982\u679C\u53EF\u4EE5\u4ED6\u4F1A\u63D0\u9192\u4F60\u5E94\u8BE5\u4F7F\u7528<code>hydrate</code>\u3002</strong></p><p><strong>shouldHydrateDueToLegacyHeuristic</strong></p><p>\u5373\u4FBF\u4F60\u4E0D\u6307\u5B9A\u9700\u8981<code>hydrate</code>\uFF0CReact \u4E5F\u4F1A\u8C03\u7528\u8BE5\u65B9\u6CD5\u8FDB\u884C\u68C0\u6D4B</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token constant">ROOT_ATTRIBUTE_NAME</span> <span class="token operator">=</span> <span class="token string">&#39;data-reactroot&#39;</span>

<span class="token keyword">function</span> <span class="token function">shouldHydrateDueToLegacyHeuristic</span><span class="token punctuation">(</span><span class="token parameter">container</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> rootElement <span class="token operator">=</span> <span class="token function">getReactRootElementInContainer</span><span class="token punctuation">(</span>container<span class="token punctuation">)</span>
  <span class="token keyword">return</span> <span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">(</span>
    rootElement <span class="token operator">&amp;&amp;</span>
    rootElement<span class="token punctuation">.</span>nodeType <span class="token operator">===</span> <span class="token constant">ELEMENT_NODE</span> <span class="token operator">&amp;&amp;</span>
    rootElement<span class="token punctuation">.</span><span class="token function">hasAttribute</span><span class="token punctuation">(</span><span class="token constant">ROOT_ATTRIBUTE_NAME</span><span class="token punctuation">)</span>
  <span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">getReactRootElementInContainer</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">container</span><span class="token operator">:</span> any</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>container<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">null</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span>container<span class="token punctuation">.</span>nodeType <span class="token operator">===</span> <span class="token constant">DOCUMENT_NODE</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> container<span class="token punctuation">.</span>documentElement
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> container<span class="token punctuation">.</span>firstChild
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><p>\u5982\u679C<code>container</code>\u662F<code>document</code>\u5219<code>rootElement</code>\u662F<code>html</code>\uFF0C\u5426\u5219\u662F\u4ED6\u7684\u7B2C\u4E00\u4E2A\u5B50\u8282\u70B9\u3002\u770B\u5230\u8FD9\u91CC\u5C31\u9700\u8981\u6CE8\u610F\u4E3A\u4EC0\u4E48\u4E0D\u63A8\u8350\u4F7F\u7528<code>document</code>\u6765\u4F5C\u4E3A<code>container</code>\u4E86\uFF0C\u56E0\u4E3A\u4ED6\u4F1A\u76F4\u63A5\u628Ahtml\u8986\u76D6\u3002</p><p>\u7136\u540E\u5224\u65AD\u6761\u4EF6\u662F<code>rootElement</code>\u662F\u666E\u901A\u7684<code>element</code>\u5E76\u4E14\u5177\u6709<code>data-reactroot</code>\u5C5E\u6027\uFF0C\u8FD9\u662F React \u5728\u670D\u52A1\u7AEF\u6E32\u67D3\u7684\u65F6\u5019\u52A0\u4E0A\u53BB\u7684\u3002</p><hr><p>\u7B26\u5408\u4EE5\u4E0A\u4E24\u4E2A\u6761\u4EF6\u4E4B\u4E00\u7684\uFF0C\u5C31\u4F1A\u5728\u521D\u6B21\u6E32\u67D3\u7684\u65F6\u5019\u8FDB\u884C<code>hydrate</code>\uFF0C\u901A\u8FC7\u5728<code>FiberRoot</code>\u4E0A\u6807\u8BB0<code>hydrate</code>\u5C5E\u6027\u3002</p><h1 id="\u5F00\u59CBhydrate" tabindex="-1"><a class="header-anchor" href="#\u5F00\u59CBhydrate" aria-hidden="true">#</a> \u5F00\u59CB<code>hydrate</code></h1><p>\u5728\u66F4\u65B0\u5230<code>HostRoot</code>\u7684\u65F6\u5019\uFF0C\u5C31\u6B63\u5F0F\u5F00\u59CB\u4E86<code>hydrate</code>\u7684\u6D41\u7A0B\uFF0C<code>hydrate</code>\u662F\u4E00\u4E2A\u6574\u4F53\u7684\u6A21\u5757\u8BBE\u8BA1\uFF0C\u4F1A\u5B58\u5728\u7740\u4E00\u7CFB\u5217\u7684\u516C\u5171\u53D8\u91CF</p><table><thead><tr><th>\u53D8\u91CF\u540D</th><th>\u4F5C\u7528</th></tr></thead><tbody><tr><td><code>nextHydratableInstance</code></td><td>\u4E0B\u4E00\u4E2A\u53EF\u4EE5\u88AB<code>hydrate</code>\u7684\u8282\u70B9</td></tr><tr><td><code>isHydrating</code></td><td>\u662F\u5426\u6B63\u5728<code>hydrate</code></td></tr><tr><td><code>hydrationParentFiber</code></td><td>\u4E0B\u4E00\u4E2A\u88AB<code>hydrate</code>\u7684\u8282\u70B9\u7684\u7236\u8282\u70B9</td></tr></tbody></table><p><code>supportsHydration</code>\u6765\u81EA\u4E8E<code>HostConfig.js</code>\uFF0C\u5728<code>ReactDOM</code>\u4E2D\uFF0C\u4ED6\u662F\u56FA\u5B9A\u503C<code>true</code></p><h2 id="enterhydrationstate" tabindex="-1"><a class="header-anchor" href="#enterhydrationstate" aria-hidden="true">#</a> enterHydrationState</h2><p>\u5728\u66F4\u65B0<code>HostRoot</code>\u7684\u65F6\u5019\uFF0C\u4F1A\u8C03\u7528\u8FD9\u4E2A\u65B9\u6CD5\u6807\u5FD7\u7740\u5F00\u59CB\u8FDB\u5165<code>hydrate</code>\u6D41\u7A0B\uFF0C\u8BBE\u7F6E<code>isHydrating</code>\u4E3A<code>true</code></p><p><code>getFirstHydratableChild</code>\u7528\u4E8E\u83B7\u53D6\u5B50\u8282\u70B9\u4E2D\u7B2C\u4E00\u4E2A\u666E\u901A<code>Element</code>\u6216\u8005<code>Text</code>\u8282\u70B9</p><blockquote><p>\u6E90\u7801</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">enterHydrationState</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">fiber</span><span class="token operator">:</span> Fiber</span><span class="token punctuation">)</span><span class="token operator">:</span> boolean <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>supportsHydration<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token boolean">false</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">const</span> parentInstance <span class="token operator">=</span> fiber<span class="token punctuation">.</span>stateNode<span class="token punctuation">.</span>containerInfo
  nextHydratableInstance <span class="token operator">=</span> <span class="token function">getFirstHydratableChild</span><span class="token punctuation">(</span>parentInstance<span class="token punctuation">)</span>
  hydrationParentFiber <span class="token operator">=</span> fiber
  isHydrating <span class="token operator">=</span> <span class="token boolean">true</span>
  <span class="token keyword">return</span> <span class="token boolean">true</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">getFirstHydratableChild</span><span class="token punctuation">(</span>
  <span class="token parameter"><span class="token literal-property property">parentInstance</span><span class="token operator">:</span> Container <span class="token operator">|</span> Instance<span class="token punctuation">,</span></span>
<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">null</span> <span class="token operator">|</span> Instance <span class="token operator">|</span> TextInstance <span class="token punctuation">{</span>
  <span class="token keyword">let</span> next <span class="token operator">=</span> parentInstance<span class="token punctuation">.</span>firstChild
  <span class="token keyword">while</span> <span class="token punctuation">(</span>
    next <span class="token operator">&amp;&amp;</span>
    next<span class="token punctuation">.</span>nodeType <span class="token operator">!==</span> <span class="token constant">ELEMENT_NODE</span> <span class="token operator">&amp;&amp;</span>
    next<span class="token punctuation">.</span>nodeType <span class="token operator">!==</span> <span class="token constant">TEXT_NODE</span>
  <span class="token punctuation">)</span> <span class="token punctuation">{</span>
    next <span class="token operator">=</span> next<span class="token punctuation">.</span>nextSibling
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>next<span class="token operator">:</span> any<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><h2 id="trytoclaimnexthydratableinstance" tabindex="-1"><a class="header-anchor" href="#trytoclaimnexthydratableinstance" aria-hidden="true">#</a> tryToClaimNextHydratableInstance</h2><p>\u5728\u66F4\u65B0\u6D41\u7A0B\u4E2D\uFF0C\u8FD8\u9700\u8981\u505A\u7684\u5C31\u662F\u5728\u66F4\u65B0<code>HostComponent</code>\u548C<code>HostText</code>\u8282\u70B9\u7684\u65F6\u5019\uFF0C\u8C03\u7528\u8BE5\u65B9\u6CD5</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">tryToClaimNextHydratableInstance</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">fiber</span><span class="token operator">:</span> Fiber</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isHydrating<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">let</span> nextInstance <span class="token operator">=</span> nextHydratableInstance
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>nextInstance<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// Nothing to hydrate. Make it an insertion.</span>
    <span class="token function">insertNonHydratedInstance</span><span class="token punctuation">(</span><span class="token punctuation">(</span>hydrationParentFiber<span class="token operator">:</span> any<span class="token punctuation">)</span><span class="token punctuation">,</span> fiber<span class="token punctuation">)</span>
    isHydrating <span class="token operator">=</span> <span class="token boolean">false</span>
    hydrationParentFiber <span class="token operator">=</span> fiber
    <span class="token keyword">return</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">const</span> firstAttemptedInstance <span class="token operator">=</span> nextInstance
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">tryHydrate</span><span class="token punctuation">(</span>fiber<span class="token punctuation">,</span> nextInstance<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    nextInstance <span class="token operator">=</span> <span class="token function">getNextHydratableSibling</span><span class="token punctuation">(</span>firstAttemptedInstance<span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>nextInstance <span class="token operator">||</span> <span class="token operator">!</span><span class="token function">tryHydrate</span><span class="token punctuation">(</span>fiber<span class="token punctuation">,</span> nextInstance<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// Nothing to hydrate. Make it an insertion.</span>
      <span class="token function">insertNonHydratedInstance</span><span class="token punctuation">(</span><span class="token punctuation">(</span>hydrationParentFiber<span class="token operator">:</span> any<span class="token punctuation">)</span><span class="token punctuation">,</span> fiber<span class="token punctuation">)</span>
      isHydrating <span class="token operator">=</span> <span class="token boolean">false</span>
      hydrationParentFiber <span class="token operator">=</span> fiber
      <span class="token keyword">return</span>
    <span class="token punctuation">}</span>
    <span class="token function">deleteHydratableInstance</span><span class="token punctuation">(</span>
      <span class="token punctuation">(</span>hydrationParentFiber<span class="token operator">:</span> any<span class="token punctuation">)</span><span class="token punctuation">,</span>
      firstAttemptedInstance<span class="token punctuation">,</span>
    <span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  hydrationParentFiber <span class="token operator">=</span> fiber
  nextHydratableInstance <span class="token operator">=</span> <span class="token function">getFirstHydratableChild</span><span class="token punctuation">(</span><span class="token punctuation">(</span>nextInstance<span class="token operator">:</span> any<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br></div></div><p>\u8BE5\u65B9\u6CD5\u505A\u7684\u4E8B\u60C5\u662F\u68C0\u67E5<code>nextInstance</code>\u662F\u5426\u53EF\u4EE5\u548C\u5F53\u524D\u8282\u70B9\u8FDB\u884C\u590D\u7528\uFF0C\u901A\u8FC7<code>tryHydrate</code>\u8FDB\u884C\u5224\u65AD</p><p>\u5224\u65AD\u6761\u4EF6\u5176\u5B9E\u5F88\u7B80\u5355\uFF0C\u4E3B\u8981\u5BF9\u6BD4\u8282\u70B9\u7C7B\u578B\u662F\u5426\u76F8\u540C\u3002</p><p>\u6CE8\u610F\u8FD9\u91CC\u5982\u679C\u7B2C\u4E00\u6B21<code>tryHydrate</code>\u4E0D\u6210\u529F\uFF0C\u4F1A\u627E\u4ED6\u7684\u5144\u5F1F\u8282\u70B9\u518D\u6B21\u5C1D\u8BD5\u4ED6\u7684\u4E0B\u4E00\u4E2A\u5144\u5F1F\u8282\u70B9\uFF0C\u5982\u679C\u4E24\u6B21\u90FD\u4E0D\u6210\u529F\uFF0C\u5C31\u76F4\u63A5\u5173\u95ED\u6574\u4E2A<code>hydrate</code>\u6D41\u7A0B\uFF0C\u8BBE\u7F6E<code>isHydrating</code>\u4E3A<code>false</code></p><blockquote><p>\u6E90\u7801</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">tryHydrate</span><span class="token punctuation">(</span><span class="token parameter">fiber<span class="token punctuation">,</span> nextInstance</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">switch</span> <span class="token punctuation">(</span>fiber<span class="token punctuation">.</span>tag<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">case</span> <span class="token literal-property property">HostComponent</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> type <span class="token operator">=</span> fiber<span class="token punctuation">.</span>type
      <span class="token keyword">const</span> props <span class="token operator">=</span> fiber<span class="token punctuation">.</span>pendingProps
      <span class="token keyword">const</span> instance <span class="token operator">=</span> <span class="token function">canHydrateInstance</span><span class="token punctuation">(</span>nextInstance<span class="token punctuation">,</span> type<span class="token punctuation">,</span> props<span class="token punctuation">)</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>instance <span class="token operator">!==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        fiber<span class="token punctuation">.</span>stateNode <span class="token operator">=</span> <span class="token punctuation">(</span>instance<span class="token operator">:</span> Instance<span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token boolean">true</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">return</span> <span class="token boolean">false</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">case</span> <span class="token literal-property property">HostText</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> text <span class="token operator">=</span> fiber<span class="token punctuation">.</span>pendingProps
      <span class="token keyword">const</span> textInstance <span class="token operator">=</span> <span class="token function">canHydrateTextInstance</span><span class="token punctuation">(</span>nextInstance<span class="token punctuation">,</span> text<span class="token punctuation">)</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>textInstance <span class="token operator">!==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        fiber<span class="token punctuation">.</span>stateNode <span class="token operator">=</span> <span class="token punctuation">(</span>textInstance<span class="token operator">:</span> TextInstance<span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token boolean">true</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">return</span> <span class="token boolean">false</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">default</span><span class="token operator">:</span>
      <span class="token keyword">return</span> <span class="token boolean">false</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">canHydrateInstance</span><span class="token punctuation">(</span>
  <span class="token parameter"><span class="token literal-property property">instance</span><span class="token operator">:</span> Instance <span class="token operator">|</span> TextInstance<span class="token punctuation">,</span>
  <span class="token literal-property property">type</span><span class="token operator">:</span> string<span class="token punctuation">,</span>
  <span class="token literal-property property">props</span><span class="token operator">:</span> Props<span class="token punctuation">,</span></span>
<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">null</span> <span class="token operator">|</span> Instance <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>
    instance<span class="token punctuation">.</span>nodeType <span class="token operator">!==</span> <span class="token constant">ELEMENT_NODE</span> <span class="token operator">||</span>
    type<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!==</span> instance<span class="token punctuation">.</span>nodeName<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">null</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// This has now been refined to an element node.</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>instance<span class="token operator">:</span> any<span class="token punctuation">)</span><span class="token operator">:</span> Instance<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">canHydrateTextInstance</span><span class="token punctuation">(</span>
  <span class="token parameter"><span class="token literal-property property">instance</span><span class="token operator">:</span> Instance <span class="token operator">|</span> TextInstance<span class="token punctuation">,</span>
  <span class="token literal-property property">text</span><span class="token operator">:</span> string<span class="token punctuation">,</span></span>
<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">null</span> <span class="token operator">|</span> TextInstance <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>text <span class="token operator">===</span> <span class="token string">&#39;&#39;</span> <span class="token operator">||</span> instance<span class="token punctuation">.</span>nodeType <span class="token operator">!==</span> <span class="token constant">TEXT_NODE</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// Empty strings are not parsed by HTML so there won&#39;t be a correct match here.</span>
    <span class="token keyword">return</span> <span class="token keyword">null</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// This has now been refined to a text node.</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>instance<span class="token operator">:</span> any<span class="token punctuation">)</span><span class="token operator">:</span> TextInstance<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br></div></div><h1 id="\u771F\u6B63\u7684hydrate" tabindex="-1"><a class="header-anchor" href="#\u771F\u6B63\u7684hydrate" aria-hidden="true">#</a> \u771F\u6B63\u7684<code>hydrate</code></h1><p>\u4E4B\u524D\u662F\u5728\u66F4\u65B0\u8282\u70B9\u7684\u8FC7\u7A0B\u4E2D\u901A\u8FC7\u5224\u65AD\u6765\u786E\u5B9A\u662F\u5426\u53EF\u4EE5<code>hydrate</code>\u7684\u8FC7\u7A0B\uFF0C\u771F\u6B63\u7684\u5408\u5E76\u8981\u5728<code>completeWork</code>\u4E2D\u8FDB\u884C\uFF0C\u56E0\u4E3A DOM \u8282\u70B9\u662F\u5728\u8FD9\u91CC\u88AB\u521B\u5EFA\u7684\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> wasHydrated <span class="token operator">=</span> <span class="token function">popHydrationState</span><span class="token punctuation">(</span>workInProgress<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>wasHydrated<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// TODO: Move this and createInstance step into the beginPhase</span>
  <span class="token comment">// to consolidate.</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>
    <span class="token function">prepareToHydrateHostInstance</span><span class="token punctuation">(</span>
      workInProgress<span class="token punctuation">,</span>
      rootContainerInstance<span class="token punctuation">,</span>
      currentHostContext<span class="token punctuation">,</span>
    <span class="token punctuation">)</span>
  <span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// If changes to the hydrated node needs to be applied at the</span>
    <span class="token comment">// commit-phase we mark this as such.</span>
    <span class="token function">markUpdate</span><span class="token punctuation">(</span>workInProgress<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h2 id="pophydrationstate" tabindex="-1"><a class="header-anchor" href="#pophydrationstate" aria-hidden="true">#</a> popHydrationState</h2><p>\u5728<code>completeUnitOfWork</code>\u7684\u65F6\u5019\uFF0C\u5BF9\u4E8E<code>HostComponent</code>\u548C<code>HostText</code>\u4F1A\u8C03\u7528\u8BE5\u65B9\u6CD5\u3002</p><p>\u8FD9\u91CC\u9700\u8981\u6CE8\u610F\u4E00\u4E2A\u903B\u8F91\uFF0C\u5C31\u662F\u5728<code>update</code>\u8282\u70B9\uFF0C\u6CBF\u7740\u4E00\u4FA7\u5B50\u6811\u5411\u4E0B\u904D\u5386\u5230\u53F6\u5B50\u8282\u70B9\uFF0C\u90A3\u4E48<code>hydrationParentFiber</code>\u4F1A\u7B49\u4E8E\u53F6\u5B50\u8282\u70B9\u5BF9\u5E94\u7684 DOM \u8282\u70B9\uFF0C\u800C<code>nextHydratableInstance</code>\u4F1A\u7B49\u4E8E\u4ED6\u7684\u5B50\u8282\u70B9\u3002\u800C<code>completeUnitOfWork</code>\u662F\u4ECE\u8FD9\u4E2A\u53F6\u5B50\u8282\u70B9\u5F00\u59CB\u7684\uFF0C\u6240\u4EE5\u5462\u8FD9\u8FB9\u7684\u5224\u65AD<code>fiber !== hydrationParentFiber</code>\u6B63\u5E38\u6765\u8BB2\u662F\u4E0D\u6210\u7ACB\u7684\u3002</p><p>\u800C\u5728\u4E0B\u4E00\u4E2A\u5224\u65AD\u4E2D\uFF0C\u5BF9\u4E8E\u5F53\u524D<code>fiber</code>\u662F\u6587\u5B57\u8282\u70B9\u7684\u60C5\u51B5\uFF0C\u4F1A\u6E05\u9664<code>nextHydratableInstance</code>\u548C\u4ED6\u7684\u6240\u6709\u5144\u5F1F\u8282\u70B9\uFF0C\u56E0\u4E3A\u6587\u5B57\u8282\u70B9\u4E0D\u4F1A\u6709\u5B50\u8282\u70B9\u3002</p><p><code>popToNextHostParent</code>\u8FD9\u5C31\u662F\u627E\u7236\u94FE\u4E0A\u7684\u7B2C\u4E00\u4E2A<code>HostComponent</code>\u8282\u70B9\u4E86\u3002</p><p>\u6700\u540E\u8BBE\u7F6E<code>nextHydratableInstance</code>\u4E3A\u5144\u5F1F\u8282\u70B9\uFF0C\u56E0\u4E3A\u6309\u7167 React \u904D\u5386<code>Fiber</code>\u6811\u7684\u6D41\u7A0B\uFF0C\u5982\u679C\u6709\u5144\u5F1F\u8282\u70B9\uFF0C\u63A5\u4E0B\u53BB\u4F1A\u66F4\u65B0\u5144\u5F1F\u8282\u70B9\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">popToNextHostParent</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">fiber</span><span class="token operator">:</span> Fiber</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> parent <span class="token operator">=</span> fiber<span class="token punctuation">.</span>return
  <span class="token keyword">while</span> <span class="token punctuation">(</span>
    parent <span class="token operator">!==</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span>
    parent<span class="token punctuation">.</span>tag <span class="token operator">!==</span> HostComponent <span class="token operator">&amp;&amp;</span>
    parent<span class="token punctuation">.</span>tag <span class="token operator">!==</span> HostRoot
  <span class="token punctuation">)</span> <span class="token punctuation">{</span>
    parent <span class="token operator">=</span> parent<span class="token punctuation">.</span>return
  <span class="token punctuation">}</span>
  hydrationParentFiber <span class="token operator">=</span> parent
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><blockquote><p>\u6E90\u7801</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">popHydrationState</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">fiber</span><span class="token operator">:</span> Fiber</span><span class="token punctuation">)</span><span class="token operator">:</span> boolean <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>supportsHydration<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token boolean">false</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>fiber <span class="token operator">!==</span> hydrationParentFiber<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token boolean">false</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isHydrating<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">popToNextHostParent</span><span class="token punctuation">(</span>fiber<span class="token punctuation">)</span>
    isHydrating <span class="token operator">=</span> <span class="token boolean">true</span>
    <span class="token keyword">return</span> <span class="token boolean">false</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">const</span> type <span class="token operator">=</span> fiber<span class="token punctuation">.</span>type

  <span class="token keyword">if</span> <span class="token punctuation">(</span>
    fiber<span class="token punctuation">.</span>tag <span class="token operator">!==</span> HostComponent <span class="token operator">||</span>
    <span class="token punctuation">(</span>type <span class="token operator">!==</span> <span class="token string">&#39;head&#39;</span> <span class="token operator">&amp;&amp;</span>
      type <span class="token operator">!==</span> <span class="token string">&#39;body&#39;</span> <span class="token operator">&amp;&amp;</span>
      <span class="token operator">!</span><span class="token function">shouldSetTextContent</span><span class="token punctuation">(</span>type<span class="token punctuation">,</span> fiber<span class="token punctuation">.</span>memoizedProps<span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> nextInstance <span class="token operator">=</span> nextHydratableInstance
    <span class="token keyword">while</span> <span class="token punctuation">(</span>nextInstance<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">deleteHydratableInstance</span><span class="token punctuation">(</span>fiber<span class="token punctuation">,</span> nextInstance<span class="token punctuation">)</span>
      nextInstance <span class="token operator">=</span> <span class="token function">getNextHydratableSibling</span><span class="token punctuation">(</span>nextInstance<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token function">popToNextHostParent</span><span class="token punctuation">(</span>fiber<span class="token punctuation">)</span>
  nextHydratableInstance <span class="token operator">=</span> hydrationParentFiber
    <span class="token operator">?</span> <span class="token function">getNextHydratableSibling</span><span class="token punctuation">(</span>fiber<span class="token punctuation">.</span>stateNode<span class="token punctuation">)</span>
    <span class="token operator">:</span> <span class="token keyword">null</span>
  <span class="token keyword">return</span> <span class="token boolean">true</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br></div></div><h2 id="preparetohydratehostinstance" tabindex="-1"><a class="header-anchor" href="#preparetohydratehostinstance" aria-hidden="true">#</a> prepareToHydrateHostInstance</h2><p>\u8FD9\u4E2A\u65B9\u6CD5\u5F88\u50CF<code>completeWork</code>\u4E2D\u5BF9\u4E8E<code>HostComponent</code>\u7684<code>updateHostComponent</code>\uFF0C\u8C03\u7528<code>hydrateInstance</code>\u5E76\u8FD4\u56DE<code>payload</code>\uFF0C\u8FD9\u4E2A\u65B9\u6CD5\u7C7B\u4F3C\u4E8E<code>finalizeInitialChildren</code>\u548C<code>diffProperties</code>\u7684\u7ED3\u5408\uFF0C\u6267\u884C\u4E86\u4E8B\u4EF6\u7684\u521D\u59CB\u5316\u7ED1\u5B9A\uFF0C\u5E76\u5BF9\u6BD4\u5C5E\u6027\u53D8\u5316\u5E76\u8FD4\u56DE<code>updatePayload</code>\u3002\u5177\u4F53\u5185\u5BB9\u5C31\u4E0D\u6DF1\u7A76\u4E86\uFF0C\u6709\u5174\u8DA3\u7684\u540C\u5B66\u53EF\u4EE5\u81EA\u5DF1\u53BB\u770B\u3002</p><blockquote><p>\u6E90\u7801</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">prepareToHydrateHostInstance</span><span class="token punctuation">(</span>
  <span class="token parameter"><span class="token literal-property property">fiber</span><span class="token operator">:</span> Fiber<span class="token punctuation">,</span>
  <span class="token literal-property property">rootContainerInstance</span><span class="token operator">:</span> Container<span class="token punctuation">,</span>
  <span class="token literal-property property">hostContext</span><span class="token operator">:</span> HostContext<span class="token punctuation">,</span></span>
<span class="token punctuation">)</span><span class="token operator">:</span> boolean <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token literal-property property">instance</span><span class="token operator">:</span> Instance <span class="token operator">=</span> fiber<span class="token punctuation">.</span>stateNode
  <span class="token keyword">const</span> updatePayload <span class="token operator">=</span> <span class="token function">hydrateInstance</span><span class="token punctuation">(</span>
    instance<span class="token punctuation">,</span>
    fiber<span class="token punctuation">.</span>type<span class="token punctuation">,</span>
    fiber<span class="token punctuation">.</span>memoizedProps<span class="token punctuation">,</span>
    rootContainerInstance<span class="token punctuation">,</span>
    hostContext<span class="token punctuation">,</span>
    fiber<span class="token punctuation">,</span>
  <span class="token punctuation">)</span>
  fiber<span class="token punctuation">.</span>updateQueue <span class="token operator">=</span> <span class="token punctuation">(</span>updatePayload<span class="token operator">:</span> any<span class="token punctuation">)</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>updatePayload <span class="token operator">!==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token boolean">true</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token boolean">false</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">hydrateInstance</span><span class="token punctuation">(</span>
  <span class="token parameter"><span class="token literal-property property">instance</span><span class="token operator">:</span> Instance<span class="token punctuation">,</span>
  <span class="token literal-property property">type</span><span class="token operator">:</span> string<span class="token punctuation">,</span>
  <span class="token literal-property property">props</span><span class="token operator">:</span> Props<span class="token punctuation">,</span>
  <span class="token literal-property property">rootContainerInstance</span><span class="token operator">:</span> Container<span class="token punctuation">,</span>
  <span class="token literal-property property">hostContext</span><span class="token operator">:</span> HostContext<span class="token punctuation">,</span>
  <span class="token literal-property property">internalInstanceHandle</span><span class="token operator">:</span> Object<span class="token punctuation">,</span></span>
<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">null</span> <span class="token operator">|</span> Array<span class="token operator">&lt;</span>mixed<span class="token operator">&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">precacheFiberNode</span><span class="token punctuation">(</span>internalInstanceHandle<span class="token punctuation">,</span> instance<span class="token punctuation">)</span>
  <span class="token function">updateFiberProps</span><span class="token punctuation">(</span>instance<span class="token punctuation">,</span> props<span class="token punctuation">)</span>
  <span class="token keyword">let</span> <span class="token literal-property property">parentNamespace</span><span class="token operator">:</span> string
  parentNamespace <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>hostContext<span class="token operator">:</span> any<span class="token punctuation">)</span><span class="token operator">:</span> HostContextProd<span class="token punctuation">)</span>
  <span class="token keyword">return</span> <span class="token function">diffHydratedProperties</span><span class="token punctuation">(</span>
    instance<span class="token punctuation">,</span>
    type<span class="token punctuation">,</span>
    props<span class="token punctuation">,</span>
    parentNamespace<span class="token punctuation">,</span>
    rootContainerInstance<span class="token punctuation">,</span>
  <span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br></div></div><h2 id="preparetohydratehosttextinstance" tabindex="-1"><a class="header-anchor" href="#preparetohydratehosttextinstance" aria-hidden="true">#</a> prepareToHydrateHostTextInstance</h2><p>\u5BF9\u4E8E\u6587\u5B57\u8282\u70B9\u5224\u65AD\u662F\u5426\u9700\u8981\u66F4\u65B0</p><blockquote><p>\u6E90\u7801</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">prepareToHydrateHostTextInstance</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">fiber</span><span class="token operator">:</span> Fiber</span><span class="token punctuation">)</span><span class="token operator">:</span> boolean <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token literal-property property">textInstance</span><span class="token operator">:</span> TextInstance <span class="token operator">=</span> fiber<span class="token punctuation">.</span>stateNode
  <span class="token keyword">const</span> <span class="token literal-property property">textContent</span><span class="token operator">:</span> string <span class="token operator">=</span> fiber<span class="token punctuation">.</span>memoizedProps
  <span class="token keyword">const</span> shouldUpdate <span class="token operator">=</span> <span class="token function">hydrateTextInstance</span><span class="token punctuation">(</span>textInstance<span class="token punctuation">,</span> textContent<span class="token punctuation">,</span> fiber<span class="token punctuation">)</span>
  <span class="token keyword">return</span> shouldUpdate
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">hydrateTextInstance</span><span class="token punctuation">(</span>
  <span class="token parameter"><span class="token literal-property property">textInstance</span><span class="token operator">:</span> TextInstance<span class="token punctuation">,</span>
  <span class="token literal-property property">text</span><span class="token operator">:</span> string<span class="token punctuation">,</span>
  <span class="token literal-property property">internalInstanceHandle</span><span class="token operator">:</span> Object<span class="token punctuation">,</span></span>
<span class="token punctuation">)</span><span class="token operator">:</span> boolean <span class="token punctuation">{</span>
  <span class="token function">precacheFiberNode</span><span class="token punctuation">(</span>internalInstanceHandle<span class="token punctuation">,</span> textInstance<span class="token punctuation">)</span>
  <span class="token keyword">return</span> <span class="token function">diffHydratedText</span><span class="token punctuation">(</span>textInstance<span class="token punctuation">,</span> text<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">diffHydratedText</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">textNode</span><span class="token operator">:</span> Text<span class="token punctuation">,</span> <span class="token literal-property property">text</span><span class="token operator">:</span> string</span><span class="token punctuation">)</span><span class="token operator">:</span> boolean <span class="token punctuation">{</span>
  <span class="token keyword">const</span> isDifferent <span class="token operator">=</span> textNode<span class="token punctuation">.</span>nodeValue <span class="token operator">!==</span> text
  <span class="token keyword">return</span> isDifferent
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><h1 id="\u5220\u9664\u591A\u4F59\u7684-dom-\u8282\u70B9" tabindex="-1"><a class="header-anchor" href="#\u5220\u9664\u591A\u4F59\u7684-dom-\u8282\u70B9" aria-hidden="true">#</a> \u5220\u9664\u591A\u4F59\u7684 DOM \u8282\u70B9</h1><h2 id="deletehydratableinstance" tabindex="-1"><a class="header-anchor" href="#deletehydratableinstance" aria-hidden="true">#</a> deleteHydratableInstance</h2><p>\u6700\u7EC8\u7684\u5220\u9664\u8981\u653E\u5230<code>commit</code>\u9636\u6BB5\u53BB\u505A\uFF0C\u6240\u4EE5\u8FD9\u91CC\u4E13\u95E8\u4E3A\u4E86\u8BB0\u5F55\u5220\u9664\u884C\u4E3A\u521B\u5EFA\u4E86<code>Fiber</code>\u5BF9\u8C61\uFF0C\u7528\u4E8E\u8BB0\u5F55<code>side effect</code>\uFF0C\u5E76\u52A0\u5165\u5230\u4E86<code>effect</code>\u94FE\u4E0A\u3002</p><blockquote><p>\u6E90\u7801</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">deleteHydratableInstance</span><span class="token punctuation">(</span>
  <span class="token parameter"><span class="token literal-property property">returnFiber</span><span class="token operator">:</span> Fiber<span class="token punctuation">,</span>
  <span class="token literal-property property">instance</span><span class="token operator">:</span> HydratableInstance<span class="token punctuation">,</span></span>
<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> childToDelete <span class="token operator">=</span> <span class="token function">createFiberFromHostInstanceForDeletion</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  childToDelete<span class="token punctuation">.</span>stateNode <span class="token operator">=</span> instance
  childToDelete<span class="token punctuation">.</span>return <span class="token operator">=</span> returnFiber
  childToDelete<span class="token punctuation">.</span>effectTag <span class="token operator">=</span> Deletion

  <span class="token keyword">if</span> <span class="token punctuation">(</span>returnFiber<span class="token punctuation">.</span>lastEffect <span class="token operator">!==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    returnFiber<span class="token punctuation">.</span>lastEffect<span class="token punctuation">.</span>nextEffect <span class="token operator">=</span> childToDelete
    returnFiber<span class="token punctuation">.</span>lastEffect <span class="token operator">=</span> childToDelete
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    returnFiber<span class="token punctuation">.</span>firstEffect <span class="token operator">=</span> returnFiber<span class="token punctuation">.</span>lastEffect <span class="token operator">=</span> childToDelete
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">createFiberFromHostInstanceForDeletion</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> Fiber <span class="token punctuation">{</span>
  <span class="token keyword">const</span> fiber <span class="token operator">=</span> <span class="token function">createFiber</span><span class="token punctuation">(</span>HostComponent<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> NoContext<span class="token punctuation">)</span>
  <span class="token comment">// TODO: These should not need a type.</span>
  fiber<span class="token punctuation">.</span>elementType <span class="token operator">=</span> <span class="token string">&#39;DELETED&#39;</span>
  fiber<span class="token punctuation">.</span>type <span class="token operator">=</span> <span class="token string">&#39;DELETED&#39;</span>
  <span class="token keyword">return</span> fiber
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div>`,55);function e(t,o){return p}var l=s(a,[["render",e]]);export{l as default};
