import{r as t,o as e,c as o,b as n,d as c,F as l,a as s,e as a}from"./app.ba47fc91.js";import{_ as r}from"./plugin-vue_export-helper.21dcd24c.js";const u={},i=s(`<h3 id="\u3010\u8FDB\u96367-3\u671F\u3011throttle-\u548C-debounce-\u5728-react-\u4E2D\u7684\u5E94\u7528" tabindex="-1"><a class="header-anchor" href="#\u3010\u8FDB\u96367-3\u671F\u3011throttle-\u548C-debounce-\u5728-react-\u4E2D\u7684\u5E94\u7528" aria-hidden="true">#</a> \u3010\u8FDB\u96367-3\u671F\u3011Throttle \u548C Debounce \u5728 React \u4E2D\u7684\u5E94\u7528</h3><h2 id="\u57FA\u672C\u6982\u5FF5" tabindex="-1"><a class="header-anchor" href="#\u57FA\u672C\u6982\u5FF5" aria-hidden="true">#</a> <strong>\u57FA\u672C\u6982\u5FF5</strong></h2><hr><p>\u4F7F\u7528 React \u6784\u5EFA\u5E94\u7528\u7A0B\u5E8F\u65F6\uFF0C\u603B\u662F\u4F1A\u9047\u5230\u4E00\u4E9B\u9650\u5236\u95EE\u9898\uFF0C\u6BD4\u5982\u5927\u91CF\u7684\u8C03\u7528\u3001\u5F02\u6B65\u7F51\u7EDC\u8BF7\u6C42\u548C DOM \u66F4\u65B0\u7B49\uFF0C\u53EF\u4EE5\u4F7F\u7528 React \u63D0\u4F9B\u7684\u529F\u80FD\u6765\u68C0\u67E5\u8FD9\u4E9B\u3002</p><ul><li><p><code>shouldComponentUpdate(...)</code> \u751F\u547D\u5468\u671F\u94A9\u5B50</p></li><li><p><code>React.PureComponent</code></p></li><li><p><code>React.memo</code></p></li><li><p>Windowing and Virtualization</p></li><li><p>Memoization</p></li><li><p>Hydration</p></li><li><p>Hooks (<code>useState</code>, <code>useMemo</code>, <code>useContext</code>, <code>useReducer</code>, \u7B49)</p></li></ul><p>\u5728\u8FD9\u7BC7\u6587\u7AE0\u4E2D\uFF0C\u5C06\u7814\u7A76\u5982\u4F55\u5728\u4E0D\u4F7F\u7528 React \u63D0\u4F9B\u7684\u529F\u80FD\u4E0B\u6765\u6539\u8FDB React \u5E94\u7528\u7A0B\u5E8F\u6027\u80FD\uFF0C\u5C06\u4F7F\u7528\u4E00\u79CD\u4E0D\u4EC5\u4EC5\u9002\u7528\u4E8E React \u7684\u6280\u672F\uFF1A<strong>\u8282\u6D41\uFF08Throttle\uFF09<strong>\u548C</strong>\u9632\u6296\uFF08Debounce\uFF09</strong>\u3002</p><h2 id="\u4ECE\u4E00\u4E2A\u4F8B\u5B50\u5F00\u59CB" tabindex="-1"><a class="header-anchor" href="#\u4ECE\u4E00\u4E2A\u4F8B\u5B50\u5F00\u59CB" aria-hidden="true">#</a> <strong>\u4ECE\u4E00\u4E2A\u4F8B\u5B50\u5F00\u59CB</strong></h2><hr><h2 id="\u4F8B\u5B50-1" tabindex="-1"><a class="header-anchor" href="#\u4F8B\u5B50-1" aria-hidden="true">#</a> <strong>\u4F8B\u5B50 1</strong></h2><p>\u4E0B\u9762\u8FD9\u4E2A\u4F8B\u5B50\u53EF\u4EE5\u5F88\u597D\u7684\u89E3\u91CA\u8282\u6D41\u548C\u9632\u6296\u5E26\u7ED9\u7684\u597D\u5904\uFF0C\u5047\u8BBE\u6709\u4E00\u4E2A autocomp \u7EC4\u4EF6</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token string">&#39;./autocomp.css&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name">autocomp</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>
    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token operator">=</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">results</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token function-variable function">handleInput</span> <span class="token operator">=</span> <span class="token parameter">evt</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> value <span class="token operator">=</span> evt<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value
        <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">/api/users</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> res<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">result</span> <span class="token operator">=&gt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">results</span><span class="token operator">:</span> result<span class="token punctuation">.</span>users <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

     <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> <span class="token punctuation">{</span> results <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span>
            <span class="token operator">&lt;</span>div className<span class="token operator">=</span><span class="token string">&#39;autocomp_wrapper&#39;</span><span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span>input placeholder<span class="token operator">=</span><span class="token string">&quot;Enter your search..&quot;</span> onChange<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>handleInput<span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span>
                <span class="token punctuation">{</span>results<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>item<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span>
            <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> autocomp<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br></div></div><p>\u5728\u7684 <code>autocomp</code> \u7EC4\u4EF6\u4E2D\uFF0C\u4E00\u65E6\u5728\u8F93\u5165\u6846\u4E2D\u8F93\u5165\u4E00\u4E2A\u5355\u8BCD\uFF0C\u5B83\u5C31\u4F1A\u8BF7\u6C42 <code>api/users</code> \u83B7\u53D6\u8981\u663E\u793A\u7684\u7528\u6237\u5217\u8868\u3002 \u5728\u6BCF\u4E2A\u5B57\u6BCD\u8F93\u5165\u540E\uFF0C\u89E6\u53D1\u5F02\u6B65\u7F51\u7EDC\u8BF7\u6C42\uFF0C\u5E76\u4E14\u6210\u529F\u540E\u901A\u8FC7 <code>this.setState</code> \u66F4\u65B0DOM\u3002</p><p>\u73B0\u5728\uFF0C\u60F3\u8C61\u4E00\u4E0B\u8F93\u5165 <code>fidudusola</code> \u5C1D\u8BD5\u641C\u7D22\u7ED3\u679C <code>fidudusolanke</code>\uFF0C\u5C06\u6709\u8BB8\u591A\u540D\u79F0\u4E0E <code>fidudusola</code> \u4E00\u8D77\u51FA\u73B0\u3002</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>1.  f
2.  fi
3.  fid
4.  fidu
5.  fidud
6.  fidudu
7.  fidudus
8.  fiduduso
9.  fidudusol
10. fidudusola
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>\u8FD9\u4E2A\u540D\u5B57\u6709 10 \u4E2A\u5B57\u6BCD\uFF0C\u6240\u4EE5\u5C06\u6709 10 \u6B21 API \u8BF7\u6C42\u548C 10 \u6B21 DOM \u66F4\u65B0\uFF0C\u8FD9\u53EA\u662F\u4E00\u4E2A\u7528\u6237\u800C\u5DF2!! \u8F93\u5165\u5B8C\u6210\u540E\u6700\u7EC8\u770B\u5230\u9884\u671F\u7684\u540D\u5B57 <code>fidudusolanke</code> \u548C\u5176\u4ED6\u7ED3\u679C\u4E00\u8D77\u51FA\u73B0\u3002</p><p>\u5373\u4F7F <code>autocomp</code> \u53EF\u4EE5\u5728\u6CA1\u6709\u7F51\u7EDC\u8BF7\u6C42\u7684\u60C5\u51B5\u4E0B\u5B8C\u6210\uFF08\u4F8B\u5982\uFF0C\u5185\u5B58\u4E2D\u6709\u4E00\u4E2A\u672C\u5730\u201C\u6570\u636E\u5E93\u201D\uFF09\uFF0C\u4ECD\u7136\u9700\u8981\u4E3A\u8F93\u5165\u7684\u6BCF\u4E2A\u5B57\u7B26/\u5355\u8BCD\u8FDB\u884C\u6602\u8D35\u7684 DOM \u66F4\u65B0\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;nnamdi&#39;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;fidudusola&#39;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;fashola&#39;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;fidudusolanke&#39;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token comment">// ... up to 10,000 records</span>
<span class="token punctuation">]</span>

<span class="token keyword">class</span> <span class="token class-name">autocomp</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>
    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token operator">=</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">results</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token function-variable function">handleInput</span> <span class="token operator">=</span> <span class="token parameter">evt</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> value <span class="token operator">=</span> evt<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value
        <span class="token keyword">const</span> filteredRes <span class="token operator">=</span> data<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token comment">// algorithm to search through the \`data\` array</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">results</span><span class="token operator">:</span> filteredRes <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> <span class="token punctuation">{</span> results <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span>
            <span class="token operator">&lt;</span>div className<span class="token operator">=</span><span class="token string">&#39;autocomp_wrapper&#39;</span><span class="token operator">&gt;</span>
                <span class="token operator">&lt;</span>input placeholder<span class="token operator">=</span><span class="token string">&quot;Enter your search..&quot;</span> onChange<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>handleInput<span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
                <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span>
                    <span class="token punctuation">{</span>results<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">result</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>result<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span>
                <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br></div></div><h2 id="\u4F8B\u5B50-2" tabindex="-1"><a class="header-anchor" href="#\u4F8B\u5B50-2" aria-hidden="true">#</a> <strong>\u4F8B\u5B50 2</strong></h2><p>\u53E6\u4E00\u4E2A\u4F8B\u5B50\u662F\u4F7F\u7528 <code>resize</code> \u548C <code>scroll</code> \u7B49\u4E8B\u4EF6\u3002\u5927\u591A\u6570\u60C5\u51B5\u4E0B\uFF0C\u7F51\u7AD9\u6BCF\u79D2\u6EDA\u52A8 1000 \u6B21\uFF0C\u60F3\u8C61\u4E00\u4E0B\u5728 <code>scroll</code> \u4E8B\u4EF6\u4E2D\u6DFB\u52A0\u4E00\u4E2A\u4E8B\u4EF6\u5904\u7406\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;scroll&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Scrolled !!!&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u4F1A\u53D1\u73B0\u8FD9\u4E2A\u51FD\u6570\u6BCF\u79D2\u88AB\u6267\u884C 1000 \u6B21\uFF01\u5982\u679C\u8FD9\u4E2A\u4E8B\u4EF6\u5904\u7406\u51FD\u6570\u6267\u884C\u5927\u91CF\u8BA1\u7B97\u6216\u5927\u91CF DOM \u64CD\u4F5C\uFF0C\u5C06\u9762\u4E34\u6700\u574F\u7684\u60C5\u51B5\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">longOp</span><span class="token punctuation">(</span><span class="token parameter">ms</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> now <span class="token operator">=</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">var</span> end <span class="token operator">=</span> now <span class="token operator">+</span> ms
    <span class="token keyword">while</span><span class="token punctuation">(</span>now <span class="token operator">&lt;</span> end<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        now <span class="token operator">=</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;scroll&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// simulating a heavy operation</span>
    <span class="token function">longOp</span><span class="token punctuation">(</span><span class="token number">9000</span><span class="token punctuation">)</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Scrolled !!!&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>\u6709\u4E00\u4E2A\u9700\u8981 9 \u79D2\u624D\u80FD\u5B8C\u6210\u7684\u64CD\u4F5C\uFF0C\u6700\u540E\u8F93\u51FA <code>Scrolled !!!</code>\uFF0C\u5047\u8BBE\u6EDA\u52A8 5000 \u50CF\u7D20\u4F1A\u6709 200 \u591A\u4E2A\u4E8B\u4EF6\u88AB\u89E6\u53D1\u3002 \u56E0\u6B64\uFF0C\u9700\u8981 9 \u79D2\u624D\u80FD\u5B8C\u6210\u4E00\u6B21\u7684\u4E8B\u4EF6\uFF0C\u5927\u7EA6\u9700\u8981 9 * 200 = 1800s \u6765\u8FD0\u884C\u5168\u90E8\u7684 200 \u4E2A\u4E8B\u4EF6\u3002 \u56E0\u6B64\uFF0C\u5168\u90E8\u5B8C\u6210\u9700\u8981 30 \u5206\u949F\uFF08\u534A\u5C0F\u65F6\uFF09\u3002</p><p>\u6240\u4EE5\u80AF\u5B9A\u4F1A\u53D1\u73B0\u4E00\u4E2A\u6EDE\u540E\u4E14\u65E0\u54CD\u5E94\u7684\u6D4F\u89C8\u5668\uFF0C\u56E0\u6B64\u7F16\u5199\u7684\u4E8B\u4EF6\u5904\u7406\u51FD\u6570\u6700\u597D\u5728\u8F83\u77ED\u7684\u65F6\u95F4\u5185\u6267\u884C\u5B8C\u6210\u3002</p><p>\u53D1\u73B0\u8FD9\u4F1A\u5728\u7684\u5E94\u7528\u7A0B\u5E8F\u4E2D\u4EA7\u751F\u5DE8\u5927\u7684\u6027\u80FD\u74F6\u9888\uFF0C\u4E0D\u9700\u8981\u5728\u8F93\u5165\u7684\u6BCF\u4E2A\u5B57\u6BCD\u4E0A\u6267\u884C API \u8BF7\u6C42\u548C DOM \u66F4\u65B0\uFF0C\u9700\u8981\u7B49\u5230\u7528\u6237\u505C\u6B62\u8F93\u5165\u6216\u8005\u8F93\u5165\u4E00\u6BB5\u65F6\u95F4\u4E4B\u540E\uFF0C\u7B49\u5230\u7528\u6237\u505C\u6B62\u6EDA\u52A8\u6216\u8005\u6EDA\u52A8\u4E00\u6BB5\u65F6\u95F4\u4E4B\u540E\uFF0C\u518D\u53BB\u6267\u884C\u4E8B\u4EF6\u5904\u7406\u51FD\u6570\u3002</p><p>\u6240\u6709\u8FD9\u4E9B\u786E\u4FDD\u7684\u5E94\u7528\u7A0B\u5E8F\u6709\u826F\u597D\u6027\u80FD\uFF0C\u8BA9\u770B\u770B\u5982\u4F55\u4F7F\u7528\u8282\u6D41\u548C\u9632\u6296\u6765\u907F\u514D\u8FD9\u79CD\u6027\u80FD\u74F6\u9888\u3002</p><h2 id="\u8282\u6D41-throttle" tabindex="-1"><a class="header-anchor" href="#\u8282\u6D41-throttle" aria-hidden="true">#</a> <strong>\u8282\u6D41 Throttle</strong></h2><hr><blockquote><p>\u8282\u6D41\u5F3A\u5236\u4E00\u4E2A\u51FD\u6570\u5728\u4E00\u6BB5\u65F6\u95F4\u5185\u53EF\u4EE5\u8C03\u7528\u7684\u6700\u5927\u6B21\u6570\uFF0C\u4F8B\u5982\u6BCF 100 \u6BEB\u79D2\u6700\u591A\u6267\u884C\u4E00\u6B21\u51FD\u6570\u3002</p></blockquote><p>\u8282\u6D41\u662F\u6307\u5728\u6307\u5B9A\u7684\u65F6\u95F4\u5185\u6267\u884C\u4E00\u6B21\u7ED9\u5B9A\u7684\u51FD\u6570\u3002\u8FD9\u9650\u5236\u4E86\u51FD\u6570\u88AB\u8C03\u7528\u7684\u6B21\u6570\uFF0C\u6240\u4EE5\u91CD\u590D\u7684\u51FD\u6570\u8C03\u7528\u4E0D\u4F1A\u91CD\u7F6E\u4EFB\u4F55\u6570\u636E\u3002</p><p>\u5047\u8BBE\u901A\u5E38\u4EE5 1000 \u6B21 / 20 \u79D2\u7684\u901F\u5EA6\u8C03\u7528\u51FD\u6570\u3002 \u5982\u679C\u4F7F\u7528\u8282\u6D41\u5C06\u5B83\u9650\u5236\u4E3A\u6BCF 500 \u6BEB\u79D2\u6267\u884C\u4E00\u6B21\uFF0C\u4F1A\u770B\u5230\u51FD\u6570\u5728 20 \u79D2\u5185\u5C06\u6267\u884C 40 \u6B21\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token number">1000</span> <span class="token operator">*</span> <span class="token number">20</span> secs <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">,</span>000ms
<span class="token number">20</span><span class="token punctuation">,</span>000ms <span class="token operator">/</span> 500ms <span class="token operator">=</span> <span class="token number">40</span> times
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>\u8FD9\u662F\u4ECE 1000 \u6B21\u5230 40 \u6B21\u7684\u6781\u5927\u4F18\u5316\u3002</p><p>\u4E0B\u9762\u5C06\u4ECB\u7ECD\u5728 React \u4E2D\u4F7F\u7528\u8282\u6D41\u7684\u4F8B\u5B50\uFF0C\u5C06\u5206\u522B\u4F7F\u7528 <code>underscore</code> \u3001 <code>lodash</code> \u3001<code>RxJS</code> \u4EE5\u53CA\u81EA\u5B9A\u4E49\u5B9E\u73B0\u3002</p><h2 id="\u4F7F\u7528-underscore" tabindex="-1"><a class="header-anchor" href="#\u4F7F\u7528-underscore" aria-hidden="true">#</a> <strong>\u4F7F\u7528 underscore</strong></h2><p>\u5C06\u4F7F\u7528 <code>underscore</code> \u63D0\u4F9B\u7684\u8282\u6D41\u51FD\u6570\u5904\u7406\u7684 <code>autocomp</code> \u7EC4\u4EF6\u3002</p><p>\u5148\u5B89\u88C5\u4F9D\u8D56\u3002</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>npm i underscore
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>\u7136\u540E\u5728\u7EC4\u4EF6\u4E2D\u5BFC\u5165\u5B83\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// ...</span>
<span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> _ from underscore<span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name">autocomp</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>
    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">=</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">results</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
        <span class="token punctuation">}</span>
       <span class="token keyword">this</span><span class="token punctuation">.</span>handleInputThrottled <span class="token operator">=</span> _<span class="token punctuation">.</span><span class="token function">throttle</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>handleInput<span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token function-variable function">handleInput</span> <span class="token operator">=</span> <span class="token parameter">evt</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> value <span class="token operator">=</span> evt<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value
        <span class="token keyword">const</span> filteredRes <span class="token operator">=</span> data<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token comment">// algorithm to search through the \`data\` array</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">results</span><span class="token operator">:</span> filteredRes <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> <span class="token punctuation">{</span> results <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span>
            <span class="token operator">&lt;</span>div className<span class="token operator">=</span><span class="token string">&#39;autocomp_wrapper&#39;</span><span class="token operator">&gt;</span>
                <span class="token operator">&lt;</span>input placeholder<span class="token operator">=</span><span class="token string">&quot;Enter your search..&quot;</span> onChange<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>handleInputThrottled<span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
                <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span>
                    <span class="token punctuation">{</span>results<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">result</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>result<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span>
                <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br></div></div><p>\u8282\u6D41\u51FD\u6570\u63A5\u6536\u4E24\u4E2A\u53C2\u6570\uFF0C\u5206\u522B\u662F\u9700\u8981\u88AB\u9650\u5236\u7684\u51FD\u6570\u548C\u65F6\u95F4\u5DEE\uFF0C\u8FD4\u56DE\u4E00\u4E2A\u8282\u6D41\u5904\u7406\u540E\u7684\u51FD\u6570\u3002 \u5728\u7684\u4F8B\u5B50\u4E2D\uFF0C<code>handleInput</code> \u65B9\u6CD5\u88AB\u4F20\u9012\u7ED9 <code>throttle</code> \u51FD\u6570\uFF0C\u65F6\u95F4\u5DEE\u4E3A 1000ms\u3002</p><p>\u73B0\u5728\uFF0C\u5047\u8BBE\u4EE5\u6BCF 200ms 1 \u4E2A\u5B57\u6BCD\u7684\u6B63\u5E38\u901F\u5EA6\u8F93\u5165 fidudusola\uFF0C\u8F93\u5165\u5B8C\u6210\u9700\u898110 * 200ms =\uFF082000ms\uFF092s\uFF0C\u8FD9\u65F6 <code>handleInput</code> \u65B9\u6CD5\u5C06\u53EA\u8C03\u7528 2\uFF082000ms / 1000ms = 2\uFF09\u6B21\u800C\u4E0D\u662F\u6700\u521D\u7684 10 \u6B21\u3002</p><h2 id="\u4F7F\u7528-lodash" tabindex="-1"><a class="header-anchor" href="#\u4F7F\u7528-lodash" aria-hidden="true">#</a> <strong>\u4F7F\u7528 lodash</strong></h2><hr><p><code>lodash</code> \u4E5F\u63D0\u4F9B\u4E86\u4E00\u4E2A <code>throttle</code> \u51FD\u6570\uFF0C\u53EF\u4EE5\u5728 JS \u7A0B\u5E8F\u4E2D\u4F7F\u7528\u5B83\u3002</p><p>\u9996\u5148\uFF0C\u9700\u8981\u5B89\u88C5\u4F9D\u8D56\u3002</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>npm i lodash
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>\u4F7F\u7528 <code>lodash</code>\uFF0C\u7684 <code>autocomp</code> \u5C06\u662F\u8FD9\u6837\u7684\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// ...</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> throttle <span class="token punctuation">}</span> from lodash<span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name">autocomp</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>
    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">=</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">results</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
        <span class="token punctuation">}</span>
       <span class="token keyword">this</span><span class="token punctuation">.</span>handleInputThrottled <span class="token operator">=</span> <span class="token function">throttle</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>handleInput<span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token function-variable function">handleInput</span> <span class="token operator">=</span> <span class="token parameter">evt</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> value <span class="token operator">=</span> evt<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value
        <span class="token keyword">const</span> filteredRes <span class="token operator">=</span> data<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token comment">// algorithm to search through the \`data\` array</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">results</span><span class="token operator">:</span> filteredRes <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> <span class="token punctuation">{</span> results <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span>
            <span class="token operator">&lt;</span>div className<span class="token operator">=</span><span class="token string">&#39;autocomp_wrapper&#39;</span><span class="token operator">&gt;</span>
                <span class="token operator">&lt;</span>input placeholder<span class="token operator">=</span><span class="token string">&quot;Enter your search..&quot;</span> onChange<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>handleInputThrottled<span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
                <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span>
                    <span class="token punctuation">{</span>results<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">result</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>result<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span>
                <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br></div></div><p>\u548C <code>underscore</code> \u4E00\u6837\u7684\u6548\u679C\uFF0C\u6CA1\u6709\u5176\u4ED6\u533A\u522B\u3002</p><h2 id="\u4F7F\u7528-rxjs" tabindex="-1"><a class="header-anchor" href="#\u4F7F\u7528-rxjs" aria-hidden="true">#</a> <strong>\u4F7F\u7528 RxJS</strong></h2><p>JS \u4E2D\u7684 <code>Reactive Extensions</code> \u63D0\u4F9B\u4E86\u4E00\u4E2A\u8282\u6D41\u8FD0\u7B97\u7B26\uFF0C\u53EF\u4EE5\u4F7F\u7528\u5B83\u6765\u5B9E\u73B0\u529F\u80FD\u3002</p><p>\u9996\u5148\uFF0C\u5B89\u88C5 <code>rxjs</code> \u3002</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>npm i rxjs
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>\u4ECE <code>rxjs</code> \u5E93\u5BFC\u5165 <code>throttle</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// ...</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> BehaviorSubject <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;rxjs&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> throttle <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;rxjs/operators&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name">autocomp</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>
    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">=</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">results</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>inputStream <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BehaviorSubject</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token function">componentDidMount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>inputStream
            <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>
                <span class="token function">throttle</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span>
            <span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token parameter">v</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                <span class="token keyword">const</span> filteredRes <span class="token operator">=</span> data<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                    <span class="token comment">// algorithm to search through the \`data\` array</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span>
                <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">results</span><span class="token operator">:</span> filteredRes <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> <span class="token punctuation">{</span> results <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span>
            <span class="token operator">&lt;</span>div className<span class="token operator">=</span><span class="token string">&#39;autocomp_wrapper&#39;</span><span class="token operator">&gt;</span>
                <span class="token operator">&lt;</span>input placeholder<span class="token operator">=</span><span class="token string">&quot;Enter your search..&quot;</span> onChange<span class="token operator">=</span><span class="token punctuation">{</span><span class="token parameter">e</span> <span class="token operator">=&gt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>inputStream<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
                <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span>
                    <span class="token punctuation">{</span>results<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">result</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> result <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span>
                <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br></div></div><p>\u4ECE <code>rxjs</code> \u4E2D\u5BFC\u5165\u4E86 <code>throttle</code> \u548C <code>BehaviorSubject</code>\uFF0C\u521D\u59CB\u5316\u4E86\u4E00\u4E2A <code>BehaviorSubject</code> \u5B9E\u4F8B\u4FDD\u5B58\u5728 <code>inputStream</code> \u5C5E\u6027\uFF0C\u5728 <code>componentDidMount</code> \u4E2D\uFF0C\u5C06 <code>inputStream</code> \u6D41\u4F20\u9012\u7ED9\u8282\u6D41\u64CD\u4F5C\u7B26\uFF0C\u4F20\u5165 1000\uFF0C\u8868\u793A <code>RxJS</code> \u8282\u6D41\u63A7\u5236\u4E3A 1000ms\uFF0C\u8282\u6D41\u64CD\u4F5C\u8FD4\u56DE\u7684\u6D41\u88AB\u8BA2\u9605\u4EE5\u83B7\u5F97\u6D41\u503C\u3002</p><p>\u56E0\u4E3A\u5728\u7EC4\u4EF6\u52A0\u8F7D\u65F6\u8BA2\u9605\u4E86 <code>inputStream</code>\uFF0C\u6240\u4EE5\u5F00\u59CB\u8F93\u5165\u65F6\uFF0C\u8F93\u5165\u7684\u5185\u5BB9\u5C31\u88AB\u53D1\u9001\u5230 <code>inputStream</code> \u6D41\u4E2D\u3002 \u521A\u5F00\u59CB\u65F6\uFF0C\u7531\u4E8E <code>throttle</code> \u64CD\u4F5C\u7B26 1000ms \u5185\u4E0D\u4F1A\u53D1\u9001\u5185\u5BB9\uFF0C\u5728\u8FD9\u4E4B\u540E\u53D1\u9001\u6700\u65B0\u503C\uFF0C \u53D1\u9001\u4E4B\u540E\u5C31\u5F00\u59CB\u8BA1\u7B97\u5F97\u5230\u7ED3\u679C\u3002</p><p>\u5982\u679C\u4EE5 200ms 1 \u4E2A\u5B57\u6BCD\u7684\u901F\u5EA6\u8F93\u5165 fidudusola \uFF0C\u8BE5\u7EC4\u4EF6\u5C06\u91CD\u65B0\u6E32\u67D3 2000ms / 1000ms = 2\u6B21\u3002</p><h2 id="\u4F7F\u7528\u81EA\u5B9A\u4E49\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#\u4F7F\u7528\u81EA\u5B9A\u4E49\u5B9E\u73B0" aria-hidden="true">#</a> <strong>\u4F7F\u7528\u81EA\u5B9A\u4E49\u5B9E\u73B0</strong></h2><p>\u5B9E\u73B0\u81EA\u5DF1\u7684\u8282\u6D41\u51FD\u6570\uFF0C\u65B9\u4FBF\u66F4\u597D\u7684\u7406\u89E3\u8282\u6D41\u5982\u4F55\u5DE5\u4F5C\u3002</p><p>\u77E5\u9053\u5728\u4E00\u4E2A\u8282\u6D41\u63A7\u5236\u7684\u51FD\u6570\u4E2D\uFF0C\u5B83\u4F1A\u6839\u636E\u6307\u5B9A\u7684\u65F6\u95F4\u95F4\u9694\u8C03\u7528\uFF0C\u5C06\u4F7F\u7528 <code>setTimeout</code> \u51FD\u6570\u5B9E\u73B0\u8FD9\u4E00\u70B9\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">throttle</span><span class="token punctuation">(</span><span class="token parameter">fn<span class="token punctuation">,</span> ms</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> timeout
    <span class="token keyword">function</span> <span class="token function">exec</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">fn</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">function</span> <span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        timeout <span class="token operator">==</span> <span class="token keyword">undefined</span> <span class="token operator">?</span> <span class="token keyword">null</span> <span class="token operator">:</span> <span class="token function">clearTimeout</span><span class="token punctuation">(</span>timeout<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>fn <span class="token operator">!==</span> <span class="token keyword">undefined</span> <span class="token operator">&amp;&amp;</span> ms <span class="token operator">!==</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        timeout <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span>exec<span class="token punctuation">,</span> ms<span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&#39;callback function and the timeout must be supplied&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// API to clear the timeout</span>
    throttle<span class="token punctuation">.</span><span class="token function-variable function">clearTimeout</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div>`,63),k=a("\u6CE8\uFF1A\u539F\u6587\u81EA\u5B9A\u4E49\u5B9E\u73B0\u7684\u8282\u6D41\u51FD\u6570\u6709\u95EE\u9898\uFF0C\u8282\u6D41\u51FD\u6570\u7684\u8BE6\u7EC6\u5B9E\u73B0\u548C\u89E3\u6790\u53EF\u4EE5\u67E5\u770B\uFF0C"),b={href:"/js/antiShakeThrottling/throttle.md",target:"_blank",rel:"noopener noreferrer"},d=a("\u3010\u8FDB\u96367-1\u671F\u3011\u6DF1\u5165\u6D45\u51FA\u8282\u6D41\u51FD\u6570 throttle"),m=s(`<p>\u7684\u5B9E\u73B0\u5982\u4E0B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// fn \u662F\u9700\u8981\u6267\u884C\u7684\u51FD\u6570</span>
<span class="token comment">// wait \u662F\u65F6\u95F4\u95F4\u9694</span>
<span class="token keyword">const</span> <span class="token function-variable function">throttle</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">fn<span class="token punctuation">,</span> wait <span class="token operator">=</span> <span class="token number">50</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u4E0A\u4E00\u6B21\u6267\u884C fn \u7684\u65F6\u95F4</span>
    <span class="token keyword">let</span> previous <span class="token operator">=</span> <span class="token number">0</span>
    <span class="token comment">// \u5C06 throttle \u5904\u7406\u7ED3\u679C\u5F53\u4F5C\u51FD\u6570\u8FD4\u56DE</span>
    <span class="token keyword">return</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>args</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u83B7\u53D6\u5F53\u524D\u65F6\u95F4\uFF0C\u8F6C\u6362\u6210\u65F6\u95F4\u6233\uFF0C\u5355\u4F4D\u6BEB\u79D2</span>
        <span class="token keyword">let</span> now <span class="token operator">=</span> <span class="token operator">+</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token comment">// \u5C06\u5F53\u524D\u65F6\u95F4\u548C\u4E0A\u4E00\u6B21\u6267\u884C\u51FD\u6570\u7684\u65F6\u95F4\u8FDB\u884C\u5BF9\u6BD4</span>
        <span class="token comment">// \u5927\u4E8E\u7B49\u5F85\u65F6\u95F4\u5C31\u628A previous \u8BBE\u7F6E\u4E3A\u5F53\u524D\u65F6\u95F4\u5E76\u6267\u884C\u51FD\u6570 fn</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>now <span class="token operator">-</span> previous <span class="token operator">&gt;</span> wait<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            previous <span class="token operator">=</span> now
            <span class="token function">fn</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p>\u4E0A\u9762\u7684\u5B9E\u73B0\u975E\u5E38\u7B80\u5355\uFF0C\u5728 React \u9879\u76EE\u4E2D\u4F7F\u7528\u65B9\u5F0F\u5982\u4E0B\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// ...</span>
<span class="token keyword">class</span> <span class="token class-name">autocomp</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>
    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">=</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">results</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
        <span class="token punctuation">}</span>
       <span class="token keyword">this</span><span class="token punctuation">.</span>handleInputThrottled <span class="token operator">=</span> <span class="token function">throttle</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>handleInput<span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token function-variable function">handleInput</span> <span class="token operator">=</span> <span class="token parameter">evt</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> value <span class="token operator">=</span> evt<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value
        <span class="token keyword">const</span> filteredRes <span class="token operator">=</span> data<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token comment">// algorithm to search through the \`data\` array</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">results</span><span class="token operator">:</span> filteredRes <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> <span class="token punctuation">{</span> results <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span>
            <span class="token operator">&lt;</span>div className<span class="token operator">=</span><span class="token string">&#39;autocomp_wrapper&#39;</span><span class="token operator">&gt;</span>
                <span class="token operator">&lt;</span>input placeholder<span class="token operator">=</span><span class="token string">&quot;Enter your search..&quot;</span> onChange<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>handleInputThrottled<span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
                <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span>
                    <span class="token punctuation">{</span>results<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">result</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>result<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span>
                <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br></div></div><h2 id="\u9632\u6296-debounce" tabindex="-1"><a class="header-anchor" href="#\u9632\u6296-debounce" aria-hidden="true">#</a> <strong>\u9632\u6296 Debounce</strong></h2><hr><blockquote><p>\u9632\u6296\u4F1A\u5F3A\u5236\u81EA\u4E0A\u6B21\u8C03\u7528\u540E\u7ECF\u8FC7\u4E00\u5B9A\u65F6\u95F4\u624D\u4F1A\u518D\u6B21\u8C03\u7528\u51FD\u6570\uFF0C\u4F8B\u5982\u53EA\u6709\u5728\u6CA1\u6709\u88AB\u8C03\u7528\u7684\u60C5\u51B5\u4E0B\u7ECF\u8FC7\u4E00\u6BB5\u65F6\u95F4\u4E4B\u540E\uFF08\u4F8B\u5982100\u6BEB\u79D2\uFF09\u624D\u6267\u884C\u8BE5\u51FD\u6570\u3002</p></blockquote><p>\u5728\u9632\u6296\u65F6\uFF0C\u5B83\u5FFD\u7565\u5BF9\u51FD\u6570\u7684\u6240\u6709\u8C03\u7528\uFF0C\u76F4\u5230\u51FD\u6570\u505C\u6B62\u8C03\u7528\u4E00\u6BB5\u65F6\u95F4\u4E4B\u540E\u624D\u4F1A\u518D\u6B21\u6267\u884C\u3002</p><p>\u4E0B\u9762\u5C06\u4ECB\u7ECD\u5728\u9879\u76EE\u4E2D\u4F7F\u7528 debounce \u7684\u4F8B\u5B50\u3002</p><h2 id="\u4F7F\u7528-underscore-1" tabindex="-1"><a class="header-anchor" href="#\u4F7F\u7528-underscore-1" aria-hidden="true">#</a> <strong>\u4F7F\u7528 underscore</strong></h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// ...</span>
<span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> _ <span class="token keyword">from</span> <span class="token string">&#39;underscore&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">class</span> <span class="token class-name">autocomp</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>
    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">=</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">results</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
        <span class="token punctuation">}</span>
       <span class="token keyword">this</span><span class="token punctuation">.</span>handleInputThrottled <span class="token operator">=</span> _<span class="token punctuation">.</span><span class="token function">debounce</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>handleInput<span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token function-variable function">handleInput</span> <span class="token operator">=</span> <span class="token parameter">evt</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> value <span class="token operator">=</span> evt<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value
        <span class="token keyword">const</span> filteredRes <span class="token operator">=</span> data<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token comment">// algorithm to search through the \`data\` array</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">results</span><span class="token operator">:</span> filteredRes <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> <span class="token punctuation">{</span> results <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span>
            <span class="token operator">&lt;</span>div className<span class="token operator">=</span><span class="token string">&#39;autocomp_wrapper&#39;</span><span class="token operator">&gt;</span>
                <span class="token operator">&lt;</span>input placeholder<span class="token operator">=</span><span class="token string">&quot;Enter your search..&quot;</span> onChange<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>handleInputThrottled<span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
                <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span>
                    <span class="token punctuation">{</span>results<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">result</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>result<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span>
                <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br></div></div><h2 id="\u4F7F\u7528-lodash-1" tabindex="-1"><a class="header-anchor" href="#\u4F7F\u7528-lodash-1" aria-hidden="true">#</a> <strong>\u4F7F\u7528 lodash</strong></h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// ...</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> debounce <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;lodash&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">class</span> <span class="token class-name">autocomp</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>
    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">=</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">results</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
        <span class="token punctuation">}</span>
       <span class="token keyword">this</span><span class="token punctuation">.</span>handleInputThrottled <span class="token operator">=</span> <span class="token function">debounce</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>handleInput<span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token function-variable function">handleInput</span> <span class="token operator">=</span> <span class="token parameter">evt</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> value <span class="token operator">=</span> evt<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value
        <span class="token keyword">const</span> filteredRes <span class="token operator">=</span> data<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token comment">// algorithm to search through the \`data\` array</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">results</span><span class="token operator">:</span> filteredRes <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> <span class="token punctuation">{</span> results <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span>
            <span class="token operator">&lt;</span>div className<span class="token operator">=</span><span class="token string">&#39;autocomp_wrapper&#39;</span><span class="token operator">&gt;</span>
                <span class="token operator">&lt;</span>input placeholder<span class="token operator">=</span><span class="token string">&quot;Enter your search..&quot;</span> onChange<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>handleInputThrottled<span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
                <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span>
                    <span class="token punctuation">{</span>results<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">result</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>result<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span>
                <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br></div></div><h2 id="\u4F7F\u7528-rxjs-1" tabindex="-1"><a class="header-anchor" href="#\u4F7F\u7528-rxjs-1" aria-hidden="true">#</a> <strong>\u4F7F\u7528 RxJS</strong></h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// ...</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> BehaviorSubject <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;rxjs&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> debounce <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;rxjs/operators&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">class</span> <span class="token class-name">autocomp</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>
    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">=</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">results</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>inputStream <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BehaviorSubject</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token function">componentDidMount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>inputStream
            <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>
                <span class="token function">debounce</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span>
            <span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token parameter">v</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                <span class="token keyword">const</span> filteredRes <span class="token operator">=</span> data<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                    <span class="token comment">// algorithm to search through the \`data\` array</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span>
                <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">results</span><span class="token operator">:</span> filteredRes <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> <span class="token punctuation">{</span> results <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span>
            <span class="token operator">&lt;</span>div className<span class="token operator">=</span><span class="token string">&#39;autocomp_wrapper&#39;</span><span class="token operator">&gt;</span>
                <span class="token operator">&lt;</span>input placeholder<span class="token operator">=</span><span class="token string">&quot;Enter your search..&quot;</span> onChange<span class="token operator">=</span><span class="token punctuation">{</span><span class="token parameter">e</span> <span class="token operator">=&gt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>inputStream<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
                <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span>
                    <span class="token punctuation">{</span>results<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">result</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> result <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span>
                <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br></div></div>`,15);function h(g,y){const p=t("ExternalLinkIcon");return e(),o(l,null,[i,n("p",null,[k,n("a",b,[d,c(p)])]),m],64)}var w=r(u,[["render",h]]);export{w as default};
