import{r as p,o as c,c as l,b as n,d as a,w as r,F as i,e as s,a as t}from"./app.ee3fc36b.js";import{_ as u}from"./plugin-vue_export-helper.21dcd24c.js";const d={},k=n("h1",{id:"react-\u7B97\u6CD5\u4E4B\u4F4D\u8FD0\u7B97",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#react-\u7B97\u6CD5\u4E4B\u4F4D\u8FD0\u7B97","aria-hidden":"true"},"#"),s(" React \u7B97\u6CD5\u4E4B\u4F4D\u8FD0\u7B97")],-1),b=s("\u7F51\u7EDC\u4E0A\u4ECB\u7ECD\u4F4D\u8FD0\u7B97\u7684\u6587\u7AE0\u975E\u5E38\u591A(\u5982"),m={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/Bitwise_Operators",target:"_blank",rel:"noopener noreferrer"},h=s("MDN \u4E0A\u7684\u4ECB\u7ECD"),_=s("\u5C31\u5F88\u4ED4\u7EC6)."),y=t('<p>\u672C\u6587\u7684\u76EE\u7684:</p><ol><li>\u6E29\u6545\u77E5\u65B0, \u5BF9\u4F4D\u8FD0\u7B97\u7684\u57FA\u672C\u4F7F\u7528\u505A\u4E00\u4E0B\u7B80\u5355\u7684\u603B\u7ED3.</li><li>\u5F52\u7EB3\u5728<code>javascript</code>\u4E2D\u4F7F\u7528\u4F4D\u8FD0\u7B97\u7684\u6CE8\u610F\u4E8B\u9879.</li><li>\u5217\u4E3E\u5728<code>react</code>\u6E90\u7801\u4E2D, \u5BF9\u4E8E\u4F4D\u8FD0\u7B97\u7684\u9AD8\u9891\u4F7F\u7528\u573A\u666F.</li></ol><h2 id="\u6982\u5FF5" tabindex="-1"><a class="header-anchor" href="#\u6982\u5FF5" aria-hidden="true">#</a> \u6982\u5FF5</h2><p>\u4F4D\u8FD0\u7B97\u76F4\u63A5\u5904\u7406\u6BCF\u4E00\u4E2A\u6BD4\u7279\u4F4D(bit), \u662F\u975E\u5E38\u5E95\u5C42\u7684\u8FD0\u7B97, \u4F18\u52BF\u662F\u901F\u5EA6\u5FEB, \u52A3\u52BF\u5C31\u662F\u4E0D\u76F4\u89C2\u4E14\u53EA\u652F\u6301\u6574\u6570\u8FD0\u7B97.</p><h2 id="\u7279\u6027" tabindex="-1"><a class="header-anchor" href="#\u7279\u6027" aria-hidden="true">#</a> \u7279\u6027</h2><table><thead><tr><th>\u4F4D\u8FD0\u7B97</th><th>\u7528\u6CD5</th><th>\u63CF\u8FF0</th></tr></thead><tbody><tr><td>\u6309\u4F4D\u4E0E(<code>&amp;</code>)</td><td><code>a &amp; b</code></td><td>\u5BF9\u4E8E\u6BCF\u4E00\u4E2A\u6BD4\u7279\u4F4D,\u4E24\u4E2A\u64CD\u4F5C\u6570\u90FD\u4E3A 1 \u65F6, \u7ED3\u679C\u4E3A 1, \u5426\u5219\u4E3A 0</td></tr><tr><td>\u6309\u4F4D\u6216(<code>|</code>)</td><td><code>a | b</code></td><td>\u5BF9\u4E8E\u6BCF\u4E00\u4E2A\u6BD4\u7279\u4F4D,\u4E24\u4E2A\u64CD\u4F5C\u6570\u90FD\u4E3A 0 \u65F6, \u7ED3\u679C\u4E3A 0, \u5426\u5219\u4E3A 1</td></tr><tr><td>\u6309\u4F4D\u5F02\u6216(<code>^</code>)</td><td><code>a ^ b</code></td><td>\u5BF9\u4E8E\u6BCF\u4E00\u4E2A\u6BD4\u7279\u4F4D,\u4E24\u4E2A\u64CD\u4F5C\u6570\u76F8\u540C\u65F6, \u7ED3\u679C\u4E3A 0, \u5426\u5219\u4E3A 1</td></tr><tr><td>\u6309\u4F4D\u975E(<code>~</code>)</td><td><code>~ a</code></td><td>\u53CD\u8F6C\u64CD\u4F5C\u6570\u7684\u6BD4\u7279\u4F4D, \u5373 0 \u53D8\u6210 1, 1 \u53D8\u6210 0</td></tr><tr><td>\u5DE6\u79FB(<code>&lt;&lt;</code>)</td><td><code>a &lt;&lt; b</code></td><td>\u5C06 a \u7684\u4E8C\u8FDB\u5236\u5F62\u5F0F\u5411\u5DE6\u79FB b (&lt; 32) \u6BD4\u7279\u4F4D, \u53F3\u8FB9\u7528 0 \u586B\u5145</td></tr><tr><td>\u6709\u7B26\u53F7\u53F3\u79FB(<code>&gt;&gt;</code>)</td><td><code>a &gt;&gt; b</code></td><td>\u5C06 a \u7684\u4E8C\u8FDB\u5236\u5F62\u5F0F\u5411\u53F3\u79FB b (&lt; 32) \u6BD4\u7279\u4F4D, \u4E22\u5F03\u88AB\u79FB\u9664\u7684\u4F4D, \u5DE6\u4FA7\u4EE5\u6700\u9AD8\u4F4D\u6765\u586B\u5145</td></tr><tr><td>\u65E0\u7B26\u53F7\u53F3\u79FB(<code>&gt;&gt;&gt;</code>)</td><td><code>a &gt;&gt; b</code></td><td>\u5C06 a \u7684\u4E8C\u8FDB\u5236\u5F62\u5F0F\u5411\u53F3\u79FB b (&lt; 32) \u6BD4\u7279\u4F4D, \u4E22\u5F03\u88AB\u79FB\u9664\u7684\u4F4D, \u5E76\u7528 0 \u5728\u5DE6\u4FA7\u586B\u5145</td></tr></tbody></table>',6),g=s("\u5728"),x={href:"https://www.ecma-international.org/ecma-262/5.1/#sec-11.10",target:"_blank",rel:"noopener noreferrer"},f=n("code",null,"ES5",-1),L=s("\u89C4\u8303\u4E2D"),v=s(", \u5BF9\u4E8C\u8FDB\u5236\u4F4D\u8FD0\u7B97\u7684\u8BF4\u660E\u5982\u4E0B:"),w=t(`<div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>The production A : A @ B, where @ is one of the bitwise operators in the productions above, is evaluated as follows:
1. Let lref be the result of evaluating A.
2. Let lval be GetValue(lref).
3. Let rref be the result of evaluating B.
4. Let rval be GetValue(rref).
5. Let lnum be ToInt32(lval).
6. Let rnum be ToInt32(rval).
7. Return the result of applying the bitwise operator @ to lnum and rnum. The result is a signed 32 bit integer.
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>\u610F\u601D\u662F\u4F1A\u5C06\u4F4D\u8FD0\u7B97\u4E2D\u7684\u5DE6\u53F3\u64CD\u4F5C\u6570\u90FD\u8F6C\u6362\u4E3A<code>\u6709\u7B26\u53F732\u4F4D\u6574\u578B</code>, \u4E14\u8FD4\u56DE\u7ED3\u679C\u4E5F\u662F<code>\u6709\u7B26\u53F732\u4F4D\u6574\u578B</code></p><ul><li>\u6240\u4EE5\u5F53\u64CD\u4F5C\u6570\u662F\u6D6E\u70B9\u578B\u65F6\u9996\u5148\u4F1A\u88AB\u8F6C\u6362\u6210\u6574\u578B, \u518D\u8FDB\u884C\u4F4D\u8FD0\u7B97</li><li>\u5F53\u64CD\u4F5C\u6570\u8FC7\u5927, \u8D85\u8FC7\u4E86<code>Int32</code>\u8303\u56F4, \u8D85\u8FC7\u7684\u90E8\u5206\u4F1A\u88AB\u622A\u53D6</li></ul><p>\u901A\u8FC7\u4EE5\u4E0A\u77E5\u8BC6\u7684\u56DE\u987E, \u8981\u70B9\u5982\u4E0B:</p>`,4),C=n("li",null,"\u4F4D\u8FD0\u7B97\u53EA\u80FD\u5728\u6574\u578B\u53D8\u91CF\u4E4B\u95F4\u8FDB\u884C\u8FD0\u7B97",-1),B=n("li",null,[s("js \u4E2D\u7684"),n("code",null,"Number"),s("\u7C7B\u578B\u5728\u5E95\u5C42\u90FD\u662F\u4EE5\u6D6E\u70B9\u6570(\u53C2\u8003 IEEE754 \u6807\u51C6)\u8FDB\u884C\u5B58\u50A8.")],-1),j=s("js \u4E2D\u6240\u6709\u7684\u6309\u4F4D\u64CD\u4F5C\u7B26\u7684\u64CD\u4F5C\u6570\u90FD\u4F1A\u88AB"),A={href:"https://www.ecma-international.org/ecma-262/5.1/#sec-9.5",target:"_blank",rel:"noopener noreferrer"},N=s("\u8F6C\u6210\u8865\u7801\uFF08two's complement\uFF09"),E=s("\u5F62\u5F0F\u7684"),I=n("code",null,"\u6709\u7B26\u53F732\u4F4D\u6574\u6570",-1),R=s("."),S=t(`<p>\u6240\u4EE5\u5728 js \u4E2D\u4F7F\u7528\u4F4D\u8FD0\u7B97\u65F6, \u6709 2 \u79CD\u60C5\u51B5\u4F1A\u9020\u6210\u7ED3\u679C\u5F02\u5E38:</p><ol><li><p>\u64CD\u4F5C\u6570\u4E3A\u6D6E\u70B9\u578B(\u867D\u7136\u5E95\u5C42\u90FD\u662F\u6D6E\u70B9\u578B, \u6B64\u5904\u7406\u89E3\u4E3A\u663E\u793A\u6027\u7684\u6D6E\u70B9\u578B)</p><ul><li>\u8F6C\u6362\u6D41\u7A0B: \u6D6E\u70B9\u6570 -&gt; \u6574\u6570(\u4E22\u5F03\u5C0F\u6570\u4F4D) -&gt; \u4F4D\u8FD0\u7B97</li></ul></li><li><p>\u64CD\u4F5C\u6570\u7684\u5927\u5C0F\u8D85\u8FC7<code>Int32</code>\u8303\u56F4(<code>-2^31 ~ 2^31-1</code>). \u8D85\u8FC7\u8303\u56F4\u7684\u4E8C\u8FDB\u5236\u4F4D\u4F1A\u88AB\u622A\u65AD, \u53D6<code>\u4F4E\u4F4D32bit</code>.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>      Before: 11100110111110100000000000000110000000000001
      After:              10100000000000000110000000000001
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></li></ol>`,2),z=s("\u53E6\u5916\u7531\u4E8E js \u8BED\u8A00\u7684"),D={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Equality_comparisons_and_sameness",target:"_blank",rel:"noopener noreferrer"},F=s("\u9690\u5F0F\u8F6C\u6362"),P=s(", \u5BF9\u975E"),T=n("code",null,"Number",-1),O=s("\u7C7B\u578B\u4F7F\u7528\u4F4D\u8FD0\u7B97\u64CD\u4F5C\u7B26\u65F6\u4F1A\u9690\u5F0F\u4F1A\u53D1\u751F\u9690\u5F0F\u8F6C\u6362, \u76F8\u5F53\u4E8E\u5148\u4F7F\u7528"),U=n("code",null,"Number(xxx)",-1),H=s("\u5C06\u5176\u8F6C\u6362\u4E3A"),V=n("code",null,"number",-1),M=s("\u7C7B\u578B, \u518D\u8FDB\u884C\u4F4D\u8FD0\u7B97:"),W=t(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token string">&#39;str&#39;</span> <span class="token operator">&gt;&gt;&gt;</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment">//  ===&gt; Number(&#39;str&#39;) &gt;&gt;&gt; 0  ===&gt; NaN &gt;&gt;&gt; 0 = 0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="\u57FA\u672C\u4F7F\u7528" tabindex="-1"><a class="header-anchor" href="#\u57FA\u672C\u4F7F\u7528" aria-hidden="true">#</a> \u57FA\u672C\u4F7F\u7528</h2><p>\u4E3A\u4E86\u65B9\u4FBF\u6BD4\u8F83, \u4EE5\u4E0B\u6F14\u793A\u4EE3\u7801\u4E2D\u7684\u6CE8\u91CA, \u90FD\u5199\u6210\u4E86 8 \u4F4D\u4E8C\u8FDB\u5236\u6570(\u4E0A\u6587\u5DF2\u7ECF\u8BF4\u660E, \u4E8B\u5B9E\u4E0A\u5728 js \u4E2D, \u4F4D\u8FD0\u7B97\u6700\u7EC8\u7684\u7ED3\u679C\u90FD\u662F Int32).</p><p>\u679A\u4E3E\u5C5E\u6027:</p><p>\u901A\u8FC7\u4F4D\u79FB\u7684\u65B9\u5F0F, \u5B9A\u4E49\u4E00\u4E9B\u679A\u4E3E\u5E38\u91CF</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token constant">A</span> <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">&lt;&lt;</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment">// 0b00000001</span>
<span class="token keyword">const</span> <span class="token constant">B</span> <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">&lt;&lt;</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">// 0b00000010</span>
<span class="token keyword">const</span> <span class="token constant">C</span> <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">&lt;&lt;</span> <span class="token number">2</span><span class="token punctuation">;</span> <span class="token comment">// 0b00000100</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u4F4D\u63A9\u7801:</p><p>\u901A\u8FC7\u4F4D\u79FB\u5B9A\u4E49\u7684\u4E00\u7EC4\u679A\u4E3E\u5E38\u91CF, \u53EF\u4EE5\u5229\u7528\u4F4D\u63A9\u7801\u7684\u7279\u6027, \u5FEB\u901F\u64CD\u4F5C\u8FD9\u4E9B\u679A\u4E3E\u4EA7\u91CF(\u589E\u52A0, \u5220\u9664, \u6BD4\u8F83).</p><ol><li>\u5C5E\u6027\u589E\u52A0<code>|</code><ol><li><code>ABC = A | B | C</code></li></ol></li><li>\u5C5E\u6027\u5220\u9664<code>&amp; ~</code><ol><li><code>AB = ABC &amp; ~C</code></li></ol></li><li>\u5C5E\u6027\u6BD4\u8F83 <ol><li>AB \u5F53\u4E2D\u5305\u542B B: <code>AB &amp; B === B</code></li><li>AB \u5F53\u4E2D\u4E0D\u5305\u542B C: <code>AB &amp; C === 0</code></li><li>A \u548C B \u76F8\u7B49: <code>A === B</code></li></ol></li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token constant">A</span> <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">&lt;&lt;</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment">// 0b00000001</span>
<span class="token keyword">const</span> <span class="token constant">B</span> <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">&lt;&lt;</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">// 0b00000010</span>
<span class="token keyword">const</span> <span class="token constant">C</span> <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">&lt;&lt;</span> <span class="token number">2</span><span class="token punctuation">;</span> <span class="token comment">// 0b00000100</span>

<span class="token comment">// \u589E\u52A0\u5C5E\u6027</span>
<span class="token keyword">const</span> <span class="token constant">ABC</span> <span class="token operator">=</span> <span class="token constant">A</span> <span class="token operator">|</span> <span class="token constant">B</span> <span class="token operator">|</span> <span class="token constant">C</span><span class="token punctuation">;</span> <span class="token comment">// 0b00000111</span>
<span class="token comment">// \u5220\u9664\u5C5E\u6027</span>
<span class="token keyword">const</span> <span class="token constant">AB</span> <span class="token operator">=</span> <span class="token constant">ABC</span> <span class="token operator">&amp;</span> <span class="token operator">~</span><span class="token constant">C</span><span class="token punctuation">;</span> <span class="token comment">// 0b00000011</span>

<span class="token comment">// \u5C5E\u6027\u6BD4\u8F83</span>
<span class="token comment">// 1. AB\u5F53\u4E2D\u5305\u542BB</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token constant">AB</span> <span class="token operator">&amp;</span> <span class="token constant">B</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token constant">B</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
<span class="token comment">// 2. AB\u5F53\u4E2D\u4E0D\u5305\u542BC</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token constant">AB</span> <span class="token operator">&amp;</span> <span class="token constant">C</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
<span class="token comment">// 3. A\u548CB\u76F8\u7B49</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token constant">A</span> <span class="token operator">===</span> <span class="token constant">B</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><h2 id="react-\u5F53\u4E2D\u7684\u4F7F\u7528\u573A\u666F" tabindex="-1"><a class="header-anchor" href="#react-\u5F53\u4E2D\u7684\u4F7F\u7528\u573A\u666F" aria-hidden="true">#</a> React \u5F53\u4E2D\u7684\u4F7F\u7528\u573A\u666F</h2><p>\u5728 react \u6838\u5FC3\u5305\u4E2D, \u4F4D\u8FD0\u7B97\u4F7F\u7528\u7684\u573A\u666F\u975E\u5E38\u591A. \u6B64\u5904\u53EA\u5217\u4E3E\u51FA\u4E86\u4F7F\u7528\u9891\u7387\u8F83\u9AD8\u7684\u793A\u4F8B.</p><h3 id="\u4F18\u5148\u7EA7\u7BA1\u7406-lanes" tabindex="-1"><a class="header-anchor" href="#\u4F18\u5148\u7EA7\u7BA1\u7406-lanes" aria-hidden="true">#</a> \u4F18\u5148\u7EA7\u7BA1\u7406 lanes</h3>`,13),q=s("lanes \u662F"),G=n("code",null,"17.x",-1),J=s("\u7248\u672C\u4E2D\u5F00\u59CB\u5F15\u5165\u7684\u91CD\u8981\u6982\u5FF5, \u4EE3\u66FF\u4E86"),K=n("code",null,"16.x",-1),Q=s("\u7248\u672C\u4E2D\u7684"),X=n("code",null,"expirationTime",-1),Y=s(", \u4F5C\u4E3A"),Z=n("code",null,"fiber",-1),$=s("\u5BF9\u8C61\u7684\u4E00\u4E2A\u5C5E\u6027(\u4F4D\u4E8E"),nn=n("code",null,"react-reconciler",-1),sn=s("\u5305), \u4E3B\u8981\u63A7\u5236 fiber \u6811\u5728\u6784\u9020\u8FC7\u7A0B\u4E2D\u7684\u4F18\u5148\u7EA7(\u8FD9\u91CC\u53EA\u4ECB\u7ECD\u4F4D\u8FD0\u7B97\u7684\u5E94\u7528, \u5BF9\u4E8E lanes \u7684\u6DF1\u5165\u5206\u6790\u5728"),an=n("code",null,"\u4F18\u5148\u7EA7\u7BA1\u7406",-1),en=s("\u7AE0\u8282\u6DF1\u5165\u89E3\u8BFB)."),tn=n("p",null,"\u53D8\u91CF\u5B9A\u4E49:",-1),pn=s("\u9996\u5148\u770B\u6E90\u7801"),on={href:"https://github.com/facebook/react/blob/v17.0.2/packages/react-reconciler/src/ReactFiberLane.js#L74-L103",target:"_blank",rel:"noopener noreferrer"},cn=s("ReactFiberLane.js"),ln=s("\u4E2D\u7684\u5B9A\u4E49"),rn=t(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//\u7C7B\u578B\u5B9A\u4E49</span>
<span class="token keyword">export</span> opaque type Lanes <span class="token operator">=</span> number<span class="token punctuation">;</span>
<span class="token keyword">export</span> opaque type Lane <span class="token operator">=</span> number<span class="token punctuation">;</span>

<span class="token comment">// \u53D8\u91CF\u5B9A\u4E49</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token literal-property property">NoLanes</span><span class="token operator">:</span> Lanes <span class="token operator">=</span> <span class="token comment">/*                        */</span> <span class="token number">0b0000000000000000000000000000000</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token literal-property property">NoLane</span><span class="token operator">:</span> Lane <span class="token operator">=</span> <span class="token comment">/*                          */</span> <span class="token number">0b0000000000000000000000000000000</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token literal-property property">SyncLane</span><span class="token operator">:</span> Lane <span class="token operator">=</span> <span class="token comment">/*                        */</span> <span class="token number">0b0000000000000000000000000000001</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token literal-property property">SyncBatchedLane</span><span class="token operator">:</span> Lane <span class="token operator">=</span> <span class="token comment">/*                 */</span> <span class="token number">0b0000000000000000000000000000010</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token literal-property property">InputDiscreteHydrationLane</span><span class="token operator">:</span> Lane <span class="token operator">=</span> <span class="token comment">/*      */</span> <span class="token number">0b0000000000000000000000000000100</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token literal-property property">InputDiscreteLanes</span><span class="token operator">:</span> Lanes <span class="token operator">=</span> <span class="token comment">/*                    */</span> <span class="token number">0b0000000000000000000000000011000</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token literal-property property">InputContinuousHydrationLane</span><span class="token operator">:</span> Lane <span class="token operator">=</span> <span class="token comment">/*           */</span> <span class="token number">0b0000000000000000000000000100000</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token literal-property property">InputContinuousLanes</span><span class="token operator">:</span> Lanes <span class="token operator">=</span> <span class="token comment">/*                  */</span> <span class="token number">0b0000000000000000000000011000000</span><span class="token punctuation">;</span>
<span class="token comment">// ...</span>
<span class="token comment">// ...</span>

<span class="token keyword">const</span> NonIdleLanes <span class="token operator">=</span> <span class="token comment">/*                                 */</span> <span class="token number">0b0000111111111111111111111111111</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token literal-property property">IdleHydrationLane</span><span class="token operator">:</span> Lane <span class="token operator">=</span> <span class="token comment">/*               */</span> <span class="token number">0b0001000000000000000000000000000</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token literal-property property">IdleLanes</span><span class="token operator">:</span> Lanes <span class="token operator">=</span> <span class="token comment">/*                             */</span> <span class="token number">0b0110000000000000000000000000000</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token literal-property property">OffscreenLane</span><span class="token operator">:</span> Lane <span class="token operator">=</span> <span class="token comment">/*                   */</span> <span class="token number">0b1000000000000000000000000000000</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><p>\u6E90\u7801\u4E2D<code>Lanes</code>\u548C<code>Lane</code>\u90FD\u662F<code>number</code>\u7C7B\u578B, \u5E76\u4E14\u5C06\u6240\u6709\u53D8\u91CF\u90FD\u4F7F\u7528\u4E8C\u8FDB\u5236\u4F4D\u6765\u8868\u793A.</p><p>\u6CE8\u610F: \u6E90\u7801\u4E2D\u53D8\u91CF\u53EA\u5217\u51FA\u4E86 31 \u4F4D, \u7531\u4E8E js \u4E2D\u4F4D\u8FD0\u7B97\u90FD\u4F1A\u8F6C\u6362\u6210<code>Int32</code>(\u4E0A\u6587\u5DF2\u7ECF\u89E3\u91CA), \u6700\u591A\u4E3A 32 \u4F4D, \u4E14\u6700\u9AD8\u4F4D\u662F\u7B26\u53F7\u4F4D. \u6240\u4EE5\u9664\u53BB\u7B26\u53F7\u4F4D, \u6700\u591A\u53EA\u6709 31 \u4F4D\u53EF\u4EE5\u53C2\u4E0E\u8FD0\u7B97.</p>`,3),un={href:"https://github.com/facebook/react/blob/v17.0.2/packages/react-reconciler/src/ReactFiberLane.js#L121-L194",target:"_blank",rel:"noopener noreferrer"},dn=s("\u65B9\u6CD5\u5B9A\u4E49"),kn=s(":"),bn=t(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">getHighestPriorityLanes</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">lanes</span><span class="token operator">:</span> Lanes <span class="token operator">|</span> Lane</span><span class="token punctuation">)</span><span class="token operator">:</span> Lanes <span class="token punctuation">{</span>
  <span class="token comment">// \u5224\u65AD lanes\u4E2D\u662F\u5426\u5305\u542B SyncLane</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>SyncLane <span class="token operator">&amp;</span> lanes<span class="token punctuation">)</span> <span class="token operator">!==</span> NoLanes<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    return_highestLanePriority <span class="token operator">=</span> SyncLanePriority<span class="token punctuation">;</span>
    <span class="token keyword">return</span> SyncLane<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u5224\u65AD lanes\u4E2D\u662F\u5426\u5305\u542B SyncBatchedLane</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>SyncBatchedLane <span class="token operator">&amp;</span> lanes<span class="token punctuation">)</span> <span class="token operator">!==</span> NoLanes<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    return_highestLanePriority <span class="token operator">=</span> SyncBatchedLanePriority<span class="token punctuation">;</span>
    <span class="token keyword">return</span> SyncBatchedLane<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// ...</span>
  <span class="token comment">// ... \u7701\u7565\u5176\u4ED6\u4EE3\u7801</span>
  <span class="token keyword">return</span> lanes<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p>\u5728\u65B9\u6CD5\u5B9A\u4E49\u4E2D, \u4E5F\u662F\u901A\u8FC7\u4F4D\u63A9\u7801\u7684\u7279\u6027\u6765\u5224\u65AD\u4E8C\u8FDB\u5236\u5F62\u5F0F\u53D8\u91CF\u4E4B\u95F4\u7684\u5173\u7CFB. \u9664\u4E86\u5E38\u89C4\u7684\u4F4D\u63A9\u7801\u64CD\u4F5C\u5916, \u7279\u522B\u8BF4\u660E\u5176\u4E2D 2 \u4E2A\u6280\u5DE7\u6027\u5F3A\u7684\u51FD\u6570:</p><ol><li><code>getHighestPriorityLane</code>: \u5206\u79BB\u51FA\u6700\u9AD8\u4F18\u5148\u7EA7</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">getHighestPriorityLane</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">lanes</span><span class="token operator">:</span> Lanes</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> lanes <span class="token operator">&amp;</span> <span class="token operator">-</span>lanes<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u901A\u8FC7<code>lanes &amp; -lanes</code>\u53EF\u4EE5\u5206\u79BB\u51FA\u6240\u6709\u6BD4\u7279\u4F4D\u4E2D\u6700\u53F3\u8FB9\u7684 1, \u5177\u4F53\u6765\u8BB2:</p><ul><li>\u5047\u8BBE <code>lanes(InputDiscreteLanes) = 0b0000000000000000000000000011000</code></li><li>\u90A3\u4E48 <code>-lanes = 0b1111111111111111111111111101000</code></li><li>\u6240\u4EE5 <code>lanes &amp; -lanes = 0b0000000000000000000000000001000</code></li><li>\u76F8\u6BD4\u6700\u521D\u7684 InputDiscreteLanes, \u5206\u79BB\u51FA\u6765\u4E86<code>\u6700\u53F3\u8FB9\u76841</code></li><li>\u901A\u8FC7 lanes \u7684\u5B9A\u4E49, \u6570\u5B57\u8D8A\u5C0F\u7684\u4F18\u5148\u7EA7\u8D8A\u9AD8, \u6240\u4EE5\u6B64\u65B9\u6CD5\u53EF\u4EE5\u83B7\u53D6<code>\u6700\u9AD8\u4F18\u5148\u7EA7\u7684lane</code></li><li></li></ul><ol start="2"><li><code>getLowestPriorityLane</code>: \u5206\u79BB\u51FA\u6700\u4F4E\u4F18\u5148\u7EA7</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">getLowestPriorityLane</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">lanes</span><span class="token operator">:</span> Lanes</span><span class="token punctuation">)</span><span class="token operator">:</span> Lane <span class="token punctuation">{</span>
  <span class="token comment">// This finds the most significant non-zero bit.</span>
  <span class="token keyword">const</span> index <span class="token operator">=</span> <span class="token number">31</span> <span class="token operator">-</span> <span class="token function">clz32</span><span class="token punctuation">(</span>lanes<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> index <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">?</span> NoLanes <span class="token operator">:</span> <span class="token number">1</span> <span class="token operator">&lt;&lt;</span> index<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div>`,8),mn=n("code",null,"clz32(lanes)",-1),hn=s("\u8FD4\u56DE\u4E00\u4E2A\u6570\u5B57\u5728\u8F6C\u6362\u6210 32 \u65E0\u7B26\u53F7\u6574\u5F62\u6570\u5B57\u7684\u4E8C\u8FDB\u5236\u5F62\u5F0F\u540E, \u524D\u5BFC 0 \u7684\u4E2A\u6570("),_n={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Math/clz32",target:"_blank",rel:"noopener noreferrer"},yn=s("MDN \u4E0A\u7684\u89E3\u91CA"),gn=s(")"),xn=t('<ul><li>\u5047\u8BBE <code>lanes(InputDiscreteLanes) = 0b0000000000000000000000000011000</code></li><li>\u90A3\u4E48 <code>clz32(lanes) = 27</code>, \u7531\u4E8E InputDiscreteLanes \u5728\u6E90\u7801\u4E2D\u88AB\u4E66\u5199\u6210\u4E86 31 \u4F4D, \u867D\u7136\u5728\u5B57\u9762\u4E0A\u524D\u5BFC 0 \u662F 26 \u4E2A, \u4F46\u662F\u8F6C\u6210\u6807\u51C6 32 \u4F4D\u540E\u662F 27 \u4E2A</li><li><code>index = 31 - clz32(lanes) = 4</code></li><li>\u6700\u540E <code>1 &lt;&lt; index = 0b0000000000000000000000000010000</code></li><li>\u76F8\u6BD4\u6700\u521D\u7684 InputDiscreteLanes, \u5206\u79BB\u51FA\u6765\u4E86<code>\u6700\u5DE6\u8FB9\u76841</code></li><li>\u901A\u8FC7 lanes \u7684\u5B9A\u4E49, \u6570\u5B57\u8D8A\u5C0F\u7684\u4F18\u5148\u7EA7\u8D8A\u9AD8, \u6240\u4EE5\u6B64\u65B9\u6CD5\u53EF\u4EE5\u83B7\u53D6\u6700\u4F4E\u4F18\u5148\u7EA7\u7684 lane</li></ul><h3 id="\u6267\u884C\u4E0A\u4E0B\u6587-executioncontext" tabindex="-1"><a class="header-anchor" href="#\u6267\u884C\u4E0A\u4E0B\u6587-executioncontext" aria-hidden="true">#</a> \u6267\u884C\u4E0A\u4E0B\u6587 ExecutionContext</h3><p><code>ExecutionContext</code>\u5B9A\u4E49\u4E0E<code>react-reconciler</code>\u5305\u4E2D, \u4EE3\u8868<code>reconciler</code>\u5728\u8FD0\u884C\u65F6\u7684\u4E0A\u4E0B\u6587\u72B6\u6001(\u5728<code>reconciler \u6267\u884C\u4E0A\u4E0B\u6587</code>\u7AE0\u8282\u4E2D\u6DF1\u5165\u89E3\u8BFB, \u6B64\u5904\u4ECB\u7ECD\u4F4D\u8FD0\u7B97\u7684\u5E94\u7528).</p>',3),fn={href:"https://github.com/facebook/react/blob/v17.0.2/packages/react-reconciler/src/ReactFiberWorkLoop.old.js#L247-L256",target:"_blank",rel:"noopener noreferrer"},Ln=s("\u53D8\u91CF\u5B9A\u4E49"),vn=s(":"),wn=t(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> NoContext <span class="token operator">=</span> <span class="token comment">/*             */</span> <span class="token number">0b0000000</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> BatchedContext <span class="token operator">=</span> <span class="token comment">/*               */</span> <span class="token number">0b0000001</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> EventContext <span class="token operator">=</span> <span class="token comment">/*                 */</span> <span class="token number">0b0000010</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> DiscreteEventContext <span class="token operator">=</span> <span class="token comment">/*         */</span> <span class="token number">0b0000100</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> LegacyUnbatchedContext <span class="token operator">=</span> <span class="token comment">/*       */</span> <span class="token number">0b0001000</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> RenderContext <span class="token operator">=</span> <span class="token comment">/*                */</span> <span class="token number">0b0010000</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> CommitContext <span class="token operator">=</span> <span class="token comment">/*                */</span> <span class="token number">0b0100000</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> RetryAfterError <span class="token operator">=</span> <span class="token comment">/*       */</span> <span class="token number">0b1000000</span><span class="token punctuation">;</span>

<span class="token comment">// ...</span>

<span class="token comment">// Describes where we are in the React execution stack</span>
<span class="token keyword">let</span> <span class="token literal-property property">executionContext</span><span class="token operator">:</span> ExecutionContext <span class="token operator">=</span> NoContext<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>\u6CE8\u610F: \u548C<code>lanes</code>\u7684\u5B9A\u4E49\u4E0D\u540C, <code>ExecutionContext</code>\u7C7B\u578B\u7684\u53D8\u91CF, \u5728\u5B9A\u4E49\u7684\u65F6\u5019\u91C7\u53D6\u7684\u662F 8 \u4F4D\u4E8C\u8FDB\u5236\u8868\u793A(\u56E0\u4E3A\u53D8\u91CF\u7684\u6570\u91CF\u5C11, 8 \u4F4D\u5C31\u591F\u4E86, \u6CA1\u6709\u5FC5\u8981\u5199\u6210 31 \u4F4D).</p>`,2),Cn=s("\u4F7F\u7528(\u7531\u4E8E\u4F7F\u7528\u7684\u5730\u65B9\u8F83\u591A, \u6240\u4EE5\u4E3E\u4E00\u4E2A"),Bn={href:"https://github.com/facebook/react/blob/v17.0.2/packages/react-reconciler/src/ReactFiberWorkLoop.old.js#L517-L619",target:"_blank",rel:"noopener noreferrer"},jn=s("\u4EE3\u8868\u6027\u5F3A\u7684\u4F8B\u5B50"),An=s(", "),Nn=n("code",null,"scheduleUpdateOnFiber",-1),En=s(" \u51FD\u6570\u662F"),In=n("code",null,"react-reconciler",-1),Rn=s("\u5305\u5BF9"),Sn=n("code",null,"react",-1),zn=s("\u5305\u66B4\u9732\u51FA\u6765\u7684 api, \u6BCF\u4E00\u6B21\u66F4\u65B0\u90FD\u4F1A\u8C03\u7528, \u6240\u4EE5\u6BD4\u8F83\u7279\u6B8A):"),Dn=t(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// scheduleUpdateOnFiber\u51FD\u6570\u4E2D\u5305\u542B\u4E86\u597D\u591A\u5173\u4E8EexecutionContext\u7684\u5224\u65AD(\u90FD\u662F\u4F7F\u7528\u4F4D\u8FD0\u7B97)</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">scheduleUpdateOnFiber</span><span class="token punctuation">(</span>
  <span class="token parameter"><span class="token literal-property property">fiber</span><span class="token operator">:</span> Fiber<span class="token punctuation">,</span>
  <span class="token literal-property property">lane</span><span class="token operator">:</span> Lane<span class="token punctuation">,</span>
  <span class="token literal-property property">eventTime</span><span class="token operator">:</span> number<span class="token punctuation">,</span></span>
<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>root <span class="token operator">===</span> workInProgressRoot<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5224\u65AD: executionContext \u4E0D\u5305\u542B RenderContext</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>
      deferRenderPhaseUpdateToNextBatch <span class="token operator">||</span>
      <span class="token punctuation">(</span>executionContext <span class="token operator">&amp;</span> RenderContext<span class="token punctuation">)</span> <span class="token operator">===</span> NoContext
    <span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// ...</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>lane <span class="token operator">===</span> SyncLane<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>
      <span class="token comment">// \u5224\u65AD: executionContext \u5305\u542B LegacyUnbatchedContext</span>
      <span class="token punctuation">(</span>executionContext <span class="token operator">&amp;</span> LegacyUnbatchedContext<span class="token punctuation">)</span> <span class="token operator">!==</span> NoContext <span class="token operator">&amp;&amp;</span>
      <span class="token comment">// \u5224\u65AD: executionContext \u4E0D\u5305\u542B RenderContext\u6216CommitContext</span>
      <span class="token punctuation">(</span>executionContext <span class="token operator">&amp;</span> <span class="token punctuation">(</span>RenderContext <span class="token operator">|</span> CommitContext<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">===</span> NoContext
    <span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// ...</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br></div></div><h2 id="\u603B\u7ED3" tabindex="-1"><a class="header-anchor" href="#\u603B\u7ED3" aria-hidden="true">#</a> \u603B\u7ED3</h2><p>\u672C\u8282\u4ECB\u7ECD\u4E86\u4F4D\u8FD0\u7B97\u7684\u57FA\u672C\u4F7F\u7528, \u5E76\u5217\u4E3E\u4E86\u4F4D\u8FD0\u7B97\u5728<code>react</code>\u6E90\u7801\u4E2D\u7684\u9AD8\u9891\u5E94\u7528. \u5728\u7279\u5B9A\u7684\u60C5\u51B5\u4E0B, \u4F7F\u7528\u4F4D\u8FD0\u7B97\u4E0D\u4EC5\u662F\u63D0\u9AD8\u8FD0\u7B97\u901F\u5EA6, \u4E14\u4F4D\u63A9\u7801\u80FD\u7B80\u6D01\u548C\u6E05\u6670\u7684\u8868\u793A\u51FA\u4E8C\u8FDB\u5236\u53D8\u91CF\u4E4B\u95F4\u7684\u5173\u7CFB. \u4E8C\u8FDB\u5236\u53D8\u91CF\u867D\u7136\u6709\u4F18\u52BF, \u4F46\u662F\u7F3A\u70B9\u4E5F\u5F88\u660E\u663E, \u4E0D\u591F\u76F4\u89C2, \u6269\u5C55\u6027\u4E0D\u597D(\u5728 js \u5F53\u4E2D\u7684\u4E8C\u8FDB\u5236\u53D8\u91CF, \u9664\u53BB\u7B26\u53F7\u4F4D, \u6700\u591A\u53EA\u80FD\u4F7F\u7528 31 \u4F4D, \u5F53\u53D8\u91CF\u7684\u6570\u91CF\u8D85\u8FC7 31 \u4F4D\u5C31\u9700\u8981\u7EC4\u5408, \u6B64\u65F6\u5C31\u4F1A\u53D8\u5F97\u590D\u6742). \u5728\u9605\u8BFB\u6E90\u7801\u65F6, \u6211\u4EEC\u9700\u8981\u4E86\u89E3\u4E8C\u7EA7\u5236\u53D8\u91CF\u548C\u4F4D\u63A9\u7801\u7684\u4F7F\u7528. \u4F46\u5728\u5B9E\u9645\u5F00\u53D1\u4E2D, \u9700\u8981\u89C6\u60C5\u51B5\u800C\u5B9A, \u4E0D\u80FD\u76F2\u76EE\u4F7F\u7528.</p><h2 id="\u53C2\u8003\u8D44\u6599" tabindex="-1"><a class="header-anchor" href="#\u53C2\u8003\u8D44\u6599" aria-hidden="true">#</a> \u53C2\u8003\u8D44\u6599</h2>`,4),Fn={href:"https://www.ecma-international.org/ecma-262/5.1/#sec-11.10",target:"_blank",rel:"noopener noreferrer"},Pn=s("ECMAScript\xAE Language Specification(Standard ECMA-262 5.1 Edition) Binary Bitwise Operators"),Tn={href:"https://www.ruanyifeng.com/blog/2010/06/ieee_floating-point_representation.html",target:"_blank",rel:"noopener noreferrer"},On=s("\u6D6E\u70B9\u6570\u7684\u4E8C\u8FDB\u5236\u8868\u793A"),Un={href:"https://zh.wikipedia.org/wiki/IEEE_754",target:"_blank",rel:"noopener noreferrer"},Hn=s("IEEE 754");function Vn(Mn,Wn){const e=p("ExternalLinkIcon"),o=p("RouterLink");return c(),l(i,null,[k,n("p",null,[b,n("a",m,[h,a(e)]),_]),y,n("p",null,[g,n("a",x,[f,L,a(e)]),v]),w,n("ol",null,[C,B,n("li",null,[j,n("a",A,[N,a(e)]),E,I,R])]),S,n("p",null,[z,n("a",D,[F,a(e)]),P,T,O,U,H,V,M]),W,n("p",null,[q,G,J,K,Q,X,Y,Z,$,nn,sn,a(o,{to:"/react-illustration-series/main/priority.html"},{default:r(()=>[an]),_:1}),en]),tn,n("p",null,[pn,n("a",on,[cn,a(e)]),ln]),rn,n("p",null,[n("a",un,[dn,a(e)]),kn]),bn,n("p",null,[mn,hn,n("a",_n,[yn,a(e)]),gn]),xn,n("p",null,[n("a",fn,[Ln,a(e)]),vn]),wn,n("p",null,[Cn,n("a",Bn,[jn,a(e)]),An,Nn,En,In,Rn,Sn,zn]),Dn,n("p",null,[n("a",Fn,[Pn,a(e)])]),n("p",null,[n("a",Tn,[On,a(e)])]),n("p",null,[n("a",Un,[Hn,a(e)])])],64)}var Jn=u(d,[["render",Vn]]);export{Jn as default};
