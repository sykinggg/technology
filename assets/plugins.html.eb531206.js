import{r as c,o as l,c as u,b as s,d as a,w as t,F as i,e as n,a as e}from"./app.ee3fc36b.js";import{_ as r}from"./plugin-vue_export-helper.21dcd24c.js";const k={},b=s("h1",{id:"plugins",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#plugins","aria-hidden":"true"},"#"),n(" plugins")],-1),d=s("h2",{id:"\u6982\u8FF0",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#\u6982\u8FF0","aria-hidden":"true"},"#"),n(" \u6982\u8FF0")],-1),m={class:"custom-container warning"},g=s("p",{class:"custom-container-title"},"WARNING",-1),h=n("\u63D2\u4EF6 API \u662F\u65B0\u7684\uFF0C\u4ECD\u7136\u662F\u5B9E\u9A8C\u6027\u7684\u3002\u968F\u7740\u65B0\u7528\u4F8B\u7684\u53D1\u73B0\uFF0C\u5B83\u53EF\u80FD\u4F1A\u5728 esbuild 1.0.0 \u7248\u672C\u4E4B\u524D\u53D1\u751F\u53D8\u5316\u3002\u60A8\u53EF\u4EE5\u5173\u6CE8\u8DDF\u8E2A\u95EE\u9898\u4EE5\u83B7\u53D6\u6709\u5173\u6B64\u529F\u80FD\u7684"),y={href:"https://github.com/evanw/esbuild/issues/111",target:"_blank",rel:"noopener noreferrer"},_=n("\u66F4\u65B0"),v=n("\u3002"),f=s("p",null,"\u63D2\u4EF6 API \u5141\u8BB8\u60A8\u5C06\u4EE3\u7801\u6CE8\u5165\u6784\u5EFA\u8FC7\u7A0B\u7684\u5404\u4E2A\u90E8\u5206\u3002\u4E0E API \u7684\u5176\u4F59\u90E8\u5206\u4E0D\u540C\uFF0C\u5B83\u4E0D\u80FD\u4ECE\u547D\u4EE4\u884C\u4F7F\u7528\u3002\u60A8\u5FC5\u987B\u7F16\u5199 JavaScript \u6216 Go \u4EE3\u7801\u624D\u80FD\u4F7F\u7528\u63D2\u4EF6 API\u3002\u63D2\u4EF6\u4E5F\u53EA\u80FD\u4E0E\u6784\u5EFA API \u4E00\u8D77\u4F7F\u7528\uFF0C\u4E0D\u80FD\u4E0E\u8F6C\u6362 API \u4E00\u8D77\u4F7F\u7528\u3002",-1),w=s("h2",{id:"\u5BFB\u627E\u63D2\u4EF6",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#\u5BFB\u627E\u63D2\u4EF6","aria-hidden":"true"},"#"),n(" \u5BFB\u627E\u63D2\u4EF6")],-1),q=n("\u5982\u679C\u60A8\u6B63\u5728\u5BFB\u627E\u73B0\u6709\u7684 esbuild \u63D2\u4EF6\uFF0C\u60A8\u5E94\u8BE5\u67E5\u770B"),x={href:"https://github.com/esbuild/community-plugins",target:"_blank",rel:"noopener noreferrer"},R=n("\u73B0\u6709\u7684 esbuild \u63D2\u4EF6\u5217\u8868"),P=n("\u3002\u6B64\u5217\u8868\u4E2D\u7684\u63D2\u4EF6\u662F\u4F5C\u8005\u6709\u610F\u6DFB\u52A0\u7684\uFF0C\u65E8\u5728\u4F9B esbuild \u793E\u533A\u4E2D\u7684\u5176\u4ED6\u4EBA\u4F7F\u7528\u3002"),O=s("p",null,"\u5982\u679C\u4F60\u60F3\u5206\u4EAB\u4F60\u7684 esbuild \u63D2\u4EF6\uFF0C\u4F60\u5E94\u8BE5\uFF1A",-1),j=n("\u5C06\u5B83"),L={href:"https://docs.npmjs.com/creating-and-publishing-unscoped-public-packages",target:"_blank",rel:"noopener noreferrer"},S=n("\u53D1\u5E03\u5230 npm"),A=n(" \u4EE5\u4FBF\u5176\u4ED6\u4EBA\u53EF\u4EE5\u5B89\u88C5\u5B83\u3002"),J=n("\u5C06\u5176\u6DFB\u52A0\u5230"),T={href:"https://github.com/esbuild/community-plugins",target:"_blank",rel:"noopener noreferrer"},N=n("\u73B0\u6709 esbuild \u63D2\u4EF6\u5217\u8868"),D=n("\u4E2D\uFF0C\u4EE5\u4FBF\u5176\u4ED6\u4EBA\u53EF\u4EE5\u627E\u5230\u5B83\u3002"),I=s("h2",{id:"\u4F7F\u7528\u63D2\u4EF6",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#\u4F7F\u7528\u63D2\u4EF6","aria-hidden":"true"},"#"),n(" \u4F7F\u7528\u63D2\u4EF6")],-1),E=n("esbuild \u63D2\u4EF6\u662F\u4E00\u4E2A\u5177\u6709"),B=s("code",null,"\u540D\u79F0",-1),F=n("\u548C"),W=s("code",null,"\u8BBE\u7F6E",-1),M=n("\u529F\u80FD\u7684\u5BF9\u8C61\u3002\u5B83\u4EEC\u4EE5\u6570\u7EC4\u5F62\u5F0F\u4F20\u9012\u7ED9"),C=n("\u6784\u5EFA API"),U=n(" \u8C03\u7528\u3002 "),$=s("code",null,"setup",-1),G=n(" \u51FD\u6570\u4E3A\u6BCF\u4E2A\u6784\u5EFA API \u8C03\u7528\u8FD0\u884C\u4E00\u6B21\u3002"),H=e(`<p>\u8FD9\u662F\u4E00\u4E2A\u7B80\u5355\u7684\u63D2\u4EF6\u793A\u4F8B\uFF0C\u5141\u8BB8\u60A8\u5728\u6784\u5EFA\u65F6\u5BFC\u5165\u5F53\u524D\u73AF\u5883\u53D8\u91CF\uFF1A</p><div><div title="js"><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> envPlugin <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;env&#39;</span><span class="token punctuation">,</span>
  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token parameter">build</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// Intercept import paths called &quot;env&quot; so esbuild doesn&#39;t attempt</span>
    <span class="token comment">// to map them to a file system location. Tag them with the &quot;env-ns&quot;</span>
    <span class="token comment">// namespace to reserve them for this plugin.</span>
    build<span class="token punctuation">.</span><span class="token function">onResolve</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">filter</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^env$</span><span class="token regex-delimiter">/</span></span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token parameter">args</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">path</span><span class="token operator">:</span> args<span class="token punctuation">.</span>path<span class="token punctuation">,</span>
      <span class="token literal-property property">namespace</span><span class="token operator">:</span> <span class="token string">&#39;env-ns&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

    <span class="token comment">// Load paths tagged with the &quot;env-ns&quot; namespace and behave as if</span>
    <span class="token comment">// they point to a JSON file containing the environment variables.</span>
    build<span class="token punctuation">.</span><span class="token function">onLoad</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">filter</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">.*</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token literal-property property">namespace</span><span class="token operator">:</span> <span class="token string">&#39;env-ns&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">contents</span><span class="token operator">:</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token literal-property property">loader</span><span class="token operator">:</span> <span class="token string">&#39;json&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;esbuild&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">entryPoints</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;app.js&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token literal-property property">bundle</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token literal-property property">outfile</span><span class="token operator">:</span> <span class="token string">&#39;out.js&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>envPlugin<span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> process<span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div></div><div title="go"><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token string">&quot;encoding/json&quot;</span>
<span class="token keyword">import</span> <span class="token string">&quot;os&quot;</span>
<span class="token keyword">import</span> <span class="token string">&quot;strings&quot;</span>
<span class="token keyword">import</span> <span class="token string">&quot;github.com/evanw/esbuild/pkg/api&quot;</span>

<span class="token keyword">var</span> envPlugin <span class="token operator">=</span> api<span class="token punctuation">.</span>Plugin<span class="token punctuation">{</span>
  Name<span class="token punctuation">:</span> <span class="token string">&quot;env&quot;</span><span class="token punctuation">,</span>
  Setup<span class="token punctuation">:</span> <span class="token keyword">func</span><span class="token punctuation">(</span>build api<span class="token punctuation">.</span>PluginBuild<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// Intercept import paths called &quot;env&quot; so esbuild doesn&#39;t attempt</span>
    <span class="token comment">// to map them to a file system location. Tag them with the &quot;env-ns&quot;</span>
    <span class="token comment">// namespace to reserve them for this plugin.</span>
    build<span class="token punctuation">.</span><span class="token function">OnResolve</span><span class="token punctuation">(</span>api<span class="token punctuation">.</span>OnResolveOptions<span class="token punctuation">{</span>Filter<span class="token punctuation">:</span> <span class="token string">\`^env$\`</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token keyword">func</span><span class="token punctuation">(</span>args api<span class="token punctuation">.</span>OnResolveArgs<span class="token punctuation">)</span> <span class="token punctuation">(</span>api<span class="token punctuation">.</span>OnResolveResult<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> api<span class="token punctuation">.</span>OnResolveResult<span class="token punctuation">{</span>
          Path<span class="token punctuation">:</span>      args<span class="token punctuation">.</span>Path<span class="token punctuation">,</span>
          Namespace<span class="token punctuation">:</span> <span class="token string">&quot;env-ns&quot;</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token boolean">nil</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>

    <span class="token comment">// Load paths tagged with the &quot;env-ns&quot; namespace and behave as if</span>
    <span class="token comment">// they point to a JSON file containing the environment variables.</span>
    build<span class="token punctuation">.</span><span class="token function">OnLoad</span><span class="token punctuation">(</span>api<span class="token punctuation">.</span>OnLoadOptions<span class="token punctuation">{</span>Filter<span class="token punctuation">:</span> <span class="token string">\`.*\`</span><span class="token punctuation">,</span> Namespace<span class="token punctuation">:</span> <span class="token string">&quot;env-ns&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token keyword">func</span><span class="token punctuation">(</span>args api<span class="token punctuation">.</span>OnLoadArgs<span class="token punctuation">)</span> <span class="token punctuation">(</span>api<span class="token punctuation">.</span>OnLoadResult<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        mappings <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">)</span>
        <span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> item <span class="token operator">:=</span> <span class="token keyword">range</span> os<span class="token punctuation">.</span><span class="token function">Environ</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">if</span> equals <span class="token operator">:=</span> strings<span class="token punctuation">.</span><span class="token function">IndexByte</span><span class="token punctuation">(</span>item<span class="token punctuation">,</span> <span class="token char">&#39;=&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> equals <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token punctuation">{</span>
            mappings<span class="token punctuation">[</span>item<span class="token punctuation">[</span><span class="token punctuation">:</span>equals<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> item<span class="token punctuation">[</span>equals<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        bytes<span class="token punctuation">,</span> err <span class="token operator">:=</span> json<span class="token punctuation">.</span><span class="token function">Marshal</span><span class="token punctuation">(</span>mappings<span class="token punctuation">)</span>
        <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
          <span class="token keyword">return</span> api<span class="token punctuation">.</span>OnLoadResult<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> err
        <span class="token punctuation">}</span>
        contents <span class="token operator">:=</span> <span class="token function">string</span><span class="token punctuation">(</span>bytes<span class="token punctuation">)</span>
        <span class="token keyword">return</span> api<span class="token punctuation">.</span>OnLoadResult<span class="token punctuation">{</span>
          Contents<span class="token punctuation">:</span> <span class="token operator">&amp;</span>contents<span class="token punctuation">,</span>
          Loader<span class="token punctuation">:</span>   api<span class="token punctuation">.</span>LoaderJSON<span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token boolean">nil</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  result <span class="token operator">:=</span> api<span class="token punctuation">.</span><span class="token function">Build</span><span class="token punctuation">(</span>api<span class="token punctuation">.</span>BuildOptions<span class="token punctuation">{</span>
    EntryPoints<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">{</span><span class="token string">&quot;app.js&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    Bundle<span class="token punctuation">:</span>      <span class="token boolean">true</span><span class="token punctuation">,</span>
    Outfile<span class="token punctuation">:</span>     <span class="token string">&quot;out.js&quot;</span><span class="token punctuation">,</span>
    Plugins<span class="token punctuation">:</span>     <span class="token punctuation">[</span><span class="token punctuation">]</span>api<span class="token punctuation">.</span>Plugin<span class="token punctuation">{</span>envPlugin<span class="token punctuation">}</span><span class="token punctuation">,</span>
    Write<span class="token punctuation">:</span>       <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>

  <span class="token keyword">if</span> <span class="token function">len</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>Errors<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token punctuation">{</span>
    os<span class="token punctuation">.</span><span class="token function">Exit</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br></div></div></div></div><p>\u4F60\u4F1A\u50CF\u8FD9\u6837\u4F7F\u7528\u5B83\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> <span class="token constant">PATH</span> <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;env&#39;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">PATH is </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token constant">PATH</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="\u6982\u5FF5" tabindex="-1"><a class="header-anchor" href="#\u6982\u5FF5" aria-hidden="true">#</a> \u6982\u5FF5</h2><p>\u4E3A esbuild \u7F16\u5199\u63D2\u4EF6\u4E0E\u4E3A\u5176\u4ED6\u6253\u5305\u5668\u7F16\u5199\u63D2\u4EF6\u7684\u5DE5\u4F5C\u65B9\u5F0F\u7565\u6709\u4E0D\u540C\u3002\u5728\u5F00\u53D1\u63D2\u4EF6\u4E4B\u524D\u4E86\u89E3\u4EE5\u4E0B\u6982\u5FF5\u5F88\u91CD\u8981\uFF1A</p><h3 id="\u547D\u540D\u7A7A\u95F4" tabindex="-1"><a class="header-anchor" href="#\u547D\u540D\u7A7A\u95F4" aria-hidden="true">#</a> \u547D\u540D\u7A7A\u95F4</h3>`,7),K=n("\u6BCF\u4E2A\u6A21\u5757\u90FD\u6709\u4E00\u4E2A\u5173\u8054\u7684\u547D\u540D\u7A7A\u95F4\u3002\u9ED8\u8BA4\u60C5\u51B5\u4E0B\uFF0Cesbuild \u5728\u6587\u4EF6\u547D\u540D\u7A7A\u95F4\u4E2D\u8FD0\u884C\uFF0C\u8BE5\u547D\u540D\u7A7A\u95F4\u5BF9\u5E94\u4E8E\u6587\u4EF6\u7CFB\u7EDF\u4E0A\u7684"),V=s("code",null,"\u6587\u4EF6",-1),z=n("\u3002\u4F46\u662F esbuild \u4E5F\u53EF\u4EE5\u5904\u7406\u5728\u6587\u4EF6\u7CFB\u7EDF\u4E0A\u6CA1\u6709\u76F8\u5E94\u4F4D\u7F6E\u7684\u201C\u865A\u62DF\u201D\u6A21\u5757\u3002\u53D1\u751F\u8FD9\u79CD\u60C5\u51B5\u7684\u4E00\u79CD\u60C5\u51B5\u662F\u4F7F\u7528 "),X=n("stdin"),Y=n(" \u63D0\u4F9B\u6A21\u5757\u3002"),Q=n("\u63D2\u4EF6\u53EF\u7528\u4E8E\u521B\u5EFA\u865A\u62DF\u6A21\u5757\u3002\u865A\u62DF\u6A21\u5757\u901A\u5E38\u4F7F\u7528\u6587\u4EF6\u4EE5\u5916\u7684\u547D\u540D\u7A7A\u95F4\u6765\u533A\u5206\u5B83\u4EEC\u4E0E"),Z=s("code",null,"\u6587\u4EF6",-1),nn=n("\u7CFB\u7EDF\u6A21\u5757\u3002\u901A\u5E38\u547D\u540D\u7A7A\u95F4\u7279\u5B9A\u4E8E\u521B\u5EFA\u5B83\u4EEC\u7684\u63D2\u4EF6\u3002\u4F8B\u5982\uFF0C\u4E0B\u9762\u7684\u793A\u4F8B "),sn=n("HTTP \u63D2\u4EF6"),an=n("\u4F7F\u7528 "),pn=s("code",null,"http-url",-1),tn=n(" \u547D\u540D\u7A7A\u95F4\u6765\u4E0B\u8F7D\u6587\u4EF6\u3002"),en=s("h3",{id:"filters",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#filters","aria-hidden":"true"},"#"),n(" Filters")],-1),on=s("p",null,"\u6BCF\u4E2A\u56DE\u8C03\u90FD\u5FC5\u987B\u63D0\u4F9B\u4E00\u4E2A\u6B63\u5219\u8868\u8FBE\u5F0F\u4F5C\u4E3A\u8FC7\u6EE4\u5668\u3002\u5F53\u8DEF\u5F84\u4E0E\u5176\u8FC7\u6EE4\u5668\u4E0D\u5339\u914D\u65F6\uFF0Cesbuild \u4F7F\u7528\u5B83\u6765\u8DF3\u8FC7\u8C03\u7528\u56DE\u8C03\uFF0C\u8FD9\u662F\u4E3A\u4E86\u6027\u80FD\u800C\u5B8C\u6210\u7684\u3002\u4ECE esbuild \u7684\u9AD8\u5EA6\u5E76\u884C\u5185\u90E8\u8C03\u7528\u5230\u5355\u7EBF\u7A0B JavaScript \u4EE3\u7801\u662F\u6602\u8D35\u7684\uFF0C\u5E94\u5C3D\u53EF\u80FD\u907F\u514D\u4EE5\u83B7\u5F97\u6700\u5927\u901F\u5EA6\u3002",-1),cn=s("p",null,[n("\u60A8\u5E94\u8BE5\u5C3D\u53EF\u80FD\u5C1D\u8BD5\u4F7F\u7528\u8FC7\u6EE4\u5668\u6B63\u5219\u8868\u8FBE\u5F0F\u800C\u4E0D\u662F\u4F7F\u7528 JavaScript \u4EE3\u7801\u8FDB\u884C\u8FC7\u6EE4\u3002\u8FD9\u66F4\u5FEB\uFF0C\u56E0\u4E3A\u6B63\u5219\u8868\u8FBE\u5F0F\u662F\u5728 esbuild \u5185\u90E8\u8BA1\u7B97\u7684\uFF0C\u6839\u672C\u4E0D\u9700\u8981\u8C03\u7528 JavaScript\u3002\u4F8B\u5982\uFF0C\u4E0B\u9762\u7684\u793A\u4F8B HTTP \u63D2\u4EF6\u4F7F\u7528\u4E86 "),s("code",null,"^https?://"),n(" \u8FC7\u6EE4\u5668\uFF0C\u4EE5\u786E\u4FDD\u8FD0\u884C\u63D2\u4EF6\u7684\u6027\u80FD\u5F00\u9500\u4EC5\u5BF9\u4EE5 "),s("code",null,"http://"),n(" \u6216 "),s("code",null,"https://"),n(" \u5F00\u5934\u7684\u8DEF\u5F84\u4EA7\u751F\u3002")],-1),ln=n("\u5141\u8BB8\u7684\u6B63\u5219\u8868\u8FBE\u5F0F\u8BED\u6CD5\u662F Go \u7684"),un={href:"https://golang.org/pkg/regexp/",target:"_blank",rel:"noopener noreferrer"},rn=n("\u6B63\u5219\u8868\u8FBE\u5F0F\u5F15\u64CE"),kn=n("\u652F\u6301\u7684\u8BED\u6CD5\u3002\u8FD9\u4E0E JavaScript \u7565\u6709\u4E0D\u540C\u3002\u5177\u4F53\u6765\u8BF4\uFF0C\u4E0D\u652F\u6301\u524D\u77BB\u3001\u540E\u89C6\u548C\u53CD\u5411\u5F15\u7528\u3002 Go \u7684\u6B63\u5219\u8868\u8FBE\u5F0F\u5F15\u64CE\u65E8\u5728\u907F\u514D\u53EF\u80FD\u5F71\u54CD JavaScript \u6B63\u5219\u8868\u8FBE\u5F0F\u7684\u707E\u96BE\u6027\u6307\u6570\u65F6\u95F4\u6700\u574F\u60C5\u51B5\u6027\u80FD\u95EE\u9898\u3002"),bn=e(`<p>\u8BF7\u6CE8\u610F\uFF0C\u547D\u540D\u7A7A\u95F4\u4E5F\u53EF\u7528\u4E8E\u8FC7\u6EE4\u3002\u56DE\u8C03\u5FC5\u987B\u63D0\u4F9B\u8FC7\u6EE4\u5668\u6B63\u5219\u8868\u8FBE\u5F0F\uFF0C\u4F46\u4E5F\u53EF\u4EE5\u9009\u62E9\u63D0\u4F9B\u547D\u540D\u7A7A\u95F4\u4EE5\u8FDB\u4E00\u6B65\u9650\u5236\u5339\u914D\u7684\u8DEF\u5F84\u3002\u8FD9\u5BF9\u4E8E\u201C\u8BB0\u4F4F\u201D\u865A\u62DF\u6A21\u5757\u7684\u6765\u6E90\u5F88\u6709\u7528\u3002\u8BF7\u8BB0\u4F4F\uFF0C\u547D\u540D\u7A7A\u95F4\u4F7F\u7528\u7CBE\u786E\u7684\u5B57\u7B26\u4E32\u76F8\u7B49\u6027\u6D4B\u8BD5\u800C\u4E0D\u662F\u6B63\u5219\u8868\u8FBE\u5F0F\u8FDB\u884C\u5339\u914D\uFF0C\u56E0\u6B64\u4E0E\u6A21\u5757\u8DEF\u5F84\u4E0D\u540C\uFF0C\u5B83\u4EEC\u4E0D\u7528\u4E8E\u5B58\u50A8\u4EFB\u610F\u6570\u636E\u3002</p><h2 id="resolve-callbacks" tabindex="-1"><a class="header-anchor" href="#resolve-callbacks" aria-hidden="true">#</a> Resolve callbacks</h2><p>\u4F7F\u7528 <code>onResolve</code> \u6DFB\u52A0\u7684\u56DE\u8C03\u5C06\u5728 esbuild \u6784\u5EFA\u7684\u6BCF\u4E2A\u6A21\u5757\u4E2D\u7684\u6BCF\u4E2A\u5BFC\u5165\u8DEF\u5F84\u4E0A\u8FD0\u884C\u3002\u56DE\u8C03\u53EF\u4EE5\u81EA\u5B9A\u4E49 esbuild \u5982\u4F55\u8FDB\u884C\u8DEF\u5F84\u89E3\u6790\u3002\u4F8B\u5982\uFF0C\u5B83\u53EF\u4EE5\u62E6\u622A\u5BFC\u5165\u8DEF\u5F84\u5E76\u5C06\u5B83\u4EEC\u91CD\u5B9A\u5411\u5230\u5176\u4ED6\u5730\u65B9\u3002\u5B83\u8FD8\u53EF\u4EE5\u5C06\u8DEF\u5F84\u6807\u8BB0\u4E3A\u5916\u90E8\u8DEF\u5F84\u3002\u4E0B\u9762\u662F\u4E00\u4E2A\u4F8B\u5B50\uFF1A</p><div><div title="js"><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> exampleOnResolvePlugin <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;example&#39;</span><span class="token punctuation">,</span>
  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token parameter">build</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span>

    <span class="token comment">// Redirect all paths starting with &quot;images/&quot; to &quot;./public/images/&quot;</span>
    build<span class="token punctuation">.</span><span class="token function">onResolve</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">filter</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^images\\/</span><span class="token regex-delimiter">/</span></span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token parameter">args</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token punctuation">{</span> <span class="token literal-property property">path</span><span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>args<span class="token punctuation">.</span>resolveDir<span class="token punctuation">,</span> <span class="token string">&#39;public&#39;</span><span class="token punctuation">,</span> args<span class="token punctuation">.</span>path<span class="token punctuation">)</span> <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>

    <span class="token comment">// Mark all paths starting with &quot;http://&quot; or &quot;https://&quot; as external</span>
    build<span class="token punctuation">.</span><span class="token function">onResolve</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">filter</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^https?:\\/\\/</span><span class="token regex-delimiter">/</span></span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token parameter">args</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token punctuation">{</span> <span class="token literal-property property">path</span><span class="token operator">:</span> args<span class="token punctuation">.</span>path<span class="token punctuation">,</span> <span class="token literal-property property">external</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;esbuild&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">entryPoints</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;app.js&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token literal-property property">bundle</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token literal-property property">outfile</span><span class="token operator">:</span> <span class="token string">&#39;out.js&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>exampleOnResolvePlugin<span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token literal-property property">loader</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token string-property property">&#39;.png&#39;</span><span class="token operator">:</span> <span class="token string">&#39;binary&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> process<span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div></div><div title="go"><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token string">&quot;os&quot;</span>
<span class="token keyword">import</span> <span class="token string">&quot;path/filepath&quot;</span>
<span class="token keyword">import</span> <span class="token string">&quot;github.com/evanw/esbuild/pkg/api&quot;</span>

<span class="token keyword">var</span> exampleOnResolvePlugin <span class="token operator">=</span> api<span class="token punctuation">.</span>Plugin<span class="token punctuation">{</span>
  Name<span class="token punctuation">:</span> <span class="token string">&quot;example&quot;</span><span class="token punctuation">,</span>
  Setup<span class="token punctuation">:</span> <span class="token keyword">func</span><span class="token punctuation">(</span>build api<span class="token punctuation">.</span>PluginBuild<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// Redirect all paths starting with &quot;images/&quot; to &quot;./public/images/&quot;</span>
    build<span class="token punctuation">.</span><span class="token function">OnResolve</span><span class="token punctuation">(</span>api<span class="token punctuation">.</span>OnResolveOptions<span class="token punctuation">{</span>Filter<span class="token punctuation">:</span> <span class="token string">\`^images/\`</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token keyword">func</span><span class="token punctuation">(</span>args api<span class="token punctuation">.</span>OnResolveArgs<span class="token punctuation">)</span> <span class="token punctuation">(</span>api<span class="token punctuation">.</span>OnResolveResult<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> api<span class="token punctuation">.</span>OnResolveResult<span class="token punctuation">{</span>
          Path<span class="token punctuation">:</span> filepath<span class="token punctuation">.</span><span class="token function">Join</span><span class="token punctuation">(</span>args<span class="token punctuation">.</span>ResolveDir<span class="token punctuation">,</span> <span class="token string">&quot;public&quot;</span><span class="token punctuation">,</span> args<span class="token punctuation">.</span>Path<span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token boolean">nil</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>

    <span class="token comment">// Mark all paths starting with &quot;http://&quot; or &quot;https://&quot; as external</span>
    build<span class="token punctuation">.</span><span class="token function">OnResolve</span><span class="token punctuation">(</span>api<span class="token punctuation">.</span>OnResolveOptions<span class="token punctuation">{</span>Filter<span class="token punctuation">:</span> <span class="token string">\`^https?://\`</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token keyword">func</span><span class="token punctuation">(</span>args api<span class="token punctuation">.</span>OnResolveArgs<span class="token punctuation">)</span> <span class="token punctuation">(</span>api<span class="token punctuation">.</span>OnResolveResult<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> api<span class="token punctuation">.</span>OnResolveResult<span class="token punctuation">{</span>
          Path<span class="token punctuation">:</span>     args<span class="token punctuation">.</span>Path<span class="token punctuation">,</span>
          External<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token boolean">nil</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  result <span class="token operator">:=</span> api<span class="token punctuation">.</span><span class="token function">Build</span><span class="token punctuation">(</span>api<span class="token punctuation">.</span>BuildOptions<span class="token punctuation">{</span>
    EntryPoints<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">{</span><span class="token string">&quot;app.js&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    Bundle<span class="token punctuation">:</span>      <span class="token boolean">true</span><span class="token punctuation">,</span>
    Outfile<span class="token punctuation">:</span>     <span class="token string">&quot;out.js&quot;</span><span class="token punctuation">,</span>
    Plugins<span class="token punctuation">:</span>     <span class="token punctuation">[</span><span class="token punctuation">]</span>api<span class="token punctuation">.</span>Plugin<span class="token punctuation">{</span>exampleOnResolvePlugin<span class="token punctuation">}</span><span class="token punctuation">,</span>
    Write<span class="token punctuation">:</span>       <span class="token boolean">true</span><span class="token punctuation">,</span>
    Loader<span class="token punctuation">:</span> <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span>api<span class="token punctuation">.</span>Loader<span class="token punctuation">{</span>
      <span class="token string">&quot;.png&quot;</span><span class="token punctuation">:</span> api<span class="token punctuation">.</span>LoaderBinary<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>

  <span class="token keyword">if</span> <span class="token function">len</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>Errors<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token punctuation">{</span>
    os<span class="token punctuation">.</span><span class="token function">Exit</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br></div></div></div></div><p>\u56DE\u8C03\u53EF\u4EE5\u5728\u4E0D\u63D0\u4F9B\u8DEF\u5F84\u7684\u60C5\u51B5\u4E0B\u8FD4\u56DE\uFF0C\u4EE5\u5C06\u8DEF\u5F84\u89E3\u6790\u7684\u8D23\u4EFB\u4F20\u9012\u7ED9\u4E0B\u4E00\u4E2A\u56DE\u8C03\u3002\u5BF9\u4E8E\u7ED9\u5B9A\u7684\u5BFC\u5165\u8DEF\u5F84\uFF0C\u6765\u81EA\u6240\u6709\u63D2\u4EF6\u7684\u6240\u6709 <code>onResolve</code> \u56DE\u8C03\u5C06\u6309\u7167\u5B83\u4EEC\u6CE8\u518C\u7684\u987A\u5E8F\u8FD0\u884C\uFF0C\u76F4\u5230\u6709\u4EBA\u8D1F\u8D23\u8DEF\u5F84\u89E3\u6790\u3002\u5982\u679C\u6CA1\u6709\u56DE\u8C03\u8FD4\u56DE\u8DEF\u5F84\uFF0Cesbuild \u5C06\u8FD0\u884C\u5176\u9ED8\u8BA4\u8DEF\u5F84\u89E3\u6790\u903B\u8F91\u3002</p><p>\u8BF7\u8BB0\u4F4F\uFF0C\u8BB8\u591A\u56DE\u8C03\u53EF\u80FD\u540C\u65F6\u8FD0\u884C\u3002\u5728 JavaScript \u4E2D\uFF0C\u5982\u679C\u60A8\u7684\u56DE\u8C03\u6267\u884C\u53EF\u4EE5\u5728\u53E6\u4E00\u4E2A\u7EBF\u7A0B\u4E0A\u8FD0\u884C\u7684\u6602\u8D35\u5DE5\u4F5C\uFF0C\u4F8B\u5982 <code>fs.existsSync()</code>\uFF0C\u60A8\u5E94\u8BE5\u4F7F\u56DE\u8C03<code>\u5F02\u6B65</code>\u5E76\u4F7F\u7528 <code>await</code>\uFF08\u5728\u8FD9\u79CD\u60C5\u51B5\u4E0B\u4F7F\u7528 <code>fs.promises.exists()</code>\uFF09\u4EE5\u5141\u8BB8\u5176\u4ED6\u4EE3\u7801\u5728\u6B64\u671F\u95F4\u8FD0\u884C\u3002\u5728 Go \u4E2D\uFF0C\u6BCF\u4E2A\u56DE\u8C03\u90FD\u53EF\u4EE5\u5728\u5355\u72EC\u7684 goroutine \u4E0A\u8FD0\u884C\u3002\u5982\u679C\u60A8\u7684\u63D2\u4EF6\u4F7F\u7528\u4EFB\u4F55\u5171\u4EAB\u6570\u636E\u7ED3\u6784\uFF0C\u8BF7\u786E\u4FDD\u60A8\u6709\u9002\u5F53\u7684\u540C\u6B65\u3002</p><h3 id="resolve-options" tabindex="-1"><a class="header-anchor" href="#resolve-options" aria-hidden="true">#</a> Resolve options</h3><p><code>onResolve</code> API \u65E8\u5728\u5728 <code>setup</code> \u51FD\u6570\u4E2D\u8C03\u7528\uFF0C\u5E76\u6CE8\u518C\u5728\u67D0\u4E9B\u60C5\u51B5\u4E0B\u8981\u89E6\u53D1\u7684\u56DE\u8C03\u3002\u5B83\u9700\u8981\u51E0\u4E2A\u9009\u9879\uFF1A</p><div><div title="js"><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">interface</span> <span class="token class-name">OnResolveOptions</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">filter</span><span class="token operator">:</span> RegExp<span class="token punctuation">;</span>
  namespace<span class="token operator">?</span><span class="token operator">:</span> string<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div></div><div title="go"><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">type</span> OnResolveOptions <span class="token keyword">struct</span> <span class="token punctuation">{</span>
  Filter    <span class="token builtin">string</span>
  Namespace <span class="token builtin">string</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div></div></div><ul><li><code>filter</code></li></ul>`,10),dn=n("\u6BCF\u4E2A\u56DE\u8C03\u90FD\u5FC5\u987B\u63D0\u4F9B\u4E00\u4E2A\u8FC7\u6EE4\u5668\uFF0C\u5B83\u662F\u4E00\u4E2A\u6B63\u5219\u8868\u8FBE\u5F0F\u3002\u5F53\u8DEF\u5F84\u4E0E\u6B64\u8FC7\u6EE4\u5668\u4E0D\u5339\u914D\u65F6\uFF0C\u5C06\u8DF3\u8FC7\u6CE8\u518C\u7684\u56DE\u8C03\u3002\u60A8\u53EF\u4EE5"),mn=n("\u5728\u6B64\u5904\u9605\u8BFB\u6709\u5173\u8FC7\u6EE4\u5668\u7684\u66F4\u591A\u4FE1\u606F"),gn=n("\u3002"),hn=s("ul",null,[s("li",null,[s("code",null,"namespace")])],-1),yn=n("\u8FD9\u662F\u53EF\u9009\u7684\u3002\u5982\u679C\u63D0\u4F9B\uFF0C\u5219\u56DE\u8C03\u4EC5\u5728\u63D0\u4F9B\u7684\u547D\u540D\u7A7A\u95F4\u4E2D\u7684\u6A21\u5757\u5185\u7684\u8DEF\u5F84\u4E0A\u8FD0\u884C\u3002\u60A8\u53EF\u4EE5\u5728"),_n=n("\u6B64\u5904\u9605\u8BFB\u6709\u5173\u547D\u540D\u7A7A\u95F4\u7684\u66F4\u591A\u4FE1\u606F"),vn=n("\u3002"),fn=e(`<h3 id="resolve-arguments" tabindex="-1"><a class="header-anchor" href="#resolve-arguments" aria-hidden="true">#</a> Resolve arguments</h3><p>\u5F53eSbuild\u8C03\u7528<code>onresolve</code>\u6CE8\u518C\u7684\u56DE\u8C03\u65F6\uFF0C\u5B83\u5C06\u63D0\u4F9B\u8FD9\u4E9B\u53C2\u6570\uFF0C\u5176\u4E2D\u5305\u542B\u6709\u5173\u5BFC\u5165\u8DEF\u5F84\u7684\u4FE1\u606F\uFF1A</p><div><div title="js"><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">interface</span> <span class="token class-name">OnResolveArgs</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">path</span><span class="token operator">:</span> string<span class="token punctuation">;</span>
  <span class="token literal-property property">importer</span><span class="token operator">:</span> string<span class="token punctuation">;</span>
  <span class="token literal-property property">namespace</span><span class="token operator">:</span> string<span class="token punctuation">;</span>
  <span class="token literal-property property">resolveDir</span><span class="token operator">:</span> string<span class="token punctuation">;</span>
  <span class="token literal-property property">kind</span><span class="token operator">:</span> ResolveKind<span class="token punctuation">;</span>
  <span class="token literal-property property">pluginData</span><span class="token operator">:</span> any<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

type ResolveKind <span class="token operator">=</span>
  <span class="token operator">|</span> <span class="token string">&#39;entry-point&#39;</span>
  <span class="token operator">|</span> <span class="token string">&#39;import-statement&#39;</span>
  <span class="token operator">|</span> <span class="token string">&#39;require-call&#39;</span>
  <span class="token operator">|</span> <span class="token string">&#39;dynamic-import&#39;</span>
  <span class="token operator">|</span> <span class="token string">&#39;require-resolve&#39;</span>
  <span class="token operator">|</span> <span class="token string">&#39;import-rule&#39;</span>
  <span class="token operator">|</span> <span class="token string">&#39;url-token&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div></div><div title="go"><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">type</span> OnResolveArgs <span class="token keyword">struct</span> <span class="token punctuation">{</span>
  Path       <span class="token builtin">string</span>
  Importer   <span class="token builtin">string</span>
  Namespace  <span class="token builtin">string</span>
  ResolveDir <span class="token builtin">string</span>
  Kind       ResolveKind
  PluginData <span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> <span class="token punctuation">(</span>
  ResolveEntryPoint        ResolveKind
  ResolveJSImportStatement ResolveKind
  ResolveJSRequireCall     ResolveKind
  ResolveJSDynamicImport   ResolveKind
  ResolveJSRequireResolve  ResolveKind
  ResolveCSSImportRule     ResolveKind
  ResolveCSSURLToken       ResolveKind
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div></div></div><ul><li><code>path</code></li></ul>`,4),wn=n("\u8FD9\u662F\u6765\u81EA\u5E95\u5C42\u6A21\u5757\u7684\u6E90\u4EE3\u7801\u7684\u9010\u5B57\u672A\u89E3\u51B3\u7684\u8DEF\u5F84\u3002\u5B83\u53EF\u4EE5\u91C7\u53D6\u4EFB\u4F55\u5F62\u5F0F\u3002\u867D\u7136eSbuild\u7684\u9ED8\u8BA4\u884C\u4E3A\u662F\u5C06\u5BFC\u5165\u8DEF\u5F84\u89E3\u91CA\u4E3A\u76F8\u5BF9\u8DEF\u5F84\u6216\u5305\u540D\u79F0\uFF0C\u4F46\u662F\u53EF\u7528\u4E8E\u5F15\u5165\u65B0\u7684\u8DEF\u5F84\u8868\u5355\u3002\u4F8B\u5982\uFF0C\u4E0B\u9762\u7684\u793A\u4F8B"),qn=n("HTTP\u63D2\u4EF6"),xn=n("\u5BF9\u4EE5"),Rn=s("code",null,"HTTP\uFF1A//",-1),Pn=n("\u5F00\u59CB\u7684\u8DEF\u5F84\u63D0\u4F9B\u4E86\u7279\u6B8A\u542B\u4E49\u3002"),On=s("ul",null,[s("li",null,[s("code",null,"importer")])],-1),jn=s("p",null,[n("\u8FD9\u662F\u5305\u542B\u8981\u89E3\u51B3\u6B64\u5BFC\u5165\u7684\u6A21\u5757\u7684\u8DEF\u5F84\u3002\u8BF7\u6CE8\u610F\uFF0C\u5982\u679C\u547D\u540D\u7A7A\u95F4\u662F"),s("code",null,"\u6587\u4EF6"),n("\uFF0C\u5219\u4EC5\u4FDD\u8BC1\u6B64\u8DEF\u5F84\u662F\u6587\u4EF6\u7CFB\u7EDF\u8DEF\u5F84\u3002\u5982\u679C\u8981\u89E3\u6790\u76F8\u5BF9\u4E8E\u5305\u542B\u5BFC\u5165\u5668\u6A21\u5757\u7684\u76EE\u5F55\u7684\u8DEF\u5F84\uFF0C\u5219\u5E94\u4F7F\u7528"),s("code",null,"Resolvedir"),n("\uFF0C\u56E0\u4E3A\u5B83\u4E5F\u9002\u7528\u4E8E\u865A\u62DF\u6A21\u5757\u3002")],-1),Ln=s("ul",null,[s("li",null,[s("code",null,"namespace")])],-1),Sn=n("\u8FD9\u662F\u5305\u542B\u6B64\u5BFC\u5165\u7684\u6A21\u5757\u7684\u547D\u540D\u7A7A\u95F4\uFF0C\u5982\u52A0\u8F7D\u6B64\u6587\u4EF6\u7684"),An=n("\u8D1F\u8F7D\u56DE\u8C03"),Jn=n("\u6240\u8BBE\u7F6E\u7684\u3002\u8FD9\u9ED8\u8BA4\u4E3A\u5305\u542BeSbuild\u9ED8\u8BA4\u884C\u4E3A\u7684\u6A21\u5757\u7684"),Tn=s("code",null,"\u6587\u4EF6",-1),Nn=n("\u547D\u540D\u7A7A\u95F4\u3002\u60A8\u53EF\u4EE5\u5728"),Dn=n("\u6B64\u5904\u9605\u8BFB\u66F4\u591A\u5173\u4E8E\u547D\u540D\u7A7A\u95F4\u7684\u4FE1\u606F"),In=n("\u3002"),En=s("ul",null,[s("li",null,[s("code",null,"resolveDir")])],-1),Bn=n("\u8FD9\u662F\u5728\u89E3\u6790\u6587\u4EF6\u7CFB\u7EDF\u4E0A\u7684\u5B9E\u9645\u8DEF\u5F84\u7684\u5BFC\u5165\u8DEF\u5F84\u65F6\u8981\u4F7F\u7528\u7684\u6587\u4EF6\u7CFB\u7EDF\u76EE\u5F55\u3002\u5BF9\u4E8E"),Fn=s("code",null,"\u6587\u4EF6",-1),Wn=n("\u547D\u540D\u7A7A\u95F4\u4E2D\u7684\u6A21\u5757\uFF0C\u6B64\u503C\u9ED8\u8BA4\u4E3A\u6A21\u5757\u8DEF\u5F84\u7684\u76EE\u5F55\u90E8\u5206\u3002\u5BF9\u4E8E\u865A\u62DF\u6A21\u5757\uFF0C\u6B64\u503C\u9ED8\u8BA4\u4E3A\u7A7A\uFF0C\u4F46"),Mn=n("\u8D1F\u8F7D\u56DE\u8C03"),Cn=n("\u53EF\u4EE5\u9009\u62E9\u4E3A\u865A\u62DF\u6A21\u5757\u63D0\u4F9B\u4E00\u4E2A\u89E3\u6790\u76EE\u5F55\u3002\u5982\u679C\u53D1\u751F\u8FD9\u79CD\u60C5\u51B5\uFF0C\u5C06\u63D0\u4F9B\u7528\u4E8E\u89E3\u6790\u8BE5\u6587\u4EF6\u4E2D\u672A\u89E3\u51B3\u7684\u8DEF\u5F84\u7684\u56DE\u8C03\u3002"),Un=e("<ul><li><code>kind</code></li></ul><p>\u8FD9\u8868\u793A\u5982\u4F55\u5BFC\u5165\u8981\u89E3\u51B3\u7684\u8DEF\u5F84\u3002\u4F8B\u5982\uFF0C<code>entry-point</code>\u8868\u793A\u5C06\u8DEF\u5F84\u63D0\u4F9B\u7ED9API\u4F5C\u4E3A\u5165\u53E3\u70B9\u8DEF\u5F84\uFF0C<code>import-statement</code>\u8868\u793A\u8DEF\u5F84\u6765\u81EAJavaScript<code>import</code>\u6216<code>export</code>\u8BED\u53E5\uFF0C\u5E76\u4E14<code>import-rule</code>\u8868\u793A\u8DEF\u5F84\u662F\u6765\u81EA\u4E00\u4E2ACSS <code>@Import</code>\u89C4\u5219\u3002</p><ul><li><code>pluginData</code></li></ul>",3),$n=n("\u6B64\u5C5E\u6027\u4ECE\u4E0A\u4E00\u4E2A\u63D2\u4EF6\u4F20\u9012\uFF0C\u5982\u52A0\u8F7D\u6B64\u6587\u4EF6\u7684"),Gn=n("\u8D1F\u8F7D\u56DE\u8C03"),Hn=n("\u6240\u8BBE\u7F6E\u3002"),Kn=e(`<h3 id="resolve-results" tabindex="-1"><a class="header-anchor" href="#resolve-results" aria-hidden="true">#</a> Resolve results</h3><p>\u8FD9\u662F\u53EF\u4EE5\u901A\u8FC7<code>onresolve</code>\u6DFB\u52A0\u7684\u56DE\u8C03\u6765\u63D0\u4F9B\u81EA\u5B9A\u4E49\u8DEF\u5F84\u5206\u8FA8\u7387\u7684\u5BF9\u8C61\u3002\u5982\u679C\u60A8\u60F3\u4ECE\u56DE\u8C03\u8FD4\u56DE\u800C\u4E0D\u63D0\u4F9B\u8DEF\u5F84\uFF0C\u53EA\u9700\u8FD4\u56DE\u9ED8\u8BA4\u503C\uFF08\u5728JavaScript\u548C<code>OnResolveresult {}</code>\u4E2D\u62D2\u7EDD\uFF09\u3002\u4EE5\u4E0B\u662F\u53EF\u4EE5\u8FD4\u56DE\u7684\u53EF\u9009\u5C5E\u6027\uFF1A</p><div><div title="js"><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">interface</span> <span class="token class-name">OnResolveResult</span> <span class="token punctuation">{</span>
  errors<span class="token operator">?</span><span class="token operator">:</span> Message<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  external<span class="token operator">?</span><span class="token operator">:</span> boolean<span class="token punctuation">;</span>
  namespace<span class="token operator">?</span><span class="token operator">:</span> string<span class="token punctuation">;</span>
  path<span class="token operator">?</span><span class="token operator">:</span> string<span class="token punctuation">;</span>
  pluginData<span class="token operator">?</span><span class="token operator">:</span> any<span class="token punctuation">;</span>
  pluginName<span class="token operator">?</span><span class="token operator">:</span> string<span class="token punctuation">;</span>
  warnings<span class="token operator">?</span><span class="token operator">:</span> Message<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  watchDirs<span class="token operator">?</span><span class="token operator">:</span> string<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  watchFiles<span class="token operator">?</span><span class="token operator">:</span> string<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">interface</span> <span class="token class-name">Message</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">text</span><span class="token operator">:</span> string<span class="token punctuation">;</span>
  <span class="token literal-property property">location</span><span class="token operator">:</span> Location <span class="token operator">|</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
  <span class="token literal-property property">detail</span><span class="token operator">:</span> any<span class="token punctuation">;</span> <span class="token comment">// The original error from a JavaScript plugin, if applicable</span>
<span class="token punctuation">}</span>

<span class="token keyword">interface</span> <span class="token class-name">Location</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">file</span><span class="token operator">:</span> string<span class="token punctuation">;</span>
  <span class="token literal-property property">namespace</span><span class="token operator">:</span> string<span class="token punctuation">;</span>
  <span class="token literal-property property">line</span><span class="token operator">:</span> number<span class="token punctuation">;</span> <span class="token comment">// 1-based</span>
  <span class="token literal-property property">column</span><span class="token operator">:</span> number<span class="token punctuation">;</span> <span class="token comment">// 0-based, in bytes</span>
  <span class="token literal-property property">length</span><span class="token operator">:</span> number<span class="token punctuation">;</span> <span class="token comment">// in bytes</span>
  <span class="token literal-property property">lineText</span><span class="token operator">:</span> string<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div></div><div title="go"><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">type</span> OnResolveResult <span class="token keyword">struct</span> <span class="token punctuation">{</span>
  Errors     <span class="token punctuation">[</span><span class="token punctuation">]</span>Message
  External   <span class="token builtin">bool</span>
  Namespace  <span class="token builtin">string</span>
  Path       <span class="token builtin">string</span>
  PluginData <span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span>
  PluginName <span class="token builtin">string</span>
  Warnings   <span class="token punctuation">[</span><span class="token punctuation">]</span>Message
  WatchDirs  <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span>
  WatchFiles <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span>
<span class="token punctuation">}</span>

<span class="token keyword">type</span> Message <span class="token keyword">struct</span> <span class="token punctuation">{</span>
  Text     <span class="token builtin">string</span>
  Location <span class="token operator">*</span>Location
  Detail   <span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token comment">// The original error from a Go plugin, if applicable</span>
<span class="token punctuation">}</span>

<span class="token keyword">type</span> Location <span class="token keyword">struct</span> <span class="token punctuation">{</span>
  File      <span class="token builtin">string</span>
  Namespace <span class="token builtin">string</span>
  Line      <span class="token builtin">int</span> <span class="token comment">// 1-based</span>
  Column    <span class="token builtin">int</span> <span class="token comment">// 0-based, in bytes</span>
  Length    <span class="token builtin">int</span> <span class="token comment">// in bytes</span>
  LineText  <span class="token builtin">string</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div></div></div><ul><li><code>path</code></li></ul><p>\u5C06\u5176\u8BBE\u7F6E\u4E3A\u975E\u7A7A\u5B57\u7B26\u4E32\u4EE5\u5C06\u5BFC\u5165\u89E3\u6790\u4E3A\u7279\u5B9A\u8DEF\u5F84\u3002\u5982\u679C\u8BBE\u7F6E\u4E86\u8FD9\u4E00\u70B9\uFF0C\u5219\u4E0D\u4F1A\u5728\u6B64\u6A21\u5757\u4E2D\u4E3A\u6B64\u5BFC\u5165\u8DEF\u5F84\u8FD0\u884C\u66F4\u591A\u7684on-destve\u56DE\u8C03\u3002\u5982\u679C\u672A\u8BBE\u7F6E\u4E3A\u6B64\uFF0CeSbuild\u5C06\u7EE7\u7EED\u8FD0\u884C\u5728\u5F53\u524D\u4E00\u4E2A\u540E\u6CE8\u518C\u7684on-Desclude\u56DE\u8C03\u3002\u7136\u540E\uFF0C\u5982\u679C\u8DEF\u5F84\u4ECD\u672A\u89E3\u51B3\uFF0CeSBuild\u5C06\u9ED8\u8BA4\u4E3A\u76F8\u5BF9\u4E8E\u5F53\u524D\u6A21\u5757\u7684\u89E3\u6790\u76EE\u5F55\u89E3\u6790\u8DEF\u5F84\u3002</p><ul><li><code>external</code></li></ul>`,6),Vn=n("\u5C06\u6B64\u8BBE\u7F6E\u4E3A"),zn=s("code",null,"true",-1),Xn=n("\u4EE5\u5C06\u6A21\u5757\u6807\u8BB0\u4E3A"),Yn=n("\u5916\u90E8"),Qn=n("\uFF0C\u8FD9\u610F\u5473\u7740\u5B83\u4E0D\u4F1A\u5305\u542B\u5728\u6346\u7ED1\u5305\u4E2D\uFF0C\u800C\u662F\u5C06\u5728\u8FD0\u884C\u65F6\u5BFC\u5165\u3002"),Zn=e("<ul><li><code>namespace</code></li></ul><p>\u8FD9\u662F\u4E0E\u5DF2\u89E3\u6790\u8DEF\u5F84\u5173\u8054\u7684\u547D\u540D\u7A7A\u95F4\u3002\u5982\u679C\u7559\u7A7A\uFF0C\u5219\u5C06\u9ED8\u8BA4\u4E3A\u975E\u5916\u90E8\u8DEF\u5F84\u7684<code>\u6587\u4EF6</code>\u547D\u540D\u7A7A\u95F4\u3002\u6587\u4EF6\u547D\u540D\u7A7A\u95F4\u4E2D\u7684\u8DEF\u5F84\u5FC5\u987B\u662F\u5F53\u524D\u6587\u4EF6\u7CFB\u7EDF\u7684\u7EDD\u5BF9\u8DEF\u5F84\uFF08\u56E0\u6B64\u5728UNIX\u4E0A\u7684\u6B63\u659C\u6760\u5F00\u59CB\uFF0C\u5E76\u4E14\u5728Windows\u4E0A\u4F7F\u7528\u9A71\u52A8\u5668\u53F7\uFF09\u3002</p><p>\u5982\u679C\u8981\u89E3\u6790\u4E3A\u975E\u6587\u4EF6\u7CFB\u7EDF\u8DEF\u5F84\u7684\u8DEF\u5F84\uFF0C\u5219\u5E94\u5C06\u547D\u540D\u7A7A\u95F4\u8BBE\u7F6E\u4E3A<code>\u6587\u4EF6</code>\u4EE5\u5916\u7684\u5185\u5BB9\u6216\u7A7A\u5B57\u7B26\u4E32\u3002\u8FD9\u544A\u8BC9esbuild\u4E0D\u5C06\u8DEF\u5F84\u89C6\u4E3A\u6307\u5411\u6587\u4EF6\u7CFB\u7EDF\u4E0A\u7684\u67D0\u4E9B\u4E1C\u897F\u3002</p><ul><li><code>errors</code> and <code>warnings</code></li></ul>",4),ns=n("\u8FD9\u4E9B\u5C5E\u6027\u5141\u8BB8\u60A8\u901A\u8FC7\u8DEF\u5F84\u5206\u8FA8\u7387\u671F\u95F4\u751F\u6210\u7684\u4EFB\u4F55\u65E5\u5FD7\u6D88\u606F\uFF0C\u4EE5\u6839\u636E\u5F53\u524D"),ss=n("\u65E5\u5FD7\u7EA7\u522B"),as=n("\u663E\u793A\u5728\u7EC8\u7AEF\u4E2D\u7684eSBuild\uFF0C\u5E76\u6700\u7EC8\u5728\u6700\u7EC8\u6784\u5EFA\u7ED3\u679C\u4E2D\u7ED3\u675F\u3002\u4F8B\u5982\uFF0C\u5982\u679C\u60A8\u6B63\u5728\u8C03\u7528\u5E93\uFF0C\u5E76\u4E14\u8BE5\u5E93\u53EF\u4EE5\u8FD4\u56DE\u9519\u8BEF\u548C/\u6216\u8B66\u544A\uFF0C\u60A8\u5C06\u5E0C\u671B\u4F7F\u7528\u8FD9\u4E9B\u5C5E\u6027\u8F6C\u53D1\u5B83\u4EEC\u3002"),ps=s("p",null,[n("\u5982\u679C\u60A8\u53EA\u6709\u5355\u4E2A\u9519\u8BEF\u8FD4\u56DE\uFF0C\u5219\u4E0D\u5FC5\u901A\u8FC7\u9519\u8BEF\u4F20\u9012\u5B83\u3002\u60A8\u53EF\u4EE5\u7B80\u5355\u5730\u5C06"),s("code",null,"\u9519\u8BEF"),n("\u4E22\u5F03\u5728JavaScript\u4E2D\uFF0C\u6216\u8005\u5C06"),s("code",null,"\u9519\u8BEF"),n("\u5BF9\u8C61\u8FD4\u56DE\u5230Go\u4E2D\u7684\u7B2C\u4E8C\u4E2A\u8FD4\u56DE\u503C\u3002")],-1),ts=s("ul",null,[s("li",null,[s("code",null,"watchFiles"),n(" and "),s("code",null,"watchDirs")])],-1),es=n("\u8FD9\u4E9B\u5C5E\u6027\u5141\u8BB8\u60A8\u8FD4\u56DEeSbuild"),os=n("watch mode"),cs=n("\u7684\u5176\u4ED6\u6587\u4EF6\u7CFB\u7EDF\u8DEF\u5F84\u4EE5\u626B\u63CF\u3002\u9ED8\u8BA4\u60C5\u51B5\u4E0B\uFF0CeSBuild\u5C06\u4EC5\u626B\u63CF\u63D0\u4F9B\u7ED9"),ls=s("code",null,"onload",-1),us=n("\u63D2\u4EF6\u7684\u8DEF\u5F84\uFF0C\u5E76\u4E14\u4EC5\u5F53\u547D\u540D\u7A7A\u95F4\u662F"),is=s("code",null,"\u6587\u4EF6",-1),rs=n("\u65F6\u3002\u5982\u679C\u60A8\u7684\u63D2\u4EF6\u9700\u8981\u5BF9\u6587\u4EF6\u7CFB\u7EDF\u7684\u5176\u4ED6\u66F4\u6539\u4F5C\u51FA\u53CD\u5E94\uFF0C\u5219\u9700\u8981\u4F7F\u7528\u5176\u4E2D\u4E00\u4E2A\u5C5E\u6027\u3002"),ks=e(`<p>\u5982\u679C<code>WatchFiles</code>\u6570\u7EC4\u7684\u4EFB\u4F55\u6587\u4EF6\u5DF2\u81EA\u4E0A\u6B21\u6784\u5EFA\u4EE5\u6765\u5DF2\u66F4\u6539\u4EFB\u4F55\u6587\u4EF6\uFF0C\u5219\u5C06\u89E6\u53D1\u91CD\u5EFA\u3002\u66F4\u6539\u68C0\u6D4B\u6709\u70B9\u590D\u6742\uFF0C\u53EF\u4EE5\u68C0\u67E5\u6587\u4EF6\u5185\u5BB9\u548C/\u6216\u6587\u4EF6\u7684\u5143\u6570\u636E\u3002</p><p>\u5982\u679C\u4ECE\u4E0A\u6B21\u6784\u5EFA\u4EE5\u6765\uFF0C\u5982\u679C<code>WatchDirs</code>\u6570\u7EC4\u4E2D\u7684\u4EFB\u4F55\u76EE\u5F55\u5217\u8868\u5217\u8868\u5DF2\u66F4\u6539\u4EE5\u6765\uFF0C\u5219\u8FD8\u5C06\u89E6\u53D1\u91CD\u5EFA\u3002\u8BF7\u6CE8\u610F\uFF0C\u8FD9\u4E0D\u4F1A\u68C0\u67E5\u8FD9\u4E9B\u76EE\u5F55\u4E2D\u7684\u4EFB\u4F55\u6587\u4EF6\u5185\u5BB9\u7684\u5185\u5BB9\uFF0C\u5B83\u4E5F\u4E0D\u4F1A\u68C0\u67E5\u4EFB\u4F55\u5B50\u76EE\u5F55\u3002\u8003\u8651\u4E00\u4E0B\u5B83\u4F5C\u4E3A\u68C0\u67E5UNIX <code>LS</code>\u547D\u4EE4\u7684\u8F93\u51FA\u3002</p><p>\u5BF9\u4E8E\u7A33\u5065\u6027\uFF0C\u60A8\u5E94\u8BE5\u5305\u62EC\u5728\u8BC4\u4F30\u63D2\u4EF6\u671F\u95F4\u4F7F\u7528\u7684\u6240\u6709\u6587\u4EF6\u7CFB\u7EDF\u8DEF\u5F84\u3002\u4F8B\u5982\uFF0C\u5982\u679C\u60A8\u7684\u63D2\u4EF6\u76F8\u5F53\u4E8E<code>Require.Resolve\uFF08\uFF09</code>\uFF0C\u5219\u9700\u8981\u5305\u542B\u6240\u6709\u201C\u6267\u884C\u6B64\u6587\u4EF6\u5B58\u5728\u201D\u7684\u8DEF\u5F84\uFF0C\u800C\u4E0D\u4EC5\u4EC5\u662F\u6700\u7EC8\u8DEF\u5F84\u3002\u5426\u5219\uFF0C\u53EF\u4EE5\u521B\u5EFA\u4E00\u4E2A\u65B0\u6587\u4EF6\uFF0C\u8FD9\u4F1A\u5BFC\u81F4\u6784\u5EFA\u53D8\u5F97\u8FC7\u65F6\uFF0C\u4F46eSbuild\u4E0D\u4F1A\u68C0\u6D4B\u5230\u5B83\uFF0C\u56E0\u4E3A\u672A\u5217\u51FA\u8BE5\u8DEF\u5F84\u3002</p><ul><li><code>pluginName</code></li></ul><p>\u6B64\u5C5E\u6027\u5141\u8BB8\u60A8\u4F7F\u7528\u6B64\u8DEF\u5F84\u89E3\u6790\u64CD\u4F5C\u7684\u53E6\u4E00\u4E2A\u540D\u79F0\u66FF\u6362\u6B64\u63D2\u4EF6\u7684\u540D\u79F0\u3002\u901A\u8FC7\u8FD9\u4E2A\u63D2\u4EF6\u4EE3\u7406\u53E6\u4E00\u4E2A\u63D2\u4EF6\u5F88\u6709\u7528\u3002\u4F8B\u5982\uFF0C\u5B83\u5141\u8BB8\u60A8\u5C06\u5355\u4E2A\u63D2\u4EF6\u8F6C\u53D1\u5230\u5305\u542B\u591A\u4E2A\u63D2\u4EF6\u7684\u5B50\u8FDB\u7A0B\u3002\u60A8\u53EF\u80FD\u4E0D\u9700\u8981\u4F7F\u7528\u5B83\u3002</p><ul><li><code>pluginData</code></li></ul><p>\u6B64\u5C5E\u6027\u5C06\u4F20\u9012\u5230\u5728\u63D2\u4EF6\u94FE\u4E2D\u8FD0\u884C\u7684\u4E0B\u4E00\u4E2A\u63D2\u4EF6\u3002\u5982\u679C\u4ECE<code>onload</code>\u63D2\u4EF6\u8FD4\u56DE\u5B83\uFF0C\u5B83\u5C06\u4F20\u9012\u7ED9<code>onresolve</code>\u63D2\u4EF6\uFF0C\u4EE5\u83B7\u53D6\u8BE5\u6587\u4EF6\u4E2D\u7684\u4EFB\u4F55\u5BFC\u5165\u7684\u63D2\u4EF6\uFF0C\u5982\u679C\u4ECE<code>onresolve</code>\u63D2\u4EF6\u8FD4\u56DE\u5B83\uFF0C\u5219\u5728\u52A0\u8F7D\u6587\u4EF6\u65F6\u5C06\u4F20\u9012\u7ED9<code>onload</code>\u63D2\u4EF6\uFF08\u7531\u4E8E\u5173\u7CFB\u591A\u5BF9\u4E00\uFF0C\u8FD9\u662F\u968F\u610F\u7684\uFF09\u3002\u8FD9\u5BF9\u4E8E\u5728\u4E0D\u540C\u63D2\u4EF6\u4E4B\u95F4\u4F20\u9012\u6570\u636E\u662F\u6709\u7528\u7684\uFF0C\u800C\u65E0\u9700\u76F4\u63A5\u5750\u6807\u3002</p><h2 id="load-callbacks" tabindex="-1"><a class="header-anchor" href="#load-callbacks" aria-hidden="true">#</a> Load callbacks</h2><p>\u4F7F\u7528<code>onload</code>\u6DFB\u52A0\u7684\u56DE\u8C03\u5C06\u4E3A\u5C1A\u672A\u6807\u8BB0\u4E3A\u5916\u90E8\u7684\u552F\u4E00\u8DEF\u5F84/\u547D\u540D\u7A7A\u95F4\u5BF9\u8FD0\u884C\u3002\u5B83\u7684\u5DE5\u4F5C\u662F\u8FD4\u56DE\u6A21\u5757\u7684\u5185\u5BB9\u5E76\u544A\u8BC9esbuild\u5982\u4F55\u89E3\u91CA\u5B83\u3002\u8FD9\u662F\u4E00\u4E2A\u793A\u4F8B\u63D2\u4EF6\uFF0C\u5B83\u5C06<code>.txt</code>\u6587\u4EF6\u8F6C\u6362\u4E3A\u5355\u8BCD\u6570\u7EC4\uFF1A</p><div><div title="js"><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> exampleOnLoadPlugin <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;example&#39;</span><span class="token punctuation">,</span>
  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token parameter">build</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span>

    <span class="token comment">// Load &quot;.txt&quot; files and return an array of words</span>
    build<span class="token punctuation">.</span><span class="token function">onLoad</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">filter</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.txt$</span><span class="token regex-delimiter">/</span></span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">args</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">let</span> text <span class="token operator">=</span> <span class="token keyword">await</span> fs<span class="token punctuation">.</span>promises<span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span>args<span class="token punctuation">.</span>path<span class="token punctuation">,</span> <span class="token string">&#39;utf8&#39;</span><span class="token punctuation">)</span>
      <span class="token keyword">return</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">contents</span><span class="token operator">:</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>text<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\s+</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token literal-property property">loader</span><span class="token operator">:</span> <span class="token string">&#39;json&#39;</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;esbuild&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">entryPoints</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;app.js&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token literal-property property">bundle</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token literal-property property">outfile</span><span class="token operator">:</span> <span class="token string">&#39;out.js&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>exampleOnLoadPlugin<span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> process<span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div></div><div title="go"><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token string">&quot;encoding/json&quot;</span>
<span class="token keyword">import</span> <span class="token string">&quot;io/ioutil&quot;</span>
<span class="token keyword">import</span> <span class="token string">&quot;os&quot;</span>
<span class="token keyword">import</span> <span class="token string">&quot;strings&quot;</span>
<span class="token keyword">import</span> <span class="token string">&quot;github.com/evanw/esbuild/pkg/api&quot;</span>

<span class="token keyword">var</span> exampleOnLoadPlugin <span class="token operator">=</span> api<span class="token punctuation">.</span>Plugin<span class="token punctuation">{</span>
  Name<span class="token punctuation">:</span> <span class="token string">&quot;example&quot;</span><span class="token punctuation">,</span>
  Setup<span class="token punctuation">:</span> <span class="token keyword">func</span><span class="token punctuation">(</span>build api<span class="token punctuation">.</span>PluginBuild<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// Load &quot;.txt&quot; files and return an array of words</span>
    build<span class="token punctuation">.</span><span class="token function">OnLoad</span><span class="token punctuation">(</span>api<span class="token punctuation">.</span>OnLoadOptions<span class="token punctuation">{</span>Filter<span class="token punctuation">:</span> <span class="token string">\`\\.txt$\`</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token keyword">func</span><span class="token punctuation">(</span>args api<span class="token punctuation">.</span>OnLoadArgs<span class="token punctuation">)</span> <span class="token punctuation">(</span>api<span class="token punctuation">.</span>OnLoadResult<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        text<span class="token punctuation">,</span> err <span class="token operator">:=</span> ioutil<span class="token punctuation">.</span><span class="token function">ReadFile</span><span class="token punctuation">(</span>args<span class="token punctuation">.</span>Path<span class="token punctuation">)</span>
        <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
          <span class="token keyword">return</span> api<span class="token punctuation">.</span>OnLoadResult<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> err
        <span class="token punctuation">}</span>
        bytes<span class="token punctuation">,</span> err <span class="token operator">:=</span> json<span class="token punctuation">.</span><span class="token function">Marshal</span><span class="token punctuation">(</span>strings<span class="token punctuation">.</span><span class="token function">Fields</span><span class="token punctuation">(</span><span class="token function">string</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
          <span class="token keyword">return</span> api<span class="token punctuation">.</span>OnLoadResult<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> err
        <span class="token punctuation">}</span>
        contents <span class="token operator">:=</span> <span class="token function">string</span><span class="token punctuation">(</span>bytes<span class="token punctuation">)</span>
        <span class="token keyword">return</span> api<span class="token punctuation">.</span>OnLoadResult<span class="token punctuation">{</span>
          Contents<span class="token punctuation">:</span> <span class="token operator">&amp;</span>contents<span class="token punctuation">,</span>
          Loader<span class="token punctuation">:</span>   api<span class="token punctuation">.</span>LoaderJSON<span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token boolean">nil</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  result <span class="token operator">:=</span> api<span class="token punctuation">.</span><span class="token function">Build</span><span class="token punctuation">(</span>api<span class="token punctuation">.</span>BuildOptions<span class="token punctuation">{</span>
    EntryPoints<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">{</span><span class="token string">&quot;app.js&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    Bundle<span class="token punctuation">:</span>      <span class="token boolean">true</span><span class="token punctuation">,</span>
    Outfile<span class="token punctuation">:</span>     <span class="token string">&quot;out.js&quot;</span><span class="token punctuation">,</span>
    Plugins<span class="token punctuation">:</span>     <span class="token punctuation">[</span><span class="token punctuation">]</span>api<span class="token punctuation">.</span>Plugin<span class="token punctuation">{</span>exampleOnLoadPlugin<span class="token punctuation">}</span><span class="token punctuation">,</span>
    Write<span class="token punctuation">:</span>       <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>

  <span class="token keyword">if</span> <span class="token function">len</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>Errors<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token punctuation">{</span>
    os<span class="token punctuation">.</span><span class="token function">Exit</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br></div></div></div></div><p>\u56DE\u8C03\u53EF\u4EE5\u5728\u4E0D\u63D0\u4F9B\u6A21\u5757\u5185\u5BB9\u7684\u60C5\u51B5\u4E0B\u8FD4\u56DE\u3002\u5728\u8FD9\u79CD\u60C5\u51B5\u4E0B\uFF0C\u52A0\u8F7D\u6A21\u5757\u7684\u8D23\u4EFB\u5C06\u4F20\u9012\u5230\u4E0B\u4E00\u4E2A\u6CE8\u518C\u7684\u56DE\u8C03\u3002\u5BF9\u4E8E\u7ED9\u5B9A\u7684\u6A21\u5757\uFF0C\u6240\u6709\u63D2\u4EF6\u7684\u6240\u6709<code>onload</code>\u56DE\u8C03\u5C06\u6309\u5176\u6CE8\u518C\u7684\u987A\u5E8F\u8FD0\u884C\uFF0C\u76F4\u5230\u4E00\u4E2A\u8D1F\u8D23\u52A0\u8F7D\u6A21\u5757\u3002\u5982\u679C\u6CA1\u6709\u56DE\u8C03\u8FD4\u56DE\u6A21\u5757\u7684\u5185\u5BB9\uFF0C\u5219eSbuild\u5C06\u8FD0\u884C\u5176\u9ED8\u8BA4\u6A21\u5757\u52A0\u8F7D\u903B\u8F91\u3002</p><p>\u8BF7\u8BB0\u4F4F\uFF0C\u8BB8\u591A\u56DE\u8C03\u53EF\u80FD\u540C\u65F6\u8FD0\u884C\u3002\u5728JavaScript\u4E2D\uFF0C\u5982\u679C\u60A8\u7684\u56DE\u8C03\u6267\u884C\u6602\u8D35\u7684\u5DE5\u4F5C\uFF0C\u53EF\u4EE5\u5728\u5176\u4ED6\u7EBF\u7A0B\u4E2D\u8FD0\u884C\uFF0C\u4F8B\u5982<code>fs.readfilesync\uFF08\uFF09</code>\uFF0C\u60A8\u5E94\u8BE5\u4F7F\u56DE\u8C03<code>async</code>\u548C\u4F7F\u7528<code>await</code>\uFF08\u5728\u8FD9\u79CD\u60C5\u51B5\u4E0B\u4F7F\u7528<code>fs.promises.readfile\uFF08\uFF09</code>\uFF09\u6765\u5141\u8BB8\u5176\u4ED6\u4EE3\u7801\u4E0E\u6B64\u540C\u65F6\u8FD0\u884C\u3002\u5728Go\u4E2D\uFF0C\u6BCF\u4E2A\u56DE\u8C03\u53EF\u80FD\u5728\u5355\u72EC\u7684goroutine\u4E0A\u8FD0\u884C\u3002\u5982\u679C\u60A8\u7684\u63D2\u4EF6\u4F7F\u7528\u4EFB\u4F55\u5171\u4EAB\u6570\u636E\u7ED3\u6784\uFF0C\u8BF7\u786E\u4FDD\u5728\u9002\u5F53\u7684\u540C\u6B65\u65F6\u8FDB\u884C\u540C\u6B65\u3002</p><h3 id="load-options" tabindex="-1"><a class="header-anchor" href="#load-options" aria-hidden="true">#</a> Load options</h3><p><code>onload</code> API\u5728\u8BBE\u7F6E\u529F\u80FD\u4E2D\u88AB<code>\u8C03\u7528</code>\uFF0C\u5E76\u5728\u67D0\u4E9B\u60C5\u51B5\u4E0B\u6CE8\u518C\u8981\u89E6\u53D1\u7684\u56DE\u8C03\u3002\u9700\u8981\u4E00\u4E9B\u9009\u62E9\uFF1A</p><div><div title="js"><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">interface</span> <span class="token class-name">OnLoadOptions</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">filter</span><span class="token operator">:</span> RegExp<span class="token punctuation">;</span>
  namespace<span class="token operator">?</span><span class="token operator">:</span> string<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div></div><div title="go"><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">type</span> OnLoadOptions <span class="token keyword">struct</span> <span class="token punctuation">{</span>
  Filter    <span class="token builtin">string</span>
  Namespace <span class="token builtin">string</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div></div></div><ul><li><code>filter</code></li></ul>`,16),bs=n("\u6BCF\u4E2A\u56DE\u8C03\u5FC5\u987B\u63D0\u4F9B\u4E00\u4E2A\u8FC7\u6EE4\u5668\uFF0C\u8FD9\u662F\u4E00\u4E2A\u6B63\u5219\u8868\u8FBE\u5F0F\u3002\u5F53\u8DEF\u5F84\u4E0E\u6B64\u8FC7\u6EE4\u5668\u4E0D\u5339\u914D\u65F6\uFF0C\u5C06\u8DF3\u8FC7\u6CE8\u518C\u7684\u56DE\u8C03\u3002\u60A8\u53EF\u4EE5\u5728"),ds=n("\u6B64\u9605\u8BFB\u66F4\u591A\u6709\u5173\u8FC7\u6EE4\u5668\u7684\u4FE1\u606F"),ms=n("\u3002"),gs=s("ul",null,[s("li",null,[s("code",null,"namespace")])],-1),hs=n("\u8FD9\u662F\u53EF\u9009\u7684\u3002\u5982\u679C\u63D0\u4F9B\u7684\u8BDD\uFF0C\u56DE\u8C03\u4EC5\u5728\u6240\u63D0\u4F9B\u7684\u547D\u540D\u7A7A\u95F4\u4E2D\u7684\u6A21\u5757\u4E2D\u7684\u8DEF\u5F84\u4E0A\u8FD0\u884C\u3002\u60A8\u53EF\u4EE5\u5728"),ys=n("\u6B64\u5904\u9605\u8BFB\u66F4\u591A\u5173\u4E8E\u547D\u540D\u7A7A\u95F4\u7684\u4FE1\u606F"),_s=n("\u3002"),vs=e(`<h3 id="load-arguments" tabindex="-1"><a class="header-anchor" href="#load-arguments" aria-hidden="true">#</a> Load arguments</h3><p>\u5F53eSBuild\u8C03\u7528<code>onload</code>\u6CE8\u518C\u7684\u56DE\u8C03\u65F6\uFF0C\u5B83\u5C06\u63D0\u4F9B\u8FD9\u4E9B\u53C2\u6570\uFF0C\u5176\u4E2D\u5305\u542B\u6709\u5173\u8981\u52A0\u8F7D\u7684\u6A21\u5757\u7684\u4FE1\u606F\uFF1A</p><div><div title="js"><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">interface</span> <span class="token class-name">OnLoadArgs</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">path</span><span class="token operator">:</span> string<span class="token punctuation">;</span>
  <span class="token literal-property property">namespace</span><span class="token operator">:</span> string<span class="token punctuation">;</span>
  <span class="token literal-property property">pluginData</span><span class="token operator">:</span> any<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div></div><div title="go"><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">type</span> OnLoadArgs <span class="token keyword">struct</span> <span class="token punctuation">{</span>
  Path       <span class="token builtin">string</span>
  Namespace  <span class="token builtin">string</span>
  PluginData <span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div></div></div><ul><li><code>path</code></li></ul>`,4),fs=n("\u8FD9\u662F\u6A21\u5757\u7684\u5B8C\u5168\u89E3\u6790\u7684\u8DEF\u5F84\u3002\u5982\u679C\u547D\u540D\u7A7A\u95F4\u662F"),ws=s("code",null,"\u6587\u4EF6",-1),qs=n("\uFF0C\u5219\u5E94\u88AB\u89C6\u4E3A\u6587\u4EF6\u7CFB\u7EDF\u8DEF\u5F84\uFF0C\u4F46\u5426\u5219\u8DEF\u5F84\u53EF\u4EE5\u91C7\u7528\u4EFB\u4F55\u5F62\u5F0F\u3002\u4F8B\u5982\uFF0C\u4E0B\u9762\u7684\u793A\u4F8B"),xs=n("HTTP\u63D2\u4EF6"),Rs=n("\u5BF9\u4EE5"),Ps=s("code",null,"HTTP\uFF1A//",-1),Os=n("\u5F00\u59CB\u7684\u8DEF\u5F84\u63D0\u4F9B\u4E86\u7279\u6B8A\u542B\u4E49\u3002"),js=s("ul",null,[s("li",null,[s("code",null,"namespace")])],-1),Ls=n("\u8FD9\u662F\u6A21\u5757\u8DEF\u5F84\u6240\u5728\u7684\u547D\u540D\u7A7A\u95F4\uFF0C\u5982\u89E3\u6790\u8BE5\u6587\u4EF6\u7684"),Ss=n("\u89E3\u6790\u56DE\u8C03"),As=n("\u6240\u8BBE\u7F6E\u3002\u5B83\u9ED8\u8BA4\u4E3A\u5DF2\u52A0\u8F7DeSbuild\u9ED8\u8BA4\u884C\u4E3A\u7684\u6A21\u5757\u7684"),Js=s("code",null,"\u6587\u4EF6",-1),Ts=n("\u547D\u540D\u7A7A\u95F4\u3002\u60A8\u53EF\u4EE5\u5728"),Ns=n("\u6B64\u5904\u9605\u8BFB\u66F4\u591A\u5173\u4E8E\u547D\u540D\u7A7A\u95F4\u7684\u4FE1\u606F"),Ds=n("\u3002"),Is=s("ul",null,[s("li",null,[s("code",null,"pluginData")])],-1),Es=n("\u6B64\u5C5E\u6027\u4ECE\u4E0A\u4E00\u4E2A\u63D2\u4EF6\u4F20\u9012\uFF0C\u5982\u5728\u63D2\u4EF6\u94FE\u4E2D\u8FD0\u884C\u7684"),Bs=n("\u89E3\u6790\u56DE\u8C03"),Fs=n("\u8BBE\u7F6E\u3002"),Ws=e(`<h3 id="load-results" tabindex="-1"><a class="header-anchor" href="#load-results" aria-hidden="true">#</a> Load results</h3><p>\u8FD9\u662F\u53EF\u4EE5\u4F7F\u7528<code>onload</code>\u6DFB\u52A0\u7684\u56DE\u8C03\u6765\u8FD4\u56DE\u7684\u5BF9\u8C61\u6765\u63D0\u4F9B\u6A21\u5757\u7684\u5185\u5BB9\u3002\u5982\u679C\u60A8\u60F3\u4ECE\u56DE\u8C03\u8FD4\u56DE\u800C\u4E0D\u63D0\u4F9B\u4EFB\u4F55\u5185\u5BB9\uFF0C\u5219\u53EA\u9700\u8FD4\u56DE\u9ED8\u8BA4\u503C\uFF08\u5728JavaScript\u548C<code>OnloadResult {}</code>\u4E2D\u62D2\u7EDD\uFF09\u3002\u4EE5\u4E0B\u662F\u53EF\u4EE5\u8FD4\u56DE\u7684\u53EF\u9009\u5C5E\u6027\uFF1A</p><div><div title="js"><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">interface</span> <span class="token class-name">OnLoadResult</span> <span class="token punctuation">{</span>
  contents<span class="token operator">?</span><span class="token operator">:</span> string <span class="token operator">|</span> Uint8Array<span class="token punctuation">;</span>
  errors<span class="token operator">?</span><span class="token operator">:</span> Message<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  loader<span class="token operator">?</span><span class="token operator">:</span> Loader<span class="token punctuation">;</span>
  pluginData<span class="token operator">?</span><span class="token operator">:</span> any<span class="token punctuation">;</span>
  pluginName<span class="token operator">?</span><span class="token operator">:</span> string<span class="token punctuation">;</span>
  resolveDir<span class="token operator">?</span><span class="token operator">:</span> string<span class="token punctuation">;</span>
  warnings<span class="token operator">?</span><span class="token operator">:</span> Message<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  watchDirs<span class="token operator">?</span><span class="token operator">:</span> string<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  watchFiles<span class="token operator">?</span><span class="token operator">:</span> string<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">interface</span> <span class="token class-name">Message</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">text</span><span class="token operator">:</span> string<span class="token punctuation">;</span>
  <span class="token literal-property property">location</span><span class="token operator">:</span> Location <span class="token operator">|</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
  <span class="token literal-property property">detail</span><span class="token operator">:</span> any<span class="token punctuation">;</span> <span class="token comment">// The original error from a JavaScript plugin, if applicable</span>
<span class="token punctuation">}</span>

<span class="token keyword">interface</span> <span class="token class-name">Location</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">file</span><span class="token operator">:</span> string<span class="token punctuation">;</span>
  <span class="token literal-property property">namespace</span><span class="token operator">:</span> string<span class="token punctuation">;</span>
  <span class="token literal-property property">line</span><span class="token operator">:</span> number<span class="token punctuation">;</span> <span class="token comment">// 1-based</span>
  <span class="token literal-property property">column</span><span class="token operator">:</span> number<span class="token punctuation">;</span> <span class="token comment">// 0-based, in bytes</span>
  <span class="token literal-property property">length</span><span class="token operator">:</span> number<span class="token punctuation">;</span> <span class="token comment">// in bytes</span>
  <span class="token literal-property property">lineText</span><span class="token operator">:</span> string<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div></div><div title="go"><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">type</span> OnLoadResult <span class="token keyword">struct</span> <span class="token punctuation">{</span>
  Contents   <span class="token operator">*</span><span class="token builtin">string</span>
  Errors     <span class="token punctuation">[</span><span class="token punctuation">]</span>Message
  Loader     Loader
  PluginData <span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span>
  PluginName <span class="token builtin">string</span>
  ResolveDir <span class="token builtin">string</span>
  Warnings   <span class="token punctuation">[</span><span class="token punctuation">]</span>Message
  WatchDirs  <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span>
  WatchFiles <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span>
<span class="token punctuation">}</span>

<span class="token keyword">type</span> Message <span class="token keyword">struct</span> <span class="token punctuation">{</span>
  Text     <span class="token builtin">string</span>
  Location <span class="token operator">*</span>Location
  Detail   <span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token comment">// The original error from a Go plugin, if applicable</span>
<span class="token punctuation">}</span>

<span class="token keyword">type</span> Location <span class="token keyword">struct</span> <span class="token punctuation">{</span>
  File      <span class="token builtin">string</span>
  Namespace <span class="token builtin">string</span>
  Line      <span class="token builtin">int</span> <span class="token comment">// 1-based</span>
  Column    <span class="token builtin">int</span> <span class="token comment">// 0-based, in bytes</span>
  Length    <span class="token builtin">int</span> <span class="token comment">// in bytes</span>
  LineText  <span class="token builtin">string</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div></div></div><ul><li><code>contents</code></li></ul><p>\u5C06\u5176\u8BBE\u7F6E\u4E3A\u5B57\u7B26\u4E32\u4EE5\u6307\u5B9A\u6A21\u5757\u7684\u5185\u5BB9\u3002\u5982\u679C\u8BBE\u7F6E\u4E86\u8FD9\u4E00\u70B9\uFF0C\u5219\u4E0D\u4F1A\u4E3A\u6B64\u5DF2\u89E3\u51B3\u7684\u8DEF\u5F84\u8FD0\u884C\u66F4\u591A\u7684\u8D1F\u8F7D\u56DE\u8C03\u3002\u5982\u679C\u672A\u8BBE\u7F6E\u4E3A\u6B64\uFF0CeSBuild\u5C06\u7EE7\u7EED\u8FD0\u884C\u5F53\u524D\u767B\u8BB0\u7684\u8D1F\u8F7D\u56DE\u8C03\u3002\u7136\u540E\uFF0C\u5982\u679C\u4ECD\u672A\u8BBE\u7F6E\u5185\u5BB9\uFF0C\u5219eSBuild\u5C06\u9ED8\u8BA4\u4E3A\u5982\u679C\u5DF2\u89E3\u6790\u8DEF\u5F84\u4F4D\u4E8E<code>\u6587\u4EF6</code>\u547D\u540D\u7A7A\u95F4\u4E2D\uFF0C\u5219\u9ED8\u8BA4\u9ED8\u8BA4\u4E3A\u4ECE\u6587\u4EF6\u7CFB\u7EDF\u52A0\u8F7D\u5185\u5BB9\u3002</p><ul><li><code>loader</code></li></ul>`,6),Ms=n("\u8FD9\u544A\u8BC9esbuild\u5982\u4F55\u89E3\u91CA\u5185\u5BB9\u3002\u4F8B\u5982\uFF0C"),Cs=n("JS"),Us=n(" Loader\u5C06\u5185\u5BB9\u89E3\u91CA\u4E3AJavaScript\uFF0C"),$s=n("CSS"),Gs=n("\u52A0\u8F7D\u7A0B\u5E8F\u5C06\u5185\u5BB9\u89E3\u91CA\u4E3ACSS\u3002\u5982\u679C\u672A\u6307\u5B9A\uFF0C\u5219\u52A0\u8F7D\u5668\u9ED8\u8BA4\u4E3A"),Hs=s("code",null,"JS",-1),Ks=n("\u3002\u6709\u5173\u6240\u6709\u5185\u7F6E\u52A0\u8F7D\u5668\u7684\u5B8C\u6574\u5217\u8868\uFF0C\u8BF7\u53C2\u9605"),Vs=n("\u5185\u5BB9\u7C7B\u578B"),zs=n("\u9875\u9762\u3002"),Xs=s("ul",null,[s("li",null,[s("code",null,"resolveDir")])],-1),Ys=n("\u8FD9\u662F\u5728\u5C06\u6B64\u6A21\u5757\u4E2D\u7684\u5BFC\u5165\u8DEF\u5F84\u89E3\u6790\u4E3A\u6587\u4EF6\u7CFB\u7EDF\u4E0A\u7684\u5B9E\u9645\u8DEF\u5F84\u65F6\uFF0C\u8FD9\u662F\u8981\u4F7F\u7528\u7684\u6587\u4EF6\u7CFB\u7EDF\u76EE\u5F55\u3002\u5BF9\u4E8E"),Qs=s("code",null,"\u6587\u4EF6",-1),Zs=n("\u547D\u540D\u7A7A\u95F4\u4E2D\u7684\u6A21\u5757\uFF0C\u6B64\u503C\u9ED8\u8BA4\u4E3A\u6A21\u5757\u8DEF\u5F84\u7684\u76EE\u5F55\u90E8\u5206\u3002\u5426\u5219\u6B64\u503C\u9ED8\u8BA4\u4E3A\u7A7A\uFF0C\u9664\u975E\u63D2\u4EF6\u63D0\u4F9B\u4E00\u4E2A\u3002\u5982\u679C\u63D2\u4EF6\u672A\u63D0\u4F9B\u4E00\u4E2A\uFF0CeSbuild\u7684\u9ED8\u8BA4\u884C\u4E3A\u5C06\u65E0\u6CD5\u89E3\u6790\u6B64\u6A21\u5757\u4E2D\u7684\u4EFB\u4F55\u5BFC\u5165\u3002\u6B64\u76EE\u5F55\u5C06\u4F20\u9012\u5230\u5728\u6B64\u6A21\u5757\u4E2D\u672A\u89E3\u51B3\u7684\u5BFC\u5165\u8DEF\u5F84\u4E0A\u8FD0\u884C\u7684\u4EFB\u4F55"),na=n("\u89E3\u51B3\u8C03\u7528"),sa=n("\u3002"),aa=s("ul",null,[s("li",null,[s("code",null,"errors"),n(" && "),s("code",null,"warnings")])],-1),pa=n("\u8FD9\u4E9B\u5C5E\u6027\u4F7F\u60A8\u53EF\u4EE5\u5C06\u8DEF\u5F84\u89E3\u6790\u671F\u95F4\u751F\u6210\u7684\u4EFB\u4F55\u65E5\u5FD7\u6D88\u606F\u4F20\u9012\u7ED9 esbuild\uFF0C\u5B83\u4EEC\u5C06\u6839\u636E\u5F53\u524D\u7684"),ta=n("\u65E5\u5FD7\u7EA7\u522B"),ea=n("\u663E\u793A\u5728\u7EC8\u7AEF\u4E2D\uFF0C\u5E76\u6700\u7EC8\u51FA\u73B0\u5728\u6700\u7EC8\u7684\u6784\u5EFA\u7ED3\u679C\u4E2D\u3002\u4F8B\u5982\uFF0C\u5982\u679C\u60A8\u6B63\u5728\u8C03\u7528\u4E00\u4E2A\u5E93\u5E76\u4E14\u8BE5\u5E93\u53EF\u4EE5\u8FD4\u56DE\u9519\u8BEF\u548C/\u6216\u8B66\u544A\uFF0C\u60A8\u5C06\u9700\u8981\u4F7F\u7528\u8FD9\u4E9B\u5C5E\u6027\u8F6C\u53D1\u5B83\u4EEC\u3002"),oa=s("p",null,"\u5982\u679C\u60A8\u53EA\u6709\u4E00\u4E2A\u9519\u8BEF\u8981\u8FD4\u56DE\uFF0C\u5219\u4E0D\u5FC5\u901A\u8FC7\u9519\u8BEF\u4F20\u9012\u5B83\u3002\u4F60\u53EF\u4EE5\u7B80\u5355\u5730\u5728 JavaScript \u4E2D\u629B\u51FA\u9519\u8BEF\uFF0C\u6216\u8005\u5728 Go \u4E2D\u5C06\u9519\u8BEF\u5BF9\u8C61\u4F5C\u4E3A\u7B2C\u4E8C\u4E2A\u8FD4\u56DE\u503C\u8FD4\u56DE\u3002",-1),ca=s("ul",null,[s("li",null,[s("code",null,"watchFiles"),n(" && "),s("code",null,"watchDirs")])],-1),la=n("\u8FD9\u4E9B\u5C5E\u6027\u5141\u8BB8\u60A8\u8FD4\u56DE\u989D\u5916\u7684\u6587\u4EF6\u7CFB\u7EDF\u8DEF\u5F84\uFF0C\u4EE5\u4FBF esbuild \u7684"),ua=n("\u76D1\u89C6\u6A21\u5F0F"),ia=n("\u8FDB\u884C\u626B\u63CF\u3002\u9ED8\u8BA4\u60C5\u51B5\u4E0B\uFF0Cesbuild \u53EA\u4F1A\u626B\u63CF\u63D0\u4F9B\u7ED9 "),ra=s("code",null,"onLoad",-1),ka=n(" \u63D2\u4EF6\u7684\u8DEF\u5F84\uFF0C\u5E76\u4E14\u4EC5\u5F53\u547D\u540D\u7A7A\u95F4\u662F"),ba=s("code",null,"\u6587\u4EF6",-1),da=n("\u65F6\u3002\u5982\u679C\u60A8\u7684\u63D2\u4EF6\u9700\u8981\u5BF9\u6587\u4EF6\u7CFB\u7EDF\u4E2D\u7684\u5176\u4ED6\u66F4\u6539\u505A\u51FA\u53CD\u5E94\uFF0C\u5219\u9700\u8981\u4F7F\u7528\u8FD9\u4E9B\u5C5E\u6027\u4E4B\u4E00\u3002"),ma=e('<p>\u5982\u679C <code>watchFiles</code> \u6570\u7EC4\u4E2D\u7684\u4EFB\u4F55\u6587\u4EF6\u81EA\u4E0A\u6B21\u6784\u5EFA\u4EE5\u6765\u5DF2\u88AB\u66F4\u6539\uFF0C\u5219\u5C06\u89E6\u53D1\u91CD\u5EFA\u3002\u66F4\u6539\u68C0\u6D4B\u6709\u70B9\u590D\u6742\uFF0C\u53EF\u80FD\u4F1A\u68C0\u67E5\u6587\u4EF6\u5185\u5BB9\u548C/\u6216\u6587\u4EF6\u7684\u5143\u6570\u636E\u3002</p><p>\u5982\u679C <code>watchDirs</code> \u6570\u7EC4\u4E2D\u4EFB\u4F55\u76EE\u5F55\u7684\u76EE\u5F55\u6761\u76EE\u5217\u8868\u81EA\u4E0A\u6B21\u6784\u5EFA\u4EE5\u6765\u5DF2\u66F4\u6539\uFF0C\u4E5F\u5C06\u89E6\u53D1\u91CD\u5EFA\u3002\u8BF7\u6CE8\u610F\uFF0C\u8FD9\u4E0D\u4F1A\u68C0\u67E5\u8FD9\u4E9B\u76EE\u5F55\u4E2D\u4EFB\u4F55\u6587\u4EF6\u7684\u5185\u5BB9\uFF0C\u4E5F\u4E0D\u4F1A\u68C0\u67E5\u4EFB\u4F55\u5B50\u76EE\u5F55\u3002\u5C06\u6B64\u89C6\u4E3A\u68C0\u67E5 Unix <code>ls</code> \u547D\u4EE4\u7684\u8F93\u51FA\u3002</p><p>\u4E3A\u4E86\u5065\u58EE\u6027\uFF0C\u60A8\u5E94\u8BE5\u5305\u62EC\u5728\u63D2\u4EF6\u8BC4\u4F30\u671F\u95F4\u4F7F\u7528\u7684\u6240\u6709\u6587\u4EF6\u7CFB\u7EDF\u8DEF\u5F84\u3002\u4F8B\u5982\uFF0C\u5982\u679C\u60A8\u7684\u63D2\u4EF6\u6267\u884C\u4E0E <code>require.resolve()</code> \u7B49\u6548\u7684\u64CD\u4F5C\uFF0C\u5219\u60A8\u9700\u8981\u5305\u542B\u6240\u6709\u201C\u6B64\u6587\u4EF6\u662F\u5426\u5B58\u5728\u201D\u68C0\u67E5\u7684\u8DEF\u5F84\uFF0C\u800C\u4E0D\u4EC5\u4EC5\u662F\u6700\u7EC8\u8DEF\u5F84\u3002\u5426\u5219\uFF0C\u53EF\u80FD\u4F1A\u521B\u5EFA\u4E00\u4E2A\u65B0\u6587\u4EF6\uFF0C\u5BFC\u81F4\u6784\u5EFA\u8FC7\u65F6\uFF0C\u4F46 esbuild \u4E0D\u4F1A\u68C0\u6D4B\u5230\u5B83\uFF0C\u56E0\u4E3A\u8BE5\u8DEF\u5F84\u672A\u5217\u51FA\u3002</p><ul><li><code>pluginName</code></li></ul><p>\u6B64\u5C5E\u6027\u5141\u8BB8\u60A8\u4F7F\u7528\u6B64\u6A21\u5757\u52A0\u8F7D\u64CD\u4F5C\u7684\u53E6\u4E00\u4E2A\u540D\u79F0\u66FF\u6362\u6B64\u63D2\u4EF6\u7684\u540D\u79F0\u3002\u901A\u8FC7\u8FD9\u4E2A\u63D2\u4EF6\u4EE3\u7406\u53E6\u4E00\u4E2A\u63D2\u4EF6\u5F88\u6709\u7528\u3002\u4F8B\u5982\uFF0C\u5B83\u5141\u8BB8\u60A8\u5C06\u5355\u4E2A\u63D2\u4EF6\u8F6C\u53D1\u5230\u5305\u542B\u591A\u4E2A\u63D2\u4EF6\u7684\u5B50\u8FDB\u7A0B\u3002\u60A8\u53EF\u80FD\u4E0D\u9700\u8981\u4F7F\u7528\u5B83\u3002</p><ul><li><code>pluginData</code></li></ul><p>\u6B64\u5C5E\u6027\u5C06\u4F20\u9012\u7ED9\u5728\u63D2\u4EF6\u94FE\u4E2D\u8FD0\u884C\u7684\u4E0B\u4E00\u4E2A\u63D2\u4EF6\u3002\u5982\u679C\u60A8\u4ECE <code>onLoad</code> \u63D2\u4EF6\u8FD4\u56DE\u5B83\uFF0C\u5B83\u5C06\u88AB\u4F20\u9012\u7ED9\u8BE5\u6587\u4EF6\u4E2D\u4EFB\u4F55\u5BFC\u5165\u7684 <code>onResolve</code> \u63D2\u4EF6\uFF0C\u5982\u679C\u60A8\u4ECE <code>onResolve</code> \u63D2\u4EF6\u8FD4\u56DE\u5B83\uFF0C\u5219\u5728\u52A0\u8F7D\u6587\u4EF6\u65F6\u5C06\u4EFB\u610F\u4E00\u4E2A\u4F20\u9012\u7ED9 <code>onLoad</code> \u63D2\u4EF6\uFF08\u8FD9\u662F\u4EFB\u610F\u7684\uFF0C\u56E0\u4E3A\u5173\u7CFB\u662F\u591A\u5BF9\u4E00\u7684\uFF09\u3002\u8FD9\u5BF9\u4E8E\u5728\u4E0D\u540C\u63D2\u4EF6\u4E4B\u95F4\u4F20\u9012\u6570\u636E\u800C\u4E0D\u5FC5\u76F4\u63A5\u534F\u8C03\u5F88\u6709\u7528\u3002</p><h3 id="caching-your-plugin" tabindex="-1"><a class="header-anchor" href="#caching-your-plugin" aria-hidden="true">#</a> Caching your plugin</h3><p>\u7531\u4E8E esbuild \u901F\u5EA6\u5982\u6B64\u4E4B\u5FEB\uFF0C\u901A\u5E38\u60C5\u51B5\u4E0B\u63D2\u4EF6\u8BC4\u4F30\u662F\u4F7F\u7528 esbuild \u6784\u5EFA\u65F6\u7684\u4E3B\u8981\u74F6\u9888\u3002\u63D2\u4EF6\u8BC4\u4F30\u7684\u7F13\u5B58\u7531\u6BCF\u4E2A\u63D2\u4EF6\u51B3\u5B9A\uFF0C\u800C\u4E0D\u662F esbuild \u672C\u8EAB\u7684\u4E00\u90E8\u5206\uFF0C\u56E0\u4E3A\u7F13\u5B58\u5931\u6548\u662F\u7279\u5B9A\u4E8E\u63D2\u4EF6\u7684\u3002\u5982\u679C\u60A8\u6B63\u5728\u7F16\u5199\u4E00\u4E2A\u9700\u8981\u7F13\u5B58\u624D\u80FD\u5FEB\u901F\u8FD0\u884C\u7684\u6162\u901F\u63D2\u4EF6\uFF0C\u5219\u5FC5\u987B\u81EA\u5DF1\u7F16\u5199\u7F13\u5B58\u903B\u8F91\u3002</p><p>\u7F13\u5B58\u672C\u8D28\u4E0A\u662F\u4E00\u4E2A\u6620\u5C04\uFF0C\u5B83\u8BB0\u4F4F\u4EE3\u8868\u60A8\u7684\u63D2\u4EF6\u7684\u8F6C\u6362\u51FD\u6570\u3002\u6620\u5C04\u7684\u952E\u901A\u5E38\u5305\u542B\u8F6C\u6362\u51FD\u6570\u7684\u8F93\u5165\uFF0C\u6620\u5C04\u7684\u503C\u901A\u5E38\u5305\u542B\u8F6C\u6362\u51FD\u6570\u7684\u8F93\u51FA\u3002\u6B64\u5916\uFF0C\u5730\u56FE\u901A\u5E38\u5177\u6709\u67D0\u79CD\u5F62\u5F0F\u7684\u6700\u8FD1\u6700\u5C11\u4F7F\u7528\u7684\u7F13\u5B58\u9A71\u9010\u7B56\u7565\uFF0C\u4EE5\u907F\u514D\u968F\u7740\u65F6\u95F4\u7684\u63A8\u79FB\u5C3A\u5BF8\u4E0D\u65AD\u589E\u5927\u3002</p>',10),ga=n("\u7F13\u5B58\u53EF\u4EE5\u5B58\u50A8\u5728\u5185\u5B58\u4E2D\uFF08\u6709\u5229\u4E8E\u4E0E esbuild \u7684"),ha=n("\u589E\u91CF\u6784\u5EFA API"),ya=n(" \u4E00\u8D77\u4F7F\u7528\uFF09\u3001\u78C1\u76D8\u4E0A\uFF08\u6709\u5229\u4E8E\u8DE8\u5355\u72EC\u7684\u6784\u5EFA\u811A\u672C\u8C03\u7528\u8FDB\u884C\u7F13\u5B58\uFF09\uFF0C\u751A\u81F3\u53EF\u4EE5\u5B58\u50A8\u5728\u670D\u52A1\u5668\u4E0A\uFF08\u6709\u5229\u4E8E\u53EF\u4EE5\u5728\u4E0D\u540C\u5F00\u53D1\u4EBA\u5458\u4E4B\u95F4\u5171\u4EAB\u7684\u975E\u5E38\u6162\u7684\u8F6C\u6362\uFF09\u673A\uFF09\u3002\u7F13\u5B58\u7684\u5B58\u50A8\u4F4D\u7F6E\u56E0\u60C5\u51B5\u800C\u5F02\uFF0C\u53D6\u51B3\u4E8E\u60A8\u7684\u63D2\u4EF6\u3002"),_a=n("\u8FD9\u662F\u4E00\u4E2A\u7B80\u5355\u7684\u7F13\u5B58\u793A\u4F8B\u3002\u5047\u8BBE\u6211\u4EEC\u8981\u7F13\u5B58\u51FD\u6570 "),va=s("code",null,"slowTransform()",-1),fa=n("\uFF0C\u8BE5\u51FD\u6570\u5C06 "),wa=s("code",null,"*.example",-1),qa=n(" \u683C\u5F0F\u7684\u6587\u4EF6\u5185\u5BB9\u4F5C\u4E3A\u8F93\u5165\u5E76\u5C06\u5176\u8F6C\u6362\u4E3A JavaScript\u3002\u5F53\u4E0E esbuild \u7684"),xa=n("\u589E\u91CF\u6784\u5EFA API"),Ra=n(" \u4E00\u8D77\u4F7F\u7528\u65F6\uFF0C\u907F\u514D\u5BF9\u6B64\u51FD\u6570\u8FDB\u884C\u5197\u4F59\u8C03\u7528\u7684\u5185\u5B58\u7F13\u5B58\u53EF\u80FD\u5982\u4E0B\u6240\u793A\uFF1A"),Pa=e(`<div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">let</span> examplePlugin <span class="token operator">=</span> <span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token string">&#39;example&#39;</span><span class="token punctuation">,</span>
  <span class="token function">setup</span><span class="token punctuation">(</span>build<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> fs <span class="token operator">=</span> <span class="token keyword">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">let</span> cache <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span>

    build<span class="token punctuation">.</span><span class="token function">onLoad</span><span class="token punctuation">(</span><span class="token punctuation">{</span> filter<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.example$</span><span class="token regex-delimiter">/</span></span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span>args<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">let</span> input <span class="token operator">=</span> <span class="token keyword">await</span> fs<span class="token punctuation">.</span>promises<span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span>args<span class="token punctuation">.</span>path<span class="token punctuation">,</span> <span class="token string">&#39;utf8&#39;</span><span class="token punctuation">)</span>
      <span class="token keyword">let</span> key <span class="token operator">=</span> args<span class="token punctuation">.</span>path
      <span class="token keyword">let</span> value <span class="token operator">=</span> cache<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span>

      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>value <span class="token operator">||</span> value<span class="token punctuation">.</span>input <span class="token operator">!==</span> input<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> contents <span class="token operator">=</span> <span class="token function">slowTransform</span><span class="token punctuation">(</span>input<span class="token punctuation">)</span>
        value <span class="token operator">=</span> <span class="token punctuation">{</span> input<span class="token punctuation">,</span> output<span class="token operator">:</span> <span class="token punctuation">{</span> contents <span class="token punctuation">}</span> <span class="token punctuation">}</span>
        cache<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> value<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>

      <span class="token keyword">return</span> value<span class="token punctuation">.</span>output
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><p>\u5173\u4E8E\u4E0A\u8FF0\u7F13\u5B58\u4EE3\u7801\u7684\u4E00\u4E9B\u91CD\u8981\u8B66\u544A\uFF1A</p><ul><li>\u4E0A\u9762\u7684\u4EE3\u7801\u4E2D\u6CA1\u6709\u7F13\u5B58\u9A71\u9010\u7B56\u7565\u3002\u5982\u679C\u5C06\u8D8A\u6765\u8D8A\u591A\u7684\u952E\u6DFB\u52A0\u5230\u7F13\u5B58\u6620\u5C04\u4E2D\uFF0C\u5185\u5B58\u4F7F\u7528\u91CF\u5C06\u7EE7\u7EED\u589E\u957F\u3002</li></ul><p>\u4E3A\u4E86\u5728\u4E00\u5B9A\u7A0B\u5EA6\u4E0A\u514B\u670D\u8FD9\u79CD\u9650\u5236\uFF0C<code>\u8F93\u5165</code>\u503C\u5B58\u50A8\u5728\u7F13\u5B58<code>\u503C</code>\u4E2D\u800C\u4E0D\u662F\u7F13\u5B58<code>\u952E</code>\u4E2D\u3002\u8FD9\u610F\u5473\u7740\u66F4\u6539\u6587\u4EF6\u7684\u5185\u5BB9\u4E0D\u4F1A\u6CC4\u6F0F\u5185\u5B58\uFF0C\u56E0\u4E3A\u5BC6\u94A5\u4EC5\u5305\u542B\u6587\u4EF6\u8DEF\u5F84\uFF0C\u800C\u4E0D\u5305\u542B\u6587\u4EF6\u5185\u5BB9\u3002\u66F4\u6539\u6587\u4EF6\u5185\u5BB9\u53EA\u4F1A\u8986\u76D6\u5148\u524D\u7684\u7F13\u5B58\u6761\u76EE\u3002\u5BF9\u4E8E\u6709\u4EBA\u5728\u589E\u91CF\u91CD\u5EFA\u4E4B\u95F4\u53CD\u590D\u7F16\u8F91\u540C\u4E00\u4E2A\u6587\u4EF6\u5E76\u4E14\u53EA\u662F\u5076\u5C14\u6DFB\u52A0\u6216\u91CD\u547D\u540D\u6587\u4EF6\u7684\u5E38\u89C1\u7528\u6CD5\uFF0C\u8FD9\u53EF\u80FD\u5F88\u597D\u3002</p><p>\u4F46\u662F\u5982\u679C\u6BCF\u4E2A\u6784\u5EFA\u5305\u542B\u65B0\u7684\u552F\u4E00\u8DEF\u5F84\u540D\uFF08\u4F8B\u5982\uFF0C\u53EF\u80FD\u5305\u542B\u5F53\u524D\u65F6\u95F4\u7684\u81EA\u52A8\u751F\u6210\u7684\u4E34\u65F6\u6587\u4EF6\u8DEF\u5F84\uFF09\uFF0C\u7F13\u5B58\u7684\u5927\u5C0F\u5C06\u7EE7\u7EED\u589E\u957F\u3002\u66F4\u9AD8\u7EA7\u7684\u7248\u672C\u53EF\u80FD\u4F1A\u4F7F\u7528\u6700\u8FD1\u6700\u5C11\u4F7F\u7528\u7684\u9A71\u9010\u7B56\u7565\u3002</p><ul><li>\u53EA\u6709\u5F53<code>slowTransform()</code> \u662F\u4E00\u4E2A<code>\u7EAF\u51FD\u6570</code>\uFF08\u610F\u5473\u7740\u51FD\u6570\u7684\u8F93\u51FA\u4EC5\u53D6\u51B3\u4E8E\u51FD\u6570\u7684\u8F93\u5165\uFF09\u5E76\u4E14\u51FD\u6570\u7684\u6240\u6709\u8F93\u5165\u90FD\u4EE5\u67D0\u79CD\u65B9\u5F0F\u5728\u5BF9\u7F13\u5B58\u6620\u5C04\u7684\u67E5\u627E\u4E2D\u88AB\u6355\u83B7\u65F6\uFF0C\u7F13\u5B58\u5931\u6548\u624D\u6709\u6548\u3002\u4F8B\u5982\uFF0C\u5982\u679C\u8F6C\u6362\u51FD\u6570\u81EA\u52A8\u8BFB\u53D6\u4E00\u4E9B\u5176\u4ED6\u6587\u4EF6\u7684\u5185\u5BB9\u5E76\u4E14\u8F93\u51FA\u4E5F\u53D6\u51B3\u4E8E\u8FD9\u4E9B\u6587\u4EF6\u7684\u5185\u5BB9\uFF0C\u90A3\u4E48\u5F53\u8FD9\u4E9B\u6587\u4EF6\u88AB\u66F4\u6539\u65F6\uFF0C\u7F13\u5B58\u5C06\u65E0\u6CD5\u5931\u6548\uFF0C\u56E0\u4E3A\u5B83\u4EEC\u4E0D\u5305\u542B\u5728\u7F13\u5B58\u952E\u4E2D\u3002</li></ul><p>\u8FD9\u90E8\u5206\u5F88\u5BB9\u6613\u641E\u7838\uFF0C\u6240\u4EE5\u503C\u5F97\u901A\u8FC7\u4E00\u4E2A\u5177\u4F53\u7684\u4F8B\u5B50\u3002\u8003\u8651\u4E00\u4E2A\u5B9E\u73B0 compile-to-CSS \u8BED\u8A00\u7684\u63D2\u4EF6\u3002\u5982\u679C\u8BE5\u63D2\u4EF6\u901A\u8FC7\u89E3\u6790\u5BFC\u5165\u7684\u6587\u4EF6\u6765\u5B9E\u73B0<code>@import</code> \u89C4\u5219\u672C\u8EAB\uFF0C\u5E76\u5C06\u5B83\u4EEC\u6346\u7ED1\u6216\u4F7F\u4EFB\u4F55\u5BFC\u51FA\u7684\u53D8\u91CF\u58F0\u660E\u53EF\u7528\u4E8E\u5BFC\u5165\u4EE3\u7801\uFF0C\u90A3\u4E48\u5982\u679C\u5B83\u53EA\u68C0\u67E5\u5BFC\u5165\u6587\u4EF6\u7684\u5185\u5BB9\u6CA1\u6709\u56E0\u4E3A\u66F4\u6539\u800C\u66F4\u6539\uFF0C\u5219\u60A8\u7684\u63D2\u4EF6\u5C06\u4E0D\u6B63\u786E\u5BFC\u5165\u7684\u6587\u4EF6\u4E5F\u53EF\u80FD\u4F7F\u7F13\u5B58\u65E0\u6548\u3002</p>`,7),Oa=n("\u60A8\u53EF\u80FD\u8BA4\u4E3A\u60A8\u53EF\u4EE5\u5C06\u5BFC\u5165\u6587\u4EF6\u7684\u5185\u5BB9\u6DFB\u52A0\u5230\u7F13\u5B58\u952E\u6765\u89E3\u51B3\u6B64\u95EE\u9898\u3002\u7136\u800C\uFF0C\u5373\u4F7F\u8FD9\u6837\u4E5F\u53EF\u80FD\u662F\u4E0D\u6B63\u786E\u7684\u3002\u4F8B\u5982\uFF0C\u8FD9\u4E2A\u63D2\u4EF6\u4F7F\u7528 "),ja={href:"https://nodejs.org/api/modules.html#modules_require_resolve_request_options",target:"_blank",rel:"noopener noreferrer"},La=n("require.resolve()"),Sa=n(" \u5C06\u5BFC\u5165\u8DEF\u5F84\u89E3\u6790\u4E3A\u7EDD\u5BF9\u6587\u4EF6\u8DEF\u5F84\u3002\u8FD9\u662F\u4E00\u79CD\u5E38\u89C1\u7684\u65B9\u6CD5\uFF0C\u56E0\u4E3A\u5B83\u4F7F\u7528\u8282\u70B9\u7684\u5185\u7F6E\u8DEF\u5F84\u89E3\u6790\uFF0C\u53EF\u4EE5\u89E3\u6790\u4E3A\u5305\u5185\u7684\u8DEF\u5F84\u3002\u6B64\u51FD\u6570\u901A\u5E38\u5728\u8FD4\u56DE\u89E3\u6790\u8DEF\u5F84\u4E4B\u524D\u5BF9\u4E0D\u540C\u4F4D\u7F6E\u7684\u6587\u4EF6\u8FDB\u884C\u591A\u6B21\u68C0\u67E5\u3002\u4F8B\u5982\uFF0C\u4ECE\u6587\u4EF6 "),Aa=s("code",null,"src/entry.css",-1),Ja=n(" \u5BFC\u5165\u8DEF\u5F84 "),Ta=s("code",null,"pkg/file",-1),Na=n(" \u53EF\u80FD\u4F1A\u68C0\u67E5\u4EE5\u4E0B\u4F4D\u7F6E\uFF08\u662F\u7684\uFF0C\u8282\u70B9\u7684\u5305\u89E3\u6790\u7B97\u6CD5\u975E\u5E38\u4F4E\u6548\uFF09\uFF1A"),Da=e(`<div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>src/node_modules/pkg/file
src/node_modules/pkg/file.css
src/node_modules/pkg/file/package.json
src/node_modules/pkg/file/main
src/node_modules/pkg/file/main.css
src/node_modules/pkg/file/main/index.css
src/node_modules/pkg/file/index.css
node_modules/pkg/file
node_modules/pkg/file.css
node_modules/pkg/file/package.json
node_modules/pkg/file/main
node_modules/pkg/file/main.css
node_modules/pkg/file/main/index.css
node_modules/pkg/file/index.css
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p>\u5047\u8BBE import <code>pkg/file</code> \u6700\u7EC8\u89E3\u6790\u4E3A\u7EDD\u5BF9\u8DEF\u5F84 <code>node_modules/pkg/file/index.css</code>\u3002\u5373\u4F7F\u60A8\u7F13\u5B58\u4E86\u5BFC\u5165\u6587\u4EF6\u548C\u5BFC\u5165\u6587\u4EF6\u7684\u5185\u5BB9\u5E76\u5728\u91CD\u7528\u7F13\u5B58\u6761\u76EE\u4E4B\u524D\u9A8C\u8BC1\u8FD9\u4E24\u4E2A\u6587\u4EF6\u7684\u5185\u5BB9\u4ECD\u7136\u76F8\u540C\uFF0C\u5982\u679C\u5176\u4ED6\u6587\u4EF6\u4E2D\u7684\u4E00\u4E2A <code>require.resolve()</code>\uFF0C\u7F13\u5B58\u6761\u76EE\u4ECD\u7136\u53EF\u80FD\u662F\u9648\u65E7\u7684 \u68C0\u67E5\u81EA\u6DFB\u52A0\u7F13\u5B58\u6761\u76EE\u4EE5\u6765\u5DF2\u521B\u5EFA\u6216\u5220\u9664\u3002\u6B63\u786E\u7F13\u5B58\u5B83\u672C\u8D28\u4E0A\u6D89\u53CA\u59CB\u7EC8\u91CD\u65B0\u8FD0\u884C\u6240\u6709\u6B64\u7C7B\u8DEF\u5F84\u89E3\u6790\uFF0C\u5373\u4F7F\u6CA1\u6709\u66F4\u6539\u4EFB\u4F55\u8F93\u5165\u6587\u4EF6\u5E76\u9A8C\u8BC1\u4E5F\u6CA1\u6709\u66F4\u6539\u4EFB\u4F55\u8DEF\u5F84\u89E3\u6790\u3002</p><ul><li>\u8FD9\u4E9B\u7F13\u5B58\u952E\u4EC5\u9002\u7528\u4E8E\u5185\u5B58\u7F13\u5B58\u3002\u4F7F\u7528\u76F8\u540C\u7684\u7F13\u5B58\u952E\u5B9E\u73B0\u6587\u4EF6\u7CFB\u7EDF\u7F13\u5B58\u662F\u4E0D\u6B63\u786E\u7684\u3002\u867D\u7136\u5185\u5B58\u7F13\u5B58\u4FDD\u8BC1\u59CB\u7EC8\u4E3A\u6BCF\u4E2A\u6784\u5EFA\u8FD0\u884C\u76F8\u540C\u7684\u4EE3\u7801\uFF0C\u56E0\u4E3A\u4EE3\u7801\u4E5F\u5B58\u50A8\u5728\u5185\u5B58\u4E2D\uFF0C\u4F46\u6587\u4EF6\u7CFB\u7EDF\u7F13\u5B58\u53EF\u80FD\u4F1A\u88AB\u4E24\u4E2A\u5355\u72EC\u7684\u6784\u5EFA\u8BBF\u95EE\uFF0C\u6BCF\u4E2A\u6784\u5EFA\u90FD\u5305\u542B\u4E0D\u540C\u7684\u4EE3\u7801\u3002\u7279\u522B\u662F\u5728\u4E24\u6B21\u6784\u5EFA\u4E4B\u95F4\uFF0C<code>slowTransform()</code> \u51FD\u6570\u7684\u4EE3\u7801\u53EF\u80FD\u5DF2\u66F4\u6539\u3002</li></ul>`,3),Ia=n("\u8FD9\u53EF\u80FD\u53D1\u751F\u5728\u5404\u79CD\u60C5\u51B5\u4E0B\u3002\u5305\u542B\u51FD\u6570 "),Ea=s("code",null,"slowTransform()",-1),Ba=n(" \u7684\u5305\u53EF\u80FD\u5DF2\u7ECF\u66F4\u65B0\uFF0C\u6216\u8005\u5B83\u7684\u4E00\u4E2A\u4F20\u9012\u4F9D\u8D56\u9879\u53EF\u80FD\u5DF2\u7ECF\u66F4\u65B0\uFF0C\u5373\u4F7F\u4F60\u7531\u4E8E npm \u5904\u7406 semver \u7684\u65B9\u5F0F\u56FA\u5B9A\u4E86\u5305\u7684\u7248\u672C\uFF0C\u6216\u8005\u6709\u4EBA\u53EF\u80FD\u5DF2\u7ECF"),Fa={href:"https://www.npmjs.com/package/patch-package",target:"_blank",rel:"noopener noreferrer"},Wa=n("\u6539\u53D8\u4E86\u6587\u4EF6\u7CFB\u7EDF\u4E0A\u7684\u5305\u5185\u5BB9"),Ma=n("\u4E0E\u6B64\u540C\u65F6\uFF0C\u6216\u8005\u8F6C\u6362\u51FD\u6570\u53EF\u80FD\u6B63\u5728\u8C03\u7528\u8282\u70B9 API\uFF0C\u5E76\u4E14\u4E0D\u540C\u7684\u6784\u5EFA\u53EF\u80FD\u4F1A\u5728\u4E0D\u540C\u7684\u8282\u70B9\u7248\u672C\u4E0A\u8FD0\u884C\u3002"),Ca=n("\u5982\u679C\u60A8\u60F3\u5C06\u7F13\u5B58\u5B58\u50A8\u5728\u6587\u4EF6\u7CFB\u7EDF\u4E0A\uFF0C\u60A8\u5E94\u8BE5\u901A\u8FC7\u5728\u7F13\u5B58\u952E\u4E2D\u5B58\u50A8\u8F6C\u6362\u51FD\u6570\u7684\u4EE3\u7801\u7684\u4E00\u4E9B\u8868\u793A\u6765"),Ua={href:"https://nodejs.org/api/crypto.html#crypto_class_hash",target:"_blank",rel:"noopener noreferrer"},$a=n("\u9632\u6B62\u5BF9\u8F6C\u6362\u51FD\u6570\u7684\u4EE3\u7801\u8FDB\u884C\u66F4\u6539"),Ga=n("\u3002\u8FD9\u901A\u5E38\u662F\u67D0\u79CD\u5F62\u5F0F\u7684\u6563\u5217\uFF0C\u5176\u4E2D\u5305\u542B\u6240\u6709\u76F8\u5173\u5305\u4E2D\u6240\u6709\u76F8\u5173\u6587\u4EF6\u7684\u5185\u5BB9\u4EE5\u53CA\u6F5C\u5728\u7684\u5176\u4ED6\u8BE6\u7EC6\u4FE1\u606F\uFF0C\u4F8B\u5982\u60A8\u5F53\u524D\u6B63\u5728\u8FD0\u884C\u7684\u8282\u70B9\u7248\u672C\u3002\u4F7F\u6240\u6709\u8FD9\u4E9B\u90FD\u6B63\u786E\u662F\u975E\u5E38\u91CD\u8981\u7684\u3002"),Ha=s("h2",{id:"start-callbacks",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#start-callbacks","aria-hidden":"true"},"#"),n(" Start callbacks")],-1),Ka=n("\u6CE8\u518C\u5F00\u59CB\u56DE\u8C03\u4EE5\u5728\u65B0\u6784\u5EFA\u5F00\u59CB\u65F6\u6536\u5230\u901A\u77E5\u3002\u8FD9\u4F1A\u89E6\u53D1\u6240\u6709\u6784\u5EFA\uFF0C\u800C\u4E0D\u4EC5\u4EC5\u662F\u521D\u59CB\u6784\u5EFA\uFF0C\u56E0\u6B64\u5B83\u5BF9\u4E8E"),Va=n("\u589E\u91CF\u6784\u5EFA"),za=n("\u3001"),Xa=n("\u76D1\u89C6\u6A21\u5F0F"),Ya=n("\u548C"),Qa=n("\u670D\u52A1 API"),Za=n(" \u5C24\u5176\u6709\u7528\u3002\u4EE5\u4E0B\u662F\u6DFB\u52A0\u5F00\u59CB\u56DE\u8C03\u7684\u65B9\u6CD5\uFF1A"),np=e(`<div><div title="js"><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> examplePlugin <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;example&#39;</span><span class="token punctuation">,</span>
  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token parameter">build</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    build<span class="token punctuation">.</span><span class="token function">onStart</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;build started&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div></div><div title="go"><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token string">&quot;fmt&quot;</span>
<span class="token keyword">import</span> <span class="token string">&quot;github.com/evanw/esbuild/pkg/api&quot;</span>
<span class="token keyword">import</span> <span class="token string">&quot;os&quot;</span>

<span class="token keyword">var</span> examplePlugin <span class="token operator">=</span> api<span class="token punctuation">.</span>Plugin<span class="token punctuation">{</span>
  Name<span class="token punctuation">:</span> <span class="token string">&quot;example&quot;</span><span class="token punctuation">,</span>
  Setup<span class="token punctuation">:</span> <span class="token keyword">func</span><span class="token punctuation">(</span>build api<span class="token punctuation">.</span>PluginBuild<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    build<span class="token punctuation">.</span><span class="token function">OnStart</span><span class="token punctuation">(</span><span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>api<span class="token punctuation">.</span>OnStartResult<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      fmt<span class="token punctuation">.</span><span class="token function">Fprintf</span><span class="token punctuation">(</span>os<span class="token punctuation">.</span>Stderr<span class="token punctuation">,</span> <span class="token string">&quot;build started\\n&quot;</span><span class="token punctuation">)</span>
      <span class="token keyword">return</span> api<span class="token punctuation">.</span>OnStartResult<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token boolean">nil</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div></div></div><p>\u60A8\u4E0D\u5E94\u8BE5\u4F7F\u7528 start \u56DE\u8C03\u8FDB\u884C\u521D\u59CB\u5316\uFF0C\u56E0\u4E3A\u5B83\u53EF\u4EE5\u591A\u6B21\u8FD0\u884C\u3002\u5982\u679C\u4F60\u60F3\u521D\u59CB\u5316\u4E00\u4E9B\u4E1C\u897F\uFF0C\u53EA\u9700\u5C06\u4F60\u7684\u63D2\u4EF6\u521D\u59CB\u5316\u4EE3\u7801\u76F4\u63A5\u653E\u5728 <code>setup</code> \u51FD\u6570\u4E2D\u3002</p>`,2),sp=n("\u5F00\u59CB\u56DE\u8C03\u53EF\u4EE5\u662F"),ap=s("code",null,"\u5F02\u6B65",-1),pp=n("\u7684\u5E76\u4E14\u53EF\u4EE5\u8FD4\u56DE\u4E00\u4E2A\u627F\u8BFA\u3002\u4F46\u662F\uFF0C\u6784\u5EFA\u5728\u5F00\u59CB\u4E4B\u524D\u4E0D\u4F1A\u7B49\u5F85 promise \u5F97\u5230\u89E3\u51B3\uFF0C\u56E0\u6B64\u6162\u542F\u52A8\u56DE\u8C03\u4E0D\u4E00\u5B9A\u4F1A\u51CF\u6162\u6784\u5EFA\u901F\u5EA6\u3002\u6240\u6709\u542F\u52A8\u56DE\u8C03\u4E5F\u540C\u65F6\u8FD0\u884C\uFF0C\u800C\u4E0D\u662F\u8FDE\u7EED\u8FD0\u884C\u3002\u8FD4\u56DE\u7684 Promise \u7EAF\u7CB9\u7528\u4E8E\u9519\u8BEF\u62A5\u544A\uFF0C\u5F53 start \u56DE\u8C03\u9700\u8981\u6267\u884C\u53EF\u80FD\u5931\u8D25\u6216\u53EF\u80FD\u4EA7\u751F\u8B66\u544A\u7684\u5F02\u6B65\u64CD\u4F5C\u65F6\u5F88\u91CD\u8981\u3002\u5982\u679C\u60A8\u7684\u63D2\u4EF6\u9700\u8981\u5728\u8FD0\u884C\u4EFB\u4F55\u89E3\u6790\u6216\u52A0\u8F7D\u56DE\u8C03\u4E4B\u524D\u7B49\u5F85\u542F\u52A8\u56DE\u8C03\u4E2D\u7684\u5F02\u6B65\u4EFB\u52A1\u5B8C\u6210\uFF0C\u60A8\u5C06\u9700\u8981\u5728\u8BE5\u5F02\u6B65\u4EFB\u52A1\u4E0A\u963B\u6B62"),tp=n("\u89E3\u6790"),ep=n("\u6216"),op=n("\u52A0\u8F7D"),cp=n("\u56DE\u8C03\u3002"),lp=n("\u8BF7\u6CE8\u610F\uFF0C\u5F00\u59CB\u56DE\u8C03\u4E0D\u80FD\u6539\u53D8\u6784\u5EFA\u9009\u9879\u3002\u521D\u59CB\u6784\u5EFA\u9009\u9879\u53EA\u80FD\u5728 "),up=s("code",null,"setup",-1),ip=n(" \u51FD\u6570\u4E2D\u4FEE\u6539\uFF0C\u5E76\u4E14\u5728 "),rp=s("code",null,"setup",-1),kp=n(" \u8FD4\u56DE\u540E\u4F7F\u7528\u3002\u7B2C\u4E00\u4E2A\u6784\u5EFA\u4E4B\u540E\u7684\u6240\u6709\u6784\u5EFA\u90FD\u91CD\u7528\u76F8\u540C\u7684"),bp=n("\u521D\u59CB\u9009\u9879"),dp=n("\uFF0C\u56E0\u6B64\u6C38\u8FDC\u4E0D\u4F1A\u91CD\u65B0\u4F7F\u7528\u521D\u59CB\u9009\u9879\uFF0C\u5E76\u4E14\u5FFD\u7565\u5728 start \u56DE\u8C03\u4E2D\u5B8C\u6210\u7684\u5BF9 "),mp=s("code",null,"build.initialOptions",-1),gp=n(" \u7684\u4FEE\u6539\u3002"),hp=s("h2",{id:"end-callbacks",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#end-callbacks","aria-hidden":"true"},"#"),n(" End callbacks")],-1),yp=n("\u6CE8\u518C\u7ED3\u675F\u56DE\u8C03\u4EE5\u5728\u65B0\u6784\u5EFA\u7ED3\u675F\u65F6\u6536\u5230\u901A\u77E5\u3002\u8FD9\u4F1A\u89E6\u53D1\u6240\u6709\u6784\u5EFA\uFF0C\u800C\u4E0D\u4EC5\u4EC5\u662F\u521D\u59CB\u6784\u5EFA\uFF0C\u56E0\u6B64\u5B83\u5BF9\u4E8E"),_p=n("\u589E\u91CF\u6784\u5EFA"),vp=n("\u3001"),fp=n("\u76D1\u89C6\u6A21\u5F0F"),wp=n("\u548C"),qp=n("\u670D\u52A1 API"),xp=n(" \u5C24\u5176\u6709\u7528\u3002\u6DFB\u52A0\u7ED3\u675F\u56DE\u8C03\u7684\u65B9\u6CD5\u5982\u4E0B\uFF1A"),Rp=e(`<div><div title="js"><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> examplePlugin <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;example&#39;</span><span class="token punctuation">,</span>
  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token parameter">build</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    build<span class="token punctuation">.</span><span class="token function">onEnd</span><span class="token punctuation">(</span><span class="token parameter">result</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">build ended with </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>result<span class="token punctuation">.</span>errors<span class="token punctuation">.</span>length<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> errors</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div></div><div title="go"><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token string">&quot;fmt&quot;</span>
<span class="token keyword">import</span> <span class="token string">&quot;github.com/evanw/esbuild/pkg/api&quot;</span>
<span class="token keyword">import</span> <span class="token string">&quot;os&quot;</span>

<span class="token keyword">var</span> examplePlugin <span class="token operator">=</span> api<span class="token punctuation">.</span>Plugin<span class="token punctuation">{</span>
  Name<span class="token punctuation">:</span> <span class="token string">&quot;example&quot;</span><span class="token punctuation">,</span>
  Setup<span class="token punctuation">:</span> <span class="token keyword">func</span><span class="token punctuation">(</span>build api<span class="token punctuation">.</span>PluginBuild<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    build<span class="token punctuation">.</span><span class="token function">OnEnd</span><span class="token punctuation">(</span><span class="token keyword">func</span><span class="token punctuation">(</span>result <span class="token operator">*</span>api<span class="token punctuation">.</span>BuildResult<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      fmt<span class="token punctuation">.</span><span class="token function">Fprintf</span><span class="token punctuation">(</span>os<span class="token punctuation">.</span>Stderr<span class="token punctuation">,</span> <span class="token string">&quot;build ended with %d errors\\n&quot;</span><span class="token punctuation">,</span> <span class="token function">len</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>Errors<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div></div></div>`,1),Pp=n("\u6240\u6709\u7ED3\u675F\u56DE\u8C03\u90FD\u662F\u4E32\u884C\u8FD0\u884C\u7684\uFF0C\u5E76\u4E14\u6BCF\u4E2A\u56DE\u8C03\u90FD\u53EF\u4EE5\u8BBF\u95EE\u6700\u7EC8\u6784\u5EFA\u7ED3\u679C\u3002\u5B83\u53EF\u4EE5\u5728\u8FD4\u56DE\u4E4B\u524D\u4FEE\u6539\u6784\u5EFA\u7ED3\u679C\uFF0C\u5E76\u4E14\u53EF\u4EE5\u901A\u8FC7\u8FD4\u56DE\u4E00\u4E2A promise \u6765\u5EF6\u8FDF\u6784\u5EFA\u7684\u7ED3\u675F\u3002\u5982\u679C\u60A8\u5E0C\u671B\u80FD\u591F\u68C0\u67E5\u6784\u5EFA\u56FE\uFF0C\u60A8\u5E94\u8BE5\u5728"),Op=n("\u521D\u59CB\u9009\u9879"),jp=n("\u4E0A\u542F\u7528"),Lp=n("\u5143\u6587\u4EF6"),Sp=n("\u8BBE\u7F6E\uFF0C\u6784\u5EFA\u56FE\u5C06\u4F5C\u4E3A\u6784\u5EFA\u7ED3\u679C\u5BF9\u8C61\u7684"),Ap=s("code",null,"\u5143\u6587\u4EF6",-1),Jp=n("\u5C5E\u6027\u8FD4\u56DE\u3002"),Tp=e(`<h2 id="accessing-build-options" tabindex="-1"><a class="header-anchor" href="#accessing-build-options" aria-hidden="true">#</a> Accessing build options</h2><p>\u63D2\u4EF6\u53EF\u4EE5\u4ECE\u8BBE\u7F6E\u65B9\u6CD5\u4E2D\u8BBF\u95EE\u521D\u59CB<code>\u6784\u5EFA</code>\u9009\u9879\u3002\u8FD9\u4F7F\u60A8\u53EF\u4EE5\u68C0\u67E5\u6784\u5EFA\u7684\u914D\u7F6E\u65B9\u5F0F\u4EE5\u53CA\u5728\u6784\u5EFA\u5F00\u59CB\u4E4B\u524D\u4FEE\u6539\u6784\u5EFA\u9009\u9879\u3002\u4E0B\u9762\u662F\u4E00\u4E2A\u4F8B\u5B50\uFF1A</p><div><div title="js"><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> examplePlugin <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;auto-node-env&#39;</span><span class="token punctuation">,</span>
  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token parameter">build</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> options <span class="token operator">=</span> build<span class="token punctuation">.</span>initialOptions
    options<span class="token punctuation">.</span>define <span class="token operator">=</span> options<span class="token punctuation">.</span>define <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
    options<span class="token punctuation">.</span>define<span class="token punctuation">[</span><span class="token string">&#39;p<wbr>rocess.env.NODE_ENV&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span>
      options<span class="token punctuation">.</span>minify <span class="token operator">?</span> <span class="token string">&#39;&quot;production&quot;&#39;</span> <span class="token operator">:</span> <span class="token string">&#39;&quot;development&quot;&#39;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div></div><div title="go"><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token string">&quot;github.com/evanw/esbuild/pkg/api&quot;</span>

<span class="token keyword">var</span> examplePlugin <span class="token operator">=</span> api<span class="token punctuation">.</span>Plugin<span class="token punctuation">{</span>
  Name<span class="token punctuation">:</span> <span class="token string">&quot;auto-node-env&quot;</span><span class="token punctuation">,</span>
  Setup<span class="token punctuation">:</span> <span class="token keyword">func</span><span class="token punctuation">(</span>build api<span class="token punctuation">.</span>PluginBuild<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    options <span class="token operator">:=</span> build<span class="token punctuation">.</span>InitialOptions
    <span class="token keyword">if</span> options<span class="token punctuation">.</span>Define <span class="token operator">==</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
      options<span class="token punctuation">.</span>Define <span class="token operator">=</span> <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">{</span><span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> options<span class="token punctuation">.</span>MinifyWhitespace <span class="token operator">&amp;&amp;</span> options<span class="token punctuation">.</span>MinifyIdentifiers <span class="token operator">&amp;&amp;</span> options<span class="token punctuation">.</span>MinifySyntax <span class="token punctuation">{</span>
      options<span class="token punctuation">.</span>Define<span class="token punctuation">[</span><span class="token string">\`p<wbr>rocess.env.NODE_ENV\`</span><span class="token punctuation">]</span> <span class="token operator">=</span> \`<span class="token string">&quot;production&quot;</span><span class="token string">\`
    } else {
      options.Define[\`</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span>NODE_ENV<span class="token string">\`] = \`</span>&quot;development&quot;\`
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div></div></div>`,3),Np=n("\u8BF7\u6CE8\u610F\uFF0C\u5728\u6784\u5EFA\u5F00\u59CB\u540E\u5BF9\u6784\u5EFA\u9009\u9879\u7684\u4FEE\u6539\u4E0D\u4F1A\u5F71\u54CD\u6784\u5EFA\u3002\u7279\u522B\u662F\uFF0C\u5982\u679C\u63D2\u4EF6\u5728\u7B2C\u4E00\u6B21\u6784\u5EFA\u5F00\u59CB\u540E\u6539\u53D8\u6784\u5EFA\u9009\u9879\u5BF9\u8C61\uFF0C"),Dp=n("\u589E\u91CF\u91CD\u5EFA"),Ip=n("\u3001"),Ep=n("\u89C2\u5BDF\u6A21\u5F0F"),Bp=n("\u548C"),Fp=n("\u670D\u52A1\u6A21\u5F0F"),Wp=n("\u4E0D\u4F1A\u66F4\u65B0\u5B83\u4EEC\u7684\u6784\u5EFA\u9009\u9879\u3002"),Mp=e(`<h2 id="example-plugins" tabindex="-1"><a class="header-anchor" href="#example-plugins" aria-hidden="true">#</a> Example plugins</h2><p>\u4E0B\u9762\u7684\u793A\u4F8B\u63D2\u4EF6\u65E8\u5728\u8BA9\u60A8\u4E86\u89E3\u53EF\u4EE5\u4F7F\u7528\u63D2\u4EF6 API \u6267\u884C\u7684\u4E0D\u540C\u7C7B\u578B\u7684\u64CD\u4F5C\u3002</p><h3 id="http-plugin" tabindex="-1"><a class="header-anchor" href="#http-plugin" aria-hidden="true">#</a> HTTP plugin</h3><p><em><strong>\u6B64\u793A\u4F8B\u6F14\u793A\uFF1A\u4F7F\u7528\u6587\u4EF6\u7CFB\u7EDF\u8DEF\u5F84\u4EE5\u5916\u7684\u8DEF\u5F84\u683C\u5F0F\u3001\u7279\u5B9A\u4E8E\u547D\u540D\u7A7A\u95F4\u7684\u8DEF\u5F84\u89E3\u6790\u3001\u540C\u65F6\u4F7F\u7528\u89E3\u6790\u548C\u52A0\u8F7D\u56DE\u8C03\u3002</strong></em></p><p>\u6B64\u63D2\u4EF6\u5141\u8BB8\u60A8\u5C06 HTTP URL \u5BFC\u5165 JavaScript \u4EE3\u7801\u3002\u4EE3\u7801\u5C06\u5728\u6784\u5EFA\u65F6\u81EA\u52A8\u4E0B\u8F7D\u3002\u5B83\u542F\u7528\u4EE5\u4E0B\u5DE5\u4F5C\u6D41\u7A0B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> zip <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;https://unpkg.com/lodash-es@4.17.15/lodash.js&#39;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">zip</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>\u8FD9\u53EF\u4EE5\u901A\u8FC7\u4EE5\u4E0B\u63D2\u4EF6\u6765\u5B8C\u6210\u3002\u8BF7\u6CE8\u610F\uFF0C\u5BF9\u4E8E\u5B9E\u9645\u4F7F\u7528\uFF0C\u4E0B\u8F7D\u5E94\u8BE5\u88AB\u7F13\u5B58\uFF0C\u4F46\u4E3A\u4E86\u7B80\u6D01\u8D77\u89C1\uFF0C\u672C\u793A\u4F8B\u4E2D\u7701\u7565\u4E86\u7F13\u5B58\uFF1A</p><div><div title="js"><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> httpPlugin <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;http&#39;</span><span class="token punctuation">,</span>
  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token parameter">build</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> https <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;https&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">let</span> http <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;http&#39;</span><span class="token punctuation">)</span>

    <span class="token comment">// Intercept import paths starting with &quot;http:&quot; and &quot;https:&quot; so</span>
    <span class="token comment">// esbuild doesn&#39;t attempt to map them to a file system location.</span>
    <span class="token comment">// Tag them with the &quot;http-url&quot; namespace to associate them with</span>
    <span class="token comment">// this plugin.</span>
    build<span class="token punctuation">.</span><span class="token function">onResolve</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">filter</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^https?:\\/\\/</span><span class="token regex-delimiter">/</span></span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token parameter">args</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">path</span><span class="token operator">:</span> args<span class="token punctuation">.</span>path<span class="token punctuation">,</span>
      <span class="token literal-property property">namespace</span><span class="token operator">:</span> <span class="token string">&#39;http-url&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

    <span class="token comment">// We also want to intercept all import paths inside downloaded</span>
    <span class="token comment">// files and resolve them against the original URL. All of these</span>
    <span class="token comment">// files will be in the &quot;http-url&quot; namespace. Make sure to keep</span>
    <span class="token comment">// the newly resolved URL in the &quot;http-url&quot; namespace so imports</span>
    <span class="token comment">// inside it will also be resolved as URLs recursively.</span>
    build<span class="token punctuation">.</span><span class="token function">onResolve</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">filter</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">.*</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token literal-property property">namespace</span><span class="token operator">:</span> <span class="token string">&#39;http-url&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token parameter">args</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">URL</span><span class="token punctuation">(</span>args<span class="token punctuation">.</span>path<span class="token punctuation">,</span> args<span class="token punctuation">.</span>importer<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token literal-property property">namespace</span><span class="token operator">:</span> <span class="token string">&#39;http-url&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

    <span class="token comment">// When a URL is loaded, we want to actually download the content</span>
    <span class="token comment">// from the internet. This has just enough logic to be able to</span>
    <span class="token comment">// handle the example import from unpkg.com but in reality this</span>
    <span class="token comment">// would probably need to be more complex.</span>
    build<span class="token punctuation">.</span><span class="token function">onLoad</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">filter</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">.*</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token literal-property property">namespace</span><span class="token operator">:</span> <span class="token string">&#39;http-url&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">args</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">let</span> contents <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">function</span> <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token parameter">url</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Downloading: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>url<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
          <span class="token keyword">let</span> lib <span class="token operator">=</span> url<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">&#39;https&#39;</span><span class="token punctuation">)</span> <span class="token operator">?</span> https <span class="token operator">:</span> http
          <span class="token keyword">let</span> req <span class="token operator">=</span> lib<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> <span class="token parameter">res</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">301</span><span class="token punctuation">,</span> <span class="token number">302</span><span class="token punctuation">,</span> <span class="token number">307</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>statusCode<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
              <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">URL</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>headers<span class="token punctuation">.</span>location<span class="token punctuation">,</span> url<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
              req<span class="token punctuation">.</span><span class="token function">abort</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>res<span class="token punctuation">.</span>statusCode <span class="token operator">===</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
              <span class="token keyword">let</span> chunks <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
              res<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;data&#39;</span><span class="token punctuation">,</span> <span class="token parameter">chunk</span> <span class="token operator">=&gt;</span> chunks<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>chunk<span class="token punctuation">)</span><span class="token punctuation">)</span>
              res<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;end&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">resolve</span><span class="token punctuation">(</span>Buffer<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>chunks<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
              <span class="token function">reject</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">GET </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>url<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> failed: status </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>res<span class="token punctuation">.</span>statusCode<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">}</span>
          <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;error&#39;</span><span class="token punctuation">,</span> reject<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
        <span class="token function">fetch</span><span class="token punctuation">(</span>args<span class="token punctuation">.</span>path<span class="token punctuation">)</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
      <span class="token keyword">return</span> <span class="token punctuation">{</span> contents <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;esbuild&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">entryPoints</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;app.js&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token literal-property property">bundle</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token literal-property property">outfile</span><span class="token operator">:</span> <span class="token string">&#39;out.js&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>httpPlugin<span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> process<span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br></div></div></div><div title="go"><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token string">&quot;io/ioutil&quot;</span>
<span class="token keyword">import</span> <span class="token string">&quot;net/http&quot;</span>
<span class="token keyword">import</span> <span class="token string">&quot;net/url&quot;</span>
<span class="token keyword">import</span> <span class="token string">&quot;os&quot;</span>
<span class="token keyword">import</span> <span class="token string">&quot;github.com/evanw/esbuild/pkg/api&quot;</span>

<span class="token keyword">var</span> httpPlugin <span class="token operator">=</span> api<span class="token punctuation">.</span>Plugin<span class="token punctuation">{</span>
  Name<span class="token punctuation">:</span> <span class="token string">&quot;http&quot;</span><span class="token punctuation">,</span>
  Setup<span class="token punctuation">:</span> <span class="token keyword">func</span><span class="token punctuation">(</span>build api<span class="token punctuation">.</span>PluginBuild<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// Intercept import paths starting with &quot;http:&quot; and &quot;https:&quot; so</span>
    <span class="token comment">// esbuild doesn&#39;t attempt to map them to a file system location.</span>
    <span class="token comment">// Tag them with the &quot;http-url&quot; namespace to associate them with</span>
    <span class="token comment">// this plugin.</span>
    build<span class="token punctuation">.</span><span class="token function">OnResolve</span><span class="token punctuation">(</span>api<span class="token punctuation">.</span>OnResolveOptions<span class="token punctuation">{</span>Filter<span class="token punctuation">:</span> <span class="token string">\`^https?://\`</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token keyword">func</span><span class="token punctuation">(</span>args api<span class="token punctuation">.</span>OnResolveArgs<span class="token punctuation">)</span> <span class="token punctuation">(</span>api<span class="token punctuation">.</span>OnResolveResult<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> api<span class="token punctuation">.</span>OnResolveResult<span class="token punctuation">{</span>
          Path<span class="token punctuation">:</span>      args<span class="token punctuation">.</span>Path<span class="token punctuation">,</span>
          Namespace<span class="token punctuation">:</span> <span class="token string">&quot;http-url&quot;</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token boolean">nil</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>

    <span class="token comment">// We also want to intercept all import paths inside downloaded</span>
    <span class="token comment">// files and resolve them against the original URL. All of these</span>
    <span class="token comment">// files will be in the &quot;http-url&quot; namespace. Make sure to keep</span>
    <span class="token comment">// the newly resolved URL in the &quot;http-url&quot; namespace so imports</span>
    <span class="token comment">// inside it will also be resolved as URLs recursively.</span>
    build<span class="token punctuation">.</span><span class="token function">OnResolve</span><span class="token punctuation">(</span>api<span class="token punctuation">.</span>OnResolveOptions<span class="token punctuation">{</span>Filter<span class="token punctuation">:</span> <span class="token string">&quot;.*&quot;</span><span class="token punctuation">,</span> Namespace<span class="token punctuation">:</span> <span class="token string">&quot;http-url&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token keyword">func</span><span class="token punctuation">(</span>args api<span class="token punctuation">.</span>OnResolveArgs<span class="token punctuation">)</span> <span class="token punctuation">(</span>api<span class="token punctuation">.</span>OnResolveResult<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        base<span class="token punctuation">,</span> err <span class="token operator">:=</span> url<span class="token punctuation">.</span><span class="token function">Parse</span><span class="token punctuation">(</span>args<span class="token punctuation">.</span>Importer<span class="token punctuation">)</span>
        <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
          <span class="token keyword">return</span> api<span class="token punctuation">.</span>OnResolveResult<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> err
        <span class="token punctuation">}</span>
        relative<span class="token punctuation">,</span> err <span class="token operator">:=</span> url<span class="token punctuation">.</span><span class="token function">Parse</span><span class="token punctuation">(</span>args<span class="token punctuation">.</span>Path<span class="token punctuation">)</span>
        <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
          <span class="token keyword">return</span> api<span class="token punctuation">.</span>OnResolveResult<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> err
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> api<span class="token punctuation">.</span>OnResolveResult<span class="token punctuation">{</span>
          Path<span class="token punctuation">:</span>      base<span class="token punctuation">.</span><span class="token function">ResolveReference</span><span class="token punctuation">(</span>relative<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
          Namespace<span class="token punctuation">:</span> <span class="token string">&quot;http-url&quot;</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token boolean">nil</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>

    <span class="token comment">// When a URL is loaded, we want to actually download the content</span>
    <span class="token comment">// from the internet. This has just enough logic to be able to</span>
    <span class="token comment">// handle the example import from unpkg.com but in reality this</span>
    <span class="token comment">// would probably need to be more complex.</span>
    build<span class="token punctuation">.</span><span class="token function">OnLoad</span><span class="token punctuation">(</span>api<span class="token punctuation">.</span>OnLoadOptions<span class="token punctuation">{</span>Filter<span class="token punctuation">:</span> <span class="token string">&quot;.*&quot;</span><span class="token punctuation">,</span> Namespace<span class="token punctuation">:</span> <span class="token string">&quot;http-url&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token keyword">func</span><span class="token punctuation">(</span>args api<span class="token punctuation">.</span>OnLoadArgs<span class="token punctuation">)</span> <span class="token punctuation">(</span>api<span class="token punctuation">.</span>OnLoadResult<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        res<span class="token punctuation">,</span> err <span class="token operator">:=</span> http<span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span>args<span class="token punctuation">.</span>Path<span class="token punctuation">)</span>
        <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
          <span class="token keyword">return</span> api<span class="token punctuation">.</span>OnLoadResult<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> err
        <span class="token punctuation">}</span>
        <span class="token keyword">defer</span> res<span class="token punctuation">.</span>Body<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        bytes<span class="token punctuation">,</span> err <span class="token operator">:=</span> ioutil<span class="token punctuation">.</span><span class="token function">ReadAll</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>Body<span class="token punctuation">)</span>
        <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
          <span class="token keyword">return</span> api<span class="token punctuation">.</span>OnLoadResult<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> err
        <span class="token punctuation">}</span>
        contents <span class="token operator">:=</span> <span class="token function">string</span><span class="token punctuation">(</span>bytes<span class="token punctuation">)</span>
        <span class="token keyword">return</span> api<span class="token punctuation">.</span>OnLoadResult<span class="token punctuation">{</span>Contents<span class="token punctuation">:</span> <span class="token operator">&amp;</span>contents<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token boolean">nil</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  result <span class="token operator">:=</span> api<span class="token punctuation">.</span><span class="token function">Build</span><span class="token punctuation">(</span>api<span class="token punctuation">.</span>BuildOptions<span class="token punctuation">{</span>
    EntryPoints<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">{</span><span class="token string">&quot;app.js&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    Bundle<span class="token punctuation">:</span>      <span class="token boolean">true</span><span class="token punctuation">,</span>
    Outfile<span class="token punctuation">:</span>     <span class="token string">&quot;out.js&quot;</span><span class="token punctuation">,</span>
    Plugins<span class="token punctuation">:</span>     <span class="token punctuation">[</span><span class="token punctuation">]</span>api<span class="token punctuation">.</span>Plugin<span class="token punctuation">{</span>httpPlugin<span class="token punctuation">}</span><span class="token punctuation">,</span>
    Write<span class="token punctuation">:</span>       <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>

  <span class="token keyword">if</span> <span class="token function">len</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>Errors<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token punctuation">{</span>
    os<span class="token punctuation">.</span><span class="token function">Exit</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br></div></div></div></div><p>\u8BE5\u63D2\u4EF6\u9996\u5148\u4F7F\u7528\u89E3\u6790\u5668\u5C06 <code>http://</code> \u548C <code>https://</code> URL \u79FB\u52A8\u5230 <code>http-url</code> \u547D\u540D\u7A7A\u95F4\u3002\u8BBE\u7F6E\u547D\u540D\u7A7A\u95F4\u4F1A\u544A\u8BC9 esbuild \u4E0D\u8981\u5C06\u8FD9\u4E9B\u8DEF\u5F84\u89C6\u4E3A\u6587\u4EF6\u7CFB\u7EDF\u8DEF\u5F84\u3002\u7136\u540E\uFF0C<code>http-url</code> \u547D\u540D\u7A7A\u95F4\u7684\u52A0\u8F7D\u5668\u4E0B\u8F7D\u6A21\u5757\u5E76\u5C06\u5185\u5BB9\u8FD4\u56DE\u7ED9 esbuild\u3002\u4ECE\u90A3\u91CC\uFF0C<code>http-url</code> \u547D\u540D\u7A7A\u95F4\u4E2D\u6A21\u5757\u5185\u7684\u5BFC\u5165\u8DEF\u5F84\u7684\u53E6\u4E00\u4E2A\u89E3\u6790\u5668\u83B7\u53D6\u76F8\u5BF9\u8DEF\u5F84\uFF0C\u5E76\u901A\u8FC7\u9488\u5BF9\u5BFC\u5165\u6A21\u5757\u7684 URL \u89E3\u6790\u5B83\u4EEC\u5C06\u5B83\u4EEC\u8F6C\u6362\u4E3A\u5B8C\u6574\u7684 URL\u3002\u7136\u540E\u53CD\u9988\u5230\u52A0\u8F7D\u5668\uFF0C\u5141\u8BB8\u4E0B\u8F7D\u7684\u6A21\u5757\u9012\u5F52\u4E0B\u8F7D\u5176\u4ED6\u6A21\u5757\u3002</p><h3 id="webassembly-plugin" tabindex="-1"><a class="header-anchor" href="#webassembly-plugin" aria-hidden="true">#</a> WebAssembly plugin</h3><p><em><strong>\u8FD9\u4E2A\u4F8B\u5B50\u6F14\u793A\uFF1A\u4F7F\u7528\u4E8C\u8FDB\u5236\u6570\u636E\uFF0C\u521B\u5EFA\u865A\u62DF\uFF1B\u6A21\u5757\u4F7F\u7528 import \u8BED\u53E5\uFF0C\u5728\u4E0D\u540C\u7684\u547D\u540D\u7A7A\u95F4\u4E2D\u91CD\u65B0\u4F7F\u7528\u76F8\u540C\u7684\u8DEF\u5F84\u3002</strong></em></p><p>\u8FD9\u4E2A\u63D2\u4EF6\u5141\u8BB8\u4F60\u5C06 <code>.wasm</code> \u6587\u4EF6\u5BFC\u5165 JavaScript \u4EE3\u7801\u3002\u5B83\u4E0D\u4F1A\u81EA\u5DF1\u751F\u6210 WebAssembly \u6587\u4EF6\uFF1B\u8FD9\u53EF\u4EE5\u901A\u8FC7\u5176\u4ED6\u5DE5\u5177\u5B8C\u6210\uFF0C\u4E5F\u53EF\u4EE5\u901A\u8FC7\u4FEE\u6539\u6B64\u793A\u4F8B\u63D2\u4EF6\u6765\u6EE1\u8DB3\u60A8\u7684\u9700\u6C42\u3002\u5B83\u542F\u7528\u4EE5\u4E0B\u5DE5\u4F5C\u6D41\u7A0B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> load <span class="token keyword">from</span> <span class="token string">&#39;./example.wasm&#39;</span>
<span class="token function">load</span><span class="token punctuation">(</span>imports<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">exports</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> <span class="token operator">...</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>\u5F53\u60A8\u5BFC\u5165 <code>.wasm</code> \u6587\u4EF6\u65F6\uFF0C\u6B64\u63D2\u4EF6\u4F1A\u5728 <code>wasm-stub</code> \u547D\u540D\u7A7A\u95F4\u4E2D\u751F\u6210\u4E00\u4E2A\u865A\u62DF JavaScript \u6A21\u5757\uFF0C\u8BE5\u6A21\u5757\u5177\u6709\u5355\u4E2A\u51FD\u6570\uFF0C\u7528\u4E8E\u52A0\u8F7D\u4F5C\u4E3A\u9ED8\u8BA4\u5BFC\u51FA\u5BFC\u51FA\u7684 WebAssembly \u6A21\u5757\u3002\u8BE5\u5B58\u6839\u6A21\u5757\u5982\u4E0B\u6240\u793A\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> wasm <span class="token keyword">from</span> <span class="token string">&#39;/path/to/example.wasm&#39;</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">(</span><span class="token parameter">imports</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
  WebAssembly<span class="token punctuation">.</span><span class="token function">instantiate</span><span class="token punctuation">(</span>wasm<span class="token punctuation">,</span> imports<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>
    <span class="token parameter">result</span> <span class="token operator">=&gt;</span> result<span class="token punctuation">.</span>instance<span class="token punctuation">.</span>exports<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div>`,15),Cp=n("\u7136\u540E\u8BE5\u5B58\u6839\u6A21\u5757\u4F7F\u7528 esbuild \u7684\u5185\u7F6E"),Up=n("\u4E8C\u8FDB\u5236"),$p=n("\u52A0\u8F7D\u5668\u5C06 WebAssembly \u6587\u4EF6\u672C\u8EAB\u4F5C\u4E3A "),Gp=s("code",null,"wasm-binary",-1),Hp=n(" \u547D\u540D\u7A7A\u95F4\u4E2D\u7684\u53E6\u4E00\u4E2A\u6A21\u5757\u5BFC\u5165\u3002\u8FD9\u610F\u5473\u7740\u5BFC\u5165 "),Kp=s("code",null,".wasm",-1),Vp=n(" \u6587\u4EF6\u5B9E\u9645\u4E0A\u4F1A\u751F\u6210\u4E24\u4E2A\u865A\u62DF\u6A21\u5757\u3002\u8FD9\u662F\u63D2\u4EF6\u7684\u4EE3\u7801\uFF1A"),zp=e(`<div><div title="js"><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> wasmPlugin <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;wasm&#39;</span><span class="token punctuation">,</span>
  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token parameter">build</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">let</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span>

    <span class="token comment">// Resolve &quot;.wasm&quot; files to a path with a namespace</span>
    build<span class="token punctuation">.</span><span class="token function">onResolve</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">filter</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.wasm$</span><span class="token regex-delimiter">/</span></span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token parameter">args</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token comment">// If this is the import inside the stub module, import the</span>
      <span class="token comment">// binary itself. Put the path in the &quot;wasm-binary&quot; namespace</span>
      <span class="token comment">// to tell our binary load callback to load the binary file.</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>args<span class="token punctuation">.</span>namespace <span class="token operator">===</span> <span class="token string">&#39;wasm-stub&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token punctuation">{</span>
          <span class="token literal-property property">path</span><span class="token operator">:</span> args<span class="token punctuation">.</span>path<span class="token punctuation">,</span>
          <span class="token literal-property property">namespace</span><span class="token operator">:</span> <span class="token string">&#39;wasm-binary&#39;</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>

      <span class="token comment">// Otherwise, generate the JavaScript stub module for this</span>
      <span class="token comment">// &quot;.wasm&quot; file. Put it in the &quot;wasm-stub&quot; namespace to tell</span>
      <span class="token comment">// our stub load callback to fill it with JavaScript.</span>
      <span class="token comment">//</span>
      <span class="token comment">// Resolve relative paths to absolute paths here since this</span>
      <span class="token comment">// resolve callback is given &quot;resolveDir&quot;, the directory to</span>
      <span class="token comment">// resolve imports against.</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>args<span class="token punctuation">.</span>resolveDir <span class="token operator">===</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token comment">// Ignore unresolvable paths</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">return</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">path</span><span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">isAbsolute</span><span class="token punctuation">(</span>args<span class="token punctuation">.</span>path<span class="token punctuation">)</span> <span class="token operator">?</span> args<span class="token punctuation">.</span>path <span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>args<span class="token punctuation">.</span>resolveDir<span class="token punctuation">,</span> args<span class="token punctuation">.</span>path<span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token literal-property property">namespace</span><span class="token operator">:</span> <span class="token string">&#39;wasm-stub&#39;</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>

    <span class="token comment">// Virtual modules in the &quot;wasm-stub&quot; namespace are filled with</span>
    <span class="token comment">// the JavaScript code for compiling the WebAssembly binary. The</span>
    <span class="token comment">// binary itself is imported from a second virtual module.</span>
    build<span class="token punctuation">.</span><span class="token function">onLoad</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">filter</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">.*</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token literal-property property">namespace</span><span class="token operator">:</span> <span class="token string">&#39;wasm-stub&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">args</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">contents</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">import wasm from </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>args<span class="token punctuation">.</span>path<span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">
        export default (imports) =&gt;
          WebAssembly.instantiate(wasm, imports).then(
            result =&gt; result.instance.exports)</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

    <span class="token comment">// Virtual modules in the &quot;wasm-binary&quot; namespace contain the</span>
    <span class="token comment">// actual bytes of the WebAssembly file. This uses esbuild&#39;s</span>
    <span class="token comment">// built-in &quot;binary&quot; loader instead of manually embedding the</span>
    <span class="token comment">// binary data inside JavaScript code ourselves.</span>
    build<span class="token punctuation">.</span><span class="token function">onLoad</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">filter</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">.*</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token literal-property property">namespace</span><span class="token operator">:</span> <span class="token string">&#39;wasm-binary&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">args</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">contents</span><span class="token operator">:</span> <span class="token keyword">await</span> fs<span class="token punctuation">.</span>promises<span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span>args<span class="token punctuation">.</span>path<span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token literal-property property">loader</span><span class="token operator">:</span> <span class="token string">&#39;binary&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;esbuild&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">entryPoints</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;app.js&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token literal-property property">bundle</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token literal-property property">outfile</span><span class="token operator">:</span> <span class="token string">&#39;out.js&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>wasmPlugin<span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> process<span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br></div></div></div><div title="go"><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token string">&quot;encoding/json&quot;</span>
<span class="token keyword">import</span> <span class="token string">&quot;io/ioutil&quot;</span>
<span class="token keyword">import</span> <span class="token string">&quot;os&quot;</span>
<span class="token keyword">import</span> <span class="token string">&quot;path/filepath&quot;</span>
<span class="token keyword">import</span> <span class="token string">&quot;github.com/evanw/esbuild/pkg/api&quot;</span>

<span class="token keyword">var</span> wasmPlugin <span class="token operator">=</span> api<span class="token punctuation">.</span>Plugin<span class="token punctuation">{</span>
  Name<span class="token punctuation">:</span> <span class="token string">&quot;wasm&quot;</span><span class="token punctuation">,</span>
  Setup<span class="token punctuation">:</span> <span class="token keyword">func</span><span class="token punctuation">(</span>build api<span class="token punctuation">.</span>PluginBuild<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// Resolve &quot;.wasm&quot; files to a path with a namespace</span>
    build<span class="token punctuation">.</span><span class="token function">OnResolve</span><span class="token punctuation">(</span>api<span class="token punctuation">.</span>OnResolveOptions<span class="token punctuation">{</span>Filter<span class="token punctuation">:</span> <span class="token string">\`\\.wasm$\`</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token keyword">func</span><span class="token punctuation">(</span>args api<span class="token punctuation">.</span>OnResolveArgs<span class="token punctuation">)</span> <span class="token punctuation">(</span>api<span class="token punctuation">.</span>OnResolveResult<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// If this is the import inside the stub module, import the</span>
        <span class="token comment">// binary itself. Put the path in the &quot;wasm-binary&quot; namespace</span>
        <span class="token comment">// to tell our binary load callback to load the binary file.</span>
        <span class="token keyword">if</span> args<span class="token punctuation">.</span>Namespace <span class="token operator">==</span> <span class="token string">&quot;wasm-stub&quot;</span> <span class="token punctuation">{</span>
          <span class="token keyword">return</span> api<span class="token punctuation">.</span>OnResolveResult<span class="token punctuation">{</span>
            Path<span class="token punctuation">:</span>      args<span class="token punctuation">.</span>Path<span class="token punctuation">,</span>
            Namespace<span class="token punctuation">:</span> <span class="token string">&quot;wasm-binary&quot;</span><span class="token punctuation">,</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token boolean">nil</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// Otherwise, generate the JavaScript stub module for this</span>
        <span class="token comment">// &quot;.wasm&quot; file. Put it in the &quot;wasm-stub&quot; namespace to tell</span>
        <span class="token comment">// our stub load callback to fill it with JavaScript.</span>
        <span class="token comment">//</span>
        <span class="token comment">// Resolve relative paths to absolute paths here since this</span>
        <span class="token comment">// resolve callback is given &quot;resolveDir&quot;, the directory to</span>
        <span class="token comment">// resolve imports against.</span>
        <span class="token keyword">if</span> args<span class="token punctuation">.</span>ResolveDir <span class="token operator">==</span> <span class="token string">&quot;&quot;</span> <span class="token punctuation">{</span>
          <span class="token keyword">return</span> api<span class="token punctuation">.</span>OnResolveResult<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token boolean">nil</span> <span class="token comment">// Ignore unresolvable paths</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token operator">!</span>filepath<span class="token punctuation">.</span><span class="token function">IsAbs</span><span class="token punctuation">(</span>args<span class="token punctuation">.</span>Path<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          args<span class="token punctuation">.</span>Path <span class="token operator">=</span> filepath<span class="token punctuation">.</span><span class="token function">Join</span><span class="token punctuation">(</span>args<span class="token punctuation">.</span>ResolveDir<span class="token punctuation">,</span> args<span class="token punctuation">.</span>Path<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> api<span class="token punctuation">.</span>OnResolveResult<span class="token punctuation">{</span>
          Path<span class="token punctuation">:</span>      args<span class="token punctuation">.</span>Path<span class="token punctuation">,</span>
          Namespace<span class="token punctuation">:</span> <span class="token string">&quot;wasm-stub&quot;</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token boolean">nil</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>

    <span class="token comment">// Virtual modules in the &quot;wasm-stub&quot; namespace are filled with</span>
    <span class="token comment">// the JavaScript code for compiling the WebAssembly binary. The</span>
    <span class="token comment">// binary itself is imported from a second virtual module.</span>
    build<span class="token punctuation">.</span><span class="token function">OnLoad</span><span class="token punctuation">(</span>api<span class="token punctuation">.</span>OnLoadOptions<span class="token punctuation">{</span>Filter<span class="token punctuation">:</span> <span class="token string">\`.*\`</span><span class="token punctuation">,</span> Namespace<span class="token punctuation">:</span> <span class="token string">&quot;wasm-stub&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token keyword">func</span><span class="token punctuation">(</span>args api<span class="token punctuation">.</span>OnLoadArgs<span class="token punctuation">)</span> <span class="token punctuation">(</span>api<span class="token punctuation">.</span>OnLoadResult<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        bytes<span class="token punctuation">,</span> err <span class="token operator">:=</span> json<span class="token punctuation">.</span><span class="token function">Marshal</span><span class="token punctuation">(</span>args<span class="token punctuation">.</span>Path<span class="token punctuation">)</span>
        <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
          <span class="token keyword">return</span> api<span class="token punctuation">.</span>OnLoadResult<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> err
        <span class="token punctuation">}</span>
        contents <span class="token operator">:=</span> <span class="token string">\`import wasm from \`</span> <span class="token operator">+</span> <span class="token function">string</span><span class="token punctuation">(</span>bytes<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">\`
          export default (imports) =&gt;
            WebAssembly.instantiate(wasm, imports).then(
              result =&gt; result.instance.exports)\`</span>
        <span class="token keyword">return</span> api<span class="token punctuation">.</span>OnLoadResult<span class="token punctuation">{</span>Contents<span class="token punctuation">:</span> <span class="token operator">&amp;</span>contents<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token boolean">nil</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>

    <span class="token comment">// Virtual modules in the &quot;wasm-binary&quot; namespace contain the</span>
    <span class="token comment">// actual bytes of the WebAssembly file. This uses esbuild&#39;s</span>
    <span class="token comment">// built-in &quot;binary&quot; loader instead of manually embedding the</span>
    <span class="token comment">// binary data inside JavaScript code ourselves.</span>
    build<span class="token punctuation">.</span><span class="token function">OnLoad</span><span class="token punctuation">(</span>api<span class="token punctuation">.</span>OnLoadOptions<span class="token punctuation">{</span>Filter<span class="token punctuation">:</span> <span class="token string">\`.*\`</span><span class="token punctuation">,</span> Namespace<span class="token punctuation">:</span> <span class="token string">&quot;wasm-binary&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token keyword">func</span><span class="token punctuation">(</span>args api<span class="token punctuation">.</span>OnLoadArgs<span class="token punctuation">)</span> <span class="token punctuation">(</span>api<span class="token punctuation">.</span>OnLoadResult<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        bytes<span class="token punctuation">,</span> err <span class="token operator">:=</span> ioutil<span class="token punctuation">.</span><span class="token function">ReadFile</span><span class="token punctuation">(</span>args<span class="token punctuation">.</span>Path<span class="token punctuation">)</span>
        <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
          <span class="token keyword">return</span> api<span class="token punctuation">.</span>OnLoadResult<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> err
        <span class="token punctuation">}</span>
        contents <span class="token operator">:=</span> <span class="token function">string</span><span class="token punctuation">(</span>bytes<span class="token punctuation">)</span>
        <span class="token keyword">return</span> api<span class="token punctuation">.</span>OnLoadResult<span class="token punctuation">{</span>
          Contents<span class="token punctuation">:</span> <span class="token operator">&amp;</span>contents<span class="token punctuation">,</span>
          Loader<span class="token punctuation">:</span>   api<span class="token punctuation">.</span>LoaderBinary<span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token boolean">nil</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  result <span class="token operator">:=</span> api<span class="token punctuation">.</span><span class="token function">Build</span><span class="token punctuation">(</span>api<span class="token punctuation">.</span>BuildOptions<span class="token punctuation">{</span>
    EntryPoints<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">{</span><span class="token string">&quot;app.js&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    Bundle<span class="token punctuation">:</span>      <span class="token boolean">true</span><span class="token punctuation">,</span>
    Outfile<span class="token punctuation">:</span>     <span class="token string">&quot;out.js&quot;</span><span class="token punctuation">,</span>
    Plugins<span class="token punctuation">:</span>     <span class="token punctuation">[</span><span class="token punctuation">]</span>api<span class="token punctuation">.</span>Plugin<span class="token punctuation">{</span>wasmPlugin<span class="token punctuation">}</span><span class="token punctuation">,</span>
    Write<span class="token punctuation">:</span>       <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>

  <span class="token keyword">if</span> <span class="token function">len</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>Errors<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token punctuation">{</span>
    os<span class="token punctuation">.</span><span class="token function">Exit</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br></div></div></div></div><p>\u8BE5\u63D2\u4EF6\u5206\u591A\u4E2A\u6B65\u9AA4\u5DE5\u4F5C\u3002\u9996\u5148\uFF0C\u89E3\u6790\u56DE\u8C03\u6355\u83B7\u666E\u901A\u6A21\u5757\u4E2D\u7684 <code>.wasm</code> \u8DEF\u5F84\u5E76\u5C06\u5B83\u4EEC\u79FB\u52A8\u5230 <code>wasm-stub</code> \u547D\u540D\u7A7A\u95F4\u3002\u7136\u540E\uFF0C<code>wasm-stub</code> \u547D\u540D\u7A7A\u95F4\u7684\u52A0\u8F7D\u56DE\u8C03\u751F\u6210\u4E00\u4E2A JavaScript \u5B58\u6839\u6A21\u5757\uFF0C\u8BE5\u6A21\u5757\u5BFC\u51FA\u52A0\u8F7D\u5668\u51FD\u6570\u5E76\u5BFC\u5165 <code>.wasm</code> \u8DEF\u5F84\u3002\u8FD9\u5C06\u518D\u6B21\u8C03\u7528\u89E3\u6790\u56DE\u8C03\uFF0C\u8FD9\u6B21\u5C06\u8DEF\u5F84\u79FB\u52A8\u5230 <code>wasm-binary</code> \u547D\u540D\u7A7A\u95F4\u3002\u7136\u540E <code>wasm-binary</code> \u547D\u540D\u7A7A\u95F4\u7684\u7B2C\u4E8C\u4E2A\u52A0\u8F7D\u56DE\u8C03\u5BFC\u81F4\u4F7F\u7528<code>\u4E8C\u8FDB\u5236</code>\u52A0\u8F7D\u5668\u52A0\u8F7D WebAssembly \u6587\u4EF6\uFF0C\u5B83\u544A\u8BC9 esbuild \u5C06\u6587\u4EF6\u672C\u8EAB\u5D4C\u5165\u5230\u5305\u4E2D\u3002</p><h3 id="svelte-plugin" tabindex="-1"><a class="header-anchor" href="#svelte-plugin" aria-hidden="true">#</a> Svelte plugin</h3><p><em><strong>\u6B64\u793A\u4F8B\u6F14\u793A\uFF1A\u652F\u6301\u7F16\u8BD1\u4E3A JavaScript \u8BED\u8A00\u3001\u62A5\u544A\u8B66\u544A\u548C\u9519\u8BEF\u3001\u96C6\u6210\u6E90\u6620\u5C04\u3002</strong></em></p>`,4),Xp=n("\u6B64\u63D2\u4EF6\u5141\u8BB8\u60A8\u6346\u7ED1\u6765\u81EA Svelte \u6846\u67B6\u7684 "),Yp=s("code",null,".svelte",-1),Qp=n(" \u6587\u4EF6\u3002\u60A8\u4F7F\u7528\u7C7B\u4F3C\u4E8E HTML \u7684\u8BED\u6CD5\u7F16\u5199\u4EE3\u7801\uFF0C\u7136\u540E\u7531 "),Zp={href:"https://svelte.dev/",target:"_blank",rel:"noopener noreferrer"},nt=n("Svelte"),st=n(" \u7F16\u8BD1\u5668\u5C06\u5176\u8F6C\u6362\u4E3A JavaScript\u3002 Svelte \u4EE3\u7801\u5982\u4E0B\u6240\u793A\uFF1A"),at=e(`<div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> b <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>number<span class="token punctuation">&quot;</span></span> <span class="token attr-name"><span class="token namespace">bind:</span>value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span>{a}</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>number<span class="token punctuation">&quot;</span></span> <span class="token attr-name"><span class="token namespace">bind:</span>value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span>{b}</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>{a} + {b} = {a + b}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>\u4F7F\u7528 Svelte \u7F16\u8BD1\u5668\u7F16\u8BD1\u6B64\u4EE3\u7801\u4F1A\u751F\u6210\u4E00\u4E2A JavaScript \u6A21\u5757\uFF0C\u8BE5\u6A21\u5757\u4F9D\u8D56\u4E8E <code>svelte/\u5185\u90E8\u5305</code>\uFF0C\u5E76\u4F7F\u7528\u9ED8\u8BA4<code>\u5BFC\u51FA</code>\u5C06\u7EC4\u4EF6\u5BFC\u51FA\u4E3A\u5355\u4E2A\u7C7B\u3002\u8FD9\u610F\u5473\u7740 <code>.svelte</code> \u6587\u4EF6\u53EF\u4EE5\u72EC\u7ACB\u7F16\u8BD1\uFF0C\u8FD9\u4F7F\u5F97 Svelte \u975E\u5E38\u9002\u5408 esbuild \u63D2\u4EF6\u3002\u8FD9\u4E2A\u63D2\u4EF6\u662F\u901A\u8FC7\u50CF\u8FD9\u6837\u5BFC\u5165 <code>.svelte</code> \u6587\u4EF6\u6765\u89E6\u53D1\u7684\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> Button <span class="token keyword">from</span> <span class="token string">&#39;./button.svelte&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>\u8FD9\u662F\u8BE5\u63D2\u4EF6\u7684\u4EE3\u7801\uFF08\u8BE5\u63D2\u4EF6\u6CA1\u6709 Go \u7248\u672C\uFF0C\u56E0\u4E3A Svelte \u7F16\u8BD1\u5668\u662F\u7528 JavaScript \u7F16\u5199\u7684\uFF09\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> sveltePlugin <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;svelte&#39;</span><span class="token punctuation">,</span>
  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token parameter">build</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> svelte <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;svelte/compiler&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">let</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">let</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span>

    build<span class="token punctuation">.</span><span class="token function">onLoad</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">filter</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.svelte$</span><span class="token regex-delimiter">/</span></span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">args</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token comment">// This converts a message in Svelte&#39;s format to esbuild&#39;s format</span>
      <span class="token keyword">let</span> <span class="token function-variable function">convertMessage</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> message<span class="token punctuation">,</span> start<span class="token punctuation">,</span> end <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> location
        <span class="token keyword">if</span> <span class="token punctuation">(</span>start <span class="token operator">&amp;&amp;</span> end<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">let</span> lineText <span class="token operator">=</span> source<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\r\\n|\\r|\\n</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">)</span><span class="token punctuation">[</span>start<span class="token punctuation">.</span>line <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span>
          <span class="token keyword">let</span> lineEnd <span class="token operator">=</span> start<span class="token punctuation">.</span>line <span class="token operator">===</span> end<span class="token punctuation">.</span>line <span class="token operator">?</span> end<span class="token punctuation">.</span>column <span class="token operator">:</span> lineText<span class="token punctuation">.</span>length
          location <span class="token operator">=</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">file</span><span class="token operator">:</span> filename<span class="token punctuation">,</span>
            <span class="token literal-property property">line</span><span class="token operator">:</span> start<span class="token punctuation">.</span>line<span class="token punctuation">,</span>
            <span class="token literal-property property">column</span><span class="token operator">:</span> start<span class="token punctuation">.</span>column<span class="token punctuation">,</span>
            <span class="token literal-property property">length</span><span class="token operator">:</span> lineEnd <span class="token operator">-</span> start<span class="token punctuation">.</span>column<span class="token punctuation">,</span>
            lineText<span class="token punctuation">,</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token punctuation">{</span> <span class="token literal-property property">text</span><span class="token operator">:</span> message<span class="token punctuation">,</span> location <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>

      <span class="token comment">// Load the file from the file system</span>
      <span class="token keyword">let</span> source <span class="token operator">=</span> <span class="token keyword">await</span> fs<span class="token punctuation">.</span>promises<span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span>args<span class="token punctuation">.</span>path<span class="token punctuation">,</span> <span class="token string">&#39;utf8&#39;</span><span class="token punctuation">)</span>
      <span class="token keyword">let</span> filename <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">relative</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span><span class="token function">cwd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> args<span class="token punctuation">.</span>path<span class="token punctuation">)</span>

      <span class="token comment">// Convert Svelte syntax to JavaScript</span>
      <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> <span class="token punctuation">{</span> js<span class="token punctuation">,</span> warnings <span class="token punctuation">}</span> <span class="token operator">=</span> svelte<span class="token punctuation">.</span><span class="token function">compile</span><span class="token punctuation">(</span>source<span class="token punctuation">,</span> <span class="token punctuation">{</span> filename <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token keyword">let</span> contents <span class="token operator">=</span> js<span class="token punctuation">.</span>code <span class="token operator">+</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">//# sourceMappingURL=</span><span class="token template-punctuation string">\`</span></span> <span class="token operator">+</span> js<span class="token punctuation">.</span>map<span class="token punctuation">.</span><span class="token function">toUrl</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token punctuation">{</span> contents<span class="token punctuation">,</span> <span class="token literal-property property">warnings</span><span class="token operator">:</span> warnings<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>convertMessage<span class="token punctuation">)</span> <span class="token punctuation">}</span>
      <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token punctuation">{</span> <span class="token literal-property property">errors</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token function">convertMessage</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;esbuild&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">entryPoints</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;app.js&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token literal-property property">bundle</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token literal-property property">outfile</span><span class="token operator">:</span> <span class="token string">&#39;out.js&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>sveltePlugin<span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> process<span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br></div></div><p>\u8FD9\u4E2A\u63D2\u4EF6\u53EA\u9700\u8981\u4E00\u4E2A\u52A0\u8F7D\u56DE\u8C03\uFF0C\u800C\u4E0D\u662F\u89E3\u6790\u56DE\u8C03\uFF0C\u56E0\u4E3A\u5B83\u8DB3\u591F\u7B80\u5355\uFF0C\u5B83\u53EA\u9700\u8981\u5C06\u52A0\u8F7D\u7684\u4EE3\u7801\u8F6C\u6362\u6210 JavaScript \u800C\u4E0D\u7528\u62C5\u5FC3\u4EE3\u7801\u6765\u81EA\u54EA\u91CC\u3002</p><p>\u5B83\u5C06 <code>//# sourceMappingURL=</code> \u6CE8\u91CA\u9644\u52A0\u5230\u751F\u6210\u7684 JavaScript \u4EE5\u544A\u8BC9 esbuild \u5982\u4F55\u5C06\u751F\u6210\u7684 JavaScript \u6620\u5C04\u56DE\u539F\u59CB\u6E90\u4EE3\u7801\u3002\u5982\u679C\u5728\u6784\u5EFA\u671F\u95F4\u542F\u7528\u4E86\u6E90\u6620\u5C04\uFF0Cesbuild \u5C06\u4F7F\u7528\u5B83\u6765\u786E\u4FDD\u6700\u7EC8\u6E90\u6620\u5C04\u4E2D\u751F\u6210\u7684\u4F4D\u7F6E\u4E00\u76F4\u6620\u5C04\u56DE\u539F\u59CB Svelte \u6587\u4EF6\uFF0C\u800C\u4E0D\u662F\u4E2D\u95F4 JavaScript \u4EE3\u7801\u3002</p><h2 id="plugin-api-limitations" tabindex="-1"><a class="header-anchor" href="#plugin-api-limitations" aria-hidden="true">#</a> Plugin API limitations</h2><p>\u6B64 API \u5E76\u4E0D\u6253\u7B97\u6DB5\u76D6\u6240\u6709\u7528\u4F8B\u3002\u4E0D\u53EF\u80FD\u8FDE\u63A5\u5230\u6346\u7ED1\u8FC7\u7A0B\u7684\u6BCF\u4E2A\u90E8\u5206\u3002\u4F8B\u5982\uFF0C\u76EE\u524D\u65E0\u6CD5\u76F4\u63A5\u4FEE\u6539 AST\u3002\u5B58\u5728\u6B64\u9650\u5236\u662F\u4E3A\u4E86\u4FDD\u6301 esbuild \u7684\u51FA\u8272\u6027\u80FD\u7279\u5F81\uFF0C\u5E76\u907F\u514D\u66B4\u9732\u8FC7\u591A\u7684 API \u8868\u9762\uFF0C\u8FD9\u5C06\u662F\u7EF4\u62A4\u8D1F\u62C5\u5E76\u4F1A\u963B\u6B62\u6D89\u53CA\u66F4\u6539 AST \u7684\u6539\u8FDB\u3002</p><p>\u5C06 esbuild \u89C6\u4E3A\u7F51\u7EDC\u7684\u201C\u94FE\u63A5\u5668\u201D\u7684\u4E00\u79CD\u65B9\u5F0F\u3002\u5C31\u50CF\u672C\u5730\u4EE3\u7801\u7684\u94FE\u63A5\u5668\u4E00\u6837\uFF0Cesbuild \u7684\u5DE5\u4F5C\u662F\u83B7\u53D6\u4E00\u7EC4\u6587\u4EF6\uFF0C\u89E3\u6790\u548C\u7ED1\u5B9A\u5B83\u4EEC\u4E4B\u95F4\u7684\u5F15\u7528\uFF0C\u5E76\u751F\u6210\u4E00\u4E2A\u5305\u542B\u6240\u6709\u94FE\u63A5\u5728\u4E00\u8D77\u7684\u4EE3\u7801\u7684\u5355\u4E2A\u6587\u4EF6\u3002\u63D2\u4EF6\u7684\u5DE5\u4F5C\u662F\u751F\u6210\u6700\u7EC8\u88AB\u94FE\u63A5\u7684\u5355\u4E2A\u6587\u4EF6\u3002</p><p>esbuild \u4E2D\u7684\u63D2\u4EF6\u5728\u76F8\u5BF9\u8303\u56F4\u5185\u4E14\u4EC5\u81EA\u5B9A\u4E49\u6784\u5EFA\u7684\u4E00\u5C0F\u90E8\u5206\u65F6\u6548\u679C\u6700\u4F73\u3002\u4F8B\u5982\uFF0C\u81EA\u5B9A\u4E49\u683C\u5F0F\uFF08\u4F8B\u5982 YAML\uFF09\u7684\u7279\u6B8A\u914D\u7F6E\u6587\u4EF6\u7684\u63D2\u4EF6\u5C31\u975E\u5E38\u5408\u9002\u3002\u4F60\u4F7F\u7528\u7684\u63D2\u4EF6\u8D8A\u591A\uFF0C\u4F60\u7684\u6784\u5EFA\u5C31\u4F1A\u8D8A\u6162\uFF0C\u7279\u522B\u662F\u5982\u679C\u4F60\u7684\u63D2\u4EF6\u662F\u7528 JavaScript \u7F16\u5199\u7684\u3002\u5982\u679C\u63D2\u4EF6\u9002\u7528\u4E8E\u60A8\u6784\u5EFA\u4E2D\u7684\u6BCF\u4E2A\u6587\u4EF6\uFF0C\u90A3\u4E48\u60A8\u7684\u6784\u5EFA\u53EF\u80FD\u4F1A\u975E\u5E38\u7F13\u6162\u3002\u5982\u679C\u7F13\u5B58\u9002\u7528\uFF0C\u5219\u5FC5\u987B\u7531\u63D2\u4EF6\u672C\u8EAB\u5B8C\u6210\u3002</p>`,11);function pt(tt,et){const o=c("ExternalLinkIcon"),p=c("RouterLink");return l(),u(i,null,[b,d,s("div",m,[g,s("p",null,[h,s("a",y,[_,a(o)]),v])]),f,w,s("p",null,[q,s("a",x,[R,a(o)]),P]),O,s("ol",null,[s("li",null,[s("p",null,[j,s("a",L,[S,a(o)]),A])]),s("li",null,[s("p",null,[J,s("a",T,[N,a(o)]),D])])]),I,s("p",null,[E,B,F,W,M,a(p,{to:"/esbuild/plugins/transform/#build"},{default:t(()=>[C]),_:1}),U,$,G]),H,s("p",null,[K,V,z,a(p,{to:"/esbuild/plugins/transform/#stdin"},{default:t(()=>[X]),_:1}),Y]),s("p",null,[Q,Z,nn,a(p,{to:"/esbuild/plugins/plugins/#http-plugin"},{default:t(()=>[sn]),_:1}),an,pn,tn]),en,on,cn,s("p",null,[ln,s("a",un,[rn,a(o)]),kn]),bn,s("p",null,[dn,a(p,{to:"/esbuild/plugins/plugins/#filters"},{default:t(()=>[mn]),_:1}),gn]),hn,s("p",null,[yn,a(p,{to:"/esbuild/plugins/plugins/#namespaces"},{default:t(()=>[_n]),_:1}),vn]),fn,s("p",null,[wn,a(p,{to:"/esbuild/plugins/plugins/#http-plugin"},{default:t(()=>[qn]),_:1}),xn,Rn,Pn]),On,jn,Ln,s("p",null,[Sn,a(p,{to:"/esbuild/plugins/plugins/#load-callbacks"},{default:t(()=>[An]),_:1}),Jn,Tn,Nn,a(p,{to:"/esbuild/plugins/plugins/#namespaces"},{default:t(()=>[Dn]),_:1}),In]),En,s("p",null,[Bn,Fn,Wn,a(p,{to:"/esbuild/plugins/plugins/#load-callbacks"},{default:t(()=>[Mn]),_:1}),Cn]),Un,s("p",null,[$n,a(p,{to:"/esbuild/plugins/plugins/#load-callbacks"},{default:t(()=>[Gn]),_:1}),Hn]),Kn,s("p",null,[Vn,zn,Xn,a(p,{to:"/esbuild/plugins/transform/#external"},{default:t(()=>[Yn]),_:1}),Qn]),Zn,s("p",null,[ns,a(p,{to:"/esbuild/plugins/transform/#log-level"},{default:t(()=>[ss]),_:1}),as]),ps,ts,s("p",null,[es,a(p,{to:"/esbuild/plugins/transform/#watch"},{default:t(()=>[os]),_:1}),cs,ls,us,is,rs]),ks,s("p",null,[bs,a(p,{to:"/esbuild/plugins/plugins/#filters"},{default:t(()=>[ds]),_:1}),ms]),gs,s("p",null,[hs,a(p,{to:"/esbuild/plugins/plugins/#namespaces"},{default:t(()=>[ys]),_:1}),_s]),vs,s("p",null,[fs,ws,qs,a(p,{to:"/esbuild/plugins/plugins/#http-plugin"},{default:t(()=>[xs]),_:1}),Rs,Ps,Os]),js,s("p",null,[Ls,a(p,{to:"/esbuild/plugins/plugins/#resolve-callbacks"},{default:t(()=>[Ss]),_:1}),As,Js,Ts,a(p,{to:"/esbuild/plugins/plugins/#namespaces"},{default:t(()=>[Ns]),_:1}),Ds]),Is,s("p",null,[Es,a(p,{to:"/esbuild/plugins/plugins/#resolve-callbacks"},{default:t(()=>[Bs]),_:1}),Fs]),Ws,s("p",null,[Ms,a(p,{to:"/esbuild/plugins/content/#javascript"},{default:t(()=>[Cs]),_:1}),Us,a(p,{to:"/esbuild/plugins/content/#css"},{default:t(()=>[$s]),_:1}),Gs,Hs,Ks,a(p,{to:"/esbuild/plugins/content/#/"},{default:t(()=>[Vs]),_:1}),zs]),Xs,s("p",null,[Ys,Qs,Zs,a(p,{to:"/esbuild/plugins/plugins/#resolve-callbacks"},{default:t(()=>[na]),_:1}),sa]),aa,s("p",null,[pa,a(p,{to:"/esbuild/plugins/transform/#log-level"},{default:t(()=>[ta]),_:1}),ea]),oa,ca,s("p",null,[la,a(p,{to:"/esbuild/plugins/transform/#watch"},{default:t(()=>[ua]),_:1}),ia,ra,ka,ba,da]),ma,s("p",null,[ga,a(p,{to:"/esbuild/plugins/transform/#incremental"},{default:t(()=>[ha]),_:1}),ya]),s("p",null,[_a,va,fa,wa,qa,a(p,{to:"/esbuild/plugins/transform/#incremental"},{default:t(()=>[xa]),_:1}),Ra]),Pa,s("p",null,[Oa,s("a",ja,[La,a(o)]),Sa,Aa,Ja,Ta,Na]),Da,s("p",null,[Ia,Ea,Ba,s("a",Fa,[Wa,a(o)]),Ma]),s("p",null,[Ca,s("a",Ua,[$a,a(o)]),Ga]),Ha,s("p",null,[Ka,a(p,{to:"/esbuild/plugins/transform/#incremental"},{default:t(()=>[Va]),_:1}),za,a(p,{to:"/esbuild/plugins/transform/#watch"},{default:t(()=>[Xa]),_:1}),Ya,a(p,{to:"/esbuild/plugins/transform/#serve"},{default:t(()=>[Qa]),_:1}),Za]),np,s("p",null,[sp,ap,pp,a(p,{to:"/esbuild/plugins/plugins/#resolve-callbacks"},{default:t(()=>[tp]),_:1}),ep,a(p,{to:"/esbuild/plugins/plugins/#load-callbacks"},{default:t(()=>[op]),_:1}),cp]),s("p",null,[lp,up,ip,rp,kp,a(p,{to:"/esbuild/plugins/plugins/#build-options"},{default:t(()=>[bp]),_:1}),dp,mp,gp]),hp,s("p",null,[yp,a(p,{to:"/esbuild/plugins/transform/#incremental"},{default:t(()=>[_p]),_:1}),vp,a(p,{to:"/esbuild/plugins/transform/#watch"},{default:t(()=>[fp]),_:1}),wp,a(p,{to:"/esbuild/plugins/transform/#serve"},{default:t(()=>[qp]),_:1}),xp]),Rp,s("p",null,[Pp,a(p,{to:"/esbuild/plugins/plugins/#build-options"},{default:t(()=>[Op]),_:1}),jp,a(p,{to:"/esbuild/plugins/transform/#metafile"},{default:t(()=>[Lp]),_:1}),Sp,Ap,Jp]),Tp,s("p",null,[Np,a(p,{to:"/esbuild/plugins/transform/#incremental"},{default:t(()=>[Dp]),_:1}),Ip,a(p,{to:"/esbuild/plugins/transform/#watch"},{default:t(()=>[Ep]),_:1}),Bp,a(p,{to:"/esbuild/plugins/transform/#serve"},{default:t(()=>[Fp]),_:1}),Wp]),Mp,s("p",null,[Cp,a(p,{to:"/esbuild/plugins/content/#binary"},{default:t(()=>[Up]),_:1}),$p,Gp,Hp,Kp,Vp]),zp,s("p",null,[Xp,Yp,Qp,s("a",Zp,[nt,a(o)]),st]),at],64)}var lt=r(k,[["render",pt]]);export{lt as default};
