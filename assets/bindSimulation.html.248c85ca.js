import{a as n}from"./app.ee3fc36b.js";import{_ as s}from"./plugin-vue_export-helper.21dcd24c.js";const a={},p=n(`<h3 id="\u3010\u8FDB\u96363-4\u671F\u3011\u6DF1\u5EA6\u89E3\u6790bind\u539F\u7406\u3001\u4F7F\u7528\u573A\u666F\u53CA\u6A21\u62DF\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#\u3010\u8FDB\u96363-4\u671F\u3011\u6DF1\u5EA6\u89E3\u6790bind\u539F\u7406\u3001\u4F7F\u7528\u573A\u666F\u53CA\u6A21\u62DF\u5B9E\u73B0" aria-hidden="true">#</a> \u3010\u8FDB\u96363-4\u671F\u3011\u6DF1\u5EA6\u89E3\u6790bind\u539F\u7406\u3001\u4F7F\u7528\u573A\u666F\u53CA\u6A21\u62DF\u5B9E\u73B0</h3><h2 id="bind" tabindex="-1"><a class="header-anchor" href="#bind" aria-hidden="true">#</a> <strong>bind()</strong></h2><blockquote><p><code>bind()</code> \u65B9\u6CD5\u4F1A\u521B\u5EFA\u4E00\u4E2A\u65B0\u51FD\u6570\uFF0C\u5F53\u8FD9\u4E2A\u65B0\u51FD\u6570\u88AB\u8C03\u7528\u65F6\uFF0C\u5B83\u7684 <code>this</code> \u503C\u662F\u4F20\u9012\u7ED9 <code>bind()</code> \u7684\u7B2C\u4E00\u4E2A\u53C2\u6570\uFF0C\u4F20\u5165bind\u65B9\u6CD5\u7684\u7B2C\u4E8C\u4E2A\u4EE5\u53CA\u4EE5\u540E\u7684\u53C2\u6570\u52A0\u4E0A\u7ED1\u5B9A\u51FD\u6570\u8FD0\u884C\u65F6\u672C\u8EAB\u7684\u53C2\u6570\u6309\u7167\u987A\u5E8F\u4F5C\u4E3A\u539F\u51FD\u6570\u7684\u53C2\u6570\u6765\u8C03\u7528\u539F\u51FD\u6570\u3002bind\u8FD4\u56DE\u7684\u7ED1\u5B9A\u51FD\u6570\u4E5F\u80FD\u4F7F\u7528 <code>new</code> \u64CD\u4F5C\u7B26\u521B\u5EFA\u5BF9\u8C61\uFF1A\u8FD9\u79CD\u884C\u4E3A\u5C31\u50CF\u628A\u539F\u51FD\u6570\u5F53\u6210\u6784\u9020\u5668\uFF0C\u63D0\u4F9B\u7684 <code>this</code> \u503C\u88AB\u5FFD\u7565\uFF0C\u540C\u65F6\u8C03\u7528\u65F6\u7684\u53C2\u6570\u88AB\u63D0\u4F9B\u7ED9\u6A21\u62DF\u51FD\u6570\u3002</p></blockquote><p>\u8BED\u6CD5\uFF1A<code>fun.bind(thisArg[, arg1[, arg2[, ...]]])</code></p><p><code>bind</code> \u65B9\u6CD5\u4E0E <code>call / apply</code> \u6700\u5927\u7684\u4E0D\u540C\u5C31\u662F\u524D\u8005\u8FD4\u56DE\u4E00\u4E2A\u7ED1\u5B9A\u4E0A\u4E0B\u6587\u7684<strong>\u51FD\u6570</strong>\uFF0C\u800C\u540E\u4E24\u8005\u662F<strong>\u76F4\u63A5\u6267\u884C</strong>\u4E86\u51FD\u6570\u3002</p><p>\u6765\u4E2A\u4F8B\u5B50\u8BF4\u660E\u4E0B</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> value <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> foo <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token number">1</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">bar</span><span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span> age</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
		<span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>value<span class="token punctuation">,</span>
		<span class="token literal-property property">name</span><span class="token operator">:</span> name<span class="token punctuation">,</span>
		<span class="token literal-property property">age</span><span class="token operator">:</span> age
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token function">bar</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>foo<span class="token punctuation">,</span> <span class="token string">&quot;Jack&quot;</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u76F4\u63A5\u6267\u884C\u4E86\u51FD\u6570</span>
<span class="token comment">// {value: 1, name: &quot;Jack&quot;, age: 20}</span>

<span class="token keyword">var</span> bindFoo1 <span class="token operator">=</span> <span class="token function">bar</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span>foo<span class="token punctuation">,</span> <span class="token string">&quot;Jack&quot;</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u8FD4\u56DE\u4E00\u4E2A\u51FD\u6570</span>
<span class="token function">bindFoo1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// {value: 1, name: &quot;Jack&quot;, age: 20}</span>

<span class="token keyword">var</span> bindFoo2 <span class="token operator">=</span> <span class="token function">bar</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span>foo<span class="token punctuation">,</span> <span class="token string">&quot;Jack&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u8FD4\u56DE\u4E00\u4E2A\u51FD\u6570</span>
<span class="token function">bindFoo2</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// {value: 1, name: &quot;Jack&quot;, age: 20}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><p>\u901A\u8FC7\u4E0A\u8FF0\u4EE3\u7801\u53EF\u4EE5\u770B\u51FAbind \u6709\u5982\u4E0B\u7279\u6027\uFF1A</p><ul><li><p>1\u3001\u53EF\u4EE5\u6307\u5B9Athis</p></li><li><p>2\u3001\u8FD4\u56DE\u4E00\u4E2A\u51FD\u6570</p></li><li><p>3\u3001\u53EF\u4EE5\u4F20\u5165\u53C2\u6570</p></li><li><p>4\u3001\u67EF\u91CC\u5316</p></li></ul><h2 id="\u4F7F\u7528\u573A\u666F" tabindex="-1"><a class="header-anchor" href="#\u4F7F\u7528\u573A\u666F" aria-hidden="true">#</a> <strong>\u4F7F\u7528\u573A\u666F</strong></h2><hr><h2 id="_1\u3001\u4E1A\u52A1\u573A\u666F" tabindex="-1"><a class="header-anchor" href="#_1\u3001\u4E1A\u52A1\u573A\u666F" aria-hidden="true">#</a> <strong>1\u3001\u4E1A\u52A1\u573A\u666F</strong></h2><p>\u7ECF\u5E38\u6709\u5982\u4E0B\u7684\u4E1A\u52A1\u573A\u666F</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> nickname <span class="token operator">=</span> <span class="token string">&quot;Kitty&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function">Person</span><span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>nickname <span class="token operator">=</span> name<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function-variable function">distractedGreeting</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

        <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Hello, my name is &quot;</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>nickname<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
 
<span class="token keyword">var</span> person <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token string">&#39;jawil&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
person<span class="token punctuation">.</span><span class="token function">distractedGreeting</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//Hello, my name is Kitty</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p>\u8FD9\u91CC\u8F93\u51FA\u7684<code>nickname</code>\u662F\u5168\u5C40\u7684\uFF0C\u5E76\u4E0D\u662F\u521B\u5EFA <code>person</code> \u65F6\u4F20\u5165\u7684\u53C2\u6570\uFF0C\u56E0\u4E3A <code>setTimeout</code> \u5728\u5168\u5C40\u73AF\u5883\u4E2D\u6267\u884C\uFF08\u4E0D\u7406\u89E3\u7684\u67E5\u770B\u3010\u8FDB\u96363-1\u671F\u3011\uFF09\uFF0C\u6240\u4EE5 <code>this</code> \u6307\u5411\u7684\u662F<code>window</code>\u3002</p><p>\u8FD9\u8FB9\u628A <code>setTimeout</code> \u6362\u6210\u5F02\u6B65\u56DE\u8C03\u4E5F\u662F\u4E00\u6837\u7684\uFF0C\u6BD4\u5982\u63A5\u53E3\u8BF7\u6C42\u56DE\u8C03\u3002</p><p>\u89E3\u51B3\u65B9\u6848\u6709\u4E0B\u9762\u4E24\u79CD\u3002</p><div size="1">**\u89E3\u51B3\u65B9\u68481\uFF1A**</div> \u7F13\u5B58 \`this\`\u503C <div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> nickname <span class="token operator">=</span> <span class="token string">&quot;Kitty&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function">Person</span><span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>nickname <span class="token operator">=</span> name<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function-variable function">distractedGreeting</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        
		<span class="token keyword">var</span> self <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span> <span class="token comment">// added</span>
        <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Hello, my name is &quot;</span> <span class="token operator">+</span> self<span class="token punctuation">.</span>nickname<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// changed</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
 
<span class="token keyword">var</span> person <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token string">&#39;jawil&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
person<span class="token punctuation">.</span><span class="token function">distractedGreeting</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Hello, my name is jawil</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><div size="1">**\u89E3\u51B3\u65B9\u68482\uFF1A**</div> \u4F7F\u7528 \`bind\` <div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> nickname <span class="token operator">=</span> <span class="token string">&quot;Kitty&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function">Person</span><span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>nickname <span class="token operator">=</span> name<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function-variable function">distractedGreeting</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

        <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Hello, my name is &quot;</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>nickname<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
 
<span class="token keyword">var</span> person <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token string">&#39;jawil&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
person<span class="token punctuation">.</span><span class="token function">distractedGreeting</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Hello, my name is jawil</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h2 id="_2\u3001\u9A8C\u8BC1\u662F\u5426\u662F\u6570\u7EC4" tabindex="-1"><a class="header-anchor" href="#_2\u3001\u9A8C\u8BC1\u662F\u5426\u662F\u6570\u7EC4" aria-hidden="true">#</a> <strong>2\u3001\u9A8C\u8BC1\u662F\u5426\u662F\u6570\u7EC4</strong></h2><p>\u3010\u8FDB\u96363-3\u671F\u3011\u4ECB\u7ECD\u4E86 call \u7684\u4F7F\u7528\u573A\u666F\uFF0C\u8FD9\u91CC\u91CD\u65B0\u56DE\u987E\u4E0B\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">isArray</span><span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span><span class="token punctuation">{</span> 
    <span class="token keyword">return</span> <span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">&#39;[object Array]&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">isArray</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// true</span>

<span class="token comment">// \u76F4\u63A5\u4F7F\u7528 toString()</span>
<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 	<span class="token comment">// &quot;1,2,3&quot;</span>
<span class="token string">&quot;123&quot;</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 		<span class="token comment">// &quot;123&quot;</span>
<span class="token number">123.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 		<span class="token comment">// SyntaxError: Invalid or unexpected token</span>
<span class="token function">Number</span><span class="token punctuation">(</span><span class="token number">123</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;123&quot;</span>
<span class="token function">Object</span><span class="token punctuation">(</span><span class="token number">123</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;123&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>\u53EF\u4EE5\u901A\u8FC7<code>toString()</code> \u6765\u83B7\u53D6\u6BCF\u4E2A\u5BF9\u8C61\u7684\u7C7B\u578B\uFF0C\u4F46\u662F\u4E0D\u540C\u5BF9\u8C61\u7684 <code>toString()</code>\u6709\u4E0D\u540C\u7684\u5B9E\u73B0\uFF0C\u6240\u4EE5\u901A\u8FC7 <code>Object.prototype.toString()</code> \u6765\u68C0\u6D4B\uFF0C\u9700\u8981\u4EE5 <code>call() / apply()</code> \u7684\u5F62\u5F0F\u6765\u8C03\u7528\uFF0C\u4F20\u9012\u8981\u68C0\u67E5\u7684\u5BF9\u8C61\u4F5C\u4E3A\u7B2C\u4E00\u4E2A\u53C2\u6570\u3002</p><p>\u53E6\u4E00\u4E2A<code>\u9A8C\u8BC1\u662F\u5426\u662F\u6570\u7EC4\u7684\u65B9\u6CD5</code>\uFF0C\u8FD9\u4E2A\u65B9\u6848\u7684<code>\u4F18\u70B9</code>\u662F\u53EF\u4EE5\u76F4\u63A5\u4F7F\u7528\u6539\u9020\u540E\u7684 <code>toStr</code>\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> toStr <span class="token operator">=</span> <span class="token class-name">Function</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>toString<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function">isArray</span><span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span><span class="token punctuation">{</span> 
    <span class="token keyword">return</span> <span class="token function">toStr</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">&#39;[object Array]&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">isArray</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// true</span>

<span class="token comment">// \u4F7F\u7528\u6539\u9020\u540E\u7684 toStr</span>
<span class="token function">toStr</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 	<span class="token comment">// &quot;[object Array]&quot;</span>
<span class="token function">toStr</span><span class="token punctuation">(</span><span class="token string">&quot;123&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 		<span class="token comment">// &quot;[object String]&quot;</span>
<span class="token function">toStr</span><span class="token punctuation">(</span><span class="token number">123</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 		<span class="token comment">// &quot;[object Number]&quot;</span>
<span class="token function">toStr</span><span class="token punctuation">(</span><span class="token function">Object</span><span class="token punctuation">(</span><span class="token number">123</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;[object Number]&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>\u4E0A\u9762\u65B9\u6CD5\u9996\u5148\u4F7F\u7528 <code>Function.prototype.call</code>\u51FD\u6570\u6307\u5B9A\u4E00\u4E2A <code>this</code> \u503C\uFF0C\u7136\u540E <code>.bind</code> \u8FD4\u56DE\u4E00\u4E2A\u65B0\u7684\u51FD\u6570\uFF0C\u59CB\u7EC8\u5C06 <code>Object.prototype.toString</code> \u8BBE\u7F6E\u4E3A\u4F20\u5165\u53C2\u6570\u3002\u5176\u5B9E\u7B49\u4EF7\u4E8E <code>Object.prototype.toString.call()</code> \u3002</p><p>\u8FD9\u91CC\u6709\u4E00\u4E2A<strong>\u524D\u63D0</strong>\u662F<code>toString()</code>\u65B9\u6CD5<strong>\u6CA1\u6709\u88AB\u8986\u76D6</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">toString</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">isArray</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="_3\u3001\u67EF\u91CC\u5316-curry" tabindex="-1"><a class="header-anchor" href="#_3\u3001\u67EF\u91CC\u5316-curry" aria-hidden="true">#</a> <strong>3\u3001\u67EF\u91CC\u5316\uFF08curry\uFF09</strong></h2><blockquote><p>\u53EA\u4F20\u9012\u7ED9\u51FD\u6570\u4E00\u90E8\u5206\u53C2\u6570\u6765\u8C03\u7528\u5B83\uFF0C\u8BA9\u5B83\u8FD4\u56DE\u4E00\u4E2A\u51FD\u6570\u53BB\u5904\u7406\u5269\u4E0B\u7684\u53C2\u6570\u3002 \u53EF\u4EE5\u4E00\u6B21\u6027\u5730\u8C03\u7528\u67EF\u91CC\u5316\u51FD\u6570\uFF0C\u4E5F\u53EF\u4EE5\u6BCF\u6B21\u53EA\u4F20\u4E00\u4E2A\u53C2\u6570\u5206\u591A\u6B21\u8C03\u7528\u3002</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">add</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">y</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> x <span class="token operator">+</span> y<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> increment <span class="token operator">=</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> addTen <span class="token operator">=</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">increment</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 3</span>

<span class="token function">addTen</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 12</span>

<span class="token function">add</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 3</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p>\u8FD9\u91CC\u5B9A\u4E49\u4E86\u4E00\u4E2A <code>add</code> \u51FD\u6570\uFF0C\u5B83\u63A5\u53D7\u4E00\u4E2A\u53C2\u6570\u5E76\u8FD4\u56DE\u4E00\u4E2A\u65B0\u7684\u51FD\u6570\u3002\u8C03\u7528 <code>add</code> \u4E4B\u540E\uFF0C\u8FD4\u56DE\u7684\u51FD\u6570\u5C31\u901A\u8FC7\u95ED\u5305\u7684\u65B9\u5F0F\u8BB0\u4F4F\u4E86 <code>add</code> \u7684\u7B2C\u4E00\u4E2A\u53C2\u6570\u3002\u6240\u4EE5\u8BF4 <code>bind</code> \u672C\u8EAB\u4E5F\u662F\u95ED\u5305\u7684\u4E00\u79CD\u4F7F\u7528\u573A\u666F\u3002</p><h2 id="\u6A21\u62DF\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#\u6A21\u62DF\u5B9E\u73B0" aria-hidden="true">#</a> <strong>\u6A21\u62DF\u5B9E\u73B0</strong></h2><hr><p><code>bind\uFF08\uFF09</code> \u51FD\u6570\u5728 ES5 \u624D\u88AB\u52A0\u5165\uFF0C\u6240\u4EE5\u5E76\u4E0D\u662F\u6240\u6709\u6D4F\u89C8\u5668\u90FD\u652F\u6301\uFF0C<code>IE8</code>\u53CA\u4EE5\u4E0B\u7684\u7248\u672C\u4E2D\u4E0D\u88AB\u652F\u6301\uFF0C\u5982\u679C\u9700\u8981\u517C\u5BB9\u53EF\u4EE5\u4F7F\u7528 Polyfill \u6765\u5B9E\u73B0\u3002</p><p>\u9996\u5148\u6765\u5B9E\u73B0\u4EE5\u4E0B\u56DB\u70B9\u7279\u6027\uFF1A</p><ul><li><p>1\u3001\u53EF\u4EE5\u6307\u5B9A<code>this</code></p></li><li><p>2\u3001\u8FD4\u56DE\u4E00\u4E2A\u51FD\u6570</p></li><li><p>3\u3001\u53EF\u4EE5\u4F20\u5165\u53C2\u6570</p></li><li><p>4\u3001\u67EF\u91CC\u5316</p></li></ul><h2 id="\u6A21\u62DF\u5B9E\u73B0\u7B2C\u4E00\u6B65" tabindex="-1"><a class="header-anchor" href="#\u6A21\u62DF\u5B9E\u73B0\u7B2C\u4E00\u6B65" aria-hidden="true">#</a> <strong>\u6A21\u62DF\u5B9E\u73B0\u7B2C\u4E00\u6B65</strong></h2><p>\u5BF9\u4E8E\u7B2C 1 \u70B9\uFF0C\u4F7F\u7528 <code>call / apply</code> \u6307\u5B9A <code>this</code> \u3002</p><p>\u5BF9\u4E8E\u7B2C 2 \u70B9\uFF0C\u4F7F\u7528 return \u8FD4\u56DE\u4E00\u4E2A\u51FD\u6570\u3002</p><p>\u7ED3\u5408\u524D\u9762 2 \u70B9\uFF0C\u53EF\u4EE5\u5199\u51FA\u7B2C\u4E00\u7248\uFF0C\u4EE3\u7801\u5982\u4E0B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u7B2C\u4E00\u7248</span>
<span class="token class-name">Function</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">bind2</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">context</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> self <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span> <span class="token comment">// this \u6307\u5411\u8C03\u7528\u8005</span>
    <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u5B9E\u73B0\u7B2C 2\u70B9</span>
        <span class="token keyword">return</span> <span class="token function">self</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u5B9E\u73B0\u7B2C 1 \u70B9</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>\u6D4B\u8BD5\u4E00\u4E0B</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u6D4B\u8BD5\u7528\u4F8B</span>
<span class="token keyword">var</span> value <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> foo <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token number">1</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">bar</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>value<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">var</span> bindFoo <span class="token operator">=</span> bar<span class="token punctuation">.</span><span class="token function">bind2</span><span class="token punctuation">(</span>foo<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">bindFoo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p><strong>\u6A21\u62DF\u5B9E\u73B0\u7B2C\u4E8C\u6B65</strong></p><p>\u5BF9\u4E8E\u7B2C 3 \u70B9\uFF0C\u4F7F\u7528 <code>arguments</code> \u83B7\u53D6\u53C2\u6570\u6570\u7EC4\u5E76\u4F5C\u4E3A <code>self.apply()</code> \u7684\u7B2C\u4E8C\u4E2A\u53C2\u6570\u3002</p><p>\u5BF9\u4E8E\u7B2C 4 \u70B9\uFF0C\u83B7\u53D6\u8FD4\u56DE\u51FD\u6570\u7684\u53C2\u6570\uFF0C\u7136\u540E\u540C\u7B2C3\u70B9\u7684\u53C2\u6570\u5408\u5E76\u6210\u4E00\u4E2A\u53C2\u6570\u6570\u7EC4\uFF0C\u5E76\u4F5C\u4E3A <code>self.apply()</code> \u7684\u7B2C\u4E8C\u4E2A\u53C2\u6570\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u7B2C\u4E8C\u7248</span>
<span class="token class-name">Function</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">bind2</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">context</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token keyword">var</span> self <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
    <span class="token comment">// \u5B9E\u73B0\u7B2C3\u70B9\uFF0C\u56E0\u4E3A\u7B2C1\u4E2A\u53C2\u6570\u662F\u6307\u5B9A\u7684this,\u6240\u4EE5\u53EA\u622A\u53D6\u7B2C1\u4E2A\u4E4B\u540E\u7684\u53C2\u6570</span>
	<span class="token comment">// arr.slice(begin); \u5373 [begin, end]</span>
    <span class="token keyword">var</span> args <span class="token operator">=</span> <span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>arguments<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 

    <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5B9E\u73B0\u7B2C4\u70B9\uFF0C\u8FD9\u65F6\u7684arguments\u662F\u6307bind\u8FD4\u56DE\u7684\u51FD\u6570\u4F20\u5165\u7684\u53C2\u6570</span>
        <span class="token comment">// \u5373 return function \u7684\u53C2\u6570</span>
        <span class="token keyword">var</span> bindArgs <span class="token operator">=</span> <span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>arguments<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token function">self</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span> context<span class="token punctuation">,</span> args<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>bindArgs<span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p>\u6D4B\u8BD5\u4E00\u4E0B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u6D4B\u8BD5\u7528\u4F8B</span>
<span class="token keyword">var</span> value <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> foo <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token number">1</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">bar</span><span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span> age</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
		<span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>value<span class="token punctuation">,</span>
		<span class="token literal-property property">name</span><span class="token operator">:</span> name<span class="token punctuation">,</span>
		<span class="token literal-property property">age</span><span class="token operator">:</span> age
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> bindFoo <span class="token operator">=</span> bar<span class="token punctuation">.</span><span class="token function">bind2</span><span class="token punctuation">(</span>foo<span class="token punctuation">,</span> <span class="token string">&quot;Jack&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">bindFoo</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// {value: 1, name: &quot;Jack&quot;, age: 20}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><h2 id="\u6A21\u62DF\u5B9E\u73B0\u7B2C\u4E09\u6B65" tabindex="-1"><a class="header-anchor" href="#\u6A21\u62DF\u5B9E\u73B0\u7B2C\u4E09\u6B65" aria-hidden="true">#</a> <strong>\u6A21\u62DF\u5B9E\u73B0\u7B2C\u4E09\u6B65</strong></h2><p>\u8FD8\u6709\u4E00\u4E2A\u96BE\u70B9\uFF0Cbind \u6709\u4EE5\u4E0B\u4E00\u4E2A\u7279\u6027</p><blockquote><p>\u4E00\u4E2A\u7ED1\u5B9A\u51FD\u6570\u4E5F\u80FD\u4F7F\u7528new\u64CD\u4F5C\u7B26\u521B\u5EFA\u5BF9\u8C61\uFF1A\u8FD9\u79CD\u884C\u4E3A\u5C31\u50CF\u628A\u539F\u51FD\u6570\u5F53\u6210\u6784\u9020\u5668\uFF0C\u63D0\u4F9B\u7684 this \u503C\u88AB\u5FFD\u7565\uFF0C\u540C\u65F6\u8C03\u7528\u65F6\u7684\u53C2\u6570\u88AB\u63D0\u4F9B\u7ED9\u6A21\u62DF\u51FD\u6570\u3002</p></blockquote><p>\u6765\u4E2A\u4F8B\u5B50\u8BF4\u660E\u4E0B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> value <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> foo <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token number">1</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function">bar</span><span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span> age</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>habit <span class="token operator">=</span> <span class="token string">&#39;shopping&#39;</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>age<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
bar<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>friend <span class="token operator">=</span> <span class="token string">&#39;kevin&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> bindFoo <span class="token operator">=</span> <span class="token function">bar</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span>foo<span class="token punctuation">,</span> <span class="token string">&#39;Jack&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> obj <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">bindFoo</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// undefined</span>
<span class="token comment">// Jack</span>
<span class="token comment">// 20</span>

obj<span class="token punctuation">.</span>habit<span class="token punctuation">;</span>
<span class="token comment">// shopping</span>

obj<span class="token punctuation">.</span>friend<span class="token punctuation">;</span>
<span class="token comment">// kevin</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><p>\u4E0A\u9762\u4F8B\u5B50\u4E2D\uFF0C\u8FD0\u884C\u7ED3\u679C<code>this.value</code> \u8F93\u51FA\u4E3A <code>undefined</code>\uFF0C\u8FD9\u4E0D\u662F\u5168\u5C40<code>value</code> \u4E5F\u4E0D\u662F<code>foo</code>\u5BF9\u8C61\u4E2D\u7684<code>value</code>\uFF0C\u8FD9\u8BF4\u660E <code>bind</code> \u7684 <code>this</code> \u5BF9\u8C61\u5931\u6548\u4E86\uFF0C<code>new</code> \u7684\u5B9E\u73B0\u4E2D\u751F\u6210\u4E00\u4E2A\u65B0\u7684\u5BF9\u8C61\uFF0C\u8FD9\u4E2A\u65F6\u5019\u7684 <code>this</code>\u6307\u5411\u7684\u662F <code>obj</code>\u3002\uFF08\u3010\u8FDB\u96363-1\u671F\u3011\u6709\u4ECB\u7ECDnew\u7684\u5B9E\u73B0\u539F\u7406\uFF0C\u4E0B\u4E00\u671F\u4E5F\u4F1A\u91CD\u70B9\u4ECB\u7ECD\uFF09</p><p>\u8FD9\u91CC\u53EF\u4EE5\u901A\u8FC7\u4FEE\u6539\u8FD4\u56DE\u51FD\u6570\u7684\u539F\u578B\u6765\u5B9E\u73B0\uFF0C\u4EE3\u7801\u5982\u4E0B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u7B2C\u4E09\u7248</span>
<span class="token class-name">Function</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">bind2</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">context</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> self <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> args <span class="token operator">=</span> <span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>arguments<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">var</span> <span class="token function-variable function">fBound</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">var</span> bindArgs <span class="token operator">=</span> <span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>arguments<span class="token punctuation">)</span><span class="token punctuation">;</span>
        
        <span class="token comment">// \u6CE8\u91CA1</span>
        <span class="token keyword">return</span> <span class="token function">self</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>
            <span class="token keyword">this</span> <span class="token keyword">instanceof</span> <span class="token class-name">fBound</span> <span class="token operator">?</span> <span class="token keyword">this</span> <span class="token operator">:</span> context<span class="token punctuation">,</span> 
            args<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>bindArgs<span class="token punctuation">)</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u6CE8\u91CA2</span>
    fBound<span class="token punctuation">.</span>prototype <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>prototype<span class="token punctuation">;</span>
    <span class="token keyword">return</span> fBound<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><ul><li><p>\u6CE8\u91CA1\uFF1A</p><ul><li><ul><li>\u5F53\u4F5C\u4E3A\u6784\u9020\u51FD\u6570\u65F6\uFF0Cthis \u6307\u5411\u5B9E\u4F8B\uFF0C\u6B64\u65F6 <code>this instanceof fBound</code> \u7ED3\u679C\u4E3A <code>true</code>\uFF0C\u53EF\u4EE5\u8BA9\u5B9E\u4F8B\u83B7\u5F97\u6765\u81EA\u7ED1\u5B9A\u51FD\u6570\u7684\u503C\uFF0C\u5373\u4E0A\u4F8B\u4E2D\u5B9E\u4F8B\u4F1A\u5177\u6709 <code>habit</code> \u5C5E\u6027\u3002</li></ul></li><li><ul><li>\u5F53\u4F5C\u4E3A\u666E\u901A\u51FD\u6570\u65F6\uFF0Cthis \u6307\u5411 <code>window</code>\uFF0C\u6B64\u65F6\u7ED3\u679C\u4E3A <code>false</code>\uFF0C\u5C06\u7ED1\u5B9A\u51FD\u6570\u7684 this \u6307\u5411 <code>context</code></li></ul></li></ul></li><li><p>\u6CE8\u91CA2\uFF1A \u4FEE\u6539\u8FD4\u56DE\u51FD\u6570\u7684 <code>prototype</code> \u4E3A\u7ED1\u5B9A\u51FD\u6570\u7684 <code>prototype</code>\uFF0C\u5B9E\u4F8B\u5C31\u53EF\u4EE5\u7EE7\u627F\u7ED1\u5B9A\u51FD\u6570\u7684\u539F\u578B\u4E2D\u7684\u503C\uFF0C\u5373\u4E0A\u4F8B\u4E2D <code>obj</code> \u53EF\u4EE5\u83B7\u53D6\u5230 <code>bar</code> \u539F\u578B\u4E0A\u7684 <code>friend</code>\u3002</p></li></ul><h2 id="\u6A21\u62DF\u5B9E\u73B0\u7B2C\u56DB\u6B65" tabindex="-1"><a class="header-anchor" href="#\u6A21\u62DF\u5B9E\u73B0\u7B2C\u56DB\u6B65" aria-hidden="true">#</a> <strong>\u6A21\u62DF\u5B9E\u73B0\u7B2C\u56DB\u6B65</strong></h2><p>\u4E0A\u9762\u5B9E\u73B0\u4E2D <code>fBound.prototype = this.prototype</code>\u6709\u4E00\u4E2A\u7F3A\u70B9\uFF0C\u76F4\u63A5\u4FEE\u6539 <code>fBound.prototype</code> \u7684\u65F6\u5019\uFF0C\u4E5F\u4F1A\u76F4\u63A5\u4FEE\u6539 <code>this.prototype</code>\u3002</p><p>\u6765\u4E2A\u4EE3\u7801\u6D4B\u8BD5\u4E0B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u6D4B\u8BD5\u7528\u4F8B</span>
<span class="token keyword">var</span> value <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> foo <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token number">1</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function">bar</span><span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span> age</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>habit <span class="token operator">=</span> <span class="token string">&#39;shopping&#39;</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>age<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
bar<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>friend <span class="token operator">=</span> <span class="token string">&#39;kevin&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> bindFoo <span class="token operator">=</span> bar<span class="token punctuation">.</span><span class="token function">bind2</span><span class="token punctuation">(</span>foo<span class="token punctuation">,</span> <span class="token string">&#39;Jack&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// bind2</span>
<span class="token keyword">var</span> obj <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">bindFoo</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u8FD4\u56DE\u6B63\u786E</span>
<span class="token comment">// undefined</span>
<span class="token comment">// Jack</span>
<span class="token comment">// 20</span>

obj<span class="token punctuation">.</span>habit<span class="token punctuation">;</span> <span class="token comment">// \u8FD4\u56DE\u6B63\u786E</span>
<span class="token comment">// shopping</span>

obj<span class="token punctuation">.</span>friend<span class="token punctuation">;</span> <span class="token comment">// \u8FD4\u56DE\u6B63\u786E</span>
<span class="token comment">// kevin</span>

obj<span class="token punctuation">.</span>__proto__<span class="token punctuation">.</span>friend <span class="token operator">=</span> <span class="token string">&quot;Kitty&quot;</span><span class="token punctuation">;</span> <span class="token comment">// \u4FEE\u6539\u539F\u578B</span>

bar<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>friend<span class="token punctuation">;</span> <span class="token comment">// \u8FD4\u56DE\u9519\u8BEF\uFF0C\u8FD9\u91CC\u88AB\u4FEE\u6539\u4E86</span>
<span class="token comment">// Kitty</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br></div></div><p>\u89E3\u51B3\u65B9\u6848\u662F\u7528\u4E00\u4E2A\u7A7A\u5BF9\u8C61\u4F5C\u4E3A\u4E2D\u4ECB\uFF0C\u628A <code>fBound.prototype</code> \u8D4B\u503C\u4E3A\u7A7A\u5BF9\u8C61\u7684\u5B9E\u4F8B\uFF08\u539F\u578B\u5F0F\u7EE7\u627F\uFF09\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">fNOP</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>			<span class="token comment">// \u521B\u5EFA\u4E00\u4E2A\u7A7A\u5BF9\u8C61</span>
fNOP<span class="token punctuation">.</span>prototype <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>prototype<span class="token punctuation">;</span> 	<span class="token comment">// \u7A7A\u5BF9\u8C61\u7684\u539F\u578B\u6307\u5411\u7ED1\u5B9A\u51FD\u6570\u7684\u539F\u578B</span>
fBound<span class="token punctuation">.</span>prototype <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">fNOP</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>		<span class="token comment">// \u7A7A\u5BF9\u8C61\u7684\u5B9E\u4F8B\u8D4B\u503C\u7ED9 fBound.prototype</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u8FD9\u8FB9\u53EF\u4EE5\u76F4\u63A5\u4F7F\u7528ES5\u7684 <code>Object.create()</code>\u65B9\u6CD5\u751F\u6210\u4E00\u4E2A\u65B0\u5BF9\u8C61</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>fBound<span class="token punctuation">.</span>prototype <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>prototype<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>\u4E0D\u8FC7 <code>bind</code> \u548C <code>Object.create()</code>\u90FD\u662FES5\u65B9\u6CD5\uFF0C\u90E8\u5206IE\u6D4F\u89C8\u5668\uFF08IE &lt; 9\uFF09\u5E76\u4E0D\u652F\u6301\uFF0CPolyfill\u4E2D\u4E0D\u80FD\u7528 <code>Object.create()</code>\u5B9E\u73B0 <code>bind</code>\uFF0C\u4E0D\u8FC7\u539F\u7406\u662F\u4E00\u6837\u7684\u3002</p><p>\u7B2C\u56DB\u7248\u76EE\u524DOK\u5566\uFF0C\u4EE3\u7801\u5982\u4E0B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u7B2C\u56DB\u7248\uFF0C\u5DF2\u901A\u8FC7\u6D4B\u8BD5\u7528\u4F8B</span>
<span class="token class-name">Function</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">bind2</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">context</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> self <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> args <span class="token operator">=</span> <span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>arguments<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">var</span> <span class="token function-variable function">fNOP</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

    <span class="token keyword">var</span> <span class="token function-variable function">fBound</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">var</span> bindArgs <span class="token operator">=</span> <span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>arguments<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token function">self</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>
            <span class="token keyword">this</span> <span class="token keyword">instanceof</span> <span class="token class-name">fNOP</span> <span class="token operator">?</span> <span class="token keyword">this</span> <span class="token operator">:</span> context<span class="token punctuation">,</span> 
            args<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>bindArgs<span class="token punctuation">)</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    fNOP<span class="token punctuation">.</span>prototype <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>prototype<span class="token punctuation">;</span>
    fBound<span class="token punctuation">.</span>prototype <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">fNOP</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> fBound<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><h2 id="\u6A21\u62DF\u5B9E\u73B0\u7B2C\u4E94\u6B65" tabindex="-1"><a class="header-anchor" href="#\u6A21\u62DF\u5B9E\u73B0\u7B2C\u4E94\u6B65" aria-hidden="true">#</a> <strong>\u6A21\u62DF\u5B9E\u73B0\u7B2C\u4E94\u6B65</strong></h2><p>\u5230\u8FD9\u91CC\u5176\u5B9E\u5DF2\u7ECF\u5DEE\u4E0D\u591A\u4E86\uFF0C\u4F46\u6709\u4E00\u4E2A\u95EE\u9898\u662F\u8C03\u7528 bind \u7684\u4E0D\u662F\u51FD\u6570\uFF0C\u8FD9\u65F6\u5019\u9700\u8981\u629B\u51FA\u5F02\u5E38\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> <span class="token keyword">this</span> <span class="token operator">!==</span> <span class="token string">&quot;function&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&quot;Function.prototype.bind - what is trying to be bound is not callable&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u6240\u4EE5\u5B8C\u6574\u7248\u6A21\u62DF\u5B9E\u73B0\u4EE3\u7801\u5982\u4E0B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u7B2C\u4E94\u7248</span>
<span class="token class-name">Function</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">bind2</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">context</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> <span class="token keyword">this</span> <span class="token operator">!==</span> <span class="token string">&quot;function&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&quot;Function.prototype.bind - what is trying to be bound is not callable&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">var</span> self <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> args <span class="token operator">=</span> <span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>arguments<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">var</span> <span class="token function-variable function">fNOP</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

    <span class="token keyword">var</span> <span class="token function-variable function">fBound</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">var</span> bindArgs <span class="token operator">=</span> <span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>arguments<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token function">self</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span> <span class="token keyword">instanceof</span> <span class="token class-name">fNOP</span> <span class="token operator">?</span> <span class="token keyword">this</span> <span class="token operator">:</span> context<span class="token punctuation">,</span> args<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>bindArgs<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    fNOP<span class="token punctuation">.</span>prototype <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>prototype<span class="token punctuation">;</span>
    fBound<span class="token punctuation">.</span>prototype <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">fNOP</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> fBound<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><p><strong>\u3010\u8FDB\u96363-2\u671F\u3011\u601D\u8003\u9898\u89E3</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// 1\u3001\u8D4B\u503C\u8BED\u53E5\u662F\u53F3\u6267\u884C\u7684,\u6B64\u65F6\u4F1A\u5148\u6267\u884C\u53F3\u4FA7\u7684\u5BF9\u8C61</span>
<span class="token keyword">var</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token comment">// 2\u3001say \u662F\u7ACB\u5373\u6267\u884C\u51FD\u6570</span>
    <span class="token function-variable function">say</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">function</span> <span class="token function">_say</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// 5\u3001\u8F93\u51FA window</span>
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// 3\u3001\u7F16\u8BD1\u9636\u6BB5 obj \u8D4B\u503C\u4E3A undefined</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 4\u3001obj\u662F undefined\uFF0Cbind \u672C\u8EAB\u662F call\u5B9E\u73B0\uFF0C</span>
        <span class="token comment">// \u3010\u8FDB\u96363-3\u671F\u3011\uFF1Acall \u63A5\u6536 undefined \u4F1A\u7ED1\u5B9A\u5230 window\u3002</span>
        <span class="token keyword">return</span> <span class="token function">_say</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
obj<span class="token punctuation">.</span><span class="token function">say</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><p><strong>\u3010\u8FDB\u96363-3\u671F\u3011\u601D\u8003\u9898\u89E3</strong></p><p><code>call</code> \u7684\u6A21\u62DF\u5B9E\u73B0\u5982\u4E0B\uFF0C\u90A3\u6709\u6CA1\u6709\u4EC0\u4E48\u95EE\u9898\u5462\uFF1F</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token class-name">Function</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">call</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">context</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    context <span class="token operator">=</span> context <span class="token operator">?</span> <span class="token function">Object</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span> <span class="token operator">:</span> window<span class="token punctuation">;</span> 
    context<span class="token punctuation">.</span>fn <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>

    <span class="token keyword">var</span> args <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> len <span class="token operator">=</span> arguments<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        args<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">&#39;arguments[&#39;</span> <span class="token operator">+</span> i <span class="token operator">+</span> <span class="token string">&#39;]&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">var</span> result <span class="token operator">=</span> <span class="token function">eval</span><span class="token punctuation">(</span><span class="token string">&#39;context.fn(&#39;</span> <span class="token operator">+</span> args <span class="token operator">+</span><span class="token string">&#39;)&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">delete</span> context<span class="token punctuation">.</span>fn<span class="token punctuation">;</span>
    <span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>\u5F53\u7136\u662F\u6709\u95EE\u9898\u7684\uFF0C\u5176\u5B9E\u8FD9\u91CC\u5047\u8BBE <code>context</code> \u5BF9\u8C61\u672C\u8EAB\u6CA1\u6709 <code>fn</code> \u5C5E\u6027\uFF0C\u8FD9\u6837\u80AF\u5B9A\u4E0D\u884C\uFF0C\u5FC5\u987B\u4FDD\u8BC1 <code>fn</code>\u5C5E\u6027\u7684\u552F\u4E00\u6027\u3002</p><h2 id="es3\u4E0B\u6A21\u62DF\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#es3\u4E0B\u6A21\u62DF\u5B9E\u73B0" aria-hidden="true">#</a> <strong>ES3\u4E0B\u6A21\u62DF\u5B9E\u73B0</strong></h2><p>\u89E3\u51B3\u65B9\u6CD5\u4E5F\u5F88\u7B80\u5355\uFF0C\u9996\u5148\u5224\u65AD <code>context</code>\u4E2D\u662F\u5426\u5B58\u5728\u5C5E\u6027 <code>fn</code>\uFF0C\u5982\u679C\u5B58\u5728\u90A3\u5C31\u968F\u673A\u751F\u6210\u4E00\u4E2A\u5C5E\u6027<code>fnxx</code>\uFF0C\u7136\u540E\u5FAA\u73AF\u67E5\u8BE2 <code>context</code> \u5BF9\u8C61\u4E2D\u662F\u5426\u5B58\u5728\u5C5E\u6027 <code>fnxx</code>\u3002\u5982\u679C\u4E0D\u5B58\u5728\u5219\u8FD4\u56DE\u6700\u7EC8\u503C\u3002</p><p>\u4E00\u79CD<strong>\u5FAA\u73AF\u65B9\u6848</strong>\u5B9E\u73B0\u4EE3\u7801\u5982\u4E0B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">fnFactory</span><span class="token punctuation">(</span><span class="token parameter">context</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">var</span> unique_fn <span class="token operator">=</span> <span class="token string">&quot;fn&quot;</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span>unique_fn<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    	unique_fn <span class="token operator">=</span> <span class="token string">&quot;fn&quot;</span> <span class="token operator">+</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u5FAA\u73AF\u5224\u65AD\u5E76\u91CD\u65B0\u8D4B\u503C</span>
    <span class="token punctuation">}</span>
    
    <span class="token keyword">return</span> unique_fn<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>\u4E00\u79CD<strong>\u9012\u5F52\u65B9\u6848</strong>\u5B9E\u73B0\u4EE3\u7801\u5982\u4E0B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">fnFactory</span><span class="token punctuation">(</span><span class="token parameter">context</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">var</span> unique_fn <span class="token operator">=</span> <span class="token string">&quot;fn&quot;</span> <span class="token operator">+</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span>unique_fn<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// return arguments.callee(context); ES5 \u5F00\u59CB\u7981\u6B62\u4F7F\u7528</span>
        <span class="token keyword">return</span> <span class="token function">fnFactory</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u5FC5\u987B return</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> unique_fn<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p><strong>\u6A21\u62DF\u5B9E\u73B0</strong>\u5B8C\u6574\u4EE3\u7801\u5982\u4E0B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">fnFactory</span><span class="token punctuation">(</span><span class="token parameter">context</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">var</span> unique_fn <span class="token operator">=</span> <span class="token string">&quot;fn&quot;</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span>unique_fn<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    	unique_fn <span class="token operator">=</span> <span class="token string">&quot;fn&quot;</span> <span class="token operator">+</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u5FAA\u73AF\u5224\u65AD\u5E76\u91CD\u65B0\u8D4B\u503C</span>
    <span class="token punctuation">}</span>
    
    <span class="token keyword">return</span> unique_fn<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token class-name">Function</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">call</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">context</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    context <span class="token operator">=</span> context <span class="token operator">?</span> <span class="token function">Object</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span> <span class="token operator">:</span> window<span class="token punctuation">;</span> 
    <span class="token keyword">var</span> fn <span class="token operator">=</span> <span class="token function">fnFactory</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// added</span>
    context<span class="token punctuation">[</span>fn<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span> <span class="token comment">// changed</span>

    <span class="token keyword">var</span> args <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> len <span class="token operator">=</span> arguments<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        args<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">&#39;arguments[&#39;</span> <span class="token operator">+</span> i <span class="token operator">+</span> <span class="token string">&#39;]&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">var</span> result <span class="token operator">=</span> <span class="token function">eval</span><span class="token punctuation">(</span><span class="token string">&#39;context[fn](&#39;</span> <span class="token operator">+</span> args <span class="token operator">+</span><span class="token string">&#39;)&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// changed</span>

    <span class="token keyword">delete</span> context<span class="token punctuation">[</span>fn<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// changed</span>
    <span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u6D4B\u8BD5\u7528\u4F8B\u5728\u4E0B\u9762</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><h2 id="es6\u4E0B\u6A21\u62DF\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#es6\u4E0B\u6A21\u62DF\u5B9E\u73B0" aria-hidden="true">#</a> <strong>ES6\u4E0B\u6A21\u62DF\u5B9E\u73B0</strong></h2><p>ES6\u6709\u4E00\u4E2A\u65B0\u7684\u57FA\u672C\u7C7B\u578B<code>Symbol</code>\uFF0C\u8868\u793A<strong>\u72EC\u4E00\u65E0\u4E8C</strong>\u7684\u503C\uFF0C\u7528\u6CD5\u5982\u4E0B\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> symbol1 <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> symbol2 <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token number">42</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> symbol3 <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&#39;foo&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> symbol1<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;symbol&quot;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>symbol3<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;Symbol(foo)&quot;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&#39;foo&#39;</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&#39;foo&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p><strong>\u4E0D\u80FD\u4F7F\u7528</strong> <code>new</code> \u547D\u4EE4\uFF0C\u56E0\u4E3A\u8FD9\u662F\u57FA\u672C\u7C7B\u578B\u7684\u503C\uFF0C\u4E0D\u7136\u4F1A\u62A5\u9519\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">new</span> <span class="token class-name">Symbol</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// TypeError: Symbol is not a constructor</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>\u6A21\u62DF\u5B9E\u73B0</strong>\u5B8C\u6574\u4EE3\u7801\u5982\u4E0B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token class-name">Function</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">call</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">context</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  context <span class="token operator">=</span> context <span class="token operator">?</span> <span class="token function">Object</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span> <span class="token operator">:</span> window<span class="token punctuation">;</span> 
  <span class="token keyword">var</span> fn <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// added</span>
  context<span class="token punctuation">[</span>fn<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span> <span class="token comment">// changed</span>

  <span class="token keyword">let</span> args <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>arguments<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> result <span class="token operator">=</span> context<span class="token punctuation">[</span>fn<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// changed</span>

  <span class="token keyword">delete</span> context<span class="token punctuation">[</span>fn<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// changed</span>
  <span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u6D4B\u8BD5\u7528\u4F8B\u5728\u4E0B\u9762</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>\u6D4B\u8BD5\u7528\u4F8B\u5728\u8FD9\u91CC\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u6D4B\u8BD5\u7528\u4F8B</span>
<span class="token keyword">var</span> value <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
    <span class="token literal-property property">fn</span><span class="token operator">:</span> <span class="token number">123</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">bar</span><span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span> age</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>value<span class="token punctuation">,</span>
        <span class="token literal-property property">name</span><span class="token operator">:</span> name<span class="token punctuation">,</span>
        <span class="token literal-property property">age</span><span class="token operator">:</span> age
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token function">bar</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token comment">// 2</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">bar</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> <span class="token string">&#39;kevin&#39;</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 1</span>
<span class="token comment">// {value: 1, name: &quot;kevin&quot;, age: 18}</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// {value: 1, fn: 123}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><p><strong>\u6269\u5C55\u4E00\u4E0B</strong></p><p>\u6709\u4E24\u79CD\u65B9\u6848\u53EF\u4EE5\u5224\u65AD\u5BF9\u8C61\u4E2D\u662F\u5426\u5B58\u5728\u67D0\u4E2A\u5C5E\u6027\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
     <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">2</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">b</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token string">&quot;hello b&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><ul><li>1\u3001<code>in</code> \u64CD\u4F5C\u7B26</li></ul><p><code>in</code> \u64CD\u4F5C\u7B26\u4F1A\u68C0\u67E5\u5C5E\u6027\u662F\u5426\u5B58\u5728\u5BF9\u8C61\u53CA\u5176 <code>[[Prototype]]</code> \u539F\u578B\u94FE\u4E2D\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">(</span><span class="token string">&quot;a&quot;</span> <span class="token keyword">in</span> obj<span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment">// true</span>
<span class="token punctuation">(</span><span class="token string">&quot;b&quot;</span> <span class="token keyword">in</span> obj<span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><ul><li>2\u3001<code>Object.hasOwnProperty(...)</code>\u65B9\u6CD5</li></ul><p><code>hasOwnProperty(...)</code>\u53EA\u4F1A\u68C0\u67E5\u5C5E\u6027\u662F\u5426\u5B58\u5728\u5BF9\u8C61\u4E2D\uFF0C<strong>\u4E0D\u4F1A</strong>\u5411\u4E0A\u68C0\u67E5\u5176\u539F\u578B\u94FE\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>obj<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment">//true</span>
obj<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span><span class="token string">&quot;b&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment">//false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>\u6CE8\u610F</strong>\u4EE5\u4E0B\u51E0\u70B9\uFF1A</p><ul><li><p>1\u3001\u770B\u8D77\u6765 <code>in</code> \u64CD\u4F5C\u7B26\u53EF\u4EE5\u68C0\u67E5\u5BB9\u5668\u5185\u662F\u5426\u6709\u67D0\u4E2A\u503C\uFF0C\u5B9E\u9645\u4E0A\u68C0\u67E5\u7684\u662F\u67D0\u4E2A<strong>\u5C5E\u6027\u540D</strong>\u662F\u5426\u5B58\u5728\u3002\u5BF9\u4E8E\u6570\u7EC4\u6765\u8BF4\uFF0C<code>4 in [2, 4, 6]</code> \u7ED3\u679C\u8FD4\u56DE <code>false</code>\uFF0C\u56E0\u4E3A <code>[2, 4, 6]</code> \u8FD9\u4E2A\u6570\u7EC4\u4E2D\u5305\u542B\u7684\u5C5E\u6027\u540D\u662F<code>0\uFF0C1\uFF0C2</code> \uFF0C\u6CA1\u6709<code>4</code>\u3002</p></li><li><p>2\u3001\u6240\u6709\u666E\u901A\u5BF9\u8C61\u90FD\u53EF\u4EE5\u901A\u8FC7 <code>Object.prototype</code> \u7684\u59D4\u6258\u6765\u8BBF\u95EE <code>hasOwnProperty(...)</code>\uFF0C\u4F46\u662F\u5BF9\u4E8E\u4E00\u4E9B\u7279\u6B8A\u5BF9\u8C61\uFF08 <code>Object.create(null)</code> \u521B\u5EFA\uFF09\u6CA1\u6709\u8FDE\u63A5\u5230 <code>Object.prototype</code>\uFF0C\u8FD9\u79CD\u60C5\u51B5\u5FC5\u987B\u4F7F\u7528 <code>Object.prototype.hasOwnProperty.call(obj, &quot;a&quot;)</code>\uFF0C\u663E\u793A\u7ED1\u5B9A\u5230 <code>obj</code> \u4E0A\u3002<strong>\u53C8\u662F\u4E00\u4E2A call \u7684\u7528\u6CD5</strong>\u3002</p></li></ul><h2 id="\u672C\u671F\u601D\u8003\u9898" tabindex="-1"><a class="header-anchor" href="#\u672C\u671F\u601D\u8003\u9898" aria-hidden="true">#</a> <strong>\u672C\u671F\u601D\u8003\u9898</strong></h2><p>\u7528 JS \u5B9E\u73B0\u4E00\u4E2A\u65E0\u9650\u7D2F\u52A0\u7684\u51FD\u6570 add\uFF0C\u793A\u4F8B\u5982\u4E0B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 1</span>
<span class="token function">add</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 3</span>
<span class="token function">add</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>\uFF1B <span class="token comment">// 6</span>
<span class="token function">add</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span>\uFF1B <span class="token comment">// 10 </span>

<span class="token comment">// \u4EE5\u6B64\u7C7B\u63A8</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div>`,116);function t(e,o){return p}var u=s(a,[["render",t]]);export{u as default};
