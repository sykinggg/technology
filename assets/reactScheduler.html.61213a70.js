import{a as n}from"./app.ee3fc36b.js";import{_ as s}from"./plugin-vue_export-helper.21dcd24c.js";const a={},e=n(`<h2 id="scheduler" tabindex="-1"><a class="header-anchor" href="#scheduler" aria-hidden="true">#</a> <strong>scheduler</strong></h2><hr><p>React16.5 \u4E4B\u540E\u628A<code>scheduler</code>\u5355\u72EC\u53D1\u4E00\u4E2A\u5305\u4E86\uFF0C\u5C31\u53EB<code>scheduler</code></p><h2 id="schedulecallbackwithexpirationtime" tabindex="-1"><a class="header-anchor" href="#schedulecallbackwithexpirationtime" aria-hidden="true">#</a> <strong>scheduleCallbackWithExpirationTime</strong></h2><p>\u5F02\u6B65\u8FDB\u884C<code>root</code>\u4EFB\u52A1\u8C03\u5EA6\u5C31\u662F\u901A\u8FC7\u8FD9\u4E2A\u65B9\u6CD5\u6765\u505A\u7684\uFF0C\u8FD9\u91CC\u6700\u4E3B\u8981\u7684\u5C31\u662F\u8C03\u7528\u4E86<code>scheduler</code>\u7684<code>scheduleDeferredCallback</code>\u65B9\u6CD5\uFF08\u5728<code>scheduler</code>\u5305\u4E2D\u662F<code>scheduleWork</code>\uFF09</p><p>\u4F20\u5165\u7684\u7684\u662F\u56DE\u8C03\u51FD\u6570<code>performAsyncWork</code>\uFF0C\u4EE5\u53CA\u4E00\u4E2A\u5305\u542B<code>timeout</code>\u8D85\u65F6\u4E8B\u4EF6\u7684\u5BF9\u8C61</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">scheduleCallbackWithExpirationTime</span><span class="token punctuation">(</span>
    <span class="token parameter"><span class="token literal-property property">root</span><span class="token operator">:</span> FiberRoot<span class="token punctuation">,</span>
    <span class="token literal-property property">expirationTime</span><span class="token operator">:</span> ExpirationTime<span class="token punctuation">,</span></span>
<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>callbackExpirationTime <span class="token operator">!==</span> NoWork<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// A callback is already scheduled. Check its expiration time (timeout).</span>
        <span class="token comment">// \u56DE\u8C03\u5DF2\u88AB\u5B89\u6392\u3002 \u68C0\u67E5\u5176\u5230\u671F\u65F6\u95F4\uFF08\u8D85\u65F6\uFF09\u3002</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>expirationTime <span class="token operator">&gt;</span> callbackExpirationTime<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// Existing callback has sufficient timeout. Exit.</span>
            <span class="token comment">// \u73B0\u6709\u7684\u56DE\u8C03\u5177\u6709\u8DB3\u591F\u7684\u8D85\u65F6\u65F6\u95F4\u3002 \u51FA\u53E3\u3002</span>
            <span class="token keyword">return</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>callbackID <span class="token operator">!==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// Existing callback has insufficient timeout. Cancel and schedule a new one.</span>
                <span class="token comment">// \u73B0\u6709\u7684\u56DE\u8C03\u6CA1\u6709\u8DB3\u591F\u7684\u8D85\u65F6\u3002 \u53D6\u6D88\u5E76\u5B89\u6392\u65B0\u7684</span>
                <span class="token function">cancelDeferredCallback</span><span class="token punctuation">(</span>callbackID<span class="token punctuation">)</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// The request callback timer is already running. Don&#39;t start a new one.</span>
        <span class="token comment">// \u8BF7\u6C42\u56DE\u8C03\u8BA1\u65F6\u5668\u5DF2\u5728\u8FD0\u884C\u3002 \u4E0D\u8981\u5F00\u59CB\u65B0\u7684\u3002</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token function">startRequestCallbackTimer</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    callbackExpirationTime <span class="token operator">=</span> expirationTime
    <span class="token keyword">const</span> currentMs <span class="token operator">=</span> <span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> originalStartTimeMs
    <span class="token keyword">const</span> expirationTimeMs <span class="token operator">=</span> <span class="token function">expirationTimeToMs</span><span class="token punctuation">(</span>expirationTime<span class="token punctuation">)</span>
    <span class="token keyword">const</span> timeout <span class="token operator">=</span> expirationTimeMs <span class="token operator">-</span> currentMs
    callbackID <span class="token operator">=</span> <span class="token function">scheduleDeferredCallback</span><span class="token punctuation">(</span>performAsyncWork<span class="token punctuation">,</span> <span class="token punctuation">{</span> timeout <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br></div></div><h2 id="scheduler-schedulework" tabindex="-1"><a class="header-anchor" href="#scheduler-schedulework" aria-hidden="true">#</a> <strong>scheduler.scheduleWork</strong></h2><p>\u521B\u5EFA\u4E00\u4E2A\u8C03\u5EA6\u8282\u70B9<code>newNode</code>\uFF0C\u5E76\u6309\u7167<code>timoutAt</code>\u7684\u987A\u5E8F\u52A0\u5165\u5230<code>CallbackNode</code>\u94FE\u8868\uFF0C\u8C03\u7528<code>ensureHostCallbackIsScheduled</code></p><p>\u8FD9\u91CC\u9762\u7684<code>expirationTime</code>\u662F\u8C03\u7528\u65F6\u4F20\u5165\u7684<code>timeoutAt</code>\u52A0\u4E0A\u5F53\u524D\u65F6\u95F4\u5F62\u6210\u7684\u8FC7\u671F\u65F6\u95F4</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">unstable_scheduleCallback</span><span class="token punctuation">(</span><span class="token parameter">callback<span class="token punctuation">,</span> deprecated_options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> startTime <span class="token operator">=</span>
        currentEventStartTime <span class="token operator">!==</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token operator">?</span> currentEventStartTime <span class="token operator">:</span> <span class="token function">getCurrentTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token keyword">var</span> expirationTime
    <span class="token keyword">if</span> <span class="token punctuation">(</span>
        <span class="token keyword">typeof</span> deprecated_options <span class="token operator">===</span> <span class="token string">&#39;object&#39;</span> <span class="token operator">&amp;&amp;</span>
        deprecated_options <span class="token operator">!==</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span>
        <span class="token keyword">typeof</span> deprecated_options<span class="token punctuation">.</span>timeout <span class="token operator">===</span> <span class="token string">&#39;number&#39;</span>
    <span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// FIXME: Remove this branch once we lift expiration times out of React.</span>
        <span class="token comment">// \u4E00\u65E6\u5C06\u8FC7\u671F\u65F6\u95F4\u4ECEReact\u4E2D\u79FB\u9664\uFF0C\u8BF7\u5220\u9664\u6B64\u5206\u652F\u3002</span>
        expirationTime <span class="token operator">=</span> startTime <span class="token operator">+</span> deprecated_options<span class="token punctuation">.</span>timeout
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u8FD9\u91CC\u662F\u4EE5\u540E\u628A\`expirationTime\`\u4ECEReact\u4E2D\u62BD\u79BB\u51FA\u6765\u4E4B\u540E\u7684\u903B\u8F91</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">var</span> newNode <span class="token operator">=</span> <span class="token punctuation">{</span>
        callback<span class="token punctuation">,</span>
        <span class="token literal-property property">priorityLevel</span><span class="token operator">:</span> currentPriorityLevel<span class="token punctuation">,</span>
        expirationTime<span class="token punctuation">,</span>
        <span class="token literal-property property">next</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
        <span class="token literal-property property">previous</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// Insert the new callback into the list, ordered first by expiration, then</span>
    <span class="token comment">// by insertion. So the new callback is inserted any other callback with</span>
    <span class="token comment">// equal expiration.</span>
    <span class="token comment">// \u5C06\u65B0\u7684\u56DE\u8C03\u63D2\u5165\u5230\u5217\u8868\u4E2D\uFF0C\u9996\u5148\u6309\u5230\u671F\u65F6\u95F4\u6392\u5E8F\uFF0C\u7136\u540E\u901A\u8FC7\u63D2\u5165\u3002 \u56E0\u6B64\uFF0C\u65B0\u7684\u56DE\u8C03\u5C06\u63D2\u5165\u5176\u4ED6\u4EFB\u4F55\u5E26\u6709\u76F8\u7B49\u7684\u5230\u671F\u65E5\u3002</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>firstCallbackNode <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// This is the first callback in the list.</span>
        <span class="token comment">// \u8FD9\u662F\u5217\u8868\u4E2D\u7684\u7B2C\u4E00\u4E2A\u56DE\u8C03\u3002</span>
        firstCallbackNode <span class="token operator">=</span> newNode<span class="token punctuation">.</span>next <span class="token operator">=</span> newNode<span class="token punctuation">.</span>previous <span class="token operator">=</span> newNode
        <span class="token function">ensureHostCallbackIsScheduled</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">var</span> next <span class="token operator">=</span> <span class="token keyword">null</span>
        <span class="token keyword">var</span> node <span class="token operator">=</span> firstCallbackNode
        <span class="token keyword">do</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>node<span class="token punctuation">.</span>expirationTime <span class="token operator">&gt;</span> expirationTime<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// The new callback expires before this one.</span>
                <span class="token comment">// \u65B0\u7684\u56DE\u8C03\u5728\u6B64\u4E4B\u524D\u5230\u671F\u3002</span>
                next <span class="token operator">=</span> node
                <span class="token keyword">break</span>
            <span class="token punctuation">}</span>
            node <span class="token operator">=</span> node<span class="token punctuation">.</span>next
        <span class="token punctuation">}</span> <span class="token keyword">while</span> <span class="token punctuation">(</span>node <span class="token operator">!==</span> firstCallbackNode<span class="token punctuation">)</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>next <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// No callback with a later expiration was found, which means the new</span>
            <span class="token comment">// callback has the latest expiration in the list.</span>
            <span class="token comment">// \u672A\u627E\u5230\u5177\u6709\u66F4\u9AD8\u5230\u671F\u65E5\u671F\u7684\u56DE\u8C03\uFF0C\u8FD9\u610F\u5473\u7740\u65B0\u7684\u56DE\u8C03\u5177\u6709\u5217\u8868\u4E2D\u7684\u6700\u65B0\u5230\u671F\u65F6\u95F4\u3002</span>
            next <span class="token operator">=</span> firstCallbackNode
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>next <span class="token operator">===</span> firstCallbackNode<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// The new callback has the earliest expiration in the entire list.</span>
            <span class="token comment">// \u65B0\u7684\u56DE\u8C03\u5728\u6574\u4E2A\u5217\u8868\u4E2D\u6700\u65E9\u8FC7\u671F\u3002</span>
            firstCallbackNode <span class="token operator">=</span> newNode
            <span class="token function">ensureHostCallbackIsScheduled</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">var</span> previous <span class="token operator">=</span> next<span class="token punctuation">.</span>previous
        previous<span class="token punctuation">.</span>next <span class="token operator">=</span> next<span class="token punctuation">.</span>previous <span class="token operator">=</span> newNode
        newNode<span class="token punctuation">.</span>next <span class="token operator">=</span> next
        newNode<span class="token punctuation">.</span>previous <span class="token operator">=</span> previous
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> newNode
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br></div></div><h2 id="ensurehostcallbackisscheduled" tabindex="-1"><a class="header-anchor" href="#ensurehostcallbackisscheduled" aria-hidden="true">#</a> <strong>ensureHostCallbackIsScheduled</strong></h2><p>\u5982\u679C\u5DF2\u7ECF\u5728\u8C03\u7528\u56DE\u8C03\u4E86\uFF0C\u5C31 <code>return</code>\uFF0C\u56E0\u4E3A\u672C\u6765\u5C31\u4F1A\u7EE7\u7EED\u8C03\u7528\u4E0B\u53BB\uFF0C<code>isExecutingCallback</code>\u5728<code>flushWork</code>\u7684\u65F6\u5019\u4F1A\u88AB\u4FEE\u6539\u4E3A<code>true</code></p><p>\u5982\u679C<code>isHostCallbackScheduled</code>\u4E3A<code>false</code>\uFF0C\u4E5F\u5C31\u662F\u8FD8\u6CA1\u5F00\u59CB\u8C03\u5EA6\uFF0C\u90A3\u4E48\u8BBE\u4E3A<code>true</code>\uFF0C\u5982\u679C\u5DF2\u7ECF\u5F00\u59CB\u4E86\uFF0C\u5C31\u76F4\u63A5\u53D6\u6D88\uFF0C\u56E0\u4E3A\u987A\u5E8F\u53EF\u80FD\u53D8\u4E86\u3002</p><p>\u8C03\u7528<code>requestHostCallback</code>\u5F00\u59CB\u8C03\u5EA6</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">ensureHostCallbackIsScheduled</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>isExecutingCallback<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// Don&#39;t schedule work yet; wait until the next time we yield.</span>
        <span class="token comment">// \u4E0D\u8981\u5B89\u6392\u5DE5\u4F5C\uFF1B \u7B49\u5230\u4E0B\u4E00\u6B21yield\u3002</span>
        <span class="token keyword">return</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// Schedule the host callback using the earliest expiration in the list.</span>
    <span class="token comment">// \u4F7F\u7528\u5217\u8868\u4E2D\u7684\u6700\u65E9\u5230\u671F\u65F6\u95F4\u5B89\u6392\u4E3B\u673A\u56DE\u8C03\u3002</span>
    <span class="token keyword">var</span> expirationTime <span class="token operator">=</span> firstCallbackNode<span class="token punctuation">.</span>expirationTime
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isHostCallbackScheduled<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        isHostCallbackScheduled <span class="token operator">=</span> <span class="token boolean">true</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token comment">// Cancel the existing host callback.</span>
        <span class="token comment">// \u53D6\u6D88\u73B0\u6709\u7684\u4E3B\u673A\u56DE\u8C03\u3002</span>
        <span class="token function">cancelHostCallback</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token function">requestHostCallback</span><span class="token punctuation">(</span>flushWork<span class="token punctuation">,</span> expirationTime<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token function-variable function">cancelHostCallback</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    scheduledHostCallback <span class="token operator">=</span> <span class="token keyword">null</span>
    isMessageEventScheduled <span class="token operator">=</span> <span class="token boolean">false</span>
    timeoutTime <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><h2 id="requesthostcallback" tabindex="-1"><a class="header-anchor" href="#requesthostcallback" aria-hidden="true">#</a> <strong>requestHostCallback</strong></h2><p>\u5F00\u59CB\u8FDB\u5165\u8C03\u5EA6\uFF0C\u8BBE\u7F6E\u8C03\u5EA6\u7684\u5185\u5BB9\uFF0C\u7528<code>scheduledHostCallback</code>\u548C<code>timeoutTime</code>\u8FD9\u4E24\u4E2A\u5168\u5C40\u53D8\u91CF\u8BB0\u5F55\u56DE\u8C03\u51FD\u6570\u548C\u5BF9\u5E94\u7684\u8FC7\u671F\u65F6\u95F4</p><p>\u8C03\u7528<code>requestAnimationFrameWithTimeout</code>\uFF0C\u5176\u5B9E\u5C31\u662F\u8C03\u7528<code>requestAnimationFrame</code>\u5728\u52A0\u4E0A\u8BBE\u7F6E\u4E86\u4E00\u4E2A<code>100ms</code>\u7684\u5B9A\u65F6\u5668\uFF0C\u9632\u6B62<code>requestAnimationFrame</code>\u592A\u4E45\u4E0D\u89E6\u53D1</p><p>\u8C03\u7528\u56DE\u8C03<code>animtionTick</code>\u5E76\u8BBE\u7F6E<code>isAnimationFrameScheduled</code>\u5168\u5C40\u53D8\u91CF\u4E3A<code>true</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function-variable function">requestHostCallback</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">callback<span class="token punctuation">,</span> absoluteTimeout</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    scheduledHostCallback <span class="token operator">=</span> callback
    timeoutTime <span class="token operator">=</span> absoluteTimeout
    <span class="token keyword">if</span> <span class="token punctuation">(</span>isFlushingHostCallback <span class="token operator">||</span> absoluteTimeout <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// Don&#39;t wait for the next frame. Continue working ASAP, in a new event.</span>
        <span class="token comment">// \u4E0D\u8981\u7B49\u5F85\u4E0B\u4E00\u5E27\u3002 \u5728\u65B0\u4E8B\u4EF6\u4E2D\uFF0C\u8BF7\u7EE7\u7EED\u5C3D\u5FEB\u5DE5\u4F5C\u3002</span>
        window<span class="token punctuation">.</span><span class="token function">postMessage</span><span class="token punctuation">(</span>messageKey<span class="token punctuation">,</span> <span class="token string">&#39;*&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isAnimationFrameScheduled<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        isAnimationFrameScheduled <span class="token operator">=</span> <span class="token boolean">true</span>
        <span class="token function">requestAnimationFrameWithTimeout</span><span class="token punctuation">(</span>animationTick<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h2 id="\u6A21\u62DF-requestidlecallback" tabindex="-1"><a class="header-anchor" href="#\u6A21\u62DF-requestidlecallback" aria-hidden="true">#</a> <strong>\u6A21\u62DF requestIdleCallback</strong></h2><p>\u56E0\u4E3A<code>requestIdleCallback</code>\u8FD9\u4E2A API \u76EE\u524D\u8FD8\u5904\u4E8E\u8349\u6848\u9636\u6BB5\uFF0C\u6240\u4EE5\u6D4F\u89C8\u5668\u5B9E\u73B0\u7387\u8FD8\u4E0D\u9AD8\uFF0C\u6240\u4EE5\u5728\u8FD9\u91CC React \u76F4\u63A5\u4F7F\u7528\u4E86<code>polyfill</code>\u7684\u65B9\u6848\u3002</p><p>\u8FD9\u4E2A\u65B9\u6848\u7B80\u5355\u6765\u8BF4\u662F\u901A\u8FC7<code>requestAnimationFrame</code>\u5728\u6D4F\u89C8\u5668\u6E32\u67D3\u4E00\u5E27\u4E4B\u524D\u505A\u4E00\u4E9B\u5904\u7406\uFF0C\u7136\u540E\u901A\u8FC7<code>postMessage</code>\u5728<code>macro task</code>\uFF08\u7C7B\u4F3C <code>setTimeout</code>\uFF09\u4E2D\u52A0\u5165\u4E00\u4E2A\u56DE\u8C03\uFF0C\u5728\u56E0\u4E3A\u63A5\u4E0B\u53BB\u4F1A\u8FDB\u5165\u6D4F\u89C8\u5668\u6E32\u67D3\u9636\u6BB5\uFF0C\u6240\u4EE5\u4E3B\u7EBF\u7A0B\u662F\u88AB block \u4F4F\u7684\uFF0C\u7B49\u5230\u6E32\u67D3\u5B8C\u4E86\u7136\u540E\u56DE\u6765\u6E05\u7A7A<code>macro task</code>\u3002</p><p>\u603B\u4F53\u4E0A\u8DDF<code>requestIdleCallback</code>\u5DEE\u4E0D\u591A\uFF0C<strong>\u7B49\u5230\u4E3B\u7EBF\u7A0B\u6709\u7A7A\u7684\u65F6\u5019\u56DE\u6765\u8C03\u7528</strong></p><h2 id="animationtick" tabindex="-1"><a class="header-anchor" href="#animationtick" aria-hidden="true">#</a> <strong>animationTick</strong></h2><p>\u53EA\u8981<code>scheduledHostCallback</code>\u8FD8\u5728\u5C31\u7EE7\u7EED\u8C03\u8981<code>requestAnimationFrameWithTimeout</code>\u56E0\u4E3A\u8FD9\u4E00\u5E27\u6E32\u67D3\u5B8C\u4E86\u53EF\u80FD\u961F\u5217\u8FD8\u6CA1\u60C5\u51B5\uFF0C\u672C\u8EAB\u4E5F\u662F\u8981\u8FDB\u5165\u518D\u6B21\u8C03\u7528\u7684\uFF0C\u8FD9\u8FB9\u5C31\u7701\u53BB\u4E86<code>requestHostCallback</code>\u5728\u6B21\u8C03\u7528\u7684\u5FC5\u8981\u6027</p><p>\u63A5\u4E0B\u53BB\u4E00\u6BB5\u4EE3\u7801\u662F\u7528\u6765\u8BA1\u7B97\u76F8\u9694\u7684<code>requestAnimationFrame</code>\u7684\u65F6\u5DEE\u7684\uFF0C\u8FD9\u4E2A\u65F6\u5DEE\u5982\u679C\u8FDE\u7EED\u4E24\u6B21\u90FD\u5C0F\u9C7C\u5F53\u524D\u7684<code>activeFrameTime</code>\uFF0C\u8BF4\u660E\u5E73\u53F0\u7684\u5E27\u7387\u662F\u5F88\u9AD8\u7684\uFF0C\u8FD9\u79CD\u60C5\u51B5\u4E0B\u4F1A\u52A8\u6001\u5F97\u7F29\u5C0F\u5E27\u65F6\u95F4\u3002</p><p>\u6700\u540E\u66F4\u65B0<code>frameDeadline</code>\uFF0C\u7136\u540E\u5982\u679C\u6CA1\u6709\u89E6\u53D1<code>idleTick</code>\u5219\u53D1\u9001\u6D88\u606F</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">animationTick</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">rafTime</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>scheduledHostCallback <span class="token operator">!==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">requestAnimationFrameWithTimeout</span><span class="token punctuation">(</span>animationTick<span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        isAnimationFrameScheduled <span class="token operator">=</span> <span class="token boolean">false</span>
        <span class="token keyword">return</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">var</span> nextFrameTime <span class="token operator">=</span> rafTime <span class="token operator">-</span> frameDeadline <span class="token operator">+</span> activeFrameTime
    <span class="token keyword">if</span> <span class="token punctuation">(</span>nextFrameTime <span class="token operator">&lt;</span> activeFrameTime <span class="token operator">&amp;&amp;</span> previousFrameTime <span class="token operator">&lt;</span> activeFrameTime<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>nextFrameTime <span class="token operator">&lt;</span> <span class="token number">8</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            nextFrameTime <span class="token operator">=</span> <span class="token number">8</span>
        <span class="token punctuation">}</span>
        activeFrameTime <span class="token operator">=</span>
        nextFrameTime <span class="token operator">&lt;</span> previousFrameTime <span class="token operator">?</span> previousFrameTime <span class="token operator">:</span> nextFrameTime
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        previousFrameTime <span class="token operator">=</span> nextFrameTime
    <span class="token punctuation">}</span>
    frameDeadline <span class="token operator">=</span> rafTime <span class="token operator">+</span> activeFrameTime
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isMessageEventScheduled<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        isMessageEventScheduled <span class="token operator">=</span> <span class="token boolean">true</span>
        window<span class="token punctuation">.</span><span class="token function">postMessage</span><span class="token punctuation">(</span>messageKey<span class="token punctuation">,</span> <span class="token string">&#39;*&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><h2 id="idletick" tabindex="-1"><a class="header-anchor" href="#idletick" aria-hidden="true">#</a> <strong>idleTick</strong></h2><p>\u9996\u5148\u5224\u65AD<code>postMessage</code>\u662F\u4E0D\u662F\u81EA\u5DF1\u7684\uFF0C\u4E0D\u662F\u76F4\u63A5\u8FD4\u56DE</p><p>\u6E05\u7A7A<code>scheduledHostCallback</code>\u548C<code>timeoutTime</code></p><p>\u83B7\u53D6\u5F53\u524D\u65F6\u95F4\uFF0C\u5BF9\u6BD4<code>frameDeadline</code>\uFF0C\u67E5\u770B\u662F\u5426\u5DF2\u7ECF\u8D85\u65F6\u4E86\uFF0C\u5982\u679C\u8D85\u65F6\u4E86\uFF0C\u5224\u65AD\u4E00\u4E0B\u4EFB\u52A1<code>callback</code>\u7684\u8FC7\u671F\u65F6\u95F4\u6709\u6CA1\u6709\u5230\uFF0C\u5982\u679C\u6CA1\u6709\u5230\uFF0C\u5219\u91CD\u65B0\u5BF9\u8FD9\u4E2A<code>callback</code>\u8FDB\u884C\u4E00\u6B21\u8C03\u5EA6\uFF0C\u7136\u540E\u8FD4\u56DE\u3002\u5982\u679C\u5230\u4E86\uFF0C\u5219\u8BBE\u7F6E<code>didTimeout</code>\u4E3A<code>true</code></p><p>\u63A5\u4E0B\u53BB\u5C31\u662F\u8C03\u7528<code>callback</code>\u4E86\uFF0C\u8FD9\u91CC\u8BBE\u7F6E<code>isFlushingHostCallback</code>\u5168\u5C40\u53D8\u91CF\u4E3A<code>true</code>\u4EE3\u8868\u6B63\u5728\u6267\u884C\u3002\u5E76\u4E14\u8C03\u7528<code>callback</code>\u4E5F\u5C31\u662F<code>flushWork</code>\u5E76\u4F20\u5165<code>didTimeout</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">idleTick</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>event<span class="token punctuation">.</span>source <span class="token operator">!==</span> window <span class="token operator">||</span> event<span class="token punctuation">.</span>data <span class="token operator">!==</span> messageKey<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span>
    <span class="token punctuation">}</span>

    isMessageEventScheduled <span class="token operator">=</span> <span class="token boolean">false</span>

    <span class="token keyword">var</span> prevScheduledCallback <span class="token operator">=</span> scheduledHostCallback
    <span class="token keyword">var</span> prevTimeoutTime <span class="token operator">=</span> timeoutTime
    scheduledHostCallback <span class="token operator">=</span> <span class="token keyword">null</span>
    timeoutTime <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span>

    <span class="token keyword">var</span> currentTime <span class="token operator">=</span> <span class="token function">getCurrentTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token keyword">var</span> didTimeout <span class="token operator">=</span> <span class="token boolean">false</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>frameDeadline <span class="token operator">-</span> currentTime <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>prevTimeoutTime <span class="token operator">!==</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token operator">&amp;&amp;</span> prevTimeoutTime <span class="token operator">&lt;=</span> currentTime<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            didTimeout <span class="token operator">=</span> <span class="token boolean">true</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isAnimationFrameScheduled<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                isAnimationFrameScheduled <span class="token operator">=</span> <span class="token boolean">true</span>
                <span class="token function">requestAnimationFrameWithTimeout</span><span class="token punctuation">(</span>animationTick<span class="token punctuation">)</span>
            <span class="token punctuation">}</span>
            scheduledHostCallback <span class="token operator">=</span> prevScheduledCallback
            timeoutTime <span class="token operator">=</span> prevTimeoutTime
            <span class="token keyword">return</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>prevScheduledCallback <span class="token operator">!==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        isFlushingHostCallback <span class="token operator">=</span> <span class="token boolean">true</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token function">prevScheduledCallback</span><span class="token punctuation">(</span>didTimeout<span class="token punctuation">)</span>
        <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
            isFlushingHostCallback <span class="token operator">=</span> <span class="token boolean">false</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br></div></div><h2 id="flushwork" tabindex="-1"><a class="header-anchor" href="#flushwork" aria-hidden="true">#</a> <strong>flushWork</strong></h2><p>\u5148\u8BBE\u7F6E<code>isExecutingCallback</code>\u4E3A<code>true</code>\uFF0C\u4EE3\u8868\u6B63\u5728\u8C03\u7528<code>callback</code></p><p>\u8BBE\u7F6E<code>deadlineObject.didTimeout</code>\uFF0C\u5728 React \u4E1A\u52A1\u4E2D\u53EF\u4EE5\u7528\u6765\u5224\u65AD\u4EFB\u52A1\u662F\u5426\u8D85\u65F6</p><p>\u5982\u679C<code>didTimeout</code>\uFF0C\u4F1A\u4E00\u6B21\u4ECE<code>firstCallbackNode</code>\u5411\u540E\u4E00\u76F4\u6267\u884C\uFF0C\u77E5\u9053\u7B2C\u4E00\u4E2A\u6CA1\u8FC7\u671F\u7684\u4EFB\u52A1</p><p>\u5982\u679C\u6CA1\u6709\u8D85\u65F6\uFF0C\u5219\u4F9D\u6B64\u6267\u884C\u7B2C\u4E00\u4E2A<code>callback</code>\uFF0C\u77E5\u9053\u5E27\u65F6\u95F4\u7ED3\u675F\u4E3A\u6B62</p><p>\u6700\u540E\u6E05\u7406\u53D8\u91CF\uFF0C\u5982\u679C\u4EFB\u52A1\u6CA1\u6709\u6267\u884C\u5B8C\uFF0C\u5219\u518D\u6B21\u8C03\u7528<code>ensureHostCallbackIsScheduled</code>\u8FDB\u5165\u8C03\u5EA6</p><p>\u987A\u4FBF\u628A<code>Immedia</code>\u4F18\u5148\u7EA7\u7684\u4EFB\u52A1\u90FD\u8C03\u7528\u4E00\u904D\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">flushWork</span><span class="token punctuation">(</span><span class="token parameter">didTimeout</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    isExecutingCallback <span class="token operator">=</span> <span class="token boolean">true</span>
    deadlineObject<span class="token punctuation">.</span>didTimeout <span class="token operator">=</span> didTimeout
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>didTimeout<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">while</span> <span class="token punctuation">(</span>firstCallbackNode <span class="token operator">!==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">var</span> currentTime <span class="token operator">=</span> <span class="token function">getCurrentTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>firstCallbackNode<span class="token punctuation">.</span>expirationTime <span class="token operator">&lt;=</span> currentTime<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">do</span> <span class="token punctuation">{</span>
                        <span class="token function">flushFirstCallback</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                    <span class="token punctuation">}</span> <span class="token keyword">while</span> <span class="token punctuation">(</span>
                        firstCallbackNode <span class="token operator">!==</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span>
                        firstCallbackNode<span class="token punctuation">.</span>expirationTime <span class="token operator">&lt;=</span> currentTime
                    <span class="token punctuation">)</span>
                    <span class="token keyword">continue</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">break</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>firstCallbackNode <span class="token operator">!==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">do</span> <span class="token punctuation">{</span>
                    <span class="token function">flushFirstCallback</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">}</span> <span class="token keyword">while</span> <span class="token punctuation">(</span>
                    firstCallbackNode <span class="token operator">!==</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span>
                    <span class="token function">getFrameDeadline</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token function">getCurrentTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span>
                <span class="token punctuation">)</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
        isExecutingCallback <span class="token operator">=</span> <span class="token boolean">false</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>firstCallbackNode <span class="token operator">!==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">ensureHostCallbackIsScheduled</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            isHostCallbackScheduled <span class="token operator">=</span> <span class="token boolean">false</span>
        <span class="token punctuation">}</span>
        <span class="token function">flushImmediateWork</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br></div></div><h2 id="flushfirstcallback" tabindex="-1"><a class="header-anchor" href="#flushfirstcallback" aria-hidden="true">#</a> <strong>flushFirstCallback</strong></h2><ul><li><p>\u5982\u679C\u5F53\u524D\u961F\u5217\u4E2D\u53EA\u6709\u4E00\u4E2A\u56DE\u8C03\uFF0C\u6E05\u7A7A\u961F\u5217</p></li><li><p>\u8C03\u7528\u56DE\u8C03\u5E76\u4F20\u5165<code>deadline</code>\u5BF9\u8C61\uFF0C\u91CC\u9762\u6709<code>timeRemaining</code>\u65B9\u6CD5\u901A\u8FC7<code>frameDeadline - now()</code>\u6765\u5224\u65AD\u662F\u5426\u5E27\u65F6\u95F4\u5DF2\u7ECF\u5230\u4E86</p></li><li><p>\u5982\u679C\u56DE\u8C03\u6709\u8FD4\u56DE\u5185\u5BB9\uFF0C\u628A\u8FD9\u4E2A\u8FD4\u56DE\u52A0\u5165\u5230\u56DE\u8C03\u961F\u5217</p></li></ul><h2 id="\u5168\u5C40\u53D8\u91CF\u53C2\u8003" tabindex="-1"><a class="header-anchor" href="#\u5168\u5C40\u53D8\u91CF\u53C2\u8003" aria-hidden="true">#</a> <strong>\u5168\u5C40\u53D8\u91CF\u53C2\u8003</strong></h2><ul><li><strong>isHostCallbackScheduled</strong></li></ul><p>\u662F\u5426\u5DF2\u7ECF\u5F00\u59CB\u8C03\u5EA6\u4E86\uFF0C\u5728<code>ensureHostCallbackIsScheduled</code>\u8BBE\u7F6E\u4E3A<code>true</code>\uFF0C\u5728\u7ED3\u675F\u6267\u884C<code>callback</code>\u4E4B\u540E\u8BBE\u7F6E\u4E3A<code>false</code></p><ul><li><strong>scheduledHostCallback</strong></li></ul><p>\u5728<code>requestHostCallback</code>\u8BBE\u7F6E\uFF0C\u503C\u4E00\u822C\u4E3A<code>flushWork</code>\uFF0C\u4EE3\u8868\u4E0B\u4E00\u4E2A\u8C03\u5EA6\u8981\u505A\u7684\u4E8B\u60C5</p><ul><li><strong>isMessageEventScheduled</strong></li></ul><p>\u662F\u5426\u5DF2\u7ECF\u53D1\u9001\u8C03\u7528<code>idleTick</code>\u7684\u6D88\u606F\uFF0C\u5728<code>animationTick</code>\u4E2D\u8BBE\u7F6E\u4E3A<code>true</code></p><ul><li><strong>timeoutTime</strong></li></ul><p>\u8868\u793A\u8FC7\u671F\u4EFB\u52A1\u7684\u65F6\u95F4\uFF0C\u5728<code>idleTick</code>\u4E2D\u53D1\u73B0\u7B2C\u4E00\u4E2A\u4EFB\u52A1\u7684\u65F6\u95F4\u5DF2\u7ECF\u8FC7\u671F\u7684\u65F6\u5019\u8BBE\u7F6E</p><ul><li><strong>isAnimationFrameScheduled</strong></li></ul><p>\u662F\u5426\u5DF2\u7ECF\u5F00\u59CB\u8C03\u7528<code>requestAnimationFrame</code></p><ul><li><strong>activeFrameTime</strong></li></ul><p>\u7ED9\u4E00\u5E27\u6E32\u67D3\u7528\u7684\u65F6\u95F4\uFF0C\u9ED8\u8BA4\u662F 33\uFF0C\u4E5F\u5C31\u662F 1 \u79D2 30 \u5E27</p><ul><li><strong>frameDeadline</strong></li></ul><p>\u8BB0\u5F55\u5F53\u524D\u5E27\u7684\u5230\u671F\u65F6\u95F4\uFF0C\u4ED6\u7B49\u4E8E<code>currentTime + activeFraeTime</code>\uFF0C\u4E5F\u5C31\u662F <strong><code>requestAnimationFrame</code>\u56DE\u8C03\u4F20\u5165\u7684\u65F6\u95F4\uFF0C\u52A0\u4E0A\u4E00\u5E27\u7684\u65F6\u95F4</strong>\u3002</p><ul><li><strong>isFlushingHostCallback</strong></li></ul><p>\u662F\u5426\u6B63\u5728\u6267\u884C<code>callback</code></p>`,63);function p(t,o){return e}var r=s(a,[["render",p]]);export{r as default};
