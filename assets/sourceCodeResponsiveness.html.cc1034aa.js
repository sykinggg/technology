import{r as t,o,c,b as s,d as p,F as l,e as n,a as e}from"./app.ba47fc91.js";import{_ as r}from"./plugin-vue_export-helper.21dcd24c.js";const u={},i=s("h2",{id:"\u6570\u636E\u7ED1\u5B9A\u539F\u7406",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#\u6570\u636E\u7ED1\u5B9A\u539F\u7406","aria-hidden":"true"},"#"),n(" \u6570\u636E\u7ED1\u5B9A\u539F\u7406")],-1),k=s("p",null,"\u524D\u9762\u5DF2\u7ECF\u8BB2\u8FC7Vue\u6570\u636E\u7ED1\u5B9A\u7684\u539F\u7406\u4E86\uFF0C\u73B0\u5728\u4ECE\u6E90\u7801\u6765\u770B\u4E00\u4E0B\u6570\u636E\u7ED1\u5B9A\u5728Vue\u4E2D\u662F\u5982\u4F55\u5B9E\u73B0\u7684\u3002",-1),b=s("p",null,"\u9996\u5148\u770B\u4E00\u4E0BVue.js\u5B98\u7F51\u4ECB\u7ECD\u54CD\u5E94\u5F0F\u539F\u7406\u7684\u8FD9\u5F20\u56FE\u3002",-1),m=s("p",null,[s("img",{src:"https://cn.vuejs.org/images/data.png",alt:""})],-1),d=s("p",null,"\u8FD9\u5F20\u56FE\u6BD4\u8F83\u6E05\u6670\u5730\u5C55\u793A\u4E86\u6574\u4E2A\u6D41\u7A0B\uFF0C\u9996\u5148\u901A\u8FC7\u4E00\u6B21\u6E32\u67D3\u64CD\u4F5C\u89E6\u53D1Data\u7684getter\uFF08\u8FD9\u91CC\u4FDD\u8BC1\u53EA\u6709\u89C6\u56FE\u4E2D\u9700\u8981\u88AB\u7528\u5230\u7684data\u624D\u4F1A\u89E6\u53D1getter\uFF09\u8FDB\u884C\u4F9D\u8D56\u6536\u96C6\uFF0C\u8FD9\u65F6\u5019\u5176\u5B9EWatcher\u4E0Edata\u53EF\u4EE5\u770B\u6210\u4E00\u79CD\u88AB\u7ED1\u5B9A\u7684\u72B6\u6001\uFF08\u5B9E\u9645\u4E0A\u662Fdata\u7684\u95ED\u5305\u4E2D\u6709\u4E00\u4E2ADeps\u8BA2\u9605\u8005\uFF0C\u5728\u4FEE\u6539\u7684\u65F6\u5019\u4F1A\u901A\u77E5\u6240\u6709\u7684Watcher\u89C2\u5BDF\u8005\uFF09\uFF0C\u5728data\u53D1\u751F\u53D8\u5316\u7684\u65F6\u5019\u4F1A\u89E6\u53D1\u5B83\u7684setter\uFF0Csetter\u901A\u77E5Watcher\uFF0CWatcher\u8FDB\u884C\u56DE\u8C03\u901A\u77E5\u7EC4\u4EF6\u91CD\u65B0\u6E32\u67D3\u7684\u51FD\u6570\uFF0C\u4E4B\u540E\u6839\u636Ediff\u7B97\u6CD5\u6765\u51B3\u5B9A\u662F\u5426\u53D1\u751F\u89C6\u56FE\u7684\u66F4\u65B0\u3002",-1),y=n("Vue\u5728\u521D\u59CB\u5316\u7EC4\u4EF6\u6570\u636E\u65F6\uFF0C\u5728\u751F\u547D\u5468\u671F\u7684"),h={href:"https://github.com/vuejs/vue/blob/dev/src/core/instance/init.js#L55",target:"_blank",rel:"noopener noreferrer"},w=n("beforeCreate"),v=n("\u4E0E"),f={href:"https://github.com/vuejs/vue/blob/dev/src/core/instance/init.js#L59",target:"_blank",rel:"noopener noreferrer"},g=n("created"),_=n("\u94A9\u5B50\u51FD\u6570\u4E4B\u95F4\u5B9E\u73B0\u4E86\u5BF9"),j={href:"https://github.com/vuejs/vue/blob/dev/src/core/instance/state.js#L43",target:"_blank",rel:"noopener noreferrer"},D=n("data\u3001props\u3001computed\u3001methods\u3001events\u4EE5\u53CAwatch"),O=n("\u7684\u5904\u7406\u3002"),x=s("h2",{id:"initdata",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#initdata","aria-hidden":"true"},"#"),n(" initData")],-1),A=n("\u8FD9\u91CC\u6765\u8BB2\u4E00\u4E0B"),V={href:"https://github.com/vuejs/vue/blob/dev/src/core/instance/state.js#L107",target:"_blank",rel:"noopener noreferrer"},E=n("initData"),W=n("\uFF0C\u53EF\u4EE5\u53C2\u8003\u6E90\u7801instance\u4E0B\u7684state.js\u6587\u4EF6\uFF0C\u4E0B\u9762\u6240\u6709\u7684\u4E2D\u6587\u6CE8\u91CA\u90FD\u662F\u52A0\u7684\uFF0C\u82F1\u6587\u6CE8\u91CA\u662F\u5C24\u5927\u52A0\u7684\uFF0C\u8BF7\u4E0D\u8981\u5FFD\u7565\u82F1\u6587\u6CE8\u91CA\uFF0C\u82F1\u6587\u6CE8\u91CA\u90FD\u8BB2\u5230\u4E86\u6BD4\u8F83\u5173\u952E\u6216\u8005\u6666\u6DA9\u96BE\u61C2\u7684\u70B9\u3002"),S=n("\u52A0\u6CE8\u91CA\u7248\u7684vue\u6E90\u7801\u4E5F\u53EF\u4EE5\u76F4\u63A5\u901A\u8FC7"),F={href:"https://github.com/answershuto/learnVue/tree/master/vue-src",target:"_blank",rel:"noopener noreferrer"},I=n("\u4F20\u9001\u95E8"),P=n("\u67E5\u770B\uFF0C\u8FD9\u4E9B\u662F\u5728\u9605\u8BFBVue\u6E90\u7801\u8FC7\u7A0B\u4E2D\u52A0\u7684\u6CE8\u91CA\uFF0C\u6301\u7EED\u66F4\u65B0\u4E2D\u3002"),R=e(`<p>initData\u4E3B\u8981\u662F\u521D\u59CB\u5316data\u4E2D\u7684\u6570\u636E\uFF0C\u5C06\u6570\u636E\u8FDB\u884CObserver\uFF0C\u76D1\u542C\u6570\u636E\u7684\u53D8\u5316\uFF0C\u5176\u4ED6\u7684\u76D1\u89C6\u539F\u7406\u4E00\u81F4\uFF0C\u8FD9\u91CC\u4EE5data\u4E3A\u4F8B\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">initData</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">vm</span><span class="token operator">:</span> Component</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

  <span class="token comment">/*\u5F97\u5230data\u6570\u636E*/</span>
  <span class="token keyword">let</span> data <span class="token operator">=</span> vm<span class="token punctuation">.</span>$options<span class="token punctuation">.</span>data
  data <span class="token operator">=</span> vm<span class="token punctuation">.</span>_data <span class="token operator">=</span> <span class="token keyword">typeof</span> data <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span>
    <span class="token operator">?</span> <span class="token function">getData</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> vm<span class="token punctuation">)</span>
    <span class="token operator">:</span> data <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

  <span class="token comment">/*\u5224\u65AD\u662F\u5426\u662F\u5BF9\u8C61*/</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isPlainObject</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    data <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
    process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">!==</span> <span class="token string">&#39;production&#39;</span> <span class="token operator">&amp;&amp;</span> <span class="token function">warn</span><span class="token punctuation">(</span>
      <span class="token string">&#39;data functions should return an object:\\n&#39;</span> <span class="token operator">+</span>
      <span class="token string">&#39;https://vuejs.org/v2/guide/components.html#data-Must-Be-a-Function&#39;</span><span class="token punctuation">,</span>
      vm
    <span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// proxy data on instance</span>
  <span class="token comment">/*\u904D\u5386data\u5BF9\u8C61*/</span>
  <span class="token keyword">const</span> keys <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
  <span class="token keyword">const</span> props <span class="token operator">=</span> vm<span class="token punctuation">.</span>$options<span class="token punctuation">.</span>props
  <span class="token keyword">let</span> i <span class="token operator">=</span> keys<span class="token punctuation">.</span>length

  <span class="token comment">//\u904D\u5386data\u4E2D\u7684\u6570\u636E</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span>i<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">/*\u4FDD\u8BC1data\u4E2D\u7684key\u4E0D\u4E0Eprops\u4E2D\u7684key\u91CD\u590D\uFF0Cprops\u4F18\u5148\uFF0C\u5982\u679C\u6709\u51B2\u7A81\u4F1A\u4EA7\u751Fwarning*/</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>props <span class="token operator">&amp;&amp;</span> <span class="token function">hasOwn</span><span class="token punctuation">(</span>props<span class="token punctuation">,</span> keys<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">!==</span> <span class="token string">&#39;production&#39;</span> <span class="token operator">&amp;&amp;</span> <span class="token function">warn</span><span class="token punctuation">(</span>
        <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">The data property &quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>keys<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot; is already declared as a prop. </span><span class="token template-punctuation string">\`</span></span> <span class="token operator">+</span>
        <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Use prop default value instead.</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
        vm
      <span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isReserved</span><span class="token punctuation">(</span>keys<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">/*\u5224\u65AD\u662F\u5426\u662F\u4FDD\u7559\u5B57\u6BB5*/</span>

      <span class="token comment">/*\u8FD9\u91CC\u662F\u524D\u9762\u8BB2\u8FC7\u7684\u4EE3\u7406\uFF0C\u5C06data\u4E0A\u9762\u7684\u5C5E\u6027\u4EE3\u7406\u5230\u4E86vm\u5B9E\u4F8B\u4E0A*/</span>
      <span class="token function">proxy</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">_data</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> keys<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token comment">/*Github:https://github.com/answershuto*/</span>
  <span class="token comment">// observe data</span>
  <span class="token comment">/*\u4ECE\u8FD9\u91CC\u5F00\u59CB\u8981observe\u4E86\uFF0C\u5F00\u59CB\u5BF9\u6570\u636E\u8FDB\u884C\u7ED1\u5B9A\uFF0C\u8FD9\u91CC\u6709\u5C24\u5927\u5927\u7684\u6CE8\u91CAasRootData\uFF0C\u8FD9\u6B65\u4F5C\u4E3A\u6839\u6570\u636E\uFF0C\u4E0B\u9762\u4F1A\u8FDB\u884C\u9012\u5F52observe\u8FDB\u884C\u5BF9\u6DF1\u5C42\u5BF9\u8C61\u7684\u7ED1\u5B9A\u3002*/</span>
  <span class="token function">observe</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> <span class="token boolean">true</span> <span class="token comment">/* asRootData */</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br></div></div><p>\u5176\u5B9E\u8FD9\u6BB5\u4EE3\u7801\u4E3B\u8981\u505A\u4E86\u4E24\u4EF6\u4E8B\uFF0C\u4E00\u662F\u5C06_data\u4E0A\u9762\u7684\u6570\u636E\u4EE3\u7406\u5230vm\u4E0A\uFF0C\u53E6\u4E00\u4EF6\u4E8B\u901A\u8FC7observe\u5C06\u6240\u6709\u6570\u636E\u53D8\u6210observable\u3002</p><h2 id="proxy" tabindex="-1"><a class="header-anchor" href="#proxy" aria-hidden="true">#</a> proxy</h2><p>\u63A5\u4E0B\u6765\u770B\u4E00\u4E0Bproxy\u4EE3\u7406\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">/*\u6DFB\u52A0\u4EE3\u7406*/</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">proxy</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">target</span><span class="token operator">:</span> Object<span class="token punctuation">,</span> <span class="token literal-property property">sourceKey</span><span class="token operator">:</span> string<span class="token punctuation">,</span> <span class="token literal-property property">key</span><span class="token operator">:</span> string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  sharedPropertyDefinition<span class="token punctuation">.</span><span class="token function-variable function">get</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">proxyGetter</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">[</span>sourceKey<span class="token punctuation">]</span><span class="token punctuation">[</span>key<span class="token punctuation">]</span>
  <span class="token punctuation">}</span>
  sharedPropertyDefinition<span class="token punctuation">.</span><span class="token function-variable function">set</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">proxySetter</span> <span class="token punctuation">(</span><span class="token parameter">val</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">[</span>sourceKey<span class="token punctuation">]</span><span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> val
  <span class="token punctuation">}</span>
  Object<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> sharedPropertyDefinition<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>\u8FD9\u91CC\u6BD4\u8F83\u597D\u7406\u89E3\uFF0C\u901A\u8FC7proxy\u51FD\u6570\u5C06data\u4E0A\u9762\u7684\u6570\u636E\u4EE3\u7406\u5230vm\u4E0A\uFF0C\u8FD9\u6837\u5C31\u53EF\u4EE5\u7528app.text\u4EE3\u66FFapp._data.text\u4E86\u3002</p><h2 id="observe" tabindex="-1"><a class="header-anchor" href="#observe" aria-hidden="true">#</a> observe</h2>`,8),N=n("\u63A5\u4E0B\u6765\u662F"),B={href:"https://github.com/vuejs/vue/blob/dev/src/core/observer/index.js#L106",target:"_blank",rel:"noopener noreferrer"},C=n("observe"),L=n("\uFF0C\u8FD9\u4E2A\u51FD\u6570\u5B9A\u4E49\u5728core\u6587\u4EF6\u4E0Bobserver\u7684index.js\u6587\u4EF6\u4E2D\u3002"),q=e(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * Attempt to create an observer instance for a value,
 * returns the new observer if successfully observed,
 * or the existing observer if the value already has one.
 */</span>
 <span class="token comment">/*
 \u5C1D\u8BD5\u521B\u5EFA\u4E00\u4E2AObserver\u5B9E\u4F8B\uFF08__ob__\uFF09\uFF0C\u5982\u679C\u6210\u529F\u521B\u5EFAObserver\u5B9E\u4F8B\u5219\u8FD4\u56DE\u65B0\u7684Observer\u5B9E\u4F8B\uFF0C\u5982\u679C\u5DF2\u6709Observer\u5B9E\u4F8B\u5219\u8FD4\u56DE\u73B0\u6709\u7684Observer\u5B9E\u4F8B\u3002
 */</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">observe</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">value</span><span class="token operator">:</span> any<span class="token punctuation">,</span> <span class="token literal-property property">asRootData</span><span class="token operator">:</span> <span class="token operator">?</span>boolean</span><span class="token punctuation">)</span><span class="token operator">:</span> Observer <span class="token operator">|</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>
  <span class="token comment">/*\u5224\u65AD\u662F\u5426\u662F\u4E00\u4E2A\u5BF9\u8C61*/</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isObject</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">let</span> <span class="token literal-property property">ob</span><span class="token operator">:</span> Observer <span class="token operator">|</span> <span class="token keyword">void</span>

  <span class="token comment">/*\u8FD9\u91CC\u7528__ob__\u8FD9\u4E2A\u5C5E\u6027\u6765\u5224\u65AD\u662F\u5426\u5DF2\u7ECF\u6709Observer\u5B9E\u4F8B\uFF0C\u5982\u679C\u6CA1\u6709Observer\u5B9E\u4F8B\u5219\u4F1A\u65B0\u5EFA\u4E00\u4E2AObserver\u5B9E\u4F8B\u5E76\u8D4B\u503C\u7ED9__ob__\u8FD9\u4E2A\u5C5E\u6027\uFF0C\u5982\u679C\u5DF2\u6709Observer\u5B9E\u4F8B\u5219\u76F4\u63A5\u8FD4\u56DE\u8BE5Observer\u5B9E\u4F8B*/</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">hasOwn</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> <span class="token string">&#39;__ob__&#39;</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> value<span class="token punctuation">.</span>__ob__ <span class="token keyword">instanceof</span> <span class="token class-name">Observer</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    ob <span class="token operator">=</span> value<span class="token punctuation">.</span>__ob__
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>

    <span class="token comment">/*\u8FD9\u91CC\u7684\u5224\u65AD\u662F\u4E3A\u4E86\u786E\u4FDDvalue\u662F\u5355\u7EAF\u7684\u5BF9\u8C61\uFF0C\u800C\u4E0D\u662F\u51FD\u6570\u6216\u8005\u662FRegexp\u7B49\u60C5\u51B5\u3002*/</span>
    observerState<span class="token punctuation">.</span>shouldConvert <span class="token operator">&amp;&amp;</span>
    <span class="token operator">!</span><span class="token function">isServerRendering</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>
    <span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token function">isPlainObject</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>
    Object<span class="token punctuation">.</span><span class="token function">isExtensible</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>
    <span class="token operator">!</span>value<span class="token punctuation">.</span>_isVue
  <span class="token punctuation">)</span> <span class="token punctuation">{</span>
    ob <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Observer</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>asRootData <span class="token operator">&amp;&amp;</span> ob<span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token comment">/*\u5982\u679C\u662F\u6839\u6570\u636E\u5219\u8BA1\u6570\uFF0C\u540E\u9762Observer\u4E2D\u7684observe\u7684asRootData\u975Etrue*/</span>
    ob<span class="token punctuation">.</span>vmCount<span class="token operator">++</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> ob
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br></div></div><p>Vue\u7684\u54CD\u5E94\u5F0F\u6570\u636E\u90FD\u4F1A\u6709\u4E00\u4E2A__ob__\u7684\u5C5E\u6027\u4F5C\u4E3A\u6807\u8BB0\uFF0C\u91CC\u9762\u5B58\u653E\u4E86\u8BE5\u5C5E\u6027\u7684\u89C2\u5BDF\u5668\uFF0C\u4E5F\u5C31\u662FObserver\u7684\u5B9E\u4F8B\uFF0C\u9632\u6B62\u91CD\u590D\u7ED1\u5B9A\u3002</p><h2 id="observer" tabindex="-1"><a class="header-anchor" href="#observer" aria-hidden="true">#</a> Observer</h2>`,3),z=n("\u63A5\u4E0B\u6765\u770B\u4E00\u4E0B\u65B0\u5EFA\u7684"),$={href:"https://github.com/vuejs/vue/blob/dev/src/core/observer/index.js#L34",target:"_blank",rel:"noopener noreferrer"},T=n("Observer"),K=n("\u3002Observer\u7684\u4F5C\u7528\u5C31\u662F\u904D\u5386\u5BF9\u8C61\u7684\u6240\u6709\u5C5E\u6027\u5C06\u5176\u8FDB\u884C\u53CC\u5411\u7ED1\u5B9A\u3002"),M=e(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * Observer class that are attached to each observed
 * object. Once attached, the observer converts target
 * object&#39;s property keys into getter/setters that
 * collect dependencies and dispatches updates.
 */</span>
<span class="token keyword">export</span> <span class="token keyword">class</span>  <span class="token punctuation">{</span>
  <span class="token literal-property property">value</span><span class="token operator">:</span> any<span class="token punctuation">;</span>
  <span class="token literal-property property">dep</span><span class="token operator">:</span> Dep<span class="token punctuation">;</span>
  <span class="token literal-property property">vmCount</span><span class="token operator">:</span> number<span class="token punctuation">;</span> <span class="token comment">// number of vms that has this object as root $data</span>

  <span class="token function">constructor</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">value</span><span class="token operator">:</span> any</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">=</span> value
    <span class="token keyword">this</span><span class="token punctuation">.</span>dep <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Dep</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>vmCount <span class="token operator">=</span> <span class="token number">0</span>

    <span class="token comment">/*
    \u5C06Observer\u5B9E\u4F8B\u7ED1\u5B9A\u5230data\u7684__ob__\u5C5E\u6027\u4E0A\u9762\u53BB\uFF0C\u4E4B\u524D\u8BF4\u8FC7observe\u7684\u65F6\u5019\u4F1A\u5148\u68C0\u6D4B\u662F\u5426\u5DF2\u7ECF\u6709__ob__\u5BF9\u8C61\u5B58\u653EObserver\u5B9E\u4F8B\u4E86\uFF0Cdef\u65B9\u6CD5\u5B9A\u4E49\u53EF\u4EE5\u53C2\u8003https://github.com/vuejs/vue/blob/dev/src/core/util/lang.js#L16
    */</span>
    <span class="token function">def</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> <span class="token string">&#39;__ob__&#39;</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

      <span class="token comment">/*
          \u5982\u679C\u662F\u6570\u7EC4\uFF0C\u5C06\u4FEE\u6539\u540E\u53EF\u4EE5\u622A\u83B7\u54CD\u5E94\u7684\u6570\u7EC4\u65B9\u6CD5\u66FF\u6362\u6389\u8BE5\u6570\u7EC4\u7684\u539F\u578B\u4E2D\u7684\u539F\u751F\u65B9\u6CD5\uFF0C\u8FBE\u5230\u76D1\u542C\u6570\u7EC4\u6570\u636E\u53D8\u5316\u54CD\u5E94\u7684\u6548\u679C\u3002
          \u8FD9\u91CC\u5982\u679C\u5F53\u524D\u6D4F\u89C8\u5668\u652F\u6301__proto__\u5C5E\u6027\uFF0C\u5219\u76F4\u63A5\u8986\u76D6\u5F53\u524D\u6570\u7EC4\u5BF9\u8C61\u539F\u578B\u4E0A\u7684\u539F\u751F\u6570\u7EC4\u65B9\u6CD5\uFF0C\u5982\u679C\u4E0D\u652F\u6301\u8BE5\u5C5E\u6027\uFF0C\u5219\u76F4\u63A5\u8986\u76D6\u6570\u7EC4\u5BF9\u8C61\u7684\u539F\u578B\u3002
      */</span>
      <span class="token keyword">const</span> augment <span class="token operator">=</span> hasProto
        <span class="token operator">?</span> protoAugment  <span class="token comment">/*\u76F4\u63A5\u8986\u76D6\u539F\u578B\u7684\u65B9\u6CD5\u6765\u4FEE\u6539\u76EE\u6807\u5BF9\u8C61*/</span>
        <span class="token operator">:</span> copyAugment   <span class="token comment">/*\u5B9A\u4E49\uFF08\u8986\u76D6\uFF09\u76EE\u6807\u5BF9\u8C61\u6216\u6570\u7EC4\u7684\u67D0\u4E00\u4E2A\u65B9\u6CD5*/</span>
      <span class="token function">augment</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> arrayMethods<span class="token punctuation">,</span> arrayKeys<span class="token punctuation">)</span>
      <span class="token comment">/*Github:https://github.com/answershuto*/</span>
      <span class="token comment">/*\u5982\u679C\u662F\u6570\u7EC4\u5219\u9700\u8981\u904D\u5386\u6570\u7EC4\u7684\u6BCF\u4E00\u4E2A\u6210\u5458\u8FDB\u884Cobserve*/</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">observeArray</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>

      <span class="token comment">/*\u5982\u679C\u662F\u5BF9\u8C61\u5219\u76F4\u63A5walk\u8FDB\u884C\u7ED1\u5B9A*/</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">walk</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token doc-comment comment">/**
   * Walk through each property and convert them into
   * getter/setters. This method should only be called when
   * value type is Object.
   */</span>
  <span class="token function">walk</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">obj</span><span class="token operator">:</span> Object</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> keys <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span>

    <span class="token comment">/*walk\u65B9\u6CD5\u4F1A\u904D\u5386\u5BF9\u8C61\u7684\u6BCF\u4E00\u4E2A\u5C5E\u6027\u8FDB\u884CdefineReactive\u7ED1\u5B9A*/</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> keys<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">defineReactive</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> keys<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> obj<span class="token punctuation">[</span>keys<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token doc-comment comment">/**
   * Observe a list of Array items.
   */</span>
  <span class="token function">observeArray</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">items</span><span class="token operator">:</span> Array<span class="token operator">&lt;</span>any<span class="token operator">&gt;</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token comment">/*\u6570\u7EC4\u9700\u8981\u904D\u5386\u6BCF\u4E00\u4E2A\u6210\u5458\u8FDB\u884Cobserve*/</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> l <span class="token operator">=</span> items<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> l<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">observe</span><span class="token punctuation">(</span>items<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br></div></div><p>Observer\u4E3A\u6570\u636E\u52A0\u4E0A\u54CD\u5E94\u5F0F\u5C5E\u6027\u8FDB\u884C\u53CC\u5411\u7ED1\u5B9A\u3002\u5982\u679C\u662F\u5BF9\u8C61\u5219\u8FDB\u884C\u6DF1\u5EA6\u904D\u5386\uFF0C\u4E3A\u6BCF\u4E00\u4E2A\u5B50\u5BF9\u8C61\u90FD\u7ED1\u5B9A\u4E0A\u65B9\u6CD5\uFF0C\u5982\u679C\u662F\u6570\u7EC4\u5219\u4E3A\u6BCF\u4E00\u4E2A\u6210\u5458\u90FD\u7ED1\u5B9A\u4E0A\u65B9\u6CD5\u3002</p>`,2),G=n("\u5982\u679C\u662F\u4FEE\u6539\u4E00\u4E2A\u6570\u7EC4\u7684\u6210\u5458\uFF0C\u8BE5\u6210\u5458\u662F\u4E00\u4E2A\u5BF9\u8C61\uFF0C\u90A3\u53EA\u9700\u8981\u9012\u5F52\u5BF9\u6570\u7EC4\u7684\u6210\u5458\u8FDB\u884C\u53CC\u5411\u7ED1\u5B9A\u5373\u53EF\u3002\u4F46\u8FD9\u65F6\u5019\u51FA\u73B0\u4E86\u4E00\u4E2A\u95EE\u9898\uFF1A\u5982\u679C\u8FDB\u884Cpop\u3001push\u7B49\u64CD\u4F5C\u7684\u65F6\u5019\uFF0Cpush\u8FDB\u53BB\u7684\u5BF9\u8C61\u6839\u672C\u6CA1\u6709\u8FDB\u884C\u8FC7\u53CC\u5411\u7ED1\u5B9A\uFF0C\u66F4\u522B\u8BF4pop\u4E86\uFF0C\u90A3\u4E48\u5982\u4F55\u76D1\u542C\u6570\u7EC4\u7684\u8FD9\u4E9B\u53D8\u5316\u5462\uFF1F Vue.js\u63D0\u4F9B\u7684\u65B9\u6CD5\u662F\u91CD\u5199push\u3001pop\u3001shift\u3001unshift\u3001splice\u3001sort\u3001reverse\u8FD9\u4E03\u4E2A"),U={href:"http://v1-cn.vuejs.org/guide/list.html#%E5%8F%98%E5%BC%82%E6%96%B9%E6%B3%95",target:"_blank",rel:"noopener noreferrer"},H=n("\u6570\u7EC4\u65B9\u6CD5"),J=n("\u3002\u4FEE\u6539\u6570\u7EC4\u539F\u578B\u65B9\u6CD5\u7684\u4EE3\u7801\u53EF\u4EE5\u53C2\u8003"),Q={href:"https://github.com/vuejs/vue/blob/dev/src/core/observer/array.js",target:"_blank",rel:"noopener noreferrer"},X=n("observer/array.js"),Y=n("\u4EE5\u53CA"),Z={href:"https://github.com/vuejs/vue/blob/dev/src/core/observer/index.js#L45",target:"_blank",rel:"noopener noreferrer"},nn=n("observer/index.js"),sn=n("\u3002"),an=e(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">Observer</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">value</span><span class="token operator">:</span> any<span class="token punctuation">;</span>
  <span class="token literal-property property">dep</span><span class="token operator">:</span> Dep<span class="token punctuation">;</span>
  <span class="token literal-property property">vmCount</span><span class="token operator">:</span> number<span class="token punctuation">;</span> <span class="token comment">// number of vms that has this object as root $data</span>

  <span class="token function">constructor</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">value</span><span class="token operator">:</span> any</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">//.......</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">/*
          \u5982\u679C\u662F\u6570\u7EC4\uFF0C\u5C06\u4FEE\u6539\u540E\u53EF\u4EE5\u622A\u83B7\u54CD\u5E94\u7684\u6570\u7EC4\u65B9\u6CD5\u66FF\u6362\u6389\u8BE5\u6570\u7EC4\u7684\u539F\u578B\u4E2D\u7684\u539F\u751F\u65B9\u6CD5\uFF0C\u8FBE\u5230\u76D1\u542C\u6570\u7EC4\u6570\u636E\u53D8\u5316\u54CD\u5E94\u7684\u6548\u679C\u3002
          \u8FD9\u91CC\u5982\u679C\u5F53\u524D\u6D4F\u89C8\u5668\u652F\u6301__proto__\u5C5E\u6027\uFF0C\u5219\u76F4\u63A5\u8986\u76D6\u5F53\u524D\u6570\u7EC4\u5BF9\u8C61\u539F\u578B\u4E0A\u7684\u539F\u751F\u6570\u7EC4\u65B9\u6CD5\uFF0C\u5982\u679C\u4E0D\u652F\u6301\u8BE5\u5C5E\u6027\uFF0C\u5219\u76F4\u63A5\u8986\u76D6\u6570\u7EC4\u5BF9\u8C61\u7684\u539F\u578B\u3002
      */</span>
      <span class="token keyword">const</span> augment <span class="token operator">=</span> hasProto
        <span class="token operator">?</span> protoAugment  <span class="token comment">/*\u76F4\u63A5\u8986\u76D6\u539F\u578B\u7684\u65B9\u6CD5\u6765\u4FEE\u6539\u76EE\u6807\u5BF9\u8C61*/</span>
        <span class="token operator">:</span> copyAugment   <span class="token comment">/*\u5B9A\u4E49\uFF08\u8986\u76D6\uFF09\u76EE\u6807\u5BF9\u8C61\u6216\u6570\u7EC4\u7684\u67D0\u4E00\u4E2A\u65B9\u6CD5*/</span>
      <span class="token function">augment</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> arrayMethods<span class="token punctuation">,</span> arrayKeys<span class="token punctuation">)</span>

      <span class="token comment">/*\u5982\u679C\u662F\u6570\u7EC4\u5219\u9700\u8981\u904D\u5386\u6570\u7EC4\u7684\u6BCF\u4E00\u4E2A\u6210\u5458\u8FDB\u884Cobserve*/</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">observeArray</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token comment">/*\u5982\u679C\u662F\u5BF9\u8C61\u5219\u76F4\u63A5walk\u8FDB\u884C\u7ED1\u5B9A*/</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">walk</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
 * Augment an target Object or Array by intercepting
 * the prototype chain using __proto__
 */</span>
 <span class="token comment">/*\u76F4\u63A5\u8986\u76D6\u539F\u578B\u7684\u65B9\u6CD5\u6765\u4FEE\u6539\u76EE\u6807\u5BF9\u8C61\u6216\u6570\u7EC4*/</span>
<span class="token keyword">function</span> <span class="token function">protoAugment</span> <span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span> <span class="token literal-property property">src</span><span class="token operator">:</span> Object</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">/* eslint-disable no-proto */</span>
  target<span class="token punctuation">.</span>__proto__ <span class="token operator">=</span> src
  <span class="token comment">/* eslint-enable no-proto */</span>
<span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
 * Augment an target Object or Array by defining
 * hidden properties.
 */</span>
<span class="token comment">/* istanbul ignore next */</span>
<span class="token comment">/*\u5B9A\u4E49\uFF08\u8986\u76D6\uFF09\u76EE\u6807\u5BF9\u8C61\u6216\u6570\u7EC4\u7684\u67D0\u4E00\u4E2A\u65B9\u6CD5*/</span>
<span class="token keyword">function</span> <span class="token function">copyAugment</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">target</span><span class="token operator">:</span> Object<span class="token punctuation">,</span> <span class="token literal-property property">src</span><span class="token operator">:</span> Object<span class="token punctuation">,</span> <span class="token literal-property property">keys</span><span class="token operator">:</span> Array<span class="token operator">&lt;</span>string<span class="token operator">&gt;</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> l <span class="token operator">=</span> keys<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> l<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> key <span class="token operator">=</span> keys<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
    <span class="token function">def</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> src<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">/*
 * not type checking this file because flow doesn&#39;t play well with
 * dynamically accessing methods on Array prototype
 */</span>

<span class="token keyword">import</span> <span class="token punctuation">{</span> def <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;../util/index&#39;</span>

<span class="token comment">/*\u53D6\u5F97\u539F\u751F\u6570\u7EC4\u7684\u539F\u578B*/</span>
<span class="token keyword">const</span> arrayProto <span class="token operator">=</span> <span class="token class-name">Array</span><span class="token punctuation">.</span>prototype
<span class="token comment">/*\u521B\u5EFA\u4E00\u4E2A\u65B0\u7684\u6570\u7EC4\u5BF9\u8C61\uFF0C\u4FEE\u6539\u8BE5\u5BF9\u8C61\u4E0A\u7684\u6570\u7EC4\u7684\u4E03\u4E2A\u65B9\u6CD5\uFF0C\u9632\u6B62\u6C61\u67D3\u539F\u751F\u6570\u7EC4\u65B9\u6CD5*/</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> arrayMethods <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>arrayProto<span class="token punctuation">)</span>

<span class="token doc-comment comment">/**
 * Intercept mutating methods and emit events
 */</span>
 <span class="token comment">/*\u8FD9\u91CC\u91CD\u5199\u4E86\u6570\u7EC4\u7684\u8FD9\u4E9B\u65B9\u6CD5\uFF0C\u5728\u4FDD\u8BC1\u4E0D\u6C61\u67D3\u539F\u751F\u6570\u7EC4\u539F\u578B\u7684\u60C5\u51B5\u4E0B\u91CD\u5199\u6570\u7EC4\u7684\u8FD9\u4E9B\u65B9\u6CD5\uFF0C\u622A\u83B7\u6570\u7EC4\u7684\u6210\u5458\u53D1\u751F\u7684\u53D8\u5316\uFF0C\u6267\u884C\u539F\u751F\u6570\u7EC4\u64CD\u4F5C\u7684\u540C\u65F6dep\u901A\u77E5\u5173\u8054\u7684\u6240\u6709\u89C2\u5BDF\u8005\u8FDB\u884C\u54CD\u5E94\u5F0F\u5904\u7406*/</span>
<span class="token punctuation">[</span>
  <span class="token string">&#39;push&#39;</span><span class="token punctuation">,</span>
  <span class="token string">&#39;pop&#39;</span><span class="token punctuation">,</span>
  <span class="token string">&#39;shift&#39;</span><span class="token punctuation">,</span>
  <span class="token string">&#39;unshift&#39;</span><span class="token punctuation">,</span>
  <span class="token string">&#39;splice&#39;</span><span class="token punctuation">,</span>
  <span class="token string">&#39;sort&#39;</span><span class="token punctuation">,</span>
  <span class="token string">&#39;reverse&#39;</span>
<span class="token punctuation">]</span>
<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">method</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// cache original method</span>
  <span class="token comment">/*\u5C06\u6570\u7EC4\u7684\u539F\u751F\u65B9\u6CD5\u7F13\u5B58\u8D77\u6765\uFF0C\u540E\u9762\u8981\u8C03\u7528*/</span>
  <span class="token keyword">const</span> original <span class="token operator">=</span> arrayProto<span class="token punctuation">[</span>method<span class="token punctuation">]</span>
  <span class="token function">def</span><span class="token punctuation">(</span>arrayMethods<span class="token punctuation">,</span> method<span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token function">mutator</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// avoid leaking arguments:</span>
    <span class="token comment">// http://jsperf.com/closure-with-arguments</span>
    <span class="token keyword">let</span> i <span class="token operator">=</span> arguments<span class="token punctuation">.</span>length
    <span class="token keyword">const</span> args <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>i<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      args<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> arguments<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
    <span class="token comment">/*\u8C03\u7528\u539F\u751F\u7684\u6570\u7EC4\u65B9\u6CD5*/</span>
    <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token function">original</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span>

    <span class="token comment">/*\u6570\u7EC4\u65B0\u63D2\u5165\u7684\u5143\u7D20\u9700\u8981\u91CD\u65B0\u8FDB\u884Cobserve\u624D\u80FD\u54CD\u5E94\u5F0F*/</span>
    <span class="token keyword">const</span> ob <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>__ob__
    <span class="token keyword">let</span> inserted
    <span class="token keyword">switch</span> <span class="token punctuation">(</span>method<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">case</span> <span class="token string">&#39;push&#39;</span><span class="token operator">:</span>
        inserted <span class="token operator">=</span> args
        <span class="token keyword">break</span>
      <span class="token keyword">case</span> <span class="token string">&#39;unshift&#39;</span><span class="token operator">:</span>
        inserted <span class="token operator">=</span> args
        <span class="token keyword">break</span>
      <span class="token keyword">case</span> <span class="token string">&#39;splice&#39;</span><span class="token operator">:</span>
        inserted <span class="token operator">=</span> args<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
        <span class="token keyword">break</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>inserted<span class="token punctuation">)</span> ob<span class="token punctuation">.</span><span class="token function">observeArray</span><span class="token punctuation">(</span>inserted<span class="token punctuation">)</span>

    <span class="token comment">// notify change</span>
    <span class="token comment">/*dep\u901A\u77E5\u6240\u6709\u6CE8\u518C\u7684\u89C2\u5BDF\u8005\u8FDB\u884C\u54CD\u5E94\u5F0F\u5904\u7406*/</span>
    ob<span class="token punctuation">.</span>dep<span class="token punctuation">.</span><span class="token function">notify</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> result
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br></div></div><p>\u4ECE\u6570\u7EC4\u7684\u539F\u578B\u65B0\u5EFA\u4E00\u4E2AObject.create(arrayProto)\u5BF9\u8C61\uFF0C\u901A\u8FC7\u4FEE\u6539\u6B64\u539F\u578B\u53EF\u4EE5\u4FDD\u8BC1\u539F\u751F\u6570\u7EC4\u65B9\u6CD5\u4E0D\u88AB\u6C61\u67D3\u3002\u5982\u679C\u5F53\u524D\u6D4F\u89C8\u5668\u652F\u6301__proto__\u8FD9\u4E2A\u5C5E\u6027\u7684\u8BDD\u5C31\u53EF\u4EE5\u76F4\u63A5\u8986\u76D6\u8BE5\u5C5E\u6027\u5219\u4F7F\u6570\u7EC4\u5BF9\u8C61\u5177\u6709\u4E86\u91CD\u5199\u540E\u7684\u6570\u7EC4\u65B9\u6CD5\u3002\u5982\u679C\u6CA1\u6709\u8BE5\u5C5E\u6027\u7684\u6D4F\u89C8\u5668\uFF0C\u5219\u5FC5\u987B\u901A\u8FC7\u904D\u5386def\u6240\u6709\u9700\u8981\u91CD\u5199\u7684\u6570\u7EC4\u65B9\u6CD5\uFF0C\u8FD9\u79CD\u65B9\u6CD5\u6548\u7387\u8F83\u4F4E\uFF0C\u6240\u4EE5\u4F18\u5148\u4F7F\u7528\u7B2C\u4E00\u79CD\u3002</p><p>\u5728\u4FDD\u8BC1\u4E0D\u6C61\u67D3\u4E0D\u8986\u76D6\u6570\u7EC4\u539F\u751F\u65B9\u6CD5\u6DFB\u52A0\u76D1\u542C\uFF0C\u4E3B\u8981\u505A\u4E86\u4E24\u4E2A\u64CD\u4F5C\uFF0C\u7B2C\u4E00\u662F\u901A\u77E5\u6240\u6709\u6CE8\u518C\u7684\u89C2\u5BDF\u8005\u8FDB\u884C\u54CD\u5E94\u5F0F\u5904\u7406\uFF0C\u7B2C\u4E8C\u662F\u5982\u679C\u662F\u6DFB\u52A0\u6210\u5458\u7684\u64CD\u4F5C\uFF0C\u9700\u8981\u5BF9\u65B0\u6210\u5458\u8FDB\u884Cobserve\u3002</p>`,4),pn=n("\u4F46\u662F\u4FEE\u6539\u4E86\u6570\u7EC4\u7684\u539F\u751F\u65B9\u6CD5\u4EE5\u540E\u8FD8\u662F\u6CA1\u6CD5\u50CF\u539F\u751F\u6570\u7EC4\u4E00\u6837\u76F4\u63A5\u901A\u8FC7\u6570\u7EC4\u7684\u4E0B\u6807\u6216\u8005\u8BBE\u7F6Elength\u6765\u4FEE\u6539\u6570\u7EC4\uFF0C\u53EF\u4EE5\u901A\u8FC7"),en={href:"https://cn.vuejs.org/v2/guide/list.html#%E6%9B%BF%E6%8D%A2%E6%95%B0%E7%BB%84",target:"_blank",rel:"noopener noreferrer"},tn=n("Vue.set\u4EE5\u53CAsplice\u65B9\u6CD5"),on=n("\u3002"),cn=s("h2",{id:"watcher",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#watcher","aria-hidden":"true"},"#"),n(" Watcher")],-1),ln={href:"https://github.com/vuejs/vue/blob/dev/src/core/observer/watcher.js#L24",target:"_blank",rel:"noopener noreferrer"},rn=n("Watcher"),un=n("\u662F\u4E00\u4E2A\u89C2\u5BDF\u8005\u5BF9\u8C61\u3002\u4F9D\u8D56\u6536\u96C6\u4EE5\u540EWatcher\u5BF9\u8C61\u4F1A\u88AB\u4FDD\u5B58\u5728Deps\u4E2D\uFF0C\u6570\u636E\u53D8\u52A8\u7684\u65F6\u5019\u4F1A\u7531Deps\u901A\u77E5Watcher\u5B9E\u4F8B\uFF0C\u7136\u540E\u7531Watcher\u5B9E\u4F8B\u56DE\u8C03cb\u8FDB\u884C\u89C6\u56FE\u7684\u66F4\u65B0\u3002"),kn=e(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">class</span> <span class="token class-name">Watcher</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">vm</span><span class="token operator">:</span> Component<span class="token punctuation">;</span>
  <span class="token literal-property property">expression</span><span class="token operator">:</span> string<span class="token punctuation">;</span>
  <span class="token literal-property property">cb</span><span class="token operator">:</span> Function<span class="token punctuation">;</span>
  <span class="token literal-property property">id</span><span class="token operator">:</span> number<span class="token punctuation">;</span>
  <span class="token literal-property property">deep</span><span class="token operator">:</span> boolean<span class="token punctuation">;</span>
  <span class="token literal-property property">user</span><span class="token operator">:</span> boolean<span class="token punctuation">;</span>
  <span class="token literal-property property">lazy</span><span class="token operator">:</span> boolean<span class="token punctuation">;</span>
  <span class="token literal-property property">sync</span><span class="token operator">:</span> boolean<span class="token punctuation">;</span>
  <span class="token literal-property property">dirty</span><span class="token operator">:</span> boolean<span class="token punctuation">;</span>
  <span class="token literal-property property">active</span><span class="token operator">:</span> boolean<span class="token punctuation">;</span>
  <span class="token literal-property property">deps</span><span class="token operator">:</span> Array<span class="token operator">&lt;</span>Dep<span class="token operator">&gt;</span><span class="token punctuation">;</span>
  <span class="token literal-property property">newDeps</span><span class="token operator">:</span> Array<span class="token operator">&lt;</span>Dep<span class="token operator">&gt;</span><span class="token punctuation">;</span>
  <span class="token literal-property property">depIds</span><span class="token operator">:</span> ISet<span class="token punctuation">;</span>
  <span class="token literal-property property">newDepIds</span><span class="token operator">:</span> ISet<span class="token punctuation">;</span>
  <span class="token literal-property property">getter</span><span class="token operator">:</span> Function<span class="token punctuation">;</span>
  <span class="token literal-property property">value</span><span class="token operator">:</span> any<span class="token punctuation">;</span>

  <span class="token function">constructor</span> <span class="token punctuation">(</span>
    <span class="token parameter"><span class="token literal-property property">vm</span><span class="token operator">:</span> Component<span class="token punctuation">,</span>
    <span class="token literal-property property">expOrFn</span><span class="token operator">:</span> string <span class="token operator">|</span> Function<span class="token punctuation">,</span>
    <span class="token literal-property property">cb</span><span class="token operator">:</span> Function<span class="token punctuation">,</span>
    options<span class="token operator">?</span><span class="token operator">:</span> Object</span>
  <span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>vm <span class="token operator">=</span> vm
    <span class="token comment">/*_watchers\u5B58\u653E\u8BA2\u9605\u8005\u5B9E\u4F8B*/</span>
    vm<span class="token punctuation">.</span>_watchers<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span>
    <span class="token comment">// options</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>options<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>deep <span class="token operator">=</span> <span class="token operator">!</span><span class="token operator">!</span>options<span class="token punctuation">.</span>deep
      <span class="token keyword">this</span><span class="token punctuation">.</span>user <span class="token operator">=</span> <span class="token operator">!</span><span class="token operator">!</span>options<span class="token punctuation">.</span>user
      <span class="token keyword">this</span><span class="token punctuation">.</span>lazy <span class="token operator">=</span> <span class="token operator">!</span><span class="token operator">!</span>options<span class="token punctuation">.</span>lazy
      <span class="token keyword">this</span><span class="token punctuation">.</span>sync <span class="token operator">=</span> <span class="token operator">!</span><span class="token operator">!</span>options<span class="token punctuation">.</span>sync
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>deep <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>user <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>lazy <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>sync <span class="token operator">=</span> <span class="token boolean">false</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>cb <span class="token operator">=</span> cb
    <span class="token keyword">this</span><span class="token punctuation">.</span>id <span class="token operator">=</span> <span class="token operator">++</span>uid <span class="token comment">// uid for batching</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>active <span class="token operator">=</span> <span class="token boolean">true</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>dirty <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>lazy <span class="token comment">// for lazy watchers</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>deps <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>newDeps <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>depIds <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>newDepIds <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>expression <span class="token operator">=</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">!==</span> <span class="token string">&#39;production&#39;</span>
      <span class="token operator">?</span> expOrFn<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token operator">:</span> <span class="token string">&#39;&#39;</span>
    <span class="token comment">// parse expression for getter</span>
    <span class="token comment">/*\u628A\u8868\u8FBE\u5F0FexpOrFn\u89E3\u6790\u6210getter*/</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> expOrFn <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>getter <span class="token operator">=</span> expOrFn
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>getter <span class="token operator">=</span> <span class="token function">parsePath</span><span class="token punctuation">(</span>expOrFn<span class="token punctuation">)</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>getter<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function-variable function">getter</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
        process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">!==</span> <span class="token string">&#39;production&#39;</span> <span class="token operator">&amp;&amp;</span> <span class="token function">warn</span><span class="token punctuation">(</span>
          <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Failed watching path: &quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>expOrFn<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot; </span><span class="token template-punctuation string">\`</span></span> <span class="token operator">+</span>
          <span class="token string">&#39;Watcher only accepts simple dot-delimited paths. &#39;</span> <span class="token operator">+</span>
          <span class="token string">&#39;For full control, use a function instead.&#39;</span><span class="token punctuation">,</span>
          vm
        <span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>lazy
      <span class="token operator">?</span> <span class="token keyword">undefined</span>
      <span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token doc-comment comment">/**
   * Evaluate the getter, and re-collect dependencies.
   */</span>
   <span class="token comment">/*\u83B7\u5F97getter\u7684\u503C\u5E76\u4E14\u91CD\u65B0\u8FDB\u884C\u4F9D\u8D56\u6536\u96C6*/</span>
  <span class="token function">get</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">/*\u5C06\u81EA\u8EABwatcher\u89C2\u5BDF\u8005\u5B9E\u4F8B\u8BBE\u7F6E\u7ED9Dep.target\uFF0C\u7528\u4EE5\u4F9D\u8D56\u6536\u96C6\u3002*/</span>
    <span class="token function">pushTarget</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span>
    <span class="token keyword">let</span> value
    <span class="token keyword">const</span> vm <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>vm

    <span class="token comment">/*
      \u6267\u884C\u4E86getter\u64CD\u4F5C\uFF0C\u770B\u4F3C\u6267\u884C\u4E86\u6E32\u67D3\u64CD\u4F5C\uFF0C\u5176\u5B9E\u662F\u6267\u884C\u4E86\u4F9D\u8D56\u6536\u96C6\u3002
      \u5728\u5C06Dep.target\u8BBE\u7F6E\u4E3A\u81EA\u8EAB\u89C2\u5BDF\u8005\u5B9E\u4F8B\u4EE5\u540E\uFF0C\u6267\u884Cgetter\u64CD\u4F5C\u3002
      \u8B6C\u5982\u8BF4\u73B0\u5728\u7684\u7684data\u4E2D\u53EF\u80FD\u6709a\u3001b\u3001c\u4E09\u4E2A\u6570\u636E\uFF0Cgetter\u6E32\u67D3\u9700\u8981\u4F9D\u8D56a\u8DDFc\uFF0C
      \u90A3\u4E48\u5728\u6267\u884Cgetter\u7684\u65F6\u5019\u5C31\u4F1A\u89E6\u53D1a\u8DDFc\u4E24\u4E2A\u6570\u636E\u7684getter\u51FD\u6570\uFF0C
      \u5728getter\u51FD\u6570\u4E2D\u5373\u53EF\u5224\u65ADDep.target\u662F\u5426\u5B58\u5728\u7136\u540E\u5B8C\u6210\u4F9D\u8D56\u6536\u96C6\uFF0C
      \u5C06\u8BE5\u89C2\u5BDF\u8005\u5BF9\u8C61\u653E\u5165\u95ED\u5305\u4E2D\u7684Dep\u7684subs\u4E2D\u53BB\u3002
    */</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>user<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">try</span> <span class="token punctuation">{</span>
        value <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getter</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> vm<span class="token punctuation">)</span>
      <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">handleError</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span> vm<span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">getter for watcher &quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">this</span><span class="token punctuation">.</span>expression<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      value <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getter</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> vm<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// &quot;touch&quot; every property so they are all tracked as</span>
    <span class="token comment">// dependencies for deep watching</span>
    <span class="token comment">/*\u5982\u679C\u5B58\u5728deep\uFF0C\u5219\u89E6\u53D1\u6BCF\u4E2A\u6DF1\u5C42\u5BF9\u8C61\u7684\u4F9D\u8D56\uFF0C\u8FFD\u8E2A\u5176\u53D8\u5316*/</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>deep<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">/*\u9012\u5F52\u6BCF\u4E00\u4E2A\u5BF9\u8C61\u6216\u8005\u6570\u7EC4\uFF0C\u89E6\u53D1\u5B83\u4EEC\u7684getter\uFF0C\u4F7F\u5F97\u5BF9\u8C61\u6216\u6570\u7EC4\u7684\u6BCF\u4E00\u4E2A\u6210\u5458\u90FD\u88AB\u4F9D\u8D56\u6536\u96C6\uFF0C\u5F62\u6210\u4E00\u4E2A\u201C\u6DF1\uFF08deep\uFF09\u201D\u4F9D\u8D56\u5173\u7CFB*/</span>
      <span class="token function">traverse</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token comment">/*\u5C06\u89C2\u5BDF\u8005\u5B9E\u4F8B\u4ECEtarget\u6808\u4E2D\u53D6\u51FA\u5E76\u8BBE\u7F6E\u7ED9Dep.target*/</span>
    <span class="token function">popTarget</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">cleanupDeps</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> value
  <span class="token punctuation">}</span>

  <span class="token doc-comment comment">/**
   * Add a dependency to this directive.
   */</span>
   <span class="token comment">/*\u6DFB\u52A0\u4E00\u4E2A\u4F9D\u8D56\u5173\u7CFB\u5230Deps\u96C6\u5408\u4E2D*/</span>
  <span class="token function">addDep</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">dep</span><span class="token operator">:</span> Dep</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> id <span class="token operator">=</span> dep<span class="token punctuation">.</span>id
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>newDepIds<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>newDepIds<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>newDeps<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>dep<span class="token punctuation">)</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>depIds<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        dep<span class="token punctuation">.</span><span class="token function">addSub</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token doc-comment comment">/**
   * Clean up for dependency collection.
   */</span>
   <span class="token comment">/*\u6E05\u7406\u4F9D\u8D56\u6536\u96C6*/</span>
  <span class="token function">cleanupDeps</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">/*\u79FB\u9664\u6240\u6709\u89C2\u5BDF\u8005\u5BF9\u8C61*/</span>
    <span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>deps<span class="token punctuation">.</span>length
    <span class="token keyword">while</span> <span class="token punctuation">(</span>i<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> dep <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>deps<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>newDepIds<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>dep<span class="token punctuation">.</span>id<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        dep<span class="token punctuation">.</span><span class="token function">removeSub</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">let</span> tmp <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>depIds
    <span class="token keyword">this</span><span class="token punctuation">.</span>depIds <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>newDepIds
    <span class="token keyword">this</span><span class="token punctuation">.</span>newDepIds <span class="token operator">=</span> tmp
    <span class="token keyword">this</span><span class="token punctuation">.</span>newDepIds<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    tmp <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>deps
    <span class="token keyword">this</span><span class="token punctuation">.</span>deps <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>newDeps
    <span class="token keyword">this</span><span class="token punctuation">.</span>newDeps <span class="token operator">=</span> tmp
    <span class="token keyword">this</span><span class="token punctuation">.</span>newDeps<span class="token punctuation">.</span>length <span class="token operator">=</span> <span class="token number">0</span>
  <span class="token punctuation">}</span>

  <span class="token doc-comment comment">/**
   * Subscriber interface.
   * Will be called when a dependency changes.
   */</span>
   <span class="token comment">/*
      \u8C03\u5EA6\u8005\u63A5\u53E3\uFF0C\u5F53\u4F9D\u8D56\u53D1\u751F\u6539\u53D8\u7684\u65F6\u5019\u8FDB\u884C\u56DE\u8C03\u3002
   */</span>
  <span class="token function">update</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">/* istanbul ignore else */</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>lazy<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>dirty <span class="token operator">=</span> <span class="token boolean">true</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>sync<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">/*\u540C\u6B65\u5219\u6267\u884Crun\u76F4\u63A5\u6E32\u67D3\u89C6\u56FE*/</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token comment">/*\u5F02\u6B65\u63A8\u9001\u5230\u89C2\u5BDF\u8005\u961F\u5217\u4E2D\uFF0C\u7531\u8C03\u5EA6\u8005\u8C03\u7528\u3002*/</span>
      <span class="token function">queueWatcher</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token doc-comment comment">/**
   * Scheduler job interface.
   * Will be called by the scheduler.
   */</span>
   <span class="token comment">/*
      \u8C03\u5EA6\u8005\u5DE5\u4F5C\u63A5\u53E3\uFF0C\u5C06\u88AB\u8C03\u5EA6\u8005\u56DE\u8C03\u3002
    */</span>
  <span class="token function">run</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>active<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> value <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>
        value <span class="token operator">!==</span> <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">||</span>
        <span class="token comment">// Deep watchers and watchers on Object/Arrays should fire even</span>
        <span class="token comment">// when the value is the same, because the value may</span>
        <span class="token comment">// have mutated.</span>
        <span class="token comment">/*
            \u5373\u4FBF\u503C\u76F8\u540C\uFF0C\u62E5\u6709Deep\u5C5E\u6027\u7684\u89C2\u5BDF\u8005\u4EE5\u53CA\u5728\u5BF9\u8C61\uFF0F\u6570\u7EC4\u4E0A\u7684\u89C2\u5BDF\u8005\u5E94\u8BE5\u88AB\u89E6\u53D1\u66F4\u65B0\uFF0C\u56E0\u4E3A\u5B83\u4EEC\u7684\u503C\u53EF\u80FD\u53D1\u751F\u6539\u53D8\u3002
        */</span>
        <span class="token function">isObject</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token operator">||</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>deep
      <span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// set new value</span>
        <span class="token keyword">const</span> oldValue <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>value
        <span class="token comment">/*\u8BBE\u7F6E\u65B0\u7684\u503C*/</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">=</span> value

        <span class="token comment">/*\u89E6\u53D1\u56DE\u8C03\u6E32\u67D3\u89C6\u56FE*/</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>user<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">cb</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>vm<span class="token punctuation">,</span> value<span class="token punctuation">,</span> oldValue<span class="token punctuation">)</span>
          <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">handleError</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>vm<span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">callback for watcher &quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">this</span><span class="token punctuation">.</span>expression<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
          <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">cb</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>vm<span class="token punctuation">,</span> value<span class="token punctuation">,</span> oldValue<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token doc-comment comment">/**
   * Evaluate the value of the watcher.
   * This only gets called for lazy watchers.
   */</span>
   <span class="token comment">/*\u83B7\u53D6\u89C2\u5BDF\u8005\u7684\u503C*/</span>
  <span class="token function">evaluate</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>dirty <span class="token operator">=</span> <span class="token boolean">false</span>
  <span class="token punctuation">}</span>

  <span class="token doc-comment comment">/**
   * Depend on all deps collected by this watcher.
   */</span>
   <span class="token comment">/*\u6536\u96C6\u8BE5watcher\u7684\u6240\u6709deps\u4F9D\u8D56*/</span>
  <span class="token function">depend</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>deps<span class="token punctuation">.</span>length
    <span class="token keyword">while</span> <span class="token punctuation">(</span>i<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>deps<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">depend</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token doc-comment comment">/**
   * Remove self from all dependencies&#39; subscriber list.
   */</span>
   <span class="token comment">/*\u5C06\u81EA\u8EAB\u4ECE\u6240\u6709\u4F9D\u8D56\u6536\u96C6\u8BA2\u9605\u5217\u8868\u5220\u9664*/</span>
  <span class="token function">teardown</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>active<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// remove self from vm&#39;s watcher list</span>
      <span class="token comment">// this is a somewhat expensive operation so we skip it</span>
      <span class="token comment">// if the vm is being destroyed.</span>
      <span class="token comment">/*\u4ECEvm\u5B9E\u4F8B\u7684\u89C2\u5BDF\u8005\u5217\u8868\u4E2D\u5C06\u81EA\u8EAB\u79FB\u9664\uFF0C\u7531\u4E8E\u8BE5\u64CD\u4F5C\u6BD4\u8F83\u8017\u8D39\u8D44\u6E90\uFF0C\u6240\u4EE5\u5982\u679Cvm\u5B9E\u4F8B\u6B63\u5728\u88AB\u9500\u6BC1\u5219\u8DF3\u8FC7\u8BE5\u6B65\u9AA4\u3002*/</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>vm<span class="token punctuation">.</span>_isBeingDestroyed<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">remove</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>vm<span class="token punctuation">.</span>_watchers<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>deps<span class="token punctuation">.</span>length
      <span class="token keyword">while</span> <span class="token punctuation">(</span>i<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>deps<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">removeSub</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>active <span class="token operator">=</span> <span class="token boolean">false</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br><span class="line-number">114</span><br><span class="line-number">115</span><br><span class="line-number">116</span><br><span class="line-number">117</span><br><span class="line-number">118</span><br><span class="line-number">119</span><br><span class="line-number">120</span><br><span class="line-number">121</span><br><span class="line-number">122</span><br><span class="line-number">123</span><br><span class="line-number">124</span><br><span class="line-number">125</span><br><span class="line-number">126</span><br><span class="line-number">127</span><br><span class="line-number">128</span><br><span class="line-number">129</span><br><span class="line-number">130</span><br><span class="line-number">131</span><br><span class="line-number">132</span><br><span class="line-number">133</span><br><span class="line-number">134</span><br><span class="line-number">135</span><br><span class="line-number">136</span><br><span class="line-number">137</span><br><span class="line-number">138</span><br><span class="line-number">139</span><br><span class="line-number">140</span><br><span class="line-number">141</span><br><span class="line-number">142</span><br><span class="line-number">143</span><br><span class="line-number">144</span><br><span class="line-number">145</span><br><span class="line-number">146</span><br><span class="line-number">147</span><br><span class="line-number">148</span><br><span class="line-number">149</span><br><span class="line-number">150</span><br><span class="line-number">151</span><br><span class="line-number">152</span><br><span class="line-number">153</span><br><span class="line-number">154</span><br><span class="line-number">155</span><br><span class="line-number">156</span><br><span class="line-number">157</span><br><span class="line-number">158</span><br><span class="line-number">159</span><br><span class="line-number">160</span><br><span class="line-number">161</span><br><span class="line-number">162</span><br><span class="line-number">163</span><br><span class="line-number">164</span><br><span class="line-number">165</span><br><span class="line-number">166</span><br><span class="line-number">167</span><br><span class="line-number">168</span><br><span class="line-number">169</span><br><span class="line-number">170</span><br><span class="line-number">171</span><br><span class="line-number">172</span><br><span class="line-number">173</span><br><span class="line-number">174</span><br><span class="line-number">175</span><br><span class="line-number">176</span><br><span class="line-number">177</span><br><span class="line-number">178</span><br><span class="line-number">179</span><br><span class="line-number">180</span><br><span class="line-number">181</span><br><span class="line-number">182</span><br><span class="line-number">183</span><br><span class="line-number">184</span><br><span class="line-number">185</span><br><span class="line-number">186</span><br><span class="line-number">187</span><br><span class="line-number">188</span><br><span class="line-number">189</span><br><span class="line-number">190</span><br><span class="line-number">191</span><br><span class="line-number">192</span><br><span class="line-number">193</span><br><span class="line-number">194</span><br><span class="line-number">195</span><br><span class="line-number">196</span><br><span class="line-number">197</span><br><span class="line-number">198</span><br><span class="line-number">199</span><br><span class="line-number">200</span><br><span class="line-number">201</span><br><span class="line-number">202</span><br><span class="line-number">203</span><br><span class="line-number">204</span><br><span class="line-number">205</span><br><span class="line-number">206</span><br><span class="line-number">207</span><br><span class="line-number">208</span><br><span class="line-number">209</span><br><span class="line-number">210</span><br><span class="line-number">211</span><br><span class="line-number">212</span><br><span class="line-number">213</span><br><span class="line-number">214</span><br><span class="line-number">215</span><br><span class="line-number">216</span><br><span class="line-number">217</span><br><span class="line-number">218</span><br><span class="line-number">219</span><br><span class="line-number">220</span><br><span class="line-number">221</span><br><span class="line-number">222</span><br><span class="line-number">223</span><br><span class="line-number">224</span><br><span class="line-number">225</span><br><span class="line-number">226</span><br><span class="line-number">227</span><br><span class="line-number">228</span><br><span class="line-number">229</span><br><span class="line-number">230</span><br><span class="line-number">231</span><br><span class="line-number">232</span><br><span class="line-number">233</span><br><span class="line-number">234</span><br><span class="line-number">235</span><br><span class="line-number">236</span><br><span class="line-number">237</span><br><span class="line-number">238</span><br><span class="line-number">239</span><br><span class="line-number">240</span><br><span class="line-number">241</span><br><span class="line-number">242</span><br><span class="line-number">243</span><br><span class="line-number">244</span><br><span class="line-number">245</span><br><span class="line-number">246</span><br><span class="line-number">247</span><br><span class="line-number">248</span><br><span class="line-number">249</span><br></div></div><h2 id="dep" tabindex="-1"><a class="header-anchor" href="#dep" aria-hidden="true">#</a> Dep</h2>`,2),bn=n("\u6765\u770B\u770B"),mn={href:"https://github.com/vuejs/vue/blob/dev/src/core/observer/dep.js#L12",target:"_blank",rel:"noopener noreferrer"},dn=n("Dep"),yn=n("\u7C7B\u3002\u5176\u5B9EDep\u5C31\u662F\u4E00\u4E2A\u53D1\u5E03\u8005\uFF0C\u53EF\u4EE5\u8BA2\u9605\u591A\u4E2A\u89C2\u5BDF\u8005\uFF0C\u4F9D\u8D56\u6536\u96C6\u4E4B\u540EDeps\u4E2D\u4F1A\u5B58\u5728\u4E00\u4E2A\u6216\u591A\u4E2AWatcher\u5BF9\u8C61\uFF0C\u5728\u6570\u636E\u53D8\u66F4\u7684\u65F6\u5019\u901A\u77E5\u6240\u6709\u7684Watcher\u3002"),hn=e(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * A dep is an observable that can have multiple
 * directives subscribing to it.
 */</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">class</span> <span class="token class-name">Dep</span> <span class="token punctuation">{</span>
  <span class="token keyword">static</span> <span class="token literal-property property">target</span><span class="token operator">:</span> <span class="token operator">?</span>Watcher<span class="token punctuation">;</span>
  <span class="token literal-property property">id</span><span class="token operator">:</span> number<span class="token punctuation">;</span>
  <span class="token literal-property property">subs</span><span class="token operator">:</span> Array<span class="token operator">&lt;</span>Watcher<span class="token operator">&gt;</span><span class="token punctuation">;</span>

  <span class="token function">constructor</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>id <span class="token operator">=</span> uid<span class="token operator">++</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>subs <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token punctuation">}</span>

  <span class="token comment">/*\u6DFB\u52A0\u4E00\u4E2A\u89C2\u5BDF\u8005\u5BF9\u8C61*/</span>
  <span class="token function">addSub</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">sub</span><span class="token operator">:</span> Watcher</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>subs<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>sub<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token comment">/*\u79FB\u9664\u4E00\u4E2A\u89C2\u5BDF\u8005\u5BF9\u8C61*/</span>
  <span class="token function">removeSub</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">sub</span><span class="token operator">:</span> Watcher</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">remove</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>subs<span class="token punctuation">,</span> sub<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token comment">/*\u4F9D\u8D56\u6536\u96C6\uFF0C\u5F53\u5B58\u5728Dep.target\u7684\u65F6\u5019\u6DFB\u52A0\u89C2\u5BDF\u8005\u5BF9\u8C61*/</span>
  <span class="token function">depend</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>Dep<span class="token punctuation">.</span>target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      Dep<span class="token punctuation">.</span>target<span class="token punctuation">.</span><span class="token function">addDep</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token comment">/*\u901A\u77E5\u6240\u6709\u8BA2\u9605\u8005*/</span>
  <span class="token function">notify</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// stabilize the subscriber list first</span>
    <span class="token keyword">const</span> subs <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>subs<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> l <span class="token operator">=</span> subs<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> l<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      subs<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// the current target watcher being evaluated.</span>
<span class="token comment">// this is globally unique because there could be only one</span>
<span class="token comment">// watcher being evaluated at any time.</span>
Dep<span class="token punctuation">.</span>target <span class="token operator">=</span> <span class="token keyword">null</span>
<span class="token comment">/*\u4F9D\u8D56\u6536\u96C6\u5B8C\u9700\u8981\u5C06Dep.target\u8BBE\u4E3Anull\uFF0C\u9632\u6B62\u540E\u9762\u91CD\u590D\u6DFB\u52A0\u4F9D\u8D56\u3002*/</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br></div></div><h2 id="definereactive" tabindex="-1"><a class="header-anchor" href="#definereactive" aria-hidden="true">#</a> defineReactive</h2>`,2),wn=n("\u63A5\u4E0B\u6765\u662F"),vn={href:"https://github.com/vuejs/vue/blob/dev/src/core/observer/index.js#L131",target:"_blank",rel:"noopener noreferrer"},fn=n("defineReactive"),gn=n("\u3002defineReactive\u7684\u4F5C\u7528\u662F\u901A\u8FC7Object.defineProperty\u4E3A\u6570\u636E\u5B9A\u4E49\u4E0Agetter\\setter\u65B9\u6CD5\uFF0C\u8FDB\u884C\u4F9D\u8D56\u6536\u96C6\u540E\u95ED\u5305\u4E2D\u7684Deps\u4F1A\u5B58\u653EWatcher\u5BF9\u8C61\u3002\u89E6\u53D1setter\u6539\u53D8\u6570\u636E\u7684\u65F6\u5019\u4F1A\u901A\u77E5Deps\u8BA2\u9605\u8005\u901A\u77E5\u6240\u6709\u7684Watcher\u89C2\u5BDF\u8005\u5BF9\u8C61\u8FDB\u884C\u8BD5\u56FE\u7684\u66F4\u65B0\u3002"),_n=e(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * Define a reactive property on an Object.
 */</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">defineReactive</span> <span class="token punctuation">(</span>
  <span class="token parameter"><span class="token literal-property property">obj</span><span class="token operator">:</span> Object<span class="token punctuation">,</span>
  <span class="token literal-property property">key</span><span class="token operator">:</span> string<span class="token punctuation">,</span>
  <span class="token literal-property property">val</span><span class="token operator">:</span> any<span class="token punctuation">,</span>
  customSetter<span class="token operator">?</span><span class="token operator">:</span> Function</span>
<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">/*\u5728\u95ED\u5305\u4E2D\u5B9A\u4E49\u4E00\u4E2Adep\u5BF9\u8C61*/</span>
  <span class="token keyword">const</span> dep <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Dep</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

  <span class="token keyword">const</span> property <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">getOwnPropertyDescriptor</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> key<span class="token punctuation">)</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>property <span class="token operator">&amp;&amp;</span> property<span class="token punctuation">.</span>configurable <span class="token operator">===</span> <span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span>
  <span class="token punctuation">}</span>

  <span class="token comment">/*\u5982\u679C\u4E4B\u524D\u8BE5\u5BF9\u8C61\u5DF2\u7ECF\u9884\u8BBE\u4E86getter\u4EE5\u53CAsetter\u51FD\u6570\u5219\u5C06\u5176\u53D6\u51FA\u6765\uFF0C\u65B0\u5B9A\u4E49\u7684getter/setter\u4E2D\u4F1A\u5C06\u5176\u6267\u884C\uFF0C\u4FDD\u8BC1\u4E0D\u4F1A\u8986\u76D6\u4E4B\u524D\u5DF2\u7ECF\u5B9A\u4E49\u7684getter/setter\u3002*/</span>
  <span class="token comment">// cater for pre-defined getter/setters</span>
  <span class="token keyword">const</span> getter <span class="token operator">=</span> property <span class="token operator">&amp;&amp;</span> property<span class="token punctuation">.</span>get
  <span class="token keyword">const</span> setter <span class="token operator">=</span> property <span class="token operator">&amp;&amp;</span> property<span class="token punctuation">.</span>set

  <span class="token comment">/*\u5BF9\u8C61\u7684\u5B50\u5BF9\u8C61\u9012\u5F52\u8FDB\u884Cobserve\u5E76\u8FD4\u56DE\u5B50\u8282\u70B9\u7684Observer\u5BF9\u8C61*/</span>
  <span class="token keyword">let</span> childOb <span class="token operator">=</span> <span class="token function">observe</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span>
  Object<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> key<span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">enumerable</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token literal-property property">configurable</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token function-variable function">get</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token function">reactiveGetter</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

      <span class="token comment">/*\u5982\u679C\u539F\u672C\u5BF9\u8C61\u62E5\u6709getter\u65B9\u6CD5\u5219\u6267\u884C*/</span>
      <span class="token keyword">const</span> value <span class="token operator">=</span> getter <span class="token operator">?</span> <span class="token function">getter</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span> <span class="token operator">:</span> val
      <span class="token keyword">if</span> <span class="token punctuation">(</span>Dep<span class="token punctuation">.</span>target<span class="token punctuation">)</span> <span class="token punctuation">{</span>

        <span class="token comment">/*\u8FDB\u884C\u4F9D\u8D56\u6536\u96C6*/</span>
        dep<span class="token punctuation">.</span><span class="token function">depend</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>childOb<span class="token punctuation">)</span> <span class="token punctuation">{</span>

          <span class="token comment">/*\u5B50\u5BF9\u8C61\u8FDB\u884C\u4F9D\u8D56\u6536\u96C6\uFF0C\u5176\u5B9E\u5C31\u662F\u5C06\u540C\u4E00\u4E2Awatcher\u89C2\u5BDF\u8005\u5B9E\u4F8B\u653E\u8FDB\u4E86\u4E24\u4E2Adepend\u4E2D\uFF0C\u4E00\u4E2A\u662F\u6B63\u5728\u672C\u8EAB\u95ED\u5305\u4E2D\u7684depend\uFF0C\u53E6\u4E00\u4E2A\u662F\u5B50\u5143\u7D20\u7684depend*/</span>
          childOb<span class="token punctuation">.</span>dep<span class="token punctuation">.</span><span class="token function">depend</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

          <span class="token comment">/*\u662F\u6570\u7EC4\u5219\u9700\u8981\u5BF9\u6BCF\u4E00\u4E2A\u6210\u5458\u90FD\u8FDB\u884C\u4F9D\u8D56\u6536\u96C6\uFF0C\u5982\u679C\u6570\u7EC4\u7684\u6210\u5458\u8FD8\u662F\u6570\u7EC4\uFF0C\u5219\u9012\u5F52\u3002*/</span>
          <span class="token function">dependArray</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">return</span> value
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function-variable function">set</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token function">reactiveSetter</span> <span class="token punctuation">(</span><span class="token parameter">newVal</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

      <span class="token comment">/*\u901A\u8FC7getter\u65B9\u6CD5\u83B7\u53D6\u5F53\u524D\u503C\uFF0C\u4E0E\u65B0\u503C\u8FDB\u884C\u6BD4\u8F83\uFF0C\u4E00\u81F4\u5219\u4E0D\u9700\u8981\u6267\u884C\u4E0B\u9762\u7684\u64CD\u4F5C*/</span>
      <span class="token keyword">const</span> value <span class="token operator">=</span> getter <span class="token operator">?</span> <span class="token function">getter</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span> <span class="token operator">:</span> val
      <span class="token comment">/* eslint-disable no-self-compare */</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>newVal <span class="token operator">===</span> value <span class="token operator">||</span> <span class="token punctuation">(</span>newVal <span class="token operator">!==</span> newVal <span class="token operator">&amp;&amp;</span> value <span class="token operator">!==</span> value<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span>
      <span class="token punctuation">}</span>
      <span class="token comment">/* eslint-enable no-self-compare */</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">!==</span> <span class="token string">&#39;production&#39;</span> <span class="token operator">&amp;&amp;</span> customSetter<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">customSetter</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>setter<span class="token punctuation">)</span> <span class="token punctuation">{</span>

        <span class="token comment">/*\u5982\u679C\u539F\u672C\u5BF9\u8C61\u62E5\u6709setter\u65B9\u6CD5\u5219\u6267\u884Csetter*/</span>
        <span class="token function">setter</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> newVal<span class="token punctuation">)</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        val <span class="token operator">=</span> newVal
      <span class="token punctuation">}</span>

      <span class="token comment">/*\u65B0\u7684\u503C\u9700\u8981\u91CD\u65B0\u8FDB\u884Cobserve\uFF0C\u4FDD\u8BC1\u6570\u636E\u54CD\u5E94\u5F0F*/</span>
      childOb <span class="token operator">=</span> <span class="token function">observe</span><span class="token punctuation">(</span>newVal<span class="token punctuation">)</span>

      <span class="token comment">/*dep\u5BF9\u8C61\u901A\u77E5\u6240\u6709\u7684\u89C2\u5BDF\u8005*/</span>
      dep<span class="token punctuation">.</span><span class="token function">notify</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br></div></div><p>\u73B0\u5728\u518D\u6765\u770B\u8FD9\u5F20\u56FE\u662F\u4E0D\u662F\u66F4\u6E05\u6670\u4E86\u5462\uFF1F</p><p><img src="https://cn.vuejs.org/images/data.png" alt=""></p>`,3);function jn(Dn,On){const a=t("ExternalLinkIcon");return o(),c(l,null,[i,k,b,m,d,s("p",null,[y,s("a",h,[w,p(a)]),v,s("a",f,[g,p(a)]),_,s("a",j,[D,p(a)]),O]),x,s("p",null,[A,s("a",V,[E,p(a)]),W]),s("p",null,[S,s("a",F,[I,p(a)]),P]),R,s("p",null,[N,s("a",B,[C,p(a)]),L]),q,s("p",null,[z,s("a",$,[T,p(a)]),K]),M,s("p",null,[G,s("a",U,[H,p(a)]),J,s("a",Q,[X,p(a)]),Y,s("a",Z,[nn,p(a)]),sn]),an,s("p",null,[pn,s("a",en,[tn,p(a)]),on]),cn,s("p",null,[s("a",ln,[rn,p(a)]),un]),kn,s("p",null,[bn,s("a",mn,[dn,p(a)]),yn]),hn,s("p",null,[wn,s("a",vn,[fn,p(a)]),gn]),_n],64)}var Vn=r(u,[["render",jn]]);export{Vn as default};
