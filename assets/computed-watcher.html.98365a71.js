import{a as n}from"./app.6f963528.js";import{_ as s}from"./plugin-vue_export-helper.21dcd24c.js";const a={},p=n(`<h1 id="\u8BA1\u7B97\u5C5E\u6027-vs-\u4FA6\u542C\u5C5E\u6027" tabindex="-1"><a class="header-anchor" href="#\u8BA1\u7B97\u5C5E\u6027-vs-\u4FA6\u542C\u5C5E\u6027" aria-hidden="true">#</a> \u8BA1\u7B97\u5C5E\u6027 VS \u4FA6\u542C\u5C5E\u6027</h1><p>Vue \u7684\u7EC4\u4EF6\u5BF9\u8C61\u652F\u6301\u4E86\u8BA1\u7B97\u5C5E\u6027 <code>computed</code> \u548C\u4FA6\u542C\u5C5E\u6027 <code>watch</code> 2 \u4E2A\u9009\u9879\uFF0C\u5F88\u591A\u540C\u5B66\u4E0D\u4E86\u89E3\u4EC0\u4E48\u65F6\u5019\u8BE5\u7528 <code>computed</code> \u4EC0\u4E48\u65F6\u5019\u8BE5\u7528 <code>watch</code>\u3002\u5148\u4E0D\u56DE\u7B54\u8FD9\u4E2A\u95EE\u9898\uFF0C\u63A5\u4E0B\u6765\u4ECE\u6E90\u7801\u5B9E\u73B0\u7684\u89D2\u5EA6\u6765\u5206\u6790\u5B83\u4EEC\u4E24\u8005\u6709\u4EC0\u4E48\u533A\u522B\u3002</p><h2 id="computed" tabindex="-1"><a class="header-anchor" href="#computed" aria-hidden="true">#</a> <code>computed</code></h2><p>\u8BA1\u7B97\u5C5E\u6027\u7684\u521D\u59CB\u5316\u662F\u53D1\u751F\u5728 Vue \u5B9E\u4F8B\u521D\u59CB\u5316\u9636\u6BB5\u7684 <code>initState</code> \u51FD\u6570\u4E2D\uFF0C\u6267\u884C\u4E86 <code>if (opts.computed) initComputed(vm, opts.computed)</code>\uFF0C<code>initComputed</code> \u7684\u5B9A\u4E49\u5728 <code>src/core/instance/state.js</code> \u4E2D\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> computedWatcherOptions <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">computed</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">initComputed</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">vm</span><span class="token operator">:</span> Component<span class="token punctuation">,</span> <span class="token literal-property property">computed</span><span class="token operator">:</span> Object</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// $flow-disable-line</span>
  <span class="token keyword">const</span> watchers <span class="token operator">=</span> vm<span class="token punctuation">.</span>_computedWatchers <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span>
  <span class="token comment">// computed properties are just getters during SSR</span>
  <span class="token keyword">const</span> isSSR <span class="token operator">=</span> <span class="token function">isServerRendering</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> key <span class="token keyword">in</span> computed<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> userDef <span class="token operator">=</span> computed<span class="token punctuation">[</span>key<span class="token punctuation">]</span>
    <span class="token keyword">const</span> getter <span class="token operator">=</span> <span class="token keyword">typeof</span> userDef <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span> <span class="token operator">?</span> userDef <span class="token operator">:</span> userDef<span class="token punctuation">.</span>get
    <span class="token keyword">if</span> <span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">!==</span> <span class="token string">&#39;production&#39;</span> <span class="token operator">&amp;&amp;</span> getter <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">warn</span><span class="token punctuation">(</span>
        <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Getter is missing for computed property &quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>key<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;.</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
        vm
      <span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isSSR<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// create internal watcher for the computed property.</span>
      watchers<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Watcher</span><span class="token punctuation">(</span>
        vm<span class="token punctuation">,</span>
        getter <span class="token operator">||</span> noop<span class="token punctuation">,</span>
        noop<span class="token punctuation">,</span>
        computedWatcherOptions
      <span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// component-defined computed properties are already defined on the</span>
    <span class="token comment">// component prototype. We only need to define computed properties defined</span>
    <span class="token comment">// at instantiation here.</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">(</span>key <span class="token keyword">in</span> vm<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">defineComputed</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> key<span class="token punctuation">,</span> userDef<span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">!==</span> <span class="token string">&#39;production&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>key <span class="token keyword">in</span> vm<span class="token punctuation">.</span>$data<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">warn</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">The computed property &quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>key<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot; is already defined in data.</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> vm<span class="token punctuation">)</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>vm<span class="token punctuation">.</span>$options<span class="token punctuation">.</span>props <span class="token operator">&amp;&amp;</span> key <span class="token keyword">in</span> vm<span class="token punctuation">.</span>$options<span class="token punctuation">.</span>props<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">warn</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">The computed property &quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>key<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot; is already defined as a prop.</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> vm<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br></div></div><p>\u51FD\u6570\u9996\u5148\u521B\u5EFA <code>vm._computedWatchers</code> \u4E3A\u4E00\u4E2A\u7A7A\u5BF9\u8C61\uFF0C\u63A5\u7740\u5BF9 <code>computed</code> \u5BF9\u8C61\u505A\u904D\u5386\uFF0C\u62FF\u5230\u8BA1\u7B97\u5C5E\u6027\u7684\u6BCF\u4E00\u4E2A <code>userDef</code>\uFF0C\u7136\u540E\u5C1D\u8BD5\u83B7\u53D6\u8FD9\u4E2A <code>userDef</code> \u5BF9\u5E94\u7684 <code>getter</code> \u51FD\u6570\uFF0C\u62FF\u4E0D\u5230\u5219\u5728\u5F00\u53D1\u73AF\u5883\u4E0B\u62A5\u8B66\u544A\u3002\u63A5\u4E0B\u6765\u4E3A\u6BCF\u4E00\u4E2A <code>getter</code> \u521B\u5EFA\u4E00\u4E2A <code>watcher</code>\uFF0C\u8FD9\u4E2A <code>watcher</code> \u548C\u6E32\u67D3 <code>watcher</code> \u6709\u4E00\u70B9\u5F88\u5927\u7684\u4E0D\u540C\uFF0C\u5B83\u662F\u4E00\u4E2A <code>computed watcher</code>\uFF0C\u56E0\u4E3A <code>const computedWatcherOptions = { computed: true }</code>\u3002<code>computed watcher</code> \u548C\u666E\u901A <code>watcher</code> \u7684\u5DEE\u522B\u7A0D\u540E\u4F1A\u4ECB\u7ECD\u3002\u6700\u540E\u5BF9\u5224\u65AD\u5982\u679C <code>key</code> \u4E0D\u662F <code>vm</code> \u7684\u5C5E\u6027\uFF0C\u5219\u8C03\u7528 <code>defineComputed(vm, key, userDef)</code>\uFF0C\u5426\u5219\u5224\u65AD\u8BA1\u7B97\u5C5E\u6027\u5BF9\u4E8E\u7684 <code>key</code> \u662F\u5426\u5DF2\u7ECF\u88AB <code>data</code> \u6216\u8005 <code>prop</code> \u6240\u5360\u7528\uFF0C\u5982\u679C\u662F\u7684\u8BDD\u5219\u5728\u5F00\u53D1\u73AF\u5883\u62A5\u76F8\u5E94\u7684\u8B66\u544A\u3002</p><p>\u90A3\u4E48\u63A5\u4E0B\u6765\u9700\u8981\u91CD\u70B9\u5173\u6CE8 <code>defineComputed</code> \u7684\u5B9E\u73B0\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">defineComputed</span> <span class="token punctuation">(</span>
  <span class="token parameter"><span class="token literal-property property">target</span><span class="token operator">:</span> any<span class="token punctuation">,</span>
  <span class="token literal-property property">key</span><span class="token operator">:</span> string<span class="token punctuation">,</span>
  <span class="token literal-property property">userDef</span><span class="token operator">:</span> Object <span class="token operator">|</span> Function</span>
<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> shouldCache <span class="token operator">=</span> <span class="token operator">!</span><span class="token function">isServerRendering</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> userDef <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    sharedPropertyDefinition<span class="token punctuation">.</span>get <span class="token operator">=</span> shouldCache
      <span class="token operator">?</span> <span class="token function">createComputedGetter</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span>
      <span class="token operator">:</span> userDef
    sharedPropertyDefinition<span class="token punctuation">.</span>set <span class="token operator">=</span> noop
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    sharedPropertyDefinition<span class="token punctuation">.</span>get <span class="token operator">=</span> userDef<span class="token punctuation">.</span>get
      <span class="token operator">?</span> shouldCache <span class="token operator">&amp;&amp;</span> userDef<span class="token punctuation">.</span>cache <span class="token operator">!==</span> <span class="token boolean">false</span>
        <span class="token operator">?</span> <span class="token function">createComputedGetter</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span>
        <span class="token operator">:</span> userDef<span class="token punctuation">.</span>get
      <span class="token operator">:</span> noop
    sharedPropertyDefinition<span class="token punctuation">.</span>set <span class="token operator">=</span> userDef<span class="token punctuation">.</span>set
      <span class="token operator">?</span> userDef<span class="token punctuation">.</span>set
      <span class="token operator">:</span> noop
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">!==</span> <span class="token string">&#39;production&#39;</span> <span class="token operator">&amp;&amp;</span>
      sharedPropertyDefinition<span class="token punctuation">.</span>set <span class="token operator">===</span> noop<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    sharedPropertyDefinition<span class="token punctuation">.</span><span class="token function-variable function">set</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">warn</span><span class="token punctuation">(</span>
        <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Computed property &quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>key<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot; was assigned to but it has no setter.</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
        <span class="token keyword">this</span>
      <span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  Object<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> sharedPropertyDefinition<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br></div></div><p>\u8FD9\u6BB5\u903B\u8F91\u5F88\u7B80\u5355\uFF0C\u5176\u5B9E\u5C31\u662F\u5229\u7528 <code>Object.defineProperty</code> \u7ED9\u8BA1\u7B97\u5C5E\u6027\u5BF9\u5E94\u7684 <code>key</code> \u503C\u6DFB\u52A0 getter \u548C setter\uFF0Csetter \u901A\u5E38\u662F\u8BA1\u7B97\u5C5E\u6027\u662F\u4E00\u4E2A\u5BF9\u8C61\uFF0C\u5E76\u4E14\u62E5\u6709 <code>set</code> \u65B9\u6CD5\u7684\u65F6\u5019\u624D\u6709\uFF0C\u5426\u5219\u662F\u4E00\u4E2A\u7A7A\u51FD\u6570\u3002\u5728\u5E73\u65F6\u7684\u5F00\u53D1\u573A\u666F\u4E2D\uFF0C\u8BA1\u7B97\u5C5E\u6027\u6709 setter \u7684\u60C5\u51B5\u6BD4\u8F83\u5C11\uFF0C\u91CD\u70B9\u5173\u6CE8\u4E00\u4E0B getter \u90E8\u5206\uFF0C\u7F13\u5B58\u7684\u914D\u7F6E\u4E5F\u5148\u5FFD\u7565\uFF0C\u6700\u7EC8 getter \u5BF9\u5E94\u7684\u662F <code>createComputedGetter(key)</code> \u7684\u8FD4\u56DE\u503C\uFF0C\u6765\u770B\u4E00\u4E0B\u5B83\u7684\u5B9A\u4E49\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">createComputedGetter</span> <span class="token punctuation">(</span><span class="token parameter">key</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token function">computedGetter</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> watcher <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_computedWatchers <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_computedWatchers<span class="token punctuation">[</span>key<span class="token punctuation">]</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>watcher<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      watcher<span class="token punctuation">.</span><span class="token function">depend</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token keyword">return</span> watcher<span class="token punctuation">.</span><span class="token function">evaluate</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p><code>createComputedGetter</code> \u8FD4\u56DE\u4E00\u4E2A\u51FD\u6570 <code>computedGetter</code>\uFF0C\u5B83\u5C31\u662F\u8BA1\u7B97\u5C5E\u6027\u5BF9\u5E94\u7684 getter\u3002</p><p>\u6574\u4E2A\u8BA1\u7B97\u5C5E\u6027\u7684\u521D\u59CB\u5316\u8FC7\u7A0B\u5230\u6B64\u7ED3\u675F\uFF0C\u77E5\u9053\u8BA1\u7B97\u5C5E\u6027\u662F\u4E00\u4E2A <code>computed watcher</code>\uFF0C\u5B83\u548C\u666E\u901A\u7684 <code>watcher</code> \u6709\u4EC0\u4E48\u533A\u522B\u5462\uFF0C\u4E3A\u4E86\u66F4\u52A0\u76F4\u89C2\uFF0C\u63A5\u4E0B\u6765\u6765\u6765\u901A\u8FC7\u4E00\u4E2A\u4F8B\u5B50\u6765\u5206\u6790 <code>computed watcher</code> \u7684\u5B9E\u73B0\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">firstName</span><span class="token operator">:</span> <span class="token string">&#39;Foo&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">lastName</span><span class="token operator">:</span> <span class="token string">&#39;Bar&#39;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">computed</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token function-variable function">fullName</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>firstName <span class="token operator">+</span> <span class="token string">&#39; &#39;</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>lastName
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>\u5F53\u521D\u59CB\u5316\u8FD9\u4E2A <code>computed watcher</code> \u5B9E\u4F8B\u7684\u65F6\u5019\uFF0C\u6784\u9020\u51FD\u6570\u90E8\u5206\u903B\u8F91\u7A0D\u6709\u4E0D\u540C\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">constructor</span> <span class="token punctuation">(</span>
  <span class="token parameter"><span class="token literal-property property">vm</span><span class="token operator">:</span> Component<span class="token punctuation">,</span>
  <span class="token literal-property property">expOrFn</span><span class="token operator">:</span> string <span class="token operator">|</span> Function<span class="token punctuation">,</span>
  <span class="token literal-property property">cb</span><span class="token operator">:</span> Function<span class="token punctuation">,</span>
  options<span class="token operator">?</span><span class="token operator">:</span> <span class="token operator">?</span>Object<span class="token punctuation">,</span>
  isRenderWatcher<span class="token operator">?</span><span class="token operator">:</span> boolean</span>
<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>computed<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token keyword">undefined</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>dep <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Dep</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>  
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p>\u53EF\u4EE5\u53D1\u73B0 <code>computed watcher</code> \u4F1A\u5E76\u4E0D\u4F1A\u7ACB\u523B\u6C42\u503C\uFF0C\u540C\u65F6\u6301\u6709\u4E00\u4E2A <code>dep</code> \u5B9E\u4F8B\u3002</p><p>\u7136\u540E\u5F53\u7684 <code>render</code> \u51FD\u6570\u6267\u884C\u8BBF\u95EE\u5230 <code>this.fullName</code> \u7684\u65F6\u5019\uFF0C\u5C31\u89E6\u53D1\u4E86\u8BA1\u7B97\u5C5E\u6027\u7684 <code>getter</code>\uFF0C\u5B83\u4F1A\u62FF\u5230\u8BA1\u7B97\u5C5E\u6027\u5BF9\u5E94\u7684 <code>watcher</code>\uFF0C\u7136\u540E\u6267\u884C <code>watcher.depend()</code>\uFF0C\u6765\u770B\u4E00\u4E0B\u5B83\u7684\u5B9A\u4E49\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
  * Depend on this watcher. Only for computed property watchers.
  */</span>
<span class="token function">depend</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>dep <span class="token operator">&amp;&amp;</span> Dep<span class="token punctuation">.</span>target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>dep<span class="token punctuation">.</span><span class="token function">depend</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>\u6CE8\u610F\uFF0C\u8FD9\u65F6\u5019\u7684 <code>Dep.target</code> \u662F\u6E32\u67D3 <code>watcher</code>\uFF0C\u6240\u4EE5 <code>this.dep.depend()</code> \u76F8\u5F53\u4E8E\u6E32\u67D3 <code>watcher</code> \u8BA2\u9605\u4E86\u8FD9\u4E2A <code>computed watcher</code> \u7684\u53D8\u5316\u3002</p><p>\u7136\u540E\u518D\u6267\u884C <code>watcher.evaluate()</code> \u53BB\u6C42\u503C\uFF0C\u6765\u770B\u4E00\u4E0B\u5B83\u7684\u5B9A\u4E49\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
  * Evaluate and return the value of the watcher.
  * This only gets called for computed property watchers.
  */</span>
<span class="token function">evaluate</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>dirty<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>dirty <span class="token operator">=</span> <span class="token boolean">false</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>value
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p><code>evaluate</code> \u7684\u903B\u8F91\u975E\u5E38\u7B80\u5355\uFF0C\u5224\u65AD <code>this.dirty</code>\uFF0C\u5982\u679C\u4E3A <code>true</code> \u5219\u901A\u8FC7 <code>this.get()</code> \u6C42\u503C\uFF0C\u7136\u540E\u628A <code>this.dirty</code> \u8BBE\u7F6E\u4E3A false\u3002\u5728\u6C42\u503C\u8FC7\u7A0B\u4E2D\uFF0C\u4F1A\u6267\u884C <code>value = this.getter.call(vm, vm)</code>\uFF0C\u8FD9\u5B9E\u9645\u4E0A\u5C31\u662F\u6267\u884C\u4E86\u8BA1\u7B97\u5C5E\u6027\u5B9A\u4E49\u7684 <code>getter</code> \u51FD\u6570\uFF0C\u5728\u8FD9\u4E2A\u4F8B\u5B50\u5C31\u662F\u6267\u884C\u4E86 <code>return this.firstName + &#39; &#39; + this.lastName</code>\u3002</p><p>\u8FD9\u91CC\u9700\u8981\u7279\u522B\u6CE8\u610F\u7684\u662F\uFF0C\u7531\u4E8E <code>this.firstName</code> \u548C <code>this.lastName</code> \u90FD\u662F\u54CD\u5E94\u5F0F\u5BF9\u8C61\uFF0C\u8FD9\u91CC\u4F1A\u89E6\u53D1\u5B83\u4EEC\u7684 getter\uFF0C\u6839\u636E\u4E4B\u524D\u7684\u5206\u6790\uFF0C\u5B83\u4EEC\u4F1A\u628A\u81EA\u8EAB\u6301\u6709\u7684 <code>dep</code> \u6DFB\u52A0\u5230\u5F53\u524D\u6B63\u5728\u8BA1\u7B97\u7684 <code>watcher</code> \u4E2D\uFF0C\u8FD9\u4E2A\u65F6\u5019 <code>Dep.target</code> \u5C31\u662F\u8FD9\u4E2A <code>computed watcher</code>\u3002</p><p>\u6700\u540E\u901A\u8FC7 <code>return this.value</code> \u62FF\u5230\u8BA1\u7B97\u5C5E\u6027\u5BF9\u5E94\u7684\u503C\u3002\u77E5\u9053\u4E86\u8BA1\u7B97\u5C5E\u6027\u7684\u6C42\u503C\u8FC7\u7A0B\uFF0C\u90A3\u4E48\u63A5\u4E0B\u6765\u770B\u4E00\u4E0B\u5B83\u4F9D\u8D56\u7684\u6570\u636E\u53D8\u5316\u540E\u7684\u903B\u8F91\u3002</p><p>\u4E00\u65E6\u5BF9\u8BA1\u7B97\u5C5E\u6027\u4F9D\u8D56\u7684\u6570\u636E\u505A\u4FEE\u6539\uFF0C\u5219\u4F1A\u89E6\u53D1 setter \u8FC7\u7A0B\uFF0C\u901A\u77E5\u6240\u6709\u8BA2\u9605\u5B83\u53D8\u5316\u7684 <code>watcher</code> \u66F4\u65B0\uFF0C\u6267\u884C <code>watcher.update()</code> \u65B9\u6CD5\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">/* istanbul ignore else */</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>computed<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// A computed property watcher has two modes: lazy and activated.</span>
  <span class="token comment">// It initializes as lazy by default, and only becomes activated when</span>
  <span class="token comment">// it is depended on by at least one subscriber, which is typically</span>
  <span class="token comment">// another computed property or a component&#39;s render function.</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>dep<span class="token punctuation">.</span>subs<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// In lazy mode, we don&#39;t want to perform computations until necessary,</span>
    <span class="token comment">// so we simply mark the watcher as dirty. The actual computation is</span>
    <span class="token comment">// performed just-in-time in this.evaluate() when the computed property</span>
    <span class="token comment">// is accessed.</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>dirty <span class="token operator">=</span> <span class="token boolean">true</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token comment">// In activated mode, we want to proactively perform the computation</span>
    <span class="token comment">// but only notify our subscribers when the value has indeed changed.</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getAndInvoke</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>dep<span class="token punctuation">.</span><span class="token function">notify</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>sync<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
  <span class="token function">queueWatcher</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><p>\u90A3\u4E48\u5BF9\u4E8E\u8BA1\u7B97\u5C5E\u6027\u8FD9\u6837\u7684 <code>computed watcher</code>\uFF0C\u5B83\u5B9E\u9645\u4E0A\u662F\u6709 2 \u79CD\u6A21\u5F0F\uFF0Clazy \u548C active\u3002\u5982\u679C <code>this.dep.subs.length === 0</code> \u6210\u7ACB\uFF0C\u5219\u8BF4\u660E\u6CA1\u6709\u4EBA\u53BB\u8BA2\u9605\u8FD9\u4E2A <code>computed watcher</code> \u7684\u53D8\u5316\uFF0C\u4EC5\u4EC5\u628A <code>this.dirty = true</code>\uFF0C\u53EA\u6709\u5F53\u4E0B\u6B21\u518D\u8BBF\u95EE\u8FD9\u4E2A\u8BA1\u7B97\u5C5E\u6027\u7684\u65F6\u5019\u624D\u4F1A\u91CD\u65B0\u6C42\u503C\u3002\u5728\u7684\u573A\u666F\u4E0B\uFF0C\u6E32\u67D3 <code>watcher</code> \u8BA2\u9605\u4E86\u8FD9\u4E2A <code>computed watcher</code> \u7684\u53D8\u5316\uFF0C\u90A3\u4E48\u5B83\u4F1A\u6267\u884C\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getAndInvoke</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>dep<span class="token punctuation">.</span><span class="token function">notify</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token function">getAndInvoke</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">cb</span><span class="token operator">:</span> Function</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> value <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>
    value <span class="token operator">!==</span> <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">||</span>
    <span class="token comment">// Deep watchers and watchers on Object/Arrays should fire even</span>
    <span class="token comment">// when the value is the same, because the value may</span>
    <span class="token comment">// have mutated.</span>
    <span class="token function">isObject</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token operator">||</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>deep
  <span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// set new value</span>
    <span class="token keyword">const</span> oldValue <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>value
    <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">=</span> value
    <span class="token keyword">this</span><span class="token punctuation">.</span>dirty <span class="token operator">=</span> <span class="token boolean">false</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>user<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token function">cb</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>vm<span class="token punctuation">,</span> value<span class="token punctuation">,</span> oldValue<span class="token punctuation">)</span>
      <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">handleError</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>vm<span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">callback for watcher &quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">this</span><span class="token punctuation">.</span>expression<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token function">cb</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>vm<span class="token punctuation">,</span> value<span class="token punctuation">,</span> oldValue<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br></div></div><p><code>getAndInvoke</code> \u51FD\u6570\u4F1A\u91CD\u65B0\u8BA1\u7B97\uFF0C\u7136\u540E\u5BF9\u6BD4\u65B0\u65E7\u503C\uFF0C\u5982\u679C\u53D8\u5316\u4E86\u5219\u6267\u884C\u56DE\u8C03\u51FD\u6570\uFF0C\u90A3\u4E48\u8FD9\u91CC\u8FD9\u4E2A\u56DE\u8C03\u51FD\u6570\u662F <code>this.dep.notify()</code>\uFF0C\u5728\u8FD9\u4E2A\u573A\u666F\u4E0B\u5C31\u662F\u89E6\u53D1\u4E86\u6E32\u67D3 <code>watcher</code> \u91CD\u65B0\u6E32\u67D3\u3002</p><p>\u901A\u8FC7\u4EE5\u4E0A\u7684\u5206\u6790\uFF0C\u77E5\u9053\u8BA1\u7B97\u5C5E\u6027\u672C\u8D28\u4E0A\u5C31\u662F\u4E00\u4E2A <code>computed watcher</code>\uFF0C\u4E5F\u4E86\u89E3\u4E86\u5B83\u7684\u521B\u5EFA\u8FC7\u7A0B\u548C\u88AB\u8BBF\u95EE\u89E6\u53D1 getter \u4EE5\u53CA\u4F9D\u8D56\u66F4\u65B0\u7684\u8FC7\u7A0B\uFF0C\u5176\u5B9E\u8FD9\u662F\u6700\u65B0\u7684\u8BA1\u7B97\u5C5E\u6027\u7684\u5B9E\u73B0\uFF0C\u4E4B\u6240\u4EE5\u8FD9\u4E48\u8BBE\u8BA1\u662F\u56E0\u4E3A Vue \u60F3\u786E\u4FDD\u4E0D\u4EC5\u4EC5\u662F\u8BA1\u7B97\u5C5E\u6027\u4F9D\u8D56\u7684\u503C\u53D1\u751F\u53D8\u5316\uFF0C\u800C\u662F\u5F53\u8BA1\u7B97\u5C5E\u6027\u6700\u7EC8\u8BA1\u7B97\u7684\u503C\u53D1\u751F\u53D8\u5316\u624D\u4F1A\u89E6\u53D1\u6E32\u67D3 <code>watcher</code> \u91CD\u65B0\u6E32\u67D3\uFF0C\u672C\u8D28\u4E0A\u662F\u4E00\u79CD\u4F18\u5316\u3002</p><p>\u63A5\u4E0B\u6765\u6765\u5206\u6790\u4E00\u4E0B\u4FA6\u542C\u5C5E\u6027 <code>watch</code> \u662F\u600E\u4E48\u5B9E\u73B0\u7684\u3002</p><h2 id="watch" tabindex="-1"><a class="header-anchor" href="#watch" aria-hidden="true">#</a> watch</h2><p>\u4FA6\u542C\u5C5E\u6027\u7684\u521D\u59CB\u5316\u4E5F\u662F\u53D1\u751F\u5728 Vue \u7684\u5B9E\u4F8B\u521D\u59CB\u5316\u9636\u6BB5\u7684 <code>initState</code> \u51FD\u6570\u4E2D\uFF0C\u5728 <code>computed</code> \u521D\u59CB\u5316\u4E4B\u540E\uFF0C\u6267\u884C\u4E86\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">if</span> <span class="token punctuation">(</span>opts<span class="token punctuation">.</span>watch <span class="token operator">&amp;&amp;</span> opts<span class="token punctuation">.</span>watch <span class="token operator">!==</span> nativeWatch<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">initWatch</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> opts<span class="token punctuation">.</span>watch<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u6765\u770B\u4E00\u4E0B <code>initWatch</code> \u7684\u5B9E\u73B0\uFF0C\u5B83\u7684\u5B9A\u4E49\u5728 <code>src/core/instance/state.js</code> \u4E2D\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">initWatch</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">vm</span><span class="token operator">:</span> Component<span class="token punctuation">,</span> <span class="token literal-property property">watch</span><span class="token operator">:</span> Object</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> key <span class="token keyword">in</span> watch<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> handler <span class="token operator">=</span> watch<span class="token punctuation">[</span>key<span class="token punctuation">]</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>handler<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> handler<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">createWatcher</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> key<span class="token punctuation">,</span> handler<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token function">createWatcher</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> key<span class="token punctuation">,</span> handler<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>\u8FD9\u91CC\u5C31\u662F\u5BF9 <code>watch</code> \u5BF9\u8C61\u505A\u904D\u5386\uFF0C\u62FF\u5230\u6BCF\u4E00\u4E2A <code>handler</code>\uFF0C\u56E0\u4E3A Vue \u662F\u652F\u6301 <code>watch</code> \u7684\u540C\u4E00\u4E2A <code>key</code> \u5BF9\u5E94\u591A\u4E2A <code>handler</code>\uFF0C\u6240\u4EE5\u5982\u679C <code>handler</code> \u662F\u4E00\u4E2A\u6570\u7EC4\uFF0C\u5219\u904D\u5386\u8FD9\u4E2A\u6570\u7EC4\uFF0C\u8C03\u7528 <code>createWatcher</code> \u65B9\u6CD5\uFF0C\u5426\u5219\u76F4\u63A5\u8C03\u7528 <code>createWatcher</code>\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">createWatcher</span> <span class="token punctuation">(</span>
  <span class="token parameter"><span class="token literal-property property">vm</span><span class="token operator">:</span> Component<span class="token punctuation">,</span>
  <span class="token literal-property property">expOrFn</span><span class="token operator">:</span> string <span class="token operator">|</span> Function<span class="token punctuation">,</span>
  <span class="token literal-property property">handler</span><span class="token operator">:</span> any<span class="token punctuation">,</span>
  options<span class="token operator">?</span><span class="token operator">:</span> Object</span>
<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isPlainObject</span><span class="token punctuation">(</span>handler<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    options <span class="token operator">=</span> handler
    handler <span class="token operator">=</span> handler<span class="token punctuation">.</span>handler
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> handler <span class="token operator">===</span> <span class="token string">&#39;string&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    handler <span class="token operator">=</span> vm<span class="token punctuation">[</span>handler<span class="token punctuation">]</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> vm<span class="token punctuation">.</span><span class="token function">$watch</span><span class="token punctuation">(</span>expOrFn<span class="token punctuation">,</span> handler<span class="token punctuation">,</span> options<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p>\u8FD9\u91CC\u7684\u903B\u8F91\u4E5F\u5F88\u7B80\u5355\uFF0C\u9996\u5148\u5BF9 <code>hanlder</code> \u7684\u7C7B\u578B\u505A\u5224\u65AD\uFF0C\u62FF\u5230\u5B83\u6700\u7EC8\u7684\u56DE\u8C03\u51FD\u6570\uFF0C\u6700\u540E\u8C03\u7528 <code>vm.$watch(keyOrFn, handler, options)</code> \u51FD\u6570\uFF0C<code>$watch</code> \u662F Vue \u539F\u578B\u4E0A\u7684\u65B9\u6CD5\uFF0C\u5B83\u662F\u5728\u6267\u884C <code>stateMixin</code> \u7684\u65F6\u5019\u5B9A\u4E49\u7684\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token class-name">Vue</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">$watch</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>
  <span class="token parameter"><span class="token literal-property property">expOrFn</span><span class="token operator">:</span> string <span class="token operator">|</span> Function<span class="token punctuation">,</span>
  <span class="token literal-property property">cb</span><span class="token operator">:</span> any<span class="token punctuation">,</span>
  options<span class="token operator">?</span><span class="token operator">:</span> Object</span>
<span class="token punctuation">)</span><span class="token operator">:</span> Function <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token literal-property property">vm</span><span class="token operator">:</span> Component <span class="token operator">=</span> <span class="token keyword">this</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isPlainObject</span><span class="token punctuation">(</span>cb<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">createWatcher</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> expOrFn<span class="token punctuation">,</span> cb<span class="token punctuation">,</span> options<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  options <span class="token operator">=</span> options <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  options<span class="token punctuation">.</span>user <span class="token operator">=</span> <span class="token boolean">true</span>
  <span class="token keyword">const</span> watcher <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Watcher</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> expOrFn<span class="token punctuation">,</span> cb<span class="token punctuation">,</span> options<span class="token punctuation">)</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>options<span class="token punctuation">.</span>immediate<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">cb</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> watcher<span class="token punctuation">.</span>value<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token function">unwatchFn</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    watcher<span class="token punctuation">.</span><span class="token function">teardown</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><p>\u4E5F\u5C31\u662F\u8BF4\uFF0C\u4FA6\u542C\u5C5E\u6027 <code>watch</code> \u6700\u7EC8\u4F1A\u8C03\u7528 <code>$watch</code> \u65B9\u6CD5\uFF0C\u8FD9\u4E2A\u65B9\u6CD5\u9996\u5148\u5224\u65AD <code>cb</code> \u5982\u679C\u662F\u4E00\u4E2A\u5BF9\u8C61\uFF0C\u5219\u8C03\u7528 <code>createWatcher</code> \u65B9\u6CD5\uFF0C\u8FD9\u662F\u56E0\u4E3A <code>$watch</code> \u65B9\u6CD5\u662F\u7528\u6237\u53EF\u4EE5\u76F4\u63A5\u8C03\u7528\u7684\uFF0C\u5B83\u53EF\u4EE5\u4F20\u9012\u4E00\u4E2A\u5BF9\u8C61\uFF0C\u4E5F\u53EF\u4EE5\u4F20\u9012\u51FD\u6570\u3002\u63A5\u7740\u6267\u884C <code>const watcher = new Watcher(vm, expOrFn, cb, options)</code> \u5B9E\u4F8B\u5316\u4E86\u4E00\u4E2A <code>watcher</code>\uFF0C\u8FD9\u91CC\u9700\u8981\u6CE8\u610F\u4E00\u70B9\u8FD9\u662F\u4E00\u4E2A <code>user watcher</code>\uFF0C\u56E0\u4E3A <code>options.user = true</code>\u3002\u901A\u8FC7\u5B9E\u4F8B\u5316 <code>watcher</code> \u7684\u65B9\u5F0F\uFF0C\u4E00\u65E6 <code>watch</code> \u7684\u6570\u636E\u53D1\u9001\u53D8\u5316\uFF0C\u5B83\u6700\u7EC8\u4F1A\u6267\u884C <code>watcher</code> \u7684 <code>run</code> \u65B9\u6CD5\uFF0C\u6267\u884C\u56DE\u8C03\u51FD\u6570 <code>cb</code>\uFF0C\u5E76\u4E14\u5982\u679C\u8BBE\u7F6E\u4E86 <code>immediate</code> \u4E3A true\uFF0C\u5219\u76F4\u63A5\u4F1A\u6267\u884C\u56DE\u8C03\u51FD\u6570 <code>cb</code>\u3002\u6700\u540E\u8FD4\u56DE\u4E86\u4E00\u4E2A <code>unwatchFn</code> \u65B9\u6CD5\uFF0C\u5B83\u4F1A\u8C03\u7528 <code>teardown</code> \u65B9\u6CD5\u53BB\u79FB\u9664\u8FD9\u4E2A <code>watcher</code>\u3002</p><p>\u6240\u4EE5\u672C\u8D28\u4E0A\u4FA6\u542C\u5C5E\u6027\u4E5F\u662F\u57FA\u4E8E <code>Watcher</code> \u5B9E\u73B0\u7684\uFF0C\u5B83\u662F\u4E00\u4E2A <code>user watcher</code>\u3002\u5176\u5B9E <code>Watcher</code> \u652F\u6301\u4E86\u4E0D\u540C\u7684\u7C7B\u578B\uFF0C\u4E0B\u9762\u68B3\u7406\u4E00\u4E0B\u5B83\u6709\u54EA\u4E9B\u7C7B\u578B\u4EE5\u53CA\u5B83\u4EEC\u7684\u4F5C\u7528\u3002</p><h2 id="watcher-options" tabindex="-1"><a class="header-anchor" href="#watcher-options" aria-hidden="true">#</a> Watcher options</h2><p><code>Watcher</code> \u7684\u6784\u9020\u51FD\u6570\u5BF9 <code>options</code> \u505A\u7684\u4E86\u5904\u7406\uFF0C\u4EE3\u7801\u5982\u4E0B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">if</span> <span class="token punctuation">(</span>options<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>deep <span class="token operator">=</span> <span class="token operator">!</span><span class="token operator">!</span>options<span class="token punctuation">.</span>deep
  <span class="token keyword">this</span><span class="token punctuation">.</span>user <span class="token operator">=</span> <span class="token operator">!</span><span class="token operator">!</span>options<span class="token punctuation">.</span>user
  <span class="token keyword">this</span><span class="token punctuation">.</span>computed <span class="token operator">=</span> <span class="token operator">!</span><span class="token operator">!</span>options<span class="token punctuation">.</span>computed
  <span class="token keyword">this</span><span class="token punctuation">.</span>sync <span class="token operator">=</span> <span class="token operator">!</span><span class="token operator">!</span>options<span class="token punctuation">.</span>sync
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>deep <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>user <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>computed <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>sync <span class="token operator">=</span> <span class="token boolean">false</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>\u6240\u4EE5 <code>watcher</code> \u603B\u5171\u6709 4 \u79CD\u7C7B\u578B\uFF0C\u6765\u4E00\u4E00\u5206\u6790\u5B83\u4EEC\uFF0C\u770B\u770B\u4E0D\u540C\u7684\u7C7B\u578B\u6267\u884C\u7684\u903B\u8F91\u6709\u54EA\u4E9B\u5DEE\u522B\u3002</p><h3 id="deep-watcher" tabindex="-1"><a class="header-anchor" href="#deep-watcher" aria-hidden="true">#</a> deep watcher</h3><p>\u901A\u5E38\uFF0C\u5982\u679C\u60F3\u5BF9\u4E00\u4E0B\u5BF9\u8C61\u505A\u6DF1\u5EA6\u89C2\u6D4B\u7684\u65F6\u5019\uFF0C\u9700\u8981\u8BBE\u7F6E\u8FD9\u4E2A\u5C5E\u6027\u4E3A true\uFF0C\u8003\u8651\u5230\u8FD9\u79CD\u60C5\u51B5\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token number">1</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">watch</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token function">handler</span><span class="token punctuation">(</span><span class="token parameter">newVal</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>newVal<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
vm<span class="token punctuation">.</span>a<span class="token punctuation">.</span>b <span class="token operator">=</span> <span class="token number">2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p>\u8FD9\u4E2A\u65F6\u5019\u662F\u4E0D\u4F1A log \u4EFB\u4F55\u6570\u636E\u7684\uFF0C\u56E0\u4E3A\u662F watch \u4E86 <code>a</code> \u5BF9\u8C61\uFF0C\u53EA\u89E6\u53D1\u4E86 <code>a</code> \u7684 getter\uFF0C\u5E76\u6CA1\u6709\u89E6\u53D1 <code>a.b</code> \u7684 getter\uFF0C\u6240\u4EE5\u5E76\u6CA1\u6709\u8BA2\u9605\u5B83\u7684\u53D8\u5316\uFF0C\u5BFC\u81F4\u5BF9 <code>vm.a.b = 2</code> \u8D4B\u503C\u7684\u65F6\u5019\uFF0C\u867D\u7136\u89E6\u53D1\u4E86 setter\uFF0C\u4F46\u6CA1\u6709\u53EF\u901A\u77E5\u7684\u5BF9\u8C61\uFF0C\u6240\u4EE5\u4E5F\u5E76\u4E0D\u4F1A\u89E6\u53D1 watch \u7684\u56DE\u8C03\u51FD\u6570\u4E86\u3002</p><p>\u800C\u53EA\u9700\u8981\u5BF9\u4EE3\u7801\u505A\u7A0D\u7A0D\u4FEE\u6539\uFF0C\u5C31\u53EF\u4EE5\u89C2\u6D4B\u5230\u8FD9\u4E2A\u53D8\u5316\u4E86</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token literal-property property">watch</span><span class="token operator">:</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">deep</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token function">handler</span><span class="token punctuation">(</span><span class="token parameter">newVal</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>newVal<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>\u8FD9\u6837\u5C31\u521B\u5EFA\u4E86\u4E00\u4E2A <code>deep watcher</code> \u4E86\uFF0C\u5728 <code>watcher </code> \u6267\u884C <code>get</code> \u6C42\u503C\u7684\u8FC7\u7A0B\u4E2D\u6709\u4E00\u6BB5\u903B\u8F91\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> value <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getter</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> vm<span class="token punctuation">)</span>
  <span class="token comment">// ...</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>deep<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">traverse</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>\u5728\u5BF9 watch \u7684\u8868\u8FBE\u5F0F\u6216\u8005\u51FD\u6570\u6C42\u503C\u540E\uFF0C\u4F1A\u8C03\u7528 <code>traverse</code> \u51FD\u6570\uFF0C\u5B83\u7684\u5B9A\u4E49\u5728 <code>src/core/observer/traverse.js</code> \u4E2D\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> _Set <span class="token keyword">as</span> Set<span class="token punctuation">,</span> isObject <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;../util/index&#39;</span>
<span class="token keyword">import</span> type <span class="token punctuation">{</span> SimpleSet <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;../util/index&#39;</span>
<span class="token keyword">import</span> VNode <span class="token keyword">from</span> <span class="token string">&#39;../vdom/vnode&#39;</span>

<span class="token keyword">const</span> seenObjects <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token doc-comment comment">/**
 * Recursively traverse an object to evoke all converted
 * getters, so that every nested property inside the object
 * is collected as a &quot;deep&quot; dependency.
 */</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">traverse</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">val</span><span class="token operator">:</span> any</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">_traverse</span><span class="token punctuation">(</span>val<span class="token punctuation">,</span> seenObjects<span class="token punctuation">)</span>
  seenObjects<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">_traverse</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">val</span><span class="token operator">:</span> any<span class="token punctuation">,</span> <span class="token literal-property property">seen</span><span class="token operator">:</span> SimpleSet</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> i<span class="token punctuation">,</span> keys
  <span class="token keyword">const</span> isA <span class="token operator">=</span> Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">!</span>isA <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token function">isObject</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">||</span> Object<span class="token punctuation">.</span><span class="token function">isFrozen</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span> <span class="token operator">||</span> val <span class="token keyword">instanceof</span> <span class="token class-name">VNode</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>val<span class="token punctuation">.</span>__ob__<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> depId <span class="token operator">=</span> val<span class="token punctuation">.</span>__ob__<span class="token punctuation">.</span>dep<span class="token punctuation">.</span>id
    <span class="token keyword">if</span> <span class="token punctuation">(</span>seen<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>depId<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span>
    <span class="token punctuation">}</span>
    seen<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>depId<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>isA<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    i <span class="token operator">=</span> val<span class="token punctuation">.</span>length
    <span class="token keyword">while</span> <span class="token punctuation">(</span>i<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token function">_traverse</span><span class="token punctuation">(</span>val<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> seen<span class="token punctuation">)</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    keys <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span>
    i <span class="token operator">=</span> keys<span class="token punctuation">.</span>length
    <span class="token keyword">while</span> <span class="token punctuation">(</span>i<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token function">_traverse</span><span class="token punctuation">(</span>val<span class="token punctuation">[</span>keys<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span> seen<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br></div></div><p><code>traverse</code> \u7684\u903B\u8F91\u4E5F\u5F88\u7B80\u5355\uFF0C\u5B83\u5B9E\u9645\u4E0A\u5C31\u662F\u5BF9\u4E00\u4E2A\u5BF9\u8C61\u505A\u6DF1\u5C42\u9012\u5F52\u904D\u5386\uFF0C\u56E0\u4E3A\u904D\u5386\u8FC7\u7A0B\u4E2D\u5C31\u662F\u5BF9\u4E00\u4E2A\u5B50\u5BF9\u8C61\u7684\u8BBF\u95EE\uFF0C\u4F1A\u89E6\u53D1\u5B83\u4EEC\u7684 getter \u8FC7\u7A0B\uFF0C\u8FD9\u6837\u5C31\u53EF\u4EE5\u6536\u96C6\u5230\u4F9D\u8D56\uFF0C\u4E5F\u5C31\u662F\u8BA2\u9605\u5B83\u4EEC\u53D8\u5316\u7684 <code>watcher</code>\uFF0C\u8FD9\u4E2A\u51FD\u6570\u5B9E\u73B0\u8FD8\u6709\u4E00\u4E2A\u5C0F\u7684\u4F18\u5316\uFF0C\u904D\u5386\u8FC7\u7A0B\u4E2D\u4F1A\u628A\u5B50\u54CD\u5E94\u5F0F\u5BF9\u8C61\u901A\u8FC7\u5B83\u4EEC\u7684 <code>dep id</code> \u8BB0\u5F55\u5230 <code>seenObjects</code>\uFF0C\u907F\u514D\u4EE5\u540E\u91CD\u590D\u8BBF\u95EE\u3002</p><p>\u90A3\u4E48\u5728\u6267\u884C\u4E86 <code>traverse</code> \u540E\uFF0C\u518D\u5BF9 watch \u7684\u5BF9\u8C61\u5185\u90E8\u4EFB\u4F55\u4E00\u4E2A\u503C\u505A\u4FEE\u6539\uFF0C\u4E5F\u4F1A\u8C03\u7528 <code>watcher</code> \u7684\u56DE\u8C03\u51FD\u6570\u4E86\u3002</p><p>\u5BF9 <code>deep watcher</code> \u7684\u7406\u89E3\u975E\u5E38\u91CD\u8981\uFF0C\u4ECA\u540E\u5DE5\u4F5C\u4E2D\u5982\u679C\u5927\u5BB6\u89C2\u6D4B\u4E86\u4E00\u4E2A\u590D\u6742\u5BF9\u8C61\uFF0C\u5E76\u4E14\u4F1A\u6539\u53D8\u5BF9\u8C61\u5185\u90E8\u6DF1\u5C42\u67D0\u4E2A\u503C\u7684\u65F6\u5019\u4E5F\u5E0C\u671B\u89E6\u53D1\u56DE\u8C03\uFF0C\u4E00\u5B9A\u8981\u8BBE\u7F6E <code>deep</code> \u4E3A true\uFF0C\u4F46\u662F\u56E0\u4E3A\u8BBE\u7F6E\u4E86 <code>deep</code> \u540E\u4F1A\u6267\u884C <code>traverse</code> \u51FD\u6570\uFF0C\u4F1A\u6709\u4E00\u5B9A\u7684\u6027\u80FD\u5F00\u9500\uFF0C\u6240\u4EE5\u4E00\u5B9A\u8981\u6839\u636E\u5E94\u7528\u573A\u666F\u6743\u8861\u662F\u5426\u8981\u5F00\u542F\u8FD9\u4E2A\u914D\u7F6E\u3002</p><h3 id="user-watcher" tabindex="-1"><a class="header-anchor" href="#user-watcher" aria-hidden="true">#</a> user watcher</h3><p>\u524D\u9762\u5206\u6790\u8FC7\uFF0C\u901A\u8FC7 <code>vm.$watch</code> \u521B\u5EFA\u7684 <code>watcher</code> \u662F\u4E00\u4E2A <code>user watcher</code>\uFF0C\u5176\u5B9E\u5B83\u7684\u529F\u80FD\u5F88\u7B80\u5355\uFF0C\u5728\u5BF9 <code>watcher</code> \u6C42\u503C\u4EE5\u53CA\u5728\u6267\u884C\u56DE\u8C03\u51FD\u6570\u7684\u65F6\u5019\uFF0C\u4F1A\u5904\u7406\u4E00\u4E0B\u9519\u8BEF\uFF0C\u5982\u4E0B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>user<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">handleError</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span> vm<span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">getter for watcher &quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">this</span><span class="token punctuation">.</span>expression<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token keyword">throw</span> e
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token function">getAndInvoke</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>user<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">cb</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>vm<span class="token punctuation">,</span> value<span class="token punctuation">,</span> oldValue<span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">handleError</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>vm<span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">callback for watcher &quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">this</span><span class="token punctuation">.</span>expression<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">cb</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>vm<span class="token punctuation">,</span> value<span class="token punctuation">,</span> oldValue<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><p><code>handleError</code> \u5728 Vue \u4E2D\u662F\u4E00\u4E2A\u9519\u8BEF\u6355\u83B7\u5E76\u4E14\u66B4\u9732\u7ED9\u7528\u6237\u7684\u4E00\u4E2A\u5229\u5668\u3002</p><h3 id="computed-watcher" tabindex="-1"><a class="header-anchor" href="#computed-watcher" aria-hidden="true">#</a> computed watcher</h3><p><code>computed watcher</code> \u51E0\u4E4E\u5C31\u662F\u4E3A\u8BA1\u7B97\u5C5E\u6027\u91CF\u8EAB\u5B9A\u5236\u7684\uFF0C\u521A\u624D\u5DF2\u7ECF\u5BF9\u5B83\u505A\u4E86\u8BE6\u7EC6\u7684\u5206\u6790\uFF0C\u8FD9\u91CC\u4E0D\u518D\u8D58\u8FF0\u4E86\u3002</p><h3 id="sync-watcher" tabindex="-1"><a class="header-anchor" href="#sync-watcher" aria-hidden="true">#</a> sync watcher</h3><p>\u5728\u4E4B\u524D\u5BF9 <code>setter</code> \u7684\u5206\u6790\u8FC7\u7A0B\u77E5\u9053\uFF0C\u5F53\u54CD\u5E94\u5F0F\u6570\u636E\u53D1\u9001\u53D8\u5316\u540E\uFF0C\u89E6\u53D1\u4E86 <code>watcher.update()</code>\uFF0C\u53EA\u662F\u628A\u8FD9\u4E2A <code>watcher</code> \u63A8\u9001\u5230\u4E00\u4E2A\u961F\u5217\u4E2D\uFF0C\u5728 <code>nextTick</code> \u540E\u624D\u4F1A\u771F\u6B63\u6267\u884C <code>watcher</code> \u7684\u56DE\u8C03\u51FD\u6570\u3002\u800C\u4E00\u65E6\u8BBE\u7F6E\u4E86 <code>sync</code>\uFF0C\u5C31\u53EF\u4EE5\u5728\u5F53\u524D <code>Tick</code> \u4E2D\u540C\u6B65\u6267\u884C <code>watcher</code> \u7684\u56DE\u8C03\u51FD\u6570\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">update</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>computed<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>sync<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token function">queueWatcher</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>\u53EA\u6709\u5F53\u9700\u8981 watch \u7684\u503C\u7684\u53D8\u5316\u5230\u6267\u884C <code>watcher</code> \u7684\u56DE\u8C03\u51FD\u6570\u662F\u4E00\u4E2A\u540C\u6B65\u8FC7\u7A0B\u7684\u65F6\u5019\u624D\u4F1A\u53BB\u8BBE\u7F6E\u8BE5\u5C5E\u6027\u4E3A true\u3002</p><h2 id="\u603B\u7ED3" tabindex="-1"><a class="header-anchor" href="#\u603B\u7ED3" aria-hidden="true">#</a> \u603B\u7ED3</h2><p>\u901A\u8FC7\u8FD9\u4E00\u5C0F\u8282\u7684\u5206\u6790\u5BF9\u8BA1\u7B97\u5C5E\u6027\u548C\u4FA6\u542C\u5C5E\u6027\u7684\u5B9E\u73B0\u6709\u4E86\u6DF1\u5165\u7684\u4E86\u89E3\uFF0C\u8BA1\u7B97\u5C5E\u6027\u672C\u8D28\u4E0A\u662F <code>computed watcher</code>\uFF0C\u800C\u4FA6\u542C\u5C5E\u6027\u672C\u8D28\u4E0A\u662F <code>user watcher</code>\u3002\u5C31\u5E94\u7528\u573A\u666F\u800C\u8A00\uFF0C\u8BA1\u7B97\u5C5E\u6027\u9002\u5408\u7528\u5728\u6A21\u677F\u6E32\u67D3\u4E2D\uFF0C\u67D0\u4E2A\u503C\u662F\u4F9D\u8D56\u4E86\u5176\u5B83\u7684\u54CD\u5E94\u5F0F\u5BF9\u8C61\u751A\u81F3\u662F\u8BA1\u7B97\u5C5E\u6027\u8BA1\u7B97\u800C\u6765\uFF1B\u800C\u4FA6\u542C\u5C5E\u6027\u9002\u7528\u4E8E\u89C2\u6D4B\u67D0\u4E2A\u503C\u7684\u53D8\u5316\u53BB\u5B8C\u6210\u4E00\u6BB5\u590D\u6742\u7684\u4E1A\u52A1\u903B\u8F91\u3002</p><p>\u540C\u65F6\u53C8\u4E86\u89E3\u4E86 <code>watcher</code> \u7684 4 \u4E2A <code>options</code>\uFF0C\u901A\u5E38\u4F1A\u5728\u521B\u5EFA <code>user watcher</code> \u7684\u65F6\u5019\u914D\u7F6E <code>deep</code> \u548C <code>sync</code>\uFF0C\u53EF\u4EE5\u6839\u636E\u4E0D\u540C\u7684\u573A\u666F\u505A\u76F8\u5E94\u7684\u914D\u7F6E\u3002</p>`,72);function e(t,o){return p}var u=s(a,[["render",e]]);export{u as default};
