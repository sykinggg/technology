import{a as n}from"./app.ba47fc91.js";import{_ as s}from"./plugin-vue_export-helper.21dcd24c.js";const a={},p=n(`<h1 id="slot" tabindex="-1"><a class="header-anchor" href="#slot" aria-hidden="true">#</a> slot</h1><p>Vue \u7684\u7EC4\u4EF6\u63D0\u4F9B\u4E86\u4E00\u4E2A\u975E\u5E38\u6709\u7528\u7684\u7279\u6027 \u2014\u2014 <code>slot</code> \u63D2\u69FD\uFF0C\u5B83\u8BA9\u7EC4\u4EF6\u7684\u5B9E\u73B0\u53D8\u7684\u66F4\u52A0\u7075\u6D3B\u3002\u5E73\u65F6\u5728\u5F00\u53D1\u7EC4\u4EF6\u5E93\u7684\u65F6\u5019\uFF0C\u4E3A\u4E86\u8BA9\u7EC4\u4EF6\u66F4\u52A0\u7075\u6D3B\u53EF\u5B9A\u5236\uFF0C\u7ECF\u5E38\u7528\u63D2\u69FD\u7684\u65B9\u5F0F\u8BA9\u7528\u6237\u53EF\u4EE5\u81EA\u5B9A\u4E49\u5185\u5BB9\u3002\u63D2\u69FD\u5206\u4E3A\u666E\u901A\u63D2\u69FD\u548C\u4F5C\u7528\u57DF\u63D2\u69FD\uFF0C\u5B83\u4EEC\u53EF\u4EE5\u89E3\u51B3\u4E0D\u540C\u7684\u573A\u666F\uFF0C\u4F46\u5B83\u662F\u600E\u4E48\u5B9E\u73B0\u7684\u5462\uFF0C\u4E0B\u9762\u5C31\u4ECE\u6E90\u7801\u7684\u89D2\u5EA6\u6765\u5206\u6790\u63D2\u69FD\u7684\u5B9E\u73B0\u539F\u7406\u3002</p><h2 id="\u666E\u901A\u63D2\u69FD" tabindex="-1"><a class="header-anchor" href="#\u666E\u901A\u63D2\u69FD" aria-hidden="true">#</a> \u666E\u901A\u63D2\u69FD</h2><p>\u4E3A\u4E86\u66F4\u52A0\u76F4\u89C2\uFF0C\u8FD8\u662F\u901A\u8FC7\u4E00\u4E2A\u4F8B\u5B50\u6765\u5206\u6790\u63D2\u69FD\u7684\u5B9E\u73B0\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> AppLayout <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token string">&#39;&lt;div class=&quot;container&quot;&gt;&#39;</span> <span class="token operator">+</span>
  <span class="token string">&#39;&lt;header&gt;&lt;slot name=&quot;header&quot;&gt;&lt;/slot&gt;&lt;/header&gt;&#39;</span> <span class="token operator">+</span>
  <span class="token string">&#39;&lt;main&gt;&lt;slot&gt;\u9ED8\u8BA4\u5185\u5BB9&lt;/slot&gt;&lt;/main&gt;&#39;</span> <span class="token operator">+</span>
  <span class="token string">&#39;&lt;footer&gt;&lt;slot name=&quot;footer&quot;&gt;&lt;/slot&gt;&lt;/footer&gt;&#39;</span> <span class="token operator">+</span>
  <span class="token string">&#39;&lt;/div&gt;&#39;</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">el</span><span class="token operator">:</span> <span class="token string">&#39;#app&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token string">&#39;&lt;div&gt;&#39;</span> <span class="token operator">+</span>
  <span class="token string">&#39;&lt;app-layout&gt;&#39;</span> <span class="token operator">+</span>
  <span class="token string">&#39;&lt;h1 slot=&quot;header&quot;&gt;{{title}}&lt;/h1&gt;&#39;</span> <span class="token operator">+</span>
  <span class="token string">&#39;&lt;p&gt;{{msg}}&lt;/p&gt;&#39;</span> <span class="token operator">+</span>
  <span class="token string">&#39;&lt;p slot=&quot;footer&quot;&gt;{{desc}}&lt;/p&gt;&#39;</span> <span class="token operator">+</span>
  <span class="token string">&#39;&lt;/app-layout&gt;&#39;</span> <span class="token operator">+</span>
  <span class="token string">&#39;&lt;/div&gt;&#39;</span><span class="token punctuation">,</span>
  <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;\u662F\u6807\u9898&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">msg</span><span class="token operator">:</span> <span class="token string">&#39;\u662F\u5185\u5BB9&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">desc</span><span class="token operator">:</span> <span class="token string">&#39;\u5176\u5B83\u4FE1\u606F&#39;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">components</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    AppLayout
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br></div></div><p>\u8FD9\u91CC\u5B9A\u4E49\u4E86 <code>AppLayout</code> \u5B50\u7EC4\u4EF6\uFF0C\u5B83\u5185\u90E8\u5B9A\u4E49\u4E86 3 \u4E2A\u63D2\u69FD\uFF0C2 \u4E2A\u4E3A\u5177\u540D\u63D2\u69FD\uFF0C\u4E00\u4E2A <code>name</code> \u4E3A <code>header</code>\uFF0C\u4E00\u4E2A <code>name</code> \u4E3A <code>footer</code>\uFF0C\u8FD8\u6709\u4E00\u4E2A\u6CA1\u6709\u5B9A\u4E49 <code>name</code> \u7684\u662F\u9ED8\u8BA4\u63D2\u69FD\u3002 <code>&lt;slot&gt;</code> \u548C <code>&lt;/slot&gt;</code> \u4E4B\u524D\u586B\u5199\u7684\u5185\u5BB9\u4E3A\u9ED8\u8BA4\u5185\u5BB9\u3002\u7684\u7236\u7EC4\u4EF6\u6CE8\u518C\u548C\u5F15\u7528\u4E86 <code>AppLayout</code> \u7684\u7EC4\u4EF6\uFF0C\u5E76\u5728\u7EC4\u4EF6\u5185\u90E8\u5B9A\u4E49\u4E86\u4E00\u4E9B\u5143\u7D20\uFF0C\u7528\u6765\u66FF\u6362\u63D2\u69FD\uFF0C\u90A3\u4E48\u5B83\u6700\u7EC8\u751F\u6210\u7684 DOM \u5982\u4E0B\uFF1A</p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>container<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>header</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>\u662F\u6807\u9898<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>header</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>main</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>\u662F\u5185\u5BB9<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>main</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>footer</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>\u5176\u5B83\u4FE1\u606F<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>footer</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="\u7F16\u8BD1" tabindex="-1"><a class="header-anchor" href="#\u7F16\u8BD1" aria-hidden="true">#</a> \u7F16\u8BD1</h2><p>\u8FD8\u662F\u5148\u4ECE\u7F16\u8BD1\u8BF4\u8D77\uFF0C\u77E5\u9053\u7F16\u8BD1\u662F\u53D1\u751F\u5728\u8C03\u7528 <code>vm.$mount</code> \u7684\u65F6\u5019\uFF0C\u6240\u4EE5\u7F16\u8BD1\u7684\u987A\u5E8F\u662F\u5148\u7F16\u8BD1\u7236\u7EC4\u4EF6\uFF0C\u518D\u7F16\u8BD1\u5B50\u7EC4\u4EF6\u3002</p><p>\u9996\u5148\u7F16\u8BD1\u7236\u7EC4\u4EF6\uFF0C\u5728 <code>parse</code> \u9636\u6BB5\uFF0C\u4F1A\u6267\u884C <code>processSlot</code> \u5904\u7406 <code>slot</code>\uFF0C\u5B83\u7684\u5B9A\u4E49\u5728 <code>src/compiler/parser/index.js</code> \u4E2D\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">processSlot</span> <span class="token punctuation">(</span><span class="token parameter">el</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>el<span class="token punctuation">.</span>tag <span class="token operator">===</span> <span class="token string">&#39;slot&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    el<span class="token punctuation">.</span>slotName <span class="token operator">=</span> <span class="token function">getBindingAttr</span><span class="token punctuation">(</span>el<span class="token punctuation">,</span> <span class="token string">&#39;name&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">!==</span> <span class="token string">&#39;production&#39;</span> <span class="token operator">&amp;&amp;</span> el<span class="token punctuation">.</span>key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">warn</span><span class="token punctuation">(</span>
        <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">\\\`key\\\` does not work on &lt;slot&gt; because slots are abstract outlets </span><span class="token template-punctuation string">\`</span></span> <span class="token operator">+</span>
        <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">and can possibly expand into multiple elements. </span><span class="token template-punctuation string">\`</span></span> <span class="token operator">+</span>
        <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Use the key on a wrapping element instead.</span><span class="token template-punctuation string">\`</span></span>
      <span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> slotScope
    <span class="token keyword">if</span> <span class="token punctuation">(</span>el<span class="token punctuation">.</span>tag <span class="token operator">===</span> <span class="token string">&#39;template&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      slotScope <span class="token operator">=</span> <span class="token function">getAndRemoveAttr</span><span class="token punctuation">(</span>el<span class="token punctuation">,</span> <span class="token string">&#39;scope&#39;</span><span class="token punctuation">)</span>
      <span class="token comment">/* istanbul ignore if */</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">!==</span> <span class="token string">&#39;production&#39;</span> <span class="token operator">&amp;&amp;</span> slotScope<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">warn</span><span class="token punctuation">(</span>
          <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">the &quot;scope&quot; attribute for scoped slots have been deprecated and </span><span class="token template-punctuation string">\`</span></span> <span class="token operator">+</span>
          <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">replaced by &quot;slot-scope&quot; since 2.5. The new &quot;slot-scope&quot; attribute </span><span class="token template-punctuation string">\`</span></span> <span class="token operator">+</span>
          <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">can also be used on plain elements in addition to &lt;template&gt; to </span><span class="token template-punctuation string">\`</span></span> <span class="token operator">+</span>
          <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">denote scoped slots.</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
          <span class="token boolean">true</span>
        <span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
      el<span class="token punctuation">.</span>slotScope <span class="token operator">=</span> slotScope <span class="token operator">||</span> <span class="token function">getAndRemoveAttr</span><span class="token punctuation">(</span>el<span class="token punctuation">,</span> <span class="token string">&#39;slot-scope&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>slotScope <span class="token operator">=</span> <span class="token function">getAndRemoveAttr</span><span class="token punctuation">(</span>el<span class="token punctuation">,</span> <span class="token string">&#39;slot-scope&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">/* istanbul ignore if */</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">!==</span> <span class="token string">&#39;production&#39;</span> <span class="token operator">&amp;&amp;</span> el<span class="token punctuation">.</span>attrsMap<span class="token punctuation">[</span><span class="token string">&#39;v-for&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">warn</span><span class="token punctuation">(</span>
          <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Ambiguous combined usage of slot-scope and v-for on &lt;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>el<span class="token punctuation">.</span>tag<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&gt; </span><span class="token template-punctuation string">\`</span></span> <span class="token operator">+</span>
          <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">(v-for takes higher priority). Use a wrapper &lt;template&gt; for the </span><span class="token template-punctuation string">\`</span></span> <span class="token operator">+</span>
          <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">scoped slot to make it clearer.</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
          <span class="token boolean">true</span>
        <span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
      el<span class="token punctuation">.</span>slotScope <span class="token operator">=</span> slotScope
    <span class="token punctuation">}</span>
    <span class="token keyword">const</span> slotTarget <span class="token operator">=</span> <span class="token function">getBindingAttr</span><span class="token punctuation">(</span>el<span class="token punctuation">,</span> <span class="token string">&#39;slot&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>slotTarget<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      el<span class="token punctuation">.</span>slotTarget <span class="token operator">=</span> slotTarget <span class="token operator">===</span> <span class="token string">&#39;&quot;&quot;&#39;</span> <span class="token operator">?</span> <span class="token string">&#39;&quot;default&quot;&#39;</span> <span class="token operator">:</span> slotTarget
      <span class="token comment">// preserve slot as an attribute for native shadow DOM compat</span>
      <span class="token comment">// only for non-scoped slots.</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>el<span class="token punctuation">.</span>tag <span class="token operator">!==</span> <span class="token string">&#39;template&#39;</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>el<span class="token punctuation">.</span>slotScope<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">addAttr</span><span class="token punctuation">(</span>el<span class="token punctuation">,</span> <span class="token string">&#39;slot&#39;</span><span class="token punctuation">,</span> slotTarget<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br></div></div><p>\u5F53\u89E3\u6790\u5230\u6807\u7B7E\u4E0A\u6709 <code>slot</code> \u5C5E\u6027\u7684\u65F6\u5019\uFF0C\u4F1A\u7ED9\u5BF9\u5E94\u7684 AST \u5143\u7D20\u8282\u70B9\u6DFB\u52A0 <code>slotTarget</code> \u5C5E\u6027\uFF0C\u7136\u540E\u5728 <code>codegen</code> \u9636\u6BB5\uFF0C\u5728 <code>genData</code> \u4E2D\u4F1A\u5904\u7406 <code>slotTarget</code>\uFF0C\u76F8\u5173\u4EE3\u7801\u5728 <code>src/compiler/codegen/index.js</code> \u4E2D\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">if</span> <span class="token punctuation">(</span>el<span class="token punctuation">.</span>slotTarget <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>el<span class="token punctuation">.</span>slotScope<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  data <span class="token operator">+=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">slot:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>el<span class="token punctuation">.</span>slotTarget<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">,</span><span class="token template-punctuation string">\`</span></span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u4F1A\u7ED9 <code>data</code> \u6DFB\u52A0\u4E00\u4E2A <code>slot</code> \u5C5E\u6027\uFF0C\u5E76\u6307\u5411 <code>slotTarget</code>\uFF0C\u4E4B\u540E\u4F1A\u7528\u5230\u3002\u5728\u7684\u4F8B\u5B50\u4E2D\uFF0C\u7236\u7EC4\u4EF6\u6700\u7EC8\u751F\u6210\u7684\u4EE3\u7801\u5982\u4E0B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">with</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token function">_c</span><span class="token punctuation">(</span><span class="token string">&#39;div&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">[</span><span class="token function">_c</span><span class="token punctuation">(</span><span class="token string">&#39;app-layout&#39;</span><span class="token punctuation">,</span>
      <span class="token punctuation">[</span><span class="token function">_c</span><span class="token punctuation">(</span><span class="token string">&#39;h1&#39;</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">attrs</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token string-property property">&quot;slot&quot;</span><span class="token operator">:</span><span class="token string">&quot;header&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token literal-property property">slot</span><span class="token operator">:</span><span class="token string">&quot;header&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
         <span class="token punctuation">[</span><span class="token function">_v</span><span class="token punctuation">(</span><span class="token function">_s</span><span class="token punctuation">(</span>title<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
       <span class="token function">_c</span><span class="token punctuation">(</span><span class="token string">&#39;p&#39;</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token function">_v</span><span class="token punctuation">(</span><span class="token function">_s</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
       <span class="token function">_c</span><span class="token punctuation">(</span><span class="token string">&#39;p&#39;</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">attrs</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token string-property property">&quot;slot&quot;</span><span class="token operator">:</span><span class="token string">&quot;footer&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token literal-property property">slot</span><span class="token operator">:</span><span class="token string">&quot;footer&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
         <span class="token punctuation">[</span><span class="token function">_v</span><span class="token punctuation">(</span><span class="token function">_s</span><span class="token punctuation">(</span>desc<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
         <span class="token punctuation">)</span>
       <span class="token punctuation">]</span><span class="token punctuation">)</span>
     <span class="token punctuation">]</span><span class="token punctuation">,</span>
   <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>\u63A5\u4E0B\u6765\u7F16\u8BD1\u5B50\u7EC4\u4EF6\uFF0C\u540C\u6837\u5728 <code>parser</code> \u9636\u6BB5\u4F1A\u6267\u884C <code>processSlot</code> \u5904\u7406\u51FD\u6570\uFF0C\u5B83\u7684\u5B9A\u4E49\u5728 <code>src/compiler/parser/index.js</code> \u4E2D\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">processSlot</span> <span class="token punctuation">(</span><span class="token parameter">el</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>el<span class="token punctuation">.</span>tag <span class="token operator">===</span> <span class="token string">&#39;slot&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    el<span class="token punctuation">.</span>slotName <span class="token operator">=</span> <span class="token function">getBindingAttr</span><span class="token punctuation">(</span>el<span class="token punctuation">,</span> <span class="token string">&#39;name&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>\u5F53\u9047\u5230 <code>slot</code> \u6807\u7B7E\u7684\u65F6\u5019\u4F1A\u7ED9\u5BF9\u5E94\u7684 AST \u5143\u7D20\u8282\u70B9\u6DFB\u52A0 <code>slotName</code> \u5C5E\u6027\uFF0C\u7136\u540E\u5728 <code>codegen</code> \u9636\u6BB5\uFF0C\u4F1A\u5224\u65AD\u5982\u679C\u5F53\u524D AST \u5143\u7D20\u8282\u70B9\u662F <code>slot</code> \u6807\u7B7E\uFF0C\u5219\u6267\u884C <code>genSlot</code> \u51FD\u6570\uFF0C\u5B83\u7684\u5B9A\u4E49\u5728 <code>src/compiler/codegen/index.js</code> \u4E2D\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">genSlot</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">el</span><span class="token operator">:</span> ASTElement<span class="token punctuation">,</span> <span class="token literal-property property">state</span><span class="token operator">:</span> CodegenState</span><span class="token punctuation">)</span><span class="token operator">:</span> string <span class="token punctuation">{</span>
  <span class="token keyword">const</span> slotName <span class="token operator">=</span> el<span class="token punctuation">.</span>slotName <span class="token operator">||</span> <span class="token string">&#39;&quot;default&quot;&#39;</span>
  <span class="token keyword">const</span> children <span class="token operator">=</span> <span class="token function">genChildren</span><span class="token punctuation">(</span>el<span class="token punctuation">,</span> state<span class="token punctuation">)</span>
  <span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">_t(</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>slotName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>children <span class="token operator">?</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">,</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>children<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span> <span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
  <span class="token keyword">const</span> attrs <span class="token operator">=</span> el<span class="token punctuation">.</span>attrs <span class="token operator">&amp;&amp;</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">{</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>el<span class="token punctuation">.</span>attrs<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">a</span> <span class="token operator">=&gt;</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token function">camelize</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>a<span class="token punctuation">.</span>value<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;,&#39;</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">}</span><span class="token template-punctuation string">\`</span></span>
  <span class="token keyword">const</span> bind <span class="token operator">=</span> el<span class="token punctuation">.</span>attrsMap<span class="token punctuation">[</span><span class="token string">&#39;v-bind&#39;</span><span class="token punctuation">]</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>attrs <span class="token operator">||</span> bind<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>children<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    res <span class="token operator">+=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">,null</span><span class="token template-punctuation string">\`</span></span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>attrs<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    res <span class="token operator">+=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">,</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>attrs<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>bind<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    res <span class="token operator">+=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>attrs <span class="token operator">?</span> <span class="token string">&#39;&#39;</span> <span class="token operator">:</span> <span class="token string">&#39;,null&#39;</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">,</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>bind<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> res <span class="token operator">+</span> <span class="token string">&#39;)&#39;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p>\u5148\u4E0D\u8003\u8651 <code>slot</code> \u6807\u7B7E\u4E0A\u6709 <code>attrs</code> \u4EE5\u53CA <code>v-bind</code> \u7684\u60C5\u51B5\uFF0C\u90A3\u4E48\u5B83\u751F\u6210\u7684\u4EE3\u7801\u5B9E\u9645\u4E0A\u5C31\u53EA\u6709\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> slotName <span class="token operator">=</span> el<span class="token punctuation">.</span>slotName <span class="token operator">||</span> <span class="token string">&#39;&quot;default&quot;&#39;</span>
<span class="token keyword">const</span> children <span class="token operator">=</span> <span class="token function">genChildren</span><span class="token punctuation">(</span>el<span class="token punctuation">,</span> state<span class="token punctuation">)</span>
<span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">_t(</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>slotName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>children <span class="token operator">?</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">,</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>children<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span> <span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u8FD9\u91CC\u7684 <code>slotName</code> \u4ECE AST \u5143\u7D20\u8282\u70B9\u5BF9\u5E94\u7684\u5C5E\u6027\u4E0A\u53D6\uFF0C\u9ED8\u8BA4\u662F <code>default</code>\uFF0C\u800C <code>children</code> \u5BF9\u5E94\u7684\u5C31\u662F <code>slot</code> \u5F00\u59CB\u548C\u95ED\u5408\u6807\u7B7E\u5305\u88F9\u7684\u5185\u5BB9\u3002\u6765\u770B\u4E00\u4E0B\u4F8B\u5B50\u7684\u5B50\u7EC4\u4EF6\u6700\u7EC8\u751F\u6210\u7684\u4EE3\u7801\uFF0C\u5982\u4E0B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">with</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token function">_c</span><span class="token punctuation">(</span><span class="token string">&#39;div&#39;</span><span class="token punctuation">,</span><span class="token punctuation">{</span>
    <span class="token literal-property property">staticClass</span><span class="token operator">:</span><span class="token string">&quot;container&quot;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">[</span>
      <span class="token function">_c</span><span class="token punctuation">(</span><span class="token string">&#39;header&#39;</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token function">_t</span><span class="token punctuation">(</span><span class="token string">&quot;header&quot;</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token function">_c</span><span class="token punctuation">(</span><span class="token string">&#39;main&#39;</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token function">_t</span><span class="token punctuation">(</span><span class="token string">&quot;default&quot;</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token function">_v</span><span class="token punctuation">(</span><span class="token string">&quot;\u9ED8\u8BA4\u5185\u5BB9&quot;</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token function">_c</span><span class="token punctuation">(</span><span class="token string">&#39;footer&#39;</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token function">_t</span><span class="token punctuation">(</span><span class="token string">&quot;footer&quot;</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span>
      <span class="token punctuation">]</span>
   <span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>\u5728\u7F16\u8BD1\u7AE0\u8282\u4E86\u89E3\u5230\uFF0C<code>_t</code> \u51FD\u6570\u5BF9\u5E94\u7684\u5C31\u662F <code>renderSlot</code> \u65B9\u6CD5\uFF0C\u5B83\u7684\u5B9A\u4E49\u5728 <code>src/core/instance/render-heplpers/render-slot.js</code> \u4E2D\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * Runtime helper for rendering &lt;slot&gt;
 */</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">renderSlot</span> <span class="token punctuation">(</span>
  <span class="token parameter"><span class="token literal-property property">name</span><span class="token operator">:</span> string<span class="token punctuation">,</span>
  <span class="token literal-property property">fallback</span><span class="token operator">:</span> <span class="token operator">?</span>Array<span class="token operator">&lt;</span>VNode<span class="token operator">&gt;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">props</span><span class="token operator">:</span> <span class="token operator">?</span>Object<span class="token punctuation">,</span>
  <span class="token literal-property property">bindObject</span><span class="token operator">:</span> <span class="token operator">?</span>Object</span>
<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token operator">?</span>Array<span class="token operator">&lt;</span>VNode<span class="token operator">&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> scopedSlotFn <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$scopedSlots<span class="token punctuation">[</span>name<span class="token punctuation">]</span>
  <span class="token keyword">let</span> nodes
  <span class="token keyword">if</span> <span class="token punctuation">(</span>scopedSlotFn<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// scoped slot</span>
    props <span class="token operator">=</span> props <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>bindObject<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">!==</span> <span class="token string">&#39;production&#39;</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token function">isObject</span><span class="token punctuation">(</span>bindObject<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">warn</span><span class="token punctuation">(</span>
          <span class="token string">&#39;slot v-bind without argument expects an Object&#39;</span><span class="token punctuation">,</span>
          <span class="token keyword">this</span>
        <span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
      props <span class="token operator">=</span> <span class="token function">extend</span><span class="token punctuation">(</span><span class="token function">extend</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> bindObject<span class="token punctuation">)</span><span class="token punctuation">,</span> props<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    nodes <span class="token operator">=</span> <span class="token function">scopedSlotFn</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span> <span class="token operator">||</span> fallback
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> slotNodes <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$slots<span class="token punctuation">[</span>name<span class="token punctuation">]</span>
    <span class="token comment">// warn duplicate slot usage</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>slotNodes<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">!==</span> <span class="token string">&#39;production&#39;</span> <span class="token operator">&amp;&amp;</span> slotNodes<span class="token punctuation">.</span>_rendered<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">warn</span><span class="token punctuation">(</span>
          <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Duplicate presence of slot &quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot; found in the same render tree </span><span class="token template-punctuation string">\`</span></span> <span class="token operator">+</span>
          <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">- this will likely cause render errors.</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
          <span class="token keyword">this</span>
        <span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
      slotNodes<span class="token punctuation">.</span>_rendered <span class="token operator">=</span> <span class="token boolean">true</span>
    <span class="token punctuation">}</span>
    nodes <span class="token operator">=</span> slotNodes <span class="token operator">||</span> fallback
  <span class="token punctuation">}</span>

  <span class="token keyword">const</span> target <span class="token operator">=</span> props <span class="token operator">&amp;&amp;</span> props<span class="token punctuation">.</span>slot
  <span class="token keyword">if</span> <span class="token punctuation">(</span>target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$createElement</span><span class="token punctuation">(</span><span class="token string">&#39;template&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">slot</span><span class="token operator">:</span> target <span class="token punctuation">}</span><span class="token punctuation">,</span> nodes<span class="token punctuation">)</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> nodes
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br></div></div><p><code>render-slot</code> \u7684\u53C2\u6570 <code>name</code> \u4EE3\u8868\u63D2\u69FD\u540D\u79F0 <code>slotName</code>\uFF0C<code>fallback</code> \u4EE3\u8868\u63D2\u69FD\u7684\u9ED8\u8BA4\u5185\u5BB9\u751F\u6210\u7684 <code>vnode</code> \u6570\u7EC4\u3002\u5148\u5FFD\u7565 <code>scoped-slot</code>\uFF0C\u53EA\u770B\u9ED8\u8BA4\u63D2\u69FD\u903B\u8F91\u3002\u5982\u679C <code>this.$slot[name]</code> \u6709\u503C\uFF0C\u5C31\u8FD4\u56DE\u5B83\u5BF9\u5E94\u7684 <code>vnode</code> \u6570\u7EC4\uFF0C\u5426\u5219\u8FD4\u56DE <code>fallback</code>\u3002\u90A3\u4E48\u8FD9\u4E2A <code>this.$slot</code> \u662F\u54EA\u91CC\u6765\u7684\u5462\uFF1F\u77E5\u9053\u5B50\u7EC4\u4EF6\u7684 <code>init</code> \u65F6\u673A\u662F\u5728\u7236\u7EC4\u4EF6\u6267\u884C <code>patch</code> \u8FC7\u7A0B\u7684\u65F6\u5019\uFF0C\u90A3\u8FD9\u4E2A\u65F6\u5019\u7236\u7EC4\u4EF6\u5DF2\u7ECF\u7F16\u8BD1\u5B8C\u6210\u4E86\u3002\u5E76\u4E14\u5B50\u7EC4\u4EF6\u5728 <code>init</code> \u8FC7\u7A0B\u4E2D\u4F1A\u6267\u884C <code>initRender</code> \u51FD\u6570\uFF0C<code>initRender</code> \u7684\u65F6\u5019\u83B7\u53D6\u5230 <code> vm.$slot</code>\uFF0C\u76F8\u5173\u4EE3\u7801\u5728 <code>src/core/instance/render.js</code> \u4E2D\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">initRender</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">vm</span><span class="token operator">:</span> Component</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
  <span class="token keyword">const</span> parentVnode <span class="token operator">=</span> vm<span class="token punctuation">.</span>$vnode <span class="token operator">=</span> options<span class="token punctuation">.</span>_parentVnode <span class="token comment">// the placeholder node in parent tree</span>
  <span class="token keyword">const</span> renderContext <span class="token operator">=</span> parentVnode <span class="token operator">&amp;&amp;</span> parentVnode<span class="token punctuation">.</span>context
  vm<span class="token punctuation">.</span>$slots <span class="token operator">=</span> <span class="token function">resolveSlots</span><span class="token punctuation">(</span>options<span class="token punctuation">.</span>_renderChildren<span class="token punctuation">,</span> renderContext<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p><code>vm.$slots</code> \u662F\u901A\u8FC7\u6267\u884C <code>resolveSlots(options._renderChildren, renderContext)</code> \u8FD4\u56DE\u7684\uFF0C\u5B83\u7684\u5B9A\u4E49\u5728 <code>src/core/instance/render-helpers/resolve-slots.js</code> \u4E2D\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * Runtime helper for resolving raw children VNodes into a slot object.
 */</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">resolveSlots</span> <span class="token punctuation">(</span>
  <span class="token parameter"><span class="token literal-property property">children</span><span class="token operator">:</span> <span class="token operator">?</span>Array<span class="token operator">&lt;</span>VNode<span class="token operator">&gt;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">context</span><span class="token operator">:</span> <span class="token operator">?</span>Component</span>
<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token punctuation">[</span>key<span class="token operator">:</span> string<span class="token punctuation">]</span><span class="token operator">:</span> Array<span class="token operator">&lt;</span>VNode<span class="token operator">&gt;</span> <span class="token punctuation">}</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> slots <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>children<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> slots
  <span class="token punctuation">}</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> l <span class="token operator">=</span> children<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> l<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> child <span class="token operator">=</span> children<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
    <span class="token keyword">const</span> data <span class="token operator">=</span> child<span class="token punctuation">.</span>data
    <span class="token comment">// remove slot attribute if the node is resolved as a Vue slot node</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>data <span class="token operator">&amp;&amp;</span> data<span class="token punctuation">.</span>attrs <span class="token operator">&amp;&amp;</span> data<span class="token punctuation">.</span>attrs<span class="token punctuation">.</span>slot<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">delete</span> data<span class="token punctuation">.</span>attrs<span class="token punctuation">.</span>slot
    <span class="token punctuation">}</span>
    <span class="token comment">// named slots should only be respected if the vnode was rendered in the</span>
    <span class="token comment">// same context.</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>child<span class="token punctuation">.</span>context <span class="token operator">===</span> context <span class="token operator">||</span> child<span class="token punctuation">.</span>fnContext <span class="token operator">===</span> context<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>
      data <span class="token operator">&amp;&amp;</span> data<span class="token punctuation">.</span>slot <span class="token operator">!=</span> <span class="token keyword">null</span>
    <span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> name <span class="token operator">=</span> data<span class="token punctuation">.</span>slot
      <span class="token keyword">const</span> slot <span class="token operator">=</span> <span class="token punctuation">(</span>slots<span class="token punctuation">[</span>name<span class="token punctuation">]</span> <span class="token operator">||</span> <span class="token punctuation">(</span>slots<span class="token punctuation">[</span>name<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>child<span class="token punctuation">.</span>tag <span class="token operator">===</span> <span class="token string">&#39;template&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        slot<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>slot<span class="token punctuation">,</span> child<span class="token punctuation">.</span>children <span class="token operator">||</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        slot<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>child<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token punctuation">(</span>slots<span class="token punctuation">.</span>default <span class="token operator">||</span> <span class="token punctuation">(</span>slots<span class="token punctuation">.</span>default <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>child<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// ignore slots that contains only whitespace</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> name <span class="token keyword">in</span> slots<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>slots<span class="token punctuation">[</span>name<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">every</span><span class="token punctuation">(</span>isWhitespace<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">delete</span> slots<span class="token punctuation">[</span>name<span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> slots
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br></div></div><p><code>resolveSlots</code> \u65B9\u6CD5\u63A5\u6536 2 \u4E2A\u53C2\u6570\uFF0C\u7B2C\u4E00\u4E2A\u53C2\u6570 <code>chilren</code> \u5BF9\u5E94\u7684\u662F\u7236 <code>vnode</code> \u7684 <code>children</code>\uFF0C\u5728\u7684\u4F8B\u5B50\u4E2D\u5C31\u662F <code>&lt;app-layout&gt;</code> \u548C <code>&lt;/app-layout&gt;</code> \u5305\u88F9\u7684\u5185\u5BB9\u3002\u7B2C\u4E8C\u4E2A\u53C2\u6570 <code>context</code> \u662F\u7236 <code>vnode</code> \u7684\u4E0A\u4E0B\u6587\uFF0C\u4E5F\u5C31\u662F\u7236\u7EC4\u4EF6\u7684 <code>vm</code> \u5B9E\u4F8B\u3002</p><p><code>resolveSlots</code> \u51FD\u6570\u7684\u903B\u8F91\u5C31\u662F\u904D\u5386 <code>chilren</code>\uFF0C\u62FF\u5230\u6BCF\u4E00\u4E2A <code>child</code> \u7684 <code>data</code>\uFF0C\u7136\u540E\u901A\u8FC7 <code>data.slot</code> \u83B7\u53D6\u5230\u63D2\u69FD\u540D\u79F0\uFF0C\u8FD9\u4E2A <code>slot</code> \u5C31\u662F\u4E4B\u524D\u7F16\u8BD1\u7236\u7EC4\u4EF6\u5728 <code>codegen</code> \u9636\u6BB5\u8BBE\u7F6E\u7684 <code>data.slot</code>\u3002\u63A5\u7740\u4EE5\u63D2\u69FD\u540D\u79F0\u4E3A <code>key</code> \u628A <code>child</code> \u6DFB\u52A0\u5230 <code>slots</code> \u4E2D\uFF0C\u5982\u679C <code>data.slot</code> \u4E0D\u5B58\u5728\uFF0C\u5219\u662F\u9ED8\u8BA4\u63D2\u69FD\u7684\u5185\u5BB9\uFF0C\u5219\u628A\u5BF9\u5E94\u7684 <code>child</code> \u6DFB\u52A0\u5230 <code>slots.defaults</code> \u4E2D\u3002\u8FD9\u6837\u5C31\u83B7\u53D6\u5230\u6574\u4E2A <code>slots</code>\uFF0C\u5B83\u662F\u4E00\u4E2A\u5BF9\u8C61\uFF0C<code>key</code> \u662F\u63D2\u69FD\u540D\u79F0\uFF0C<code>value</code> \u662F\u4E00\u4E2A <code>vnode</code> \u7C7B\u578B\u7684\u6570\u7EC4\uFF0C\u56E0\u4E3A\u5B83\u53EF\u4EE5\u6709\u591A\u4E2A\u540C\u540D\u63D2\u69FD\u3002</p><p>\u8FD9\u6837\u5C31\u62FF\u5230\u4E86 <code>vm.$slots</code> \u4E86\uFF0C\u56DE\u5230 <code>renderSlot</code> \u51FD\u6570\uFF0C<code>const slotNodes = this.$slots[name]</code>\uFF0C\u4E5F\u5C31\u80FD\u6839\u636E\u63D2\u69FD\u540D\u79F0\u83B7\u53D6\u5230\u5BF9\u5E94\u7684 <code>vnode</code> \u6570\u7EC4\u4E86\uFF0C\u8FD9\u4E2A\u6570\u7EC4\u91CC\u7684 <code>vnode</code> \u90FD\u662F\u5728\u7236\u7EC4\u4EF6\u521B\u5EFA\u7684\uFF0C\u8FD9\u6837\u5C31\u5B9E\u73B0\u4E86\u5728\u7236\u7EC4\u4EF6\u66FF\u6362\u5B50\u7EC4\u4EF6\u63D2\u69FD\u7684\u5185\u5BB9\u4E86\u3002</p><p>\u5BF9\u5E94\u7684 <code>slot</code> \u6E32\u67D3\u6210 <code>vnodes</code>\uFF0C\u4F5C\u4E3A\u5F53\u524D\u7EC4\u4EF6\u6E32\u67D3 <code>vnode</code> \u7684 <code>children</code>\uFF0C\u4E4B\u540E\u7684\u6E32\u67D3\u8FC7\u7A0B\u4E4B\u524D\u5206\u6790\u8FC7\uFF0C\u4E0D\u518D\u8D58\u8FF0\u3002</p><p>\u77E5\u9053\u5728\u666E\u901A\u63D2\u69FD\u4E2D\uFF0C\u7236\u7EC4\u4EF6\u5E94\u7528\u5230\u5B50\u7EC4\u4EF6\u63D2\u69FD\u91CC\u7684\u6570\u636E\u90FD\u662F\u7ED1\u5B9A\u5230\u7236\u7EC4\u4EF6\u7684\uFF0C\u56E0\u4E3A\u5B83\u6E32\u67D3\u6210 <code>vnode</code> \u7684\u65F6\u673A\u7684\u4E0A\u4E0B\u6587\u662F\u7236\u7EC4\u4EF6\u7684\u5B9E\u4F8B\u3002\u4F46\u662F\u5728\u4E00\u4E9B\u5B9E\u9645\u5F00\u53D1\u4E2D\uFF0C\u60F3\u901A\u8FC7\u5B50\u7EC4\u4EF6\u7684\u4E00\u4E9B\u6570\u636E\u6765\u51B3\u5B9A\u7236\u7EC4\u4EF6\u5B9E\u73B0\u63D2\u69FD\u7684\u903B\u8F91\uFF0CVue \u63D0\u4F9B\u4E86\u53E6\u4E00\u79CD\u63D2\u69FD\u2014\u2014\u4F5C\u7528\u57DF\u63D2\u69FD\uFF0C\u63A5\u4E0B\u6765\u5C31\u6765\u5206\u6790\u4E00\u4E0B\u5B83\u7684\u5B9E\u73B0\u539F\u7406\u3002</p><h2 id="\u4F5C\u7528\u57DF\u63D2\u69FD" tabindex="-1"><a class="header-anchor" href="#\u4F5C\u7528\u57DF\u63D2\u69FD" aria-hidden="true">#</a> \u4F5C\u7528\u57DF\u63D2\u69FD</h2><p>\u4E3A\u4E86\u66F4\u52A0\u76F4\u89C2\uFF0C\u4E5F\u662F\u901A\u8FC7\u4E00\u4E2A\u4F8B\u5B50\u6765\u5206\u6790\u4F5C\u7528\u57DF\u63D2\u69FD\u7684\u5B9E\u73B0\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> Child <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token string">&#39;&lt;div class=&quot;child&quot;&gt;&#39;</span> <span class="token operator">+</span>
  <span class="token string">&#39;&lt;slot text=&quot;Hello &quot; :msg=&quot;msg&quot;&gt;&lt;/slot&gt;&#39;</span> <span class="token operator">+</span>
  <span class="token string">&#39;&lt;/div&gt;&#39;</span><span class="token punctuation">,</span>
  <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">msg</span><span class="token operator">:</span> <span class="token string">&#39;Vue&#39;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">el</span><span class="token operator">:</span> <span class="token string">&#39;#app&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token string">&#39;&lt;div&gt;&#39;</span> <span class="token operator">+</span>
  <span class="token string">&#39;&lt;child&gt;&#39;</span> <span class="token operator">+</span>
  <span class="token string">&#39;&lt;template slot-scope=&quot;props&quot;&gt;&#39;</span> <span class="token operator">+</span>
  <span class="token string">&#39;&lt;p&gt;Hello from parent&lt;/p&gt;&#39;</span> <span class="token operator">+</span>
  <span class="token string">&#39;&lt;p&gt;{{ props.text + props.msg}}&lt;/p&gt;&#39;</span> <span class="token operator">+</span>
  <span class="token string">&#39;&lt;/template&gt;&#39;</span> <span class="token operator">+</span>
  <span class="token string">&#39;&lt;/child&gt;&#39;</span> <span class="token operator">+</span>
  <span class="token string">&#39;&lt;/div&gt;&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">components</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    Child
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><p>\u6700\u7EC8\u751F\u6210\u7684 DOM \u7ED3\u6784\u5982\u4E0B\uFF1A</p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>child<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>Hello from parent<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>Hello Vue<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>\u53EF\u4EE5\u770B\u5230\u5B50\u7EC4\u4EF6\u7684 <code>slot</code> \u6807\u7B7E\u591A\u4E86 <code>text</code> \u5C5E\u6027\uFF0C\u4EE5\u53CA <code>:msg</code> \u5C5E\u6027\u3002\u7236\u7EC4\u4EF6\u5B9E\u73B0\u63D2\u69FD\u7684\u90E8\u5206\u591A\u4E86\u4E00\u4E2A <code>template</code> \u6807\u7B7E\uFF0C\u4EE5\u53CA <code>scope-slot</code> \u5C5E\u6027\uFF0C\u5176\u5B9E\u5728 Vue 2.5+ \u7248\u672C\uFF0C<code>scoped-slot</code> \u53EF\u4EE5\u4F5C\u7528\u5728\u666E\u901A\u5143\u7D20\u4E0A\u3002\u8FD9\u4E9B\u5C31\u662F\u4F5C\u7528\u57DF\u63D2\u69FD\u548C\u666E\u901A\u63D2\u69FD\u5728\u5199\u6CD5\u4E0A\u7684\u5DEE\u522B\u3002</p><p>\u5728\u7F16\u8BD1\u9636\u6BB5\uFF0C\u4ECD\u7136\u662F\u5148\u7F16\u8BD1\u7236\u7EC4\u4EF6\uFF0C\u540C\u6837\u662F\u901A\u8FC7 <code>processSlot</code> \u51FD\u6570\u53BB\u5904\u7406 <code>scoped-slot</code>\uFF0C\u5B83\u7684\u5B9A\u4E49\u5728\u5728 <code>src/compiler/parser/index.js</code> \u4E2D\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">processSlot</span> <span class="token punctuation">(</span><span class="token parameter">el</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
  <span class="token keyword">let</span> slotScope
  <span class="token keyword">if</span> <span class="token punctuation">(</span>el<span class="token punctuation">.</span>tag <span class="token operator">===</span> <span class="token string">&#39;template&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    slotScope <span class="token operator">=</span> <span class="token function">getAndRemoveAttr</span><span class="token punctuation">(</span>el<span class="token punctuation">,</span> <span class="token string">&#39;scope&#39;</span><span class="token punctuation">)</span>
    <span class="token comment">/* istanbul ignore if */</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">!==</span> <span class="token string">&#39;production&#39;</span> <span class="token operator">&amp;&amp;</span> slotScope<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">warn</span><span class="token punctuation">(</span>
        <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">the &quot;scope&quot; attribute for scoped slots have been deprecated and </span><span class="token template-punctuation string">\`</span></span> <span class="token operator">+</span>
        <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">replaced by &quot;slot-scope&quot; since 2.5. The new &quot;slot-scope&quot; attribute </span><span class="token template-punctuation string">\`</span></span> <span class="token operator">+</span>
        <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">can also be used on plain elements in addition to &lt;template&gt; to </span><span class="token template-punctuation string">\`</span></span> <span class="token operator">+</span>
        <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">denote scoped slots.</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
        <span class="token boolean">true</span>
      <span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    el<span class="token punctuation">.</span>slotScope <span class="token operator">=</span> slotScope <span class="token operator">||</span> <span class="token function">getAndRemoveAttr</span><span class="token punctuation">(</span>el<span class="token punctuation">,</span> <span class="token string">&#39;slot-scope&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>slotScope <span class="token operator">=</span> <span class="token function">getAndRemoveAttr</span><span class="token punctuation">(</span>el<span class="token punctuation">,</span> <span class="token string">&#39;slot-scope&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">/* istanbul ignore if */</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">!==</span> <span class="token string">&#39;production&#39;</span> <span class="token operator">&amp;&amp;</span> el<span class="token punctuation">.</span>attrsMap<span class="token punctuation">[</span><span class="token string">&#39;v-for&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">warn</span><span class="token punctuation">(</span>
        <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Ambiguous combined usage of slot-scope and v-for on &lt;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>el<span class="token punctuation">.</span>tag<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&gt; </span><span class="token template-punctuation string">\`</span></span> <span class="token operator">+</span>
        <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">(v-for takes higher priority). Use a wrapper &lt;template&gt; for the </span><span class="token template-punctuation string">\`</span></span> <span class="token operator">+</span>
        <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">scoped slot to make it clearer.</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
        <span class="token boolean">true</span>
      <span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    el<span class="token punctuation">.</span>slotScope <span class="token operator">=</span> slotScope
  <span class="token punctuation">}</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br></div></div><p>\u8FD9\u5757\u903B\u8F91\u5F88\u7B80\u5355\uFF0C\u8BFB\u53D6 <code>scoped-slot</code> \u5C5E\u6027\u5E76\u8D4B\u503C\u7ED9\u5F53\u524D AST \u5143\u7D20\u8282\u70B9\u7684 <code>slotScope</code> \u5C5E\u6027\uFF0C\u63A5\u4E0B\u6765\u5728\u6784\u9020 AST \u6811\u7684\u65F6\u5019\uFF0C\u4F1A\u6267\u884C\u4EE5\u4E0B\u903B\u8F91\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">if</span> <span class="token punctuation">(</span>element<span class="token punctuation">.</span>elseif <span class="token operator">||</span> element<span class="token punctuation">.</span>else<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">processIfConditions</span><span class="token punctuation">(</span>element<span class="token punctuation">,</span> currentParent<span class="token punctuation">)</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>element<span class="token punctuation">.</span>slotScope<span class="token punctuation">)</span> <span class="token punctuation">{</span> 
  currentParent<span class="token punctuation">.</span>plain <span class="token operator">=</span> <span class="token boolean">false</span>
  <span class="token keyword">const</span> name <span class="token operator">=</span> element<span class="token punctuation">.</span>slotTarget <span class="token operator">||</span> <span class="token string">&#39;&quot;default&quot;&#39;</span>
  <span class="token punctuation">;</span><span class="token punctuation">(</span>currentParent<span class="token punctuation">.</span>scopedSlots <span class="token operator">||</span> <span class="token punctuation">(</span>currentParent<span class="token punctuation">.</span>scopedSlots <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">[</span>name<span class="token punctuation">]</span> <span class="token operator">=</span> element
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
  currentParent<span class="token punctuation">.</span>children<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span>
  element<span class="token punctuation">.</span>parent <span class="token operator">=</span> currentParent
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>\u53EF\u4EE5\u770B\u5230\u5BF9\u4E8E\u62E5\u6709 <code>scopedSlot</code> \u5C5E\u6027\u7684 AST \u5143\u7D20\u8282\u70B9\u800C\u8A00\uFF0C\u662F\u4E0D\u4F1A\u4F5C\u4E3A <code>children</code> \u6DFB\u52A0\u5230\u5F53\u524D AST \u6811\u4E2D\uFF0C\u800C\u662F\u5B58\u5230\u7236 AST \u5143\u7D20\u8282\u70B9\u7684 <code>scopedSlots</code> \u5C5E\u6027\u4E0A\uFF0C\u5B83\u662F\u4E00\u4E2A\u5BF9\u8C61\uFF0C\u4EE5\u63D2\u69FD\u540D\u79F0 <code>name</code> \u4E3A <code>key</code>\u3002</p><p>\u7136\u540E\u5728 <code>genData</code> \u7684\u8FC7\u7A0B\uFF0C\u4F1A\u5BF9 <code>scopedSlots</code> \u505A\u5904\u7406\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">if</span> <span class="token punctuation">(</span>el<span class="token punctuation">.</span>scopedSlots<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  data <span class="token operator">+=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token function">genScopedSlots</span><span class="token punctuation">(</span>el<span class="token punctuation">.</span>scopedSlots<span class="token punctuation">,</span> state<span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">,</span><span class="token template-punctuation string">\`</span></span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">genScopedSlots</span> <span class="token punctuation">(</span>
  <span class="token parameter"><span class="token literal-property property">slots</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token punctuation">[</span>key<span class="token operator">:</span> string<span class="token punctuation">]</span><span class="token operator">:</span> ASTElement <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">state</span><span class="token operator">:</span> CodegenState</span>
<span class="token punctuation">)</span><span class="token operator">:</span> string <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">scopedSlots:_u([</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>
    Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>slots<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">key</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token function">genScopedSlot</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> slots<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">,</span> state<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;,&#39;</span><span class="token punctuation">)</span>
  <span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">])</span><span class="token template-punctuation string">\`</span></span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">genScopedSlot</span> <span class="token punctuation">(</span>
  <span class="token parameter"><span class="token literal-property property">key</span><span class="token operator">:</span> string<span class="token punctuation">,</span>
  <span class="token literal-property property">el</span><span class="token operator">:</span> ASTElement<span class="token punctuation">,</span>
  <span class="token literal-property property">state</span><span class="token operator">:</span> CodegenState</span>
<span class="token punctuation">)</span><span class="token operator">:</span> string <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>el<span class="token punctuation">.</span>for <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>el<span class="token punctuation">.</span>forProcessed<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">genForScopedSlot</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> el<span class="token punctuation">,</span> state<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">const</span> fn <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">function(</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token function">String</span><span class="token punctuation">(</span>el<span class="token punctuation">.</span>slotScope<span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">){</span><span class="token template-punctuation string">\`</span></span> <span class="token operator">+</span>
    <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">return </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>el<span class="token punctuation">.</span>tag <span class="token operator">===</span> <span class="token string">&#39;template&#39;</span>
      <span class="token operator">?</span> el<span class="token punctuation">.</span>if
        <span class="token operator">?</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>el<span class="token punctuation">.</span>if<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">?</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token function">genChildren</span><span class="token punctuation">(</span>el<span class="token punctuation">,</span> state<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token string">&#39;undefined&#39;</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">:undefined</span><span class="token template-punctuation string">\`</span></span>
        <span class="token operator">:</span> <span class="token function">genChildren</span><span class="token punctuation">(</span>el<span class="token punctuation">,</span> state<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token string">&#39;undefined&#39;</span>
      <span class="token operator">:</span> <span class="token function">genElement</span><span class="token punctuation">(</span>el<span class="token punctuation">,</span> state<span class="token punctuation">)</span>
    <span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">}</span><span class="token template-punctuation string">\`</span></span>
  <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">{key:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>key<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">,fn:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>fn<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">}</span><span class="token template-punctuation string">\`</span></span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br></div></div><p><code>genScopedSlots</code> \u5C31\u662F\u5BF9 <code>scopedSlots</code> \u5BF9\u8C61\u904D\u5386\uFF0C\u6267\u884C <code>genScopedSlot</code>\uFF0C\u5E76\u628A\u7ED3\u679C\u7528\u9017\u53F7\u62FC\u63A5\uFF0C\u800C <code>genScopedSlot</code> \u662F\u5148\u751F\u6210\u4E00\u6BB5\u51FD\u6570\u4EE3\u7801\uFF0C\u5E76\u4E14\u51FD\u6570\u7684\u53C2\u6570\u5C31\u662F\u7684 <code>slotScope</code>\uFF0C\u4E5F\u5C31\u662F\u5199\u5728\u6807\u7B7E\u5C5E\u6027\u4E0A\u7684 <code>scoped-slot</code> \u5BF9\u5E94\u7684\u503C\uFF0C\u7136\u540E\u518D\u8FD4\u56DE\u4E00\u4E2A\u5BF9\u8C61\uFF0C<code>key</code> \u4E3A\u63D2\u69FD\u540D\u79F0\uFF0C<code>fn</code> \u4E3A\u751F\u6210\u7684\u51FD\u6570\u4EE3\u7801\u3002</p><p>\u5BF9\u4E8E\u8FD9\u4E2A\u4F8B\u5B50\u800C\u8A00\uFF0C\u7236\u7EC4\u4EF6\u6700\u7EC8\u751F\u6210\u7684\u4EE3\u7801\u5982\u4E0B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">with</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token function">_c</span><span class="token punctuation">(</span><span class="token string">&#39;div&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">[</span><span class="token function">_c</span><span class="token punctuation">(</span><span class="token string">&#39;child&#39;</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span><span class="token literal-property property">scopedSlots</span><span class="token operator">:</span><span class="token function">_u</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
        <span class="token punctuation">{</span>
          <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">&quot;default&quot;</span><span class="token punctuation">,</span>
          <span class="token function-variable function">fn</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token punctuation">[</span>
              <span class="token function">_c</span><span class="token punctuation">(</span><span class="token string">&#39;p&#39;</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token function">_v</span><span class="token punctuation">(</span><span class="token string">&quot;Hello from parent&quot;</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
              <span class="token function">_c</span><span class="token punctuation">(</span><span class="token string">&#39;p&#39;</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token function">_v</span><span class="token punctuation">(</span><span class="token function">_s</span><span class="token punctuation">(</span>props<span class="token punctuation">.</span>text <span class="token operator">+</span> props<span class="token punctuation">.</span>msg<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
            <span class="token punctuation">]</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token number">1</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p>\u53EF\u4EE5\u770B\u5230\u5B83\u548C\u666E\u901A\u63D2\u69FD\u7236\u7EC4\u4EF6\u7F16\u8BD1\u7ED3\u679C\u7684\u4E00\u4E2A\u5F88\u660E\u663E\u7684\u533A\u522B\u5C31\u662F\u6CA1\u6709 <code>children</code> \u4E86\uFF0C<code>data</code> \u90E8\u5206\u591A\u4E86\u4E00\u4E2A\u5BF9\u8C61\uFF0C\u5E76\u4E14\u6267\u884C\u4E86 <code>_u</code> \u65B9\u6CD5\uFF0C\u5728\u7F16\u8BD1\u7AE0\u8282\u4E86\u89E3\u5230\uFF0C<code>_u</code> \u51FD\u6570\u5BF9\u7684\u5C31\u662F <code>resolveScopedSlots</code> \u65B9\u6CD5\uFF0C\u5B83\u7684\u5B9A\u4E49\u5728 <code>src/core/instance/render-heplpers/resolve-slots.js</code> \u4E2D\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">resolveScopedSlots</span> <span class="token punctuation">(</span>
  <span class="token literal-property property">fns</span><span class="token operator">:</span> ScopedSlotsData<span class="token punctuation">,</span> <span class="token comment">// see flow/vnode</span>
  res<span class="token operator">?</span><span class="token operator">:</span> Object
<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token punctuation">[</span>key<span class="token operator">:</span> string<span class="token punctuation">]</span><span class="token operator">:</span> Function <span class="token punctuation">}</span> <span class="token punctuation">{</span>
  res <span class="token operator">=</span> res <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> fns<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>fns<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">resolveScopedSlots</span><span class="token punctuation">(</span>fns<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> res<span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      res<span class="token punctuation">[</span>fns<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> fns<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>fn
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> res
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p>\u5176\u4E2D\uFF0C<code>fns</code> \u662F\u4E00\u4E2A\u6570\u7EC4\uFF0C\u6BCF\u4E00\u4E2A\u6570\u7EC4\u5143\u7D20\u90FD\u6709\u4E00\u4E2A <code>key</code> \u548C\u4E00\u4E2A <code>fn</code>\uFF0C<code>key</code> \u5BF9\u5E94\u7684\u662F\u63D2\u69FD\u7684\u540D\u79F0\uFF0C<code>fn</code> \u5BF9\u5E94\u4E00\u4E2A\u51FD\u6570\u3002\u6574\u4E2A\u903B\u8F91\u5C31\u662F\u904D\u5386\u8FD9\u4E2A <code>fns</code> \u6570\u7EC4\uFF0C\u751F\u6210\u4E00\u4E2A\u5BF9\u8C61\uFF0C\u5BF9\u8C61\u7684 <code>key</code> \u5C31\u662F\u63D2\u69FD\u540D\u79F0\uFF0C<code>value</code> \u5C31\u662F\u51FD\u6570\u3002\u8FD9\u4E2A\u51FD\u6570\u7684\u6267\u884C\u65F6\u673A\u7A0D\u540E\u4F1A\u4ECB\u7ECD\u3002</p><p>\u63A5\u7740\u518D\u6765\u770B\u4E00\u4E0B\u5B50\u7EC4\u4EF6\u7684\u7F16\u8BD1\uFF0C\u548C\u666E\u901A\u63D2\u69FD\u7684\u8FC7\u7A0B\u57FA\u672C\u76F8\u540C\uFF0C\u552F\u4E00\u4E00\u70B9\u533A\u522B\u662F\u5728 <code>genSlot</code> \u7684\u65F6\u5019\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">genSlot</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">el</span><span class="token operator">:</span> ASTElement<span class="token punctuation">,</span> <span class="token literal-property property">state</span><span class="token operator">:</span> CodegenState</span><span class="token punctuation">)</span><span class="token operator">:</span> string <span class="token punctuation">{</span>
  <span class="token keyword">const</span> slotName <span class="token operator">=</span> el<span class="token punctuation">.</span>slotName <span class="token operator">||</span> <span class="token string">&#39;&quot;default&quot;&#39;</span>
  <span class="token keyword">const</span> children <span class="token operator">=</span> <span class="token function">genChildren</span><span class="token punctuation">(</span>el<span class="token punctuation">,</span> state<span class="token punctuation">)</span>
  <span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">_t(</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>slotName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>children <span class="token operator">?</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">,</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>children<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span> <span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
  <span class="token keyword">const</span> attrs <span class="token operator">=</span> el<span class="token punctuation">.</span>attrs <span class="token operator">&amp;&amp;</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">{</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>el<span class="token punctuation">.</span>attrs<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">a</span> <span class="token operator">=&gt;</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token function">camelize</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>a<span class="token punctuation">.</span>value<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;,&#39;</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">}</span><span class="token template-punctuation string">\`</span></span>
  <span class="token keyword">const</span> bind <span class="token operator">=</span> el<span class="token punctuation">.</span>attrsMap<span class="token punctuation">[</span><span class="token string">&#39;v-bind&#39;</span><span class="token punctuation">]</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>attrs <span class="token operator">||</span> bind<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>children<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    res <span class="token operator">+=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">,null</span><span class="token template-punctuation string">\`</span></span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>attrs<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    res <span class="token operator">+=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">,</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>attrs<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>bind<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    res <span class="token operator">+=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>attrs <span class="token operator">?</span> <span class="token string">&#39;&#39;</span> <span class="token operator">:</span> <span class="token string">&#39;,null&#39;</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">,</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>bind<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> res <span class="token operator">+</span> <span class="token string">&#39;)&#39;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p>\u5B83\u4F1A\u5BF9 <code>attrs</code> \u548C <code>v-bind</code> \u505A\u5904\u7406\uFF0C\u5BF9\u5E94\u5230\u7684\u4F8B\u5B50\uFF0C\u6700\u7EC8\u751F\u6210\u7684\u4EE3\u7801\u5982\u4E0B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">with</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token function">_c</span><span class="token punctuation">(</span><span class="token string">&#39;div&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span><span class="token literal-property property">staticClass</span><span class="token operator">:</span><span class="token string">&quot;child&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">[</span><span class="token function">_t</span><span class="token punctuation">(</span><span class="token string">&quot;default&quot;</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span><span class="token literal-property property">text</span><span class="token operator">:</span><span class="token string">&quot;Hello &quot;</span><span class="token punctuation">,</span><span class="token literal-property property">msg</span><span class="token operator">:</span>msg<span class="token punctuation">}</span>
    <span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p><code>_t</code> \u65B9\u6CD5\u4E4B\u524D\u4ECB\u7ECD\u8FC7\uFF0C\u5BF9\u5E94\u7684\u662F <code>renderSlot</code> \u65B9\u6CD5\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">renderSlot</span> <span class="token punctuation">(</span>
  <span class="token parameter"><span class="token literal-property property">name</span><span class="token operator">:</span> string<span class="token punctuation">,</span>
  <span class="token literal-property property">fallback</span><span class="token operator">:</span> <span class="token operator">?</span>Array<span class="token operator">&lt;</span>VNode<span class="token operator">&gt;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">props</span><span class="token operator">:</span> <span class="token operator">?</span>Object<span class="token punctuation">,</span>
  <span class="token literal-property property">bindObject</span><span class="token operator">:</span> <span class="token operator">?</span>Object</span>
<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token operator">?</span>Array<span class="token operator">&lt;</span>VNode<span class="token operator">&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> scopedSlotFn <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$scopedSlots<span class="token punctuation">[</span>name<span class="token punctuation">]</span>
  <span class="token keyword">let</span> nodes
  <span class="token keyword">if</span> <span class="token punctuation">(</span>scopedSlotFn<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    props <span class="token operator">=</span> props <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>bindObject<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">!==</span> <span class="token string">&#39;production&#39;</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token function">isObject</span><span class="token punctuation">(</span>bindObject<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">warn</span><span class="token punctuation">(</span>
          <span class="token string">&#39;slot v-bind without argument expects an Object&#39;</span><span class="token punctuation">,</span>
          <span class="token keyword">this</span>
        <span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
      props <span class="token operator">=</span> <span class="token function">extend</span><span class="token punctuation">(</span><span class="token function">extend</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> bindObject<span class="token punctuation">)</span><span class="token punctuation">,</span> props<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    nodes <span class="token operator">=</span> <span class="token function">scopedSlotFn</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span> <span class="token operator">||</span> fallback
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">const</span> target <span class="token operator">=</span> props <span class="token operator">&amp;&amp;</span> props<span class="token punctuation">.</span>slot
  <span class="token keyword">if</span> <span class="token punctuation">(</span>target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$createElement</span><span class="token punctuation">(</span><span class="token string">&#39;template&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">slot</span><span class="token operator">:</span> target <span class="token punctuation">}</span><span class="token punctuation">,</span> nodes<span class="token punctuation">)</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> nodes
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br></div></div><p>\u53EA\u5173\u6CE8\u4F5C\u7528\u57DF\u63D2\u69FD\u7684\u903B\u8F91\uFF0C\u90A3\u4E48\u8FD9\u4E2A <code>this.$scopedSlots</code> \u53C8\u662F\u5728\u4EC0\u4E48\u5730\u65B9\u5B9A\u4E49\u7684\u5462\uFF0C\u539F\u6765\u5728\u5B50\u7EC4\u4EF6\u7684\u6E32\u67D3\u51FD\u6570\u6267\u884C\u524D\uFF0C\u5728 <code>vm_render</code> \u65B9\u6CD5\u5185\uFF0C\u6709\u8FD9\u4E48\u4E00\u6BB5\u903B\u8F91\uFF0C\u5B9A\u4E49\u5728 <code>src/core/instance/render.js</code> \u4E2D\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code> <span class="token keyword">if</span> <span class="token punctuation">(</span>_parentVnode<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  vm<span class="token punctuation">.</span>$scopedSlots <span class="token operator">=</span> _parentVnode<span class="token punctuation">.</span>data<span class="token punctuation">.</span>scopedSlots <span class="token operator">||</span> emptyObject
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u8FD9\u4E2A <code>_parentVNode.data.scopedSlots</code> \u5BF9\u5E94\u7684\u5C31\u662F\u5728\u7236\u7EC4\u4EF6\u901A\u8FC7\u6267\u884C <code>resolveScopedSlots</code> \u8FD4\u56DE\u7684\u5BF9\u8C61\u3002\u6240\u4EE5\u56DE\u5230 <code>genSlot</code> \u51FD\u6570\uFF0C\u5C31\u53EF\u4EE5\u901A\u8FC7\u63D2\u69FD\u7684\u540D\u79F0\u62FF\u5230\u5BF9\u5E94\u7684 <code>scopedSlotFn</code>\uFF0C\u7136\u540E\u628A\u76F8\u5173\u7684\u6570\u636E\u6269\u5C55\u5230 <code>props</code> \u4E0A\uFF0C\u4F5C\u4E3A\u51FD\u6570\u7684\u53C2\u6570\u4F20\u5165\uFF0C\u539F\u6765\u4E4B\u524D\u63D0\u5230\u7684\u51FD\u6570\u8FD9\u4E2A\u65F6\u5019\u6267\u884C\uFF0C\u7136\u540E\u8FD4\u56DE\u751F\u6210\u7684 <code>vnodes</code>\uFF0C\u4E3A\u540E\u7EED\u6E32\u67D3\u8282\u70B9\u7528\u3002</p><p>\u540E\u7EED\u6D41\u7A0B\u4E4B\u524D\u5DF2\u4ECB\u7ECD\u8FC7\uFF0C\u4E0D\u518D\u8D58\u8FF0\uFF0C\u90A3\u4E48\u81F3\u6B64\uFF0C\u4F5C\u7528\u57DF\u63D2\u69FD\u7684\u5B9E\u73B0\u4E5F\u5C31\u5206\u6790\u5B8C\u6BD5\u3002</p><h2 id="\u603B\u7ED3" tabindex="-1"><a class="header-anchor" href="#\u603B\u7ED3" aria-hidden="true">#</a> \u603B\u7ED3</h2><p>\u901A\u8FC7\u8FD9\u4E00\u7AE0\u7684\u5206\u6790\uFF0C\u4E86\u89E3\u4E86\u666E\u901A\u63D2\u69FD\u548C\u4F5C\u7528\u57DF\u63D2\u69FD\u7684\u5B9E\u73B0\u3002\u5B83\u4EEC\u6709\u4E00\u4E2A\u5F88\u5927\u7684\u5DEE\u522B\u662F\u6570\u636E\u4F5C\u7528\u57DF\uFF0C\u666E\u901A\u63D2\u69FD\u662F\u5728\u7236\u7EC4\u4EF6\u7F16\u8BD1\u548C\u6E32\u67D3\u9636\u6BB5\u751F\u6210 <code>vnodes</code>\uFF0C\u6240\u4EE5\u6570\u636E\u7684\u4F5C\u7528\u57DF\u662F\u7236\u7EC4\u4EF6\u5B9E\u4F8B\uFF0C\u5B50\u7EC4\u4EF6\u6E32\u67D3\u7684\u65F6\u5019\u76F4\u63A5\u62FF\u5230\u8FD9\u4E9B\u6E32\u67D3\u597D\u7684 <code>vnodes</code>\u3002\u800C\u5BF9\u4E8E\u4F5C\u7528\u57DF\u63D2\u69FD\uFF0C\u7236\u7EC4\u4EF6\u5728\u7F16\u8BD1\u548C\u6E32\u67D3\u9636\u6BB5\u5E76\u4E0D\u4F1A\u76F4\u63A5\u751F\u6210 <code>vnodes</code>\uFF0C\u800C\u662F\u5728\u7236\u8282\u70B9 <code>vnode</code> \u7684 <code>data</code> \u4E2D\u4FDD\u7559\u4E00\u4E2A <code>scopedSlots</code> \u5BF9\u8C61\uFF0C\u5B58\u50A8\u7740\u4E0D\u540C\u540D\u79F0\u7684\u63D2\u69FD\u4EE5\u53CA\u5B83\u4EEC\u5BF9\u5E94\u7684\u6E32\u67D3\u51FD\u6570\uFF0C\u53EA\u6709\u5728\u7F16\u8BD1\u548C\u6E32\u67D3\u5B50\u7EC4\u4EF6\u9636\u6BB5\u624D\u4F1A\u6267\u884C\u8FD9\u4E2A\u6E32\u67D3\u51FD\u6570\u751F\u6210 <code>vnodes</code>\uFF0C\u7531\u4E8E\u662F\u5728\u5B50\u7EC4\u4EF6\u73AF\u5883\u6267\u884C\u7684\uFF0C\u6240\u4EE5\u5BF9\u5E94\u7684\u6570\u636E\u4F5C\u7528\u57DF\u662F\u5B50\u7EC4\u4EF6\u5B9E\u4F8B\u3002</p><p>\u7B80\u5355\u5730\u8BF4\uFF0C\u4E24\u79CD\u63D2\u69FD\u7684\u76EE\u7684\u90FD\u662F\u8BA9\u5B50\u7EC4\u4EF6 <code>slot</code> \u5360\u4F4D\u7B26\u751F\u6210\u7684\u5185\u5BB9\u7531\u7236\u7EC4\u4EF6\u6765\u51B3\u5B9A\uFF0C\u4F46\u6570\u636E\u7684\u4F5C\u7528\u57DF\u4F1A\u6839\u636E\u5B83\u4EEC <code>vnodes</code> \u6E32\u67D3\u65F6\u673A\u4E0D\u540C\u800C\u4E0D\u540C\u3002</p>`,66);function t(e,o){return p}var u=s(a,[["render",t]]);export{u as default};
