import{a as n}from"./app.b05da4ec.js";import{_ as s}from"./plugin-vue_export-helper.21dcd24c.js";const a={},p=n(`<h1 id="\u6CDB\u578B" tabindex="-1"><a class="header-anchor" href="#\u6CDB\u578B" aria-hidden="true">#</a> \u6CDB\u578B</h1><p>\u8BBE\u8BA1\u6CDB\u578B\u7684\u5173\u952E\u76EE\u7684\u662F\u5728\u6210\u5458\u4E4B\u95F4\u63D0\u4F9B\u6709\u610F\u4E49\u7684\u7EA6\u675F\uFF0C\u8FD9\u4E9B\u6210\u5458\u53EF\u4EE5\u662F\uFF1A</p><ul><li>\u7C7B\u7684\u5B9E\u4F8B\u6210\u5458</li><li>\u7C7B\u7684\u65B9\u6CD5</li><li>\u51FD\u6570\u53C2\u6570</li><li>\u51FD\u6570\u8FD4\u56DE\u503C</li></ul><h2 id="\u52A8\u673A\u548C\u793A\u4F8B" tabindex="-1"><a class="header-anchor" href="#\u52A8\u673A\u548C\u793A\u4F8B" aria-hidden="true">#</a> \u52A8\u673A\u548C\u793A\u4F8B</h2><p>\u4E0B\u9762\u662F\u5BF9\u4E00\u4E2A\u5148\u8FDB\u5148\u51FA\u7684\u6570\u636E\u7ED3\u6784\u2014\u2014\u961F\u5217\uFF0C\u5728 <code>TypeScript</code> \u548C <code>JavaScript</code> \u4E2D\u7684\u7B80\u5355\u5B9E\u73B0\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name">Queue</span> <span class="token punctuation">{</span>
  <span class="token keyword">private</span> data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token function-variable function">push</span> <span class="token operator">=</span> item <span class="token operator">=&gt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function-variable function">pop</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>\u5728\u4E0A\u8FF0\u4EE3\u7801\u4E2D\u5B58\u5728\u4E00\u4E2A\u95EE\u9898\uFF0C\u5B83\u5141\u8BB8\u4F60\u5411\u961F\u5217\u4E2D\u6DFB\u52A0\u4EFB\u4F55\u7C7B\u578B\u7684\u6570\u636E\uFF0C\u5F53\u7136\uFF0C\u5F53\u6570\u636E\u88AB\u5F39\u51FA\u961F\u5217\u65F6\uFF0C\u4E5F\u53EF\u4EE5\u662F\u4EFB\u610F\u7C7B\u578B\u3002\u5728\u4E0B\u9762\u7684\u793A\u4F8B\u4E2D\uFF0C\u770B\u8D77\u6765\u4EBA\u4EEC\u53EF\u4EE5\u5411\u961F\u5217\u4E2D\u6DFB\u52A0<code>string</code> \u7C7B\u578B\u7684\u6570\u636E\uFF0C\u4F46\u662F\u5B9E\u9645\u4E0A\uFF0C\u8BE5\u7528\u6CD5\u5047\u5B9A\u7684\u662F\u53EA\u6709 <code>number</code> \u7C7B\u578B\u4F1A\u88AB\u6DFB\u52A0\u5230\u961F\u5217\u91CC\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name">Queue</span> <span class="token punctuation">{</span>
  <span class="token keyword">private</span> data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token function-variable function">push</span> <span class="token operator">=</span> item <span class="token operator">=&gt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function-variable function">pop</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> queue <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Queue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

queue<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
queue<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">&#39;1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Oops\uFF0C\u4E00\u4E2A\u9519\u8BEF</span>

<span class="token comment">// \u4E00\u4E2A\u4F7F\u7528\u8005\uFF0C\u8D70\u5165\u4E86\u8BEF\u533A</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>queue<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toPrecision</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>queue<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toPrecision</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// RUNTIME ERROR</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p>\u4E00\u4E2A\u89E3\u51B3\u7684\u529E\u6CD5\uFF08\u4E8B\u5B9E\u4E0A\uFF0C\u8FD9\u4E5F\u662F\u4E0D\u652F\u6301\u6CDB\u578B\u7C7B\u578B\u7684\u552F\u4E00\u89E3\u51B3\u529E\u6CD5\uFF09\u662F\u4E3A\u8FD9\u4E9B\u7EA6\u675F\u521B\u5EFA\u7279\u6B8A\u7C7B\uFF0C\u5982\u5FEB\u901F\u521B\u5EFA\u6570\u5B57\u7C7B\u578B\u7684\u961F\u5217\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name">QueueNumber</span> <span class="token punctuation">{</span>
  <span class="token keyword">private</span> data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token function-variable function">push</span> <span class="token operator">=</span> <span class="token punctuation">(</span>item<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span>
  pop <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">=&gt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> queue <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">QueueNumber</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

queue<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
queue<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">&#39;1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Error: \u4E0D\u80FD\u63A8\u5165\u4E00\u4E2A \`string\` \u7C7B\u578B\uFF0C\u53EA\u80FD\u662F \`number\` \u7C7B\u578B</span>

<span class="token comment">// \u5982\u679C\u8BE5\u9519\u8BEF\u5F97\u5230\u4FEE\u590D\uFF0C\u5176\u4ED6\u5C06\u4E0D\u4F1A\u51FA\u73B0\u95EE\u9898</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>\u5F53\u7136\uFF0C\u5FEB\u901F\u4E5F\u610F\u5473\u7740\u75DB\u82E6\u3002\u4F8B\u5982\u5F53\u4F60\u60F3\u521B\u5EFA\u4E00\u4E2A\u5B57\u7B26\u4E32\u7684\u961F\u5217\u65F6\uFF0C\u4F60\u5C06\u4E0D\u5F97\u4E0D\u518D\u6B21\u4FEE\u6539\u76F8\u5F53\u5927\u7684\u4EE3\u7801\u3002\u771F\u6B63\u60F3\u8981\u7684\u4E00\u79CD\u65B9\u5F0F\u662F\u65E0\u8BBA\u4EC0\u4E48\u7C7B\u578B\u88AB\u63A8\u5165\u961F\u5217\uFF0C\u88AB\u63A8\u51FA\u7684\u7C7B\u578B\u90FD\u4E0E\u63A8\u5165\u7C7B\u578B\u4E00\u6837\u3002\u5F53\u4F60\u4F7F\u7528\u6CDB\u578B\u65F6\uFF0C\u8FD9\u4F1A\u5F88\u5BB9\u6613\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// \u521B\u5EFA\u4E00\u4E2A\u6CDB\u578B\u7C7B</span>
<span class="token keyword">class</span> <span class="token class-name">Queue<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
  <span class="token keyword">private</span> data<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token function-variable function">push</span> <span class="token operator">=</span> <span class="token punctuation">(</span>item<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span>
  pop <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span> <span class="token operator">|</span> <span class="token keyword">undefined</span> <span class="token operator">=&gt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u7B80\u5355\u7684\u4F7F\u7528</span>
<span class="token keyword">const</span> queue <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Queue<span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
queue<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
queue<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">&#39;1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Error\uFF1A\u4E0D\u80FD\u63A8\u5165\u4E00\u4E2A \`string\`\uFF0C\u53EA\u6709 number \u7C7B\u578B\u88AB\u5141\u8BB8</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>\u53E6\u5916\u4E00\u4E2A\u89C1\u8FC7\u7684\u4F8B\u5B50\uFF1A\u4E00\u4E2A <code>reverse</code> \u51FD\u6570\uFF0C\u73B0\u5728\u5728\u8FD9\u4E2A\u51FD\u6570\u91CC\u63D0\u4F9B\u4E86\u51FD\u6570\u53C2\u6570\u4E0E\u51FD\u6570\u8FD4\u56DE\u503C\u7684\u7EA6\u675F\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token generic-function"><span class="token function">reverse</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>items<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> toreturn <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> items<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    toreturn<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>items<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> toreturn<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> sample <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> reversed <span class="token operator">=</span> <span class="token function">reverse</span><span class="token punctuation">(</span>sample<span class="token punctuation">)</span><span class="token punctuation">;</span>

reversed<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;1&#39;</span><span class="token punctuation">;</span> <span class="token comment">// Error</span>
reversed <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;2&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// Error</span>

reversed<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">// ok</span>
reversed <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// ok</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><p>\u5728\u6B64\u7AE0\u8282\u4E2D\uFF0C\u4F60\u5DF2\u7ECF\u4E86\u89E3\u5728<em>\u7C7B</em>\u548C<em>\u51FD\u6570</em>\u4E0A\u4F7F\u7528\u6CDB\u578B\u7684\u4F8B\u5B50\u3002\u4E00\u4E2A\u503C\u5F97\u8865\u5145\u4E00\u70B9\u7684\u662F\uFF0C\u4F60\u53EF\u4EE5\u4E3A\u521B\u5EFA\u7684\u6210\u5458\u51FD\u6570\u6DFB\u52A0\u6CDB\u578B\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name">Utility</span> <span class="token punctuation">{</span>
  <span class="token generic-function"><span class="token function">reverse</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>items<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> toreturn <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> items<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      toreturn<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>items<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> toreturn<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>\u4F60\u53EF\u4EE5\u968F\u610F\u8C03\u7528\u6CDB\u578B\u53C2\u6570\uFF0C\u5F53\u4F60\u4F7F\u7528\u7B80\u5355\u7684\u6CDB\u578B\u65F6\uFF0C\u6CDB\u578B\u5E38\u7528 <code>T</code>\u3001<code>U</code>\u3001<code>V</code> \u8868\u793A\u3002\u5982\u679C\u5728\u4F60\u7684\u53C2\u6570\u91CC\uFF0C\u4E0D\u6B62\u62E5\u6709\u4E00\u4E2A\u6CDB\u578B\uFF0C\u4F60\u5E94\u8BE5\u4F7F\u7528\u4E00\u4E2A\u66F4\u8BED\u4E49\u5316\u540D\u79F0\uFF0C\u5982 <code>TKey</code> \u548C <code>TValue</code> \uFF08\u901A\u5E38\u60C5\u51B5\u4E0B\uFF0C\u4EE5 <code>T</code> \u4F5C\u4E3A\u6CDB\u578B\u7684\u524D\u7F00\uFF0C\u5728\u5176\u4ED6\u8BED\u8A00\u5982 C++ \u91CC\uFF0C\u4E5F\u88AB\u79F0\u4E3A\u6A21\u677F\uFF09</p></div><h2 id="\u8BEF\u7528\u7684\u6CDB\u578B" tabindex="-1"><a class="header-anchor" href="#\u8BEF\u7528\u7684\u6CDB\u578B" aria-hidden="true">#</a> \u8BEF\u7528\u7684\u6CDB\u578B</h2><p>\u6211\u89C1\u8FC7\u5F00\u53D1\u8005\u4F7F\u7528\u6CDB\u578B\u4EC5\u4EC5\u662F\u4E3A\u4E86\u5B83\u7684 hack\u3002\u5F53\u4F60\u4F7F\u7528\u5B83\u65F6\uFF0C\u4F60\u5E94\u8BE5\u95EE\u95EE\u81EA\u5DF1\uFF1A\u4F60\u60F3\u7528\u5B83\u6765\u63D0\u4F9B\u4EC0\u4E48\u6837\u7684\u7EA6\u675F\u3002\u5982\u679C\u4F60\u4E0D\u80FD\u5F88\u597D\u7684\u56DE\u7B54\u5B83\uFF0C\u4F60\u53EF\u80FD\u4F1A\u8BEF\u7528\u6CDB\u578B\uFF0C\u5982\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">declare</span> <span class="token keyword">function</span> <span class="token generic-function"><span class="token function">foo</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>arg<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>\u5728\u8FD9\u91CC\uFF0C\u6CDB\u578B\u5B8C\u5168\u6CA1\u6709\u5FC5\u8981\u4F7F\u7528\uFF0C\u56E0\u4E3A\u5B83\u4EC5\u7528\u4E8E\u5355\u4E2A\u53C2\u6570\u7684\u4F4D\u7F6E\uFF0C\u4F7F\u7528\u5982\u4E0B\u65B9\u5F0F\u53EF\u80FD\u66F4\u597D\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">declare</span> <span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span>arg<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="\u8BBE\u8BA1\u6A21\u5F0F-\u65B9\u4FBF\u901A\u7528" tabindex="-1"><a class="header-anchor" href="#\u8BBE\u8BA1\u6A21\u5F0F-\u65B9\u4FBF\u901A\u7528" aria-hidden="true">#</a> \u8BBE\u8BA1\u6A21\u5F0F\uFF1A\u65B9\u4FBF\u901A\u7528</h2><p>\u8003\u8651\u5982\u4E0B\u51FD\u6570\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">declare</span> <span class="token keyword">function</span> <span class="token generic-function"><span class="token function">parse</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>\u5728\u8FD9\u79CD\u60C5\u51B5\u4E0B\uFF0C\u6CDB\u578B <code>T</code> \u53EA\u5728\u4E00\u4E2A\u5730\u65B9\u88AB\u4F7F\u7528\u4E86\uFF0C\u5B83\u5E76\u6CA1\u6709\u5728\u6210\u5458\u4E4B\u95F4\u63D0\u4F9B\u7EA6\u675F <code>T</code>\u3002\u8FD9\u76F8\u5F53\u4E8E\u4E00\u4E2A\u5982\u4E0B\u7684\u7C7B\u578B\u65AD\u8A00\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">declare</span> <span class="token keyword">function</span> <span class="token function">parse</span><span class="token punctuation">(</span>name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> something <span class="token operator">=</span> <span class="token function">parse</span><span class="token punctuation">(</span><span class="token string">&#39;something&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> TypeOfSomething<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u4EC5\u4F7F\u7528\u4E00\u6B21\u7684\u6CDB\u578B\u5E76\u4E0D\u6BD4\u4E00\u4E2A\u7C7B\u578B\u65AD\u8A00\u6765\u7684\u5B89\u5168\u3002\u5B83\u4EEC\u90FD\u7ED9\u4F60\u4F7F\u7528 API \u63D0\u4F9B\u4E86\u4FBF\u5229\u3002</p><p>\u53E6\u4E00\u4E2A\u660E\u663E\u7684\u4F8B\u5B50\u662F\uFF0C\u4E00\u4E2A\u7528\u4E8E\u52A0\u8F7D json \u8FD4\u56DE\u503C\u51FD\u6570\uFF0C\u5B83\u8FD4\u56DE\u4F60\u4EFB\u4F55\u4F20\u5165\u7C7B\u578B\u7684 <code>Promise</code>\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> getJSON <span class="token operator">=</span> <span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>config<span class="token operator">:</span> <span class="token punctuation">{</span> url<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span> headers<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token punctuation">[</span>key<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> fetchConfig <span class="token operator">=</span> <span class="token punctuation">{</span>
    method<span class="token operator">:</span> <span class="token string">&#39;GET&#39;</span><span class="token punctuation">,</span>
    Accept<span class="token operator">:</span> <span class="token string">&#39;application/json&#39;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&#39;Content-Type&#39;</span><span class="token operator">:</span> <span class="token string">&#39;application/json&#39;</span><span class="token punctuation">,</span>
    <span class="token operator">...</span><span class="token punctuation">(</span>config<span class="token punctuation">.</span>headers <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token function">fetch</span><span class="token punctuation">(</span>config<span class="token punctuation">.</span>url<span class="token punctuation">,</span> fetchConfig<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token generic-function"><span class="token function">then</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>response <span class="token operator">=&gt;</span> response<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>\u8BF7\u6CE8\u610F\uFF0C\u4F60\u4ECD\u7136\u9700\u8981\u660E\u663E\u7684\u6CE8\u89E3\u4EFB\u4F55\u4F60\u9700\u8981\u7684\u7C7B\u578B\uFF0C\u4F46\u662F <code>getJSON&lt;T&gt;</code> \u7684\u7B7E\u540D <code>config =&gt; Promise&lt;T&gt;</code> \u80FD\u591F\u51CF\u5C11\u4F60\u4E00\u4E9B\u5173\u952E\u7684\u6B65\u9AA4\uFF08\u4F60\u4E0D\u9700\u8981\u6CE8\u89E3 <code>loadUsers</code> \u7684\u8FD4\u56DE\u7C7B\u578B\uFF0C\u56E0\u4E3A\u5B83\u80FD\u591F\u88AB\u63A8\u51FA\u6765\uFF09\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">LoadUserResponse</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  user<span class="token operator">:</span> <span class="token punctuation">{</span>
    name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
    email<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">loaderUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token generic-function"><span class="token function">getJSON</span><span class="token generic class-name"><span class="token operator">&lt;</span>LoadUserResponse<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">{</span> url<span class="token operator">:</span> <span class="token string">&#39;https://example.com/users&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>\u4E0E\u6B64\u7C7B\u4F3C\uFF1A\u4F7F\u7528 <code>Promise&lt;T&gt;</code> \u4F5C\u4E3A\u4E00\u4E2A\u51FD\u6570\u7684\u8FD4\u56DE\u503C\u6BD4\u4E00\u4E9B\u5982\uFF1A<code>Promise&lt;any&gt;</code> \u7684\u5907\u9009\u65B9\u6848\u8981\u597D\u5F88\u591A\u3002</p><h3 id="\u914D\u5408-axios-\u4F7F\u7528" tabindex="-1"><a class="header-anchor" href="#\u914D\u5408-axios-\u4F7F\u7528" aria-hidden="true">#</a> \u914D\u5408 axios \u4F7F\u7528</h3><p>\u901A\u5E38\u60C5\u51B5\u4E0B\uFF0C\u4F1A\u628A\u540E\u7AEF\u8FD4\u56DE\u6570\u636E\u683C\u5F0F\u5355\u72EC\u653E\u5165\u4E00\u4E2A interface \u91CC\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// \u8BF7\u6C42\u63A5\u53E3\u6570\u636E</span>
<span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">ResponseData<span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token operator">=</span> <span class="token builtin">any</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
  <span class="token doc-comment comment">/**
   * \u72B6\u6001\u7801
   * <span class="token keyword">@type</span> <span class="token punctuation">{</span> number <span class="token punctuation">}</span>
   */</span>
  code<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>

  <span class="token doc-comment comment">/**
   * \u6570\u636E
   * <span class="token keyword">@type</span> <span class="token punctuation">{</span> T <span class="token punctuation">}</span>
   */</span>
  result<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">;</span>

  <span class="token doc-comment comment">/**
   * \u6D88\u606F
   * <span class="token keyword">@type</span> <span class="token punctuation">{</span> string <span class="token punctuation">}</span>
   */</span>
  message<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><p>\u5F53\u628A API \u5355\u72EC\u62BD\u79BB\u6210\u5355\u4E2A\u6A21\u5757\u65F6\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// \u5728 axios.ts \u6587\u4EF6\u4E2D\u5BF9 axios \u8FDB\u884C\u4E86\u5904\u7406\uFF0C\u4F8B\u5982\u6DFB\u52A0\u901A\u7528\u914D\u7F6E\u3001\u62E6\u622A\u5668\u7B49</span>
<span class="token keyword">import</span> Ax <span class="token keyword">from</span> <span class="token string">&#39;./axios&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token punctuation">{</span> ResponseData <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./interface.ts&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token generic-function"><span class="token function">getUser</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> Ax<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">get</span><span class="token generic class-name"><span class="token operator">&lt;</span>ResponseData<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&#39;/somepath&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>res <span class="token operator">=&gt;</span> res<span class="token punctuation">.</span>data<span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span>err <span class="token operator">=&gt;</span> <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>\u63A5\u7740\u5199\u5165\u8FD4\u56DE\u7684\u6570\u636E\u7C7B\u578B <code>User</code>\uFF0C\u8FD9\u53EF\u4EE5\u8BA9 TypeScript \u987A\u5229\u63A8\u65AD\u51FA\u60F3\u8981\u7684\u7C7B\u578B\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">User</span> <span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  age<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// user \u88AB\u63A8\u65AD\u51FA\u4E3A</span>
  <span class="token comment">// {</span>
  <span class="token comment">//  code: number,</span>
  <span class="token comment">//  result: { name: string, age: number },</span>
  <span class="token comment">//  message: string</span>
  <span class="token comment">// }</span>
  <span class="token keyword">const</span> user <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token generic-function"><span class="token function">getUser</span><span class="token generic class-name"><span class="token operator">&lt;</span>User<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div>`,40);function t(e,o){return p}var u=s(a,[["render",t]]);export{u as default};
