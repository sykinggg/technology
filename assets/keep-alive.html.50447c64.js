import{a as n}from"./app.ee3fc36b.js";import{_ as s}from"./plugin-vue_export-helper.21dcd24c.js";const a={},p=n(`<h1 id="keep-alive" tabindex="-1"><a class="header-anchor" href="#keep-alive" aria-hidden="true">#</a> keep-alive</h1><p>\u5728\u7684\u5E73\u65F6\u5F00\u53D1\u5DE5\u4F5C\u4E2D\uFF0C\u7ECF\u5E38\u4E3A\u4E86\u7EC4\u4EF6\u7684\u7F13\u5B58\u4F18\u5316\u800C\u4F7F\u7528 <code>&lt;keep-alive&gt;</code> \u7EC4\u4EF6\uFF0C\u4E50\u6B64\u4E0D\u75B2\uFF0C\u4F46\u5F88\u5C11\u6709\u4EBA\u5173\u6CE8\u5B83\u7684\u5B9E\u73B0\u539F\u7406\uFF0C\u4E0B\u9762\u5C31\u8BA9\u6765\u4E00\u63A2\u7A76\u7ADF\u3002</p><h2 id="\u5185\u7F6E\u7EC4\u4EF6" tabindex="-1"><a class="header-anchor" href="#\u5185\u7F6E\u7EC4\u4EF6" aria-hidden="true">#</a> \u5185\u7F6E\u7EC4\u4EF6</h2><p><code>&lt;keep-alive&gt;</code> \u662F Vue \u6E90\u7801\u4E2D\u5B9E\u73B0\u7684\u4E00\u4E2A\u7EC4\u4EF6\uFF0C\u4E5F\u5C31\u662F\u8BF4 Vue \u6E90\u7801\u4E0D\u4EC5\u5B9E\u73B0\u4E86\u4E00\u5957\u7EC4\u4EF6\u5316\u7684\u673A\u5236\uFF0C\u4E5F\u5B9E\u73B0\u4E86\u4E00\u4E9B\u5185\u7F6E\u7EC4\u4EF6\uFF0C\u5B83\u7684\u5B9A\u4E49\u5728 <code>src/core/components/keep-alive.js</code> \u4E2D\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;keep-alive&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">abstract</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>

  <span class="token literal-property property">props</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">include</span><span class="token operator">:</span> patternTypes<span class="token punctuation">,</span>
    <span class="token literal-property property">exclude</span><span class="token operator">:</span> patternTypes<span class="token punctuation">,</span>
    <span class="token literal-property property">max</span><span class="token operator">:</span> <span class="token punctuation">[</span>String<span class="token punctuation">,</span> Number<span class="token punctuation">]</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>

  <span class="token function">created</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>cache <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>keys <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>

  <span class="token function">destroyed</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> key <span class="token keyword">in</span> <span class="token keyword">this</span><span class="token punctuation">.</span>cache<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">pruneCacheEntry</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>cache<span class="token punctuation">,</span> key<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>keys<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>

  <span class="token function">mounted</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$watch</span><span class="token punctuation">(</span><span class="token string">&#39;include&#39;</span><span class="token punctuation">,</span> <span class="token parameter">val</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token function">pruneCache</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token parameter">name</span> <span class="token operator">=&gt;</span> <span class="token function">matches</span><span class="token punctuation">(</span>val<span class="token punctuation">,</span> name<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$watch</span><span class="token punctuation">(</span><span class="token string">&#39;exclude&#39;</span><span class="token punctuation">,</span> <span class="token parameter">val</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token function">pruneCache</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token parameter">name</span> <span class="token operator">=&gt;</span> <span class="token operator">!</span><span class="token function">matches</span><span class="token punctuation">(</span>val<span class="token punctuation">,</span> name<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>

  <span class="token function">render</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> slot <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$slots<span class="token punctuation">.</span>default
    <span class="token keyword">const</span> <span class="token literal-property property">vnode</span><span class="token operator">:</span> VNode <span class="token operator">=</span> <span class="token function">getFirstComponentChild</span><span class="token punctuation">(</span>slot<span class="token punctuation">)</span>
    <span class="token keyword">const</span> <span class="token literal-property property">componentOptions</span><span class="token operator">:</span> <span class="token operator">?</span>VNodeComponentOptions <span class="token operator">=</span> vnode <span class="token operator">&amp;&amp;</span> vnode<span class="token punctuation">.</span>componentOptions
    <span class="token keyword">if</span> <span class="token punctuation">(</span>componentOptions<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// check pattern</span>
      <span class="token keyword">const</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token operator">?</span>string <span class="token operator">=</span> <span class="token function">getComponentName</span><span class="token punctuation">(</span>componentOptions<span class="token punctuation">)</span>
      <span class="token keyword">const</span> <span class="token punctuation">{</span> include<span class="token punctuation">,</span> exclude <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>
        <span class="token comment">// not included</span>
        <span class="token punctuation">(</span>include <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token operator">!</span>name <span class="token operator">||</span> <span class="token operator">!</span><span class="token function">matches</span><span class="token punctuation">(</span>include<span class="token punctuation">,</span> name<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">||</span>
        <span class="token comment">// excluded</span>
        <span class="token punctuation">(</span>exclude <span class="token operator">&amp;&amp;</span> name <span class="token operator">&amp;&amp;</span> <span class="token function">matches</span><span class="token punctuation">(</span>exclude<span class="token punctuation">,</span> name<span class="token punctuation">)</span><span class="token punctuation">)</span>
      <span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> vnode
      <span class="token punctuation">}</span>

      <span class="token keyword">const</span> <span class="token punctuation">{</span> cache<span class="token punctuation">,</span> keys <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span>
      <span class="token keyword">const</span> <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token operator">?</span>string <span class="token operator">=</span> vnode<span class="token punctuation">.</span>key <span class="token operator">==</span> <span class="token keyword">null</span>
        <span class="token comment">// same constructor may get registered as different local components</span>
        <span class="token comment">// so cid alone is not enough (#3269)</span>
        <span class="token operator">?</span> componentOptions<span class="token punctuation">.</span>Ctor<span class="token punctuation">.</span>cid <span class="token operator">+</span> <span class="token punctuation">(</span>componentOptions<span class="token punctuation">.</span>tag <span class="token operator">?</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">::</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>componentOptions<span class="token punctuation">.</span>tag<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span> <span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
        <span class="token operator">:</span> vnode<span class="token punctuation">.</span>key
      <span class="token keyword">if</span> <span class="token punctuation">(</span>cache<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        vnode<span class="token punctuation">.</span>componentInstance <span class="token operator">=</span> cache<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">.</span>componentInstance
        <span class="token comment">// make current key freshest</span>
        <span class="token function">remove</span><span class="token punctuation">(</span>keys<span class="token punctuation">,</span> key<span class="token punctuation">)</span>
        keys<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        cache<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> vnode
        keys<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span>
        <span class="token comment">// prune oldest entry</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>max <span class="token operator">&amp;&amp;</span> keys<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>max<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token function">pruneCacheEntry</span><span class="token punctuation">(</span>cache<span class="token punctuation">,</span> keys<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> keys<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_vnode<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>

      vnode<span class="token punctuation">.</span>data<span class="token punctuation">.</span>keepAlive <span class="token operator">=</span> <span class="token boolean">true</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> vnode <span class="token operator">||</span> <span class="token punctuation">(</span>slot <span class="token operator">&amp;&amp;</span> slot<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br></div></div><p>\u53EF\u4EE5\u770B\u5230 <code>&lt;keep-alive&gt;</code> \u7EC4\u4EF6\u7684\u5B9E\u73B0\u4E5F\u662F\u4E00\u4E2A\u5BF9\u8C61\uFF0C\u6CE8\u610F\u5B83\u6709\u4E00\u4E2A\u5C5E\u6027 <code>abstract</code> \u4E3A true\uFF0C\u662F\u4E00\u4E2A\u62BD\u8C61\u7EC4\u4EF6\uFF0CVue \u7684\u6587\u6863\u6CA1\u6709\u63D0\u8FD9\u4E2A\u6982\u5FF5\uFF0C\u5B9E\u9645\u4E0A\u5B83\u5728\u7EC4\u4EF6\u5B9E\u4F8B\u5EFA\u7ACB\u7236\u5B50\u5173\u7CFB\u7684\u65F6\u5019\u4F1A\u88AB\u5FFD\u7565\uFF0C\u53D1\u751F\u5728 <code>initLifecycle</code> \u7684\u8FC7\u7A0B\u4E2D\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// locate first non-abstract parent</span>
<span class="token keyword">let</span> parent <span class="token operator">=</span> options<span class="token punctuation">.</span>parent
<span class="token keyword">if</span> <span class="token punctuation">(</span>parent <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>options<span class="token punctuation">.</span>abstract<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span>parent<span class="token punctuation">.</span>$options<span class="token punctuation">.</span>abstract <span class="token operator">&amp;&amp;</span> parent<span class="token punctuation">.</span>$parent<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    parent <span class="token operator">=</span> parent<span class="token punctuation">.</span>$parent
  <span class="token punctuation">}</span>
  parent<span class="token punctuation">.</span>$children<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>vm<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
vm<span class="token punctuation">.</span>$parent <span class="token operator">=</span> parent
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p><code>&lt;keep-alive&gt;</code> \u5728 <code>created</code> \u94A9\u5B50\u91CC\u5B9A\u4E49\u4E86 <code>this.cache</code> \u548C <code>this.keys</code>\uFF0C\u672C\u8D28\u4E0A\u5B83\u5C31\u662F\u53BB\u7F13\u5B58\u5DF2\u7ECF\u521B\u5EFA\u8FC7\u7684 <code>vnode</code>\u3002\u5B83\u7684 <code>props</code> \u5B9A\u4E49\u4E86 <code>include</code>\uFF0C<code>exclude</code>\uFF0C\u5B83\u4EEC\u53EF\u4EE5\u5B57\u7B26\u4E32\u6216\u8005\u8868\u8FBE\u5F0F\uFF0C<code>include</code> \u8868\u793A\u53EA\u6709\u5339\u914D\u7684\u7EC4\u4EF6\u4F1A\u88AB\u7F13\u5B58\uFF0C\u800C <code>exclude</code> \u8868\u793A\u4EFB\u4F55\u5339\u914D\u7684\u7EC4\u4EF6\u90FD\u4E0D\u4F1A\u88AB\u7F13\u5B58\uFF0C<code>props</code> \u8FD8\u5B9A\u4E49\u4E86 <code>max</code>\uFF0C\u5B83\u8868\u793A\u7F13\u5B58\u7684\u5927\u5C0F\uFF0C\u56E0\u4E3A\u662F\u7F13\u5B58\u7684 <code>vnode</code> \u5BF9\u8C61\uFF0C\u5B83\u4E5F\u4F1A\u6301\u6709 DOM\uFF0C\u5F53\u7F13\u5B58\u5F88\u591A\u7684\u65F6\u5019\uFF0C\u4F1A\u6BD4\u8F83\u5360\u7528\u5185\u5B58\uFF0C\u6240\u4EE5\u8BE5\u914D\u7F6E\u5141\u8BB8\u6307\u5B9A\u7F13\u5B58\u5927\u5C0F\u3002</p><p><code>&lt;keep-alive&gt;</code> \u76F4\u63A5\u5B9E\u73B0\u4E86 <code>render</code> \u51FD\u6570\uFF0C\u800C\u4E0D\u662F\u5E38\u89C4\u6A21\u677F\u7684\u65B9\u5F0F\uFF0C\u6267\u884C <code>&lt;keep-alive&gt;</code> \u7EC4\u4EF6\u6E32\u67D3\u7684\u65F6\u5019\uFF0C\u5C31\u4F1A\u6267\u884C\u5230\u8FD9\u4E2A <code>render</code> \u51FD\u6570\uFF0C\u63A5\u4E0B\u6765\u5206\u6790\u4E00\u4E0B\u5B83\u7684\u5B9E\u73B0\u3002</p><p>\u9996\u5148\u83B7\u53D6\u7B2C\u4E00\u4E2A\u5B50\u5143\u7D20\u7684 <code>vnode</code>\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> slot <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$slots<span class="token punctuation">.</span>default
<span class="token keyword">const</span> <span class="token literal-property property">vnode</span><span class="token operator">:</span> VNode <span class="token operator">=</span> <span class="token function">getFirstComponentChild</span><span class="token punctuation">(</span>slot<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>\u7531\u4E8E\u4E5F\u662F\u5728 <code>&lt;keep-alive&gt;</code> \u6807\u7B7E\u5185\u90E8\u5199 DOM\uFF0C\u6240\u4EE5\u53EF\u4EE5\u5148\u83B7\u53D6\u5230\u5B83\u7684\u9ED8\u8BA4\u63D2\u69FD\uFF0C\u7136\u540E\u518D\u83B7\u53D6\u5230\u5B83\u7684\u7B2C\u4E00\u4E2A\u5B50\u8282\u70B9\u3002<code>&lt;keep-alive&gt;</code> \u53EA\u5904\u7406\u7B2C\u4E00\u4E2A\u5B50\u5143\u7D20\uFF0C\u6240\u4EE5\u4E00\u822C\u548C\u5B83\u642D\u914D\u4F7F\u7528\u7684\u6709 <code>component</code> \u52A8\u6001\u7EC4\u4EF6\u6216\u8005\u662F <code>router-view</code>\uFF0C\u8FD9\u70B9\u8981\u7262\u8BB0\u3002</p><p>\u7136\u540E\u53C8\u5224\u65AD\u4E86\u5F53\u524D\u7EC4\u4EF6\u7684\u540D\u79F0\u548C <code>include</code>\u3001<code>exclude</code> \u7684\u5173\u7CFB\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// check pattern</span>
<span class="token keyword">const</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token operator">?</span>string <span class="token operator">=</span> <span class="token function">getComponentName</span><span class="token punctuation">(</span>componentOptions<span class="token punctuation">)</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> include<span class="token punctuation">,</span> exclude <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>
  <span class="token comment">// not included</span>
  <span class="token punctuation">(</span>include <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token operator">!</span>name <span class="token operator">||</span> <span class="token operator">!</span><span class="token function">matches</span><span class="token punctuation">(</span>include<span class="token punctuation">,</span> name<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">||</span>
  <span class="token comment">// excluded</span>
  <span class="token punctuation">(</span>exclude <span class="token operator">&amp;&amp;</span> name <span class="token operator">&amp;&amp;</span> <span class="token function">matches</span><span class="token punctuation">(</span>exclude<span class="token punctuation">,</span> name<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> vnode
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">matches</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">pattern</span><span class="token operator">:</span> string <span class="token operator">|</span> RegExp <span class="token operator">|</span> Array<span class="token operator">&lt;</span>string<span class="token operator">&gt;</span><span class="token punctuation">,</span> <span class="token literal-property property">name</span><span class="token operator">:</span> string</span><span class="token punctuation">)</span><span class="token operator">:</span> boolean <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>pattern<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> pattern<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token operator">-</span><span class="token number">1</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> pattern <span class="token operator">===</span> <span class="token string">&#39;string&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> pattern<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;,&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token operator">-</span><span class="token number">1</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isRegExp</span><span class="token punctuation">(</span>pattern<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> pattern<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token boolean">false</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><p><code>matches</code> \u7684\u903B\u8F91\u5F88\u7B80\u5355\uFF0C\u5C31\u662F\u505A\u5339\u914D\uFF0C\u5206\u522B\u5904\u7406\u4E86\u6570\u7EC4\u3001\u5B57\u7B26\u4E32\u3001\u6B63\u5219\u8868\u8FBE\u5F0F\u7684\u60C5\u51B5\uFF0C\u4E5F\u5C31\u662F\u8BF4\u5E73\u65F6\u4F20\u7684 <code>include</code> \u548C <code>exclude</code> \u53EF\u4EE5\u662F\u8FD9\u4E09\u79CD\u7C7B\u578B\u7684\u4EFB\u610F\u4E00\u79CD\u3002\u5E76\u4E14\u7684\u7EC4\u4EF6\u540D\u5982\u679C\u6EE1\u8DB3\u4E86\u914D\u7F6E <code>include</code> \u4E14\u4E0D\u5339\u914D\u6216\u8005\u662F\u914D\u7F6E\u4E86 <code>exclude</code> \u4E14\u5339\u914D\uFF0C\u90A3\u4E48\u5C31\u76F4\u63A5\u8FD4\u56DE\u8FD9\u4E2A\u7EC4\u4EF6\u7684 <code>vnode</code>\uFF0C\u5426\u5219\u7684\u8BDD\u8D70\u4E0B\u4E00\u6B65\u7F13\u5B58\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span> cache<span class="token punctuation">,</span> keys <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span>
<span class="token keyword">const</span> <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token operator">?</span>string <span class="token operator">=</span> vnode<span class="token punctuation">.</span>key <span class="token operator">==</span> <span class="token keyword">null</span>
  <span class="token comment">// same constructor may get registered as different local components</span>
  <span class="token comment">// so cid alone is not enough (#3269)</span>
  <span class="token operator">?</span> componentOptions<span class="token punctuation">.</span>Ctor<span class="token punctuation">.</span>cid <span class="token operator">+</span> <span class="token punctuation">(</span>componentOptions<span class="token punctuation">.</span>tag <span class="token operator">?</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">::</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>componentOptions<span class="token punctuation">.</span>tag<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span> <span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
  <span class="token operator">:</span> vnode<span class="token punctuation">.</span>key
<span class="token keyword">if</span> <span class="token punctuation">(</span>cache<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  vnode<span class="token punctuation">.</span>componentInstance <span class="token operator">=</span> cache<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">.</span>componentInstance
  <span class="token comment">// make current key freshest</span>
  <span class="token function">remove</span><span class="token punctuation">(</span>keys<span class="token punctuation">,</span> key<span class="token punctuation">)</span>
  keys<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
  cache<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> vnode
  keys<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span>
  <span class="token comment">// prune oldest entry</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>max <span class="token operator">&amp;&amp;</span> keys<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>max<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">pruneCacheEntry</span><span class="token punctuation">(</span>cache<span class="token punctuation">,</span> keys<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> keys<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_vnode<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><p>\u8FD9\u90E8\u5206\u903B\u8F91\u5F88\u7B80\u5355\uFF0C\u5982\u679C\u547D\u4E2D\u7F13\u5B58\uFF0C\u5219\u76F4\u63A5\u4ECE\u7F13\u5B58\u4E2D\u62FF <code>vnode</code> \u7684\u7EC4\u4EF6\u5B9E\u4F8B\uFF0C\u5E76\u4E14\u91CD\u65B0\u8C03\u6574\u4E86 key \u7684\u987A\u5E8F\u653E\u5728\u4E86\u6700\u540E\u4E00\u4E2A\uFF1B\u5426\u5219\u628A <code>vnode</code> \u8BBE\u7F6E\u8FDB\u7F13\u5B58\uFF0C\u6700\u540E\u8FD8\u6709\u4E00\u4E2A\u903B\u8F91\uFF0C\u5982\u679C\u914D\u7F6E\u4E86 <code>max</code> \u5E76\u4E14\u7F13\u5B58\u7684\u957F\u5EA6\u8D85\u8FC7\u4E86 <code>this.max</code>\uFF0C\u8FD8\u8981\u4ECE\u7F13\u5B58\u4E2D\u5220\u9664\u7B2C\u4E00\u4E2A\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">pruneCacheEntry</span> <span class="token punctuation">(</span>
  <span class="token parameter"><span class="token literal-property property">cache</span><span class="token operator">:</span> VNodeCache<span class="token punctuation">,</span>
  <span class="token literal-property property">key</span><span class="token operator">:</span> string<span class="token punctuation">,</span>
  <span class="token literal-property property">keys</span><span class="token operator">:</span> Array<span class="token operator">&lt;</span>string<span class="token operator">&gt;</span><span class="token punctuation">,</span>
  current<span class="token operator">?</span><span class="token operator">:</span> VNode</span>
<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> cached <span class="token operator">=</span> cache<span class="token punctuation">[</span>key<span class="token punctuation">]</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>cached <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token operator">!</span>current <span class="token operator">||</span> cached<span class="token punctuation">.</span>tag <span class="token operator">!==</span> current<span class="token punctuation">.</span>tag<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    cached<span class="token punctuation">.</span>componentInstance<span class="token punctuation">.</span><span class="token function">$destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  cache<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">null</span> 
  <span class="token function">remove</span><span class="token punctuation">(</span>keys<span class="token punctuation">,</span> key<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>\u9664\u4E86\u4ECE\u7F13\u5B58\u4E2D\u5220\u9664\u5916\uFF0C\u8FD8\u8981\u5224\u65AD\u5982\u679C\u8981\u5220\u9664\u7684\u7F13\u5B58\u5E76\u7684\u7EC4\u4EF6 <code>tag</code> \u4E0D\u662F\u5F53\u524D\u6E32\u67D3\u7EC4\u4EF6 <code>tag</code>\uFF0C\u4E5F\u6267\u884C\u5220\u9664\u7F13\u5B58\u7684\u7EC4\u4EF6\u5B9E\u4F8B\u7684 <code>$destroy</code> \u65B9\u6CD5\u3002</p><p>\u6700\u540E\u8BBE\u7F6E <code>vnode.data.keepAlive = true</code> \uFF0C\u8FD9\u4E2A\u4F5C\u7528\u7A0D\u540E\u4ECB\u7ECD\u3002</p><p>\u6CE8\u610F\uFF0C<code>&lt;keep-alive&gt;</code> \u7EC4\u4EF6\u4E5F\u662F\u4E3A\u89C2\u6D4B <code>include</code> \u548C <code>exclude</code> \u7684\u53D8\u5316\uFF0C\u5BF9\u7F13\u5B58\u505A\u5904\u7406\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token literal-property property">watch</span><span class="token operator">:</span> <span class="token punctuation">{</span>
  <span class="token function">include</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">val</span><span class="token operator">:</span> string <span class="token operator">|</span> RegExp <span class="token operator">|</span> Array<span class="token operator">&lt;</span>string<span class="token operator">&gt;</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">pruneCache</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token parameter">name</span> <span class="token operator">=&gt;</span> <span class="token function">matches</span><span class="token punctuation">(</span>val<span class="token punctuation">,</span> name<span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">exclude</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">val</span><span class="token operator">:</span> string <span class="token operator">|</span> RegExp <span class="token operator">|</span> Array<span class="token operator">&lt;</span>string<span class="token operator">&gt;</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">pruneCache</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token parameter">name</span> <span class="token operator">=&gt;</span> <span class="token operator">!</span><span class="token function">matches</span><span class="token punctuation">(</span>val<span class="token punctuation">,</span> name<span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">pruneCache</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">keepAliveInstance</span><span class="token operator">:</span> any<span class="token punctuation">,</span> <span class="token literal-property property">filter</span><span class="token operator">:</span> Function</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> cache<span class="token punctuation">,</span> keys<span class="token punctuation">,</span> _vnode <span class="token punctuation">}</span> <span class="token operator">=</span> keepAliveInstance
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> key <span class="token keyword">in</span> cache<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token literal-property property">cachedNode</span><span class="token operator">:</span> <span class="token operator">?</span>VNode <span class="token operator">=</span> cache<span class="token punctuation">[</span>key<span class="token punctuation">]</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>cachedNode<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token operator">?</span>string <span class="token operator">=</span> <span class="token function">getComponentName</span><span class="token punctuation">(</span>cachedNode<span class="token punctuation">.</span>componentOptions<span class="token punctuation">)</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>name <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token function">filter</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">pruneCacheEntry</span><span class="token punctuation">(</span>cache<span class="token punctuation">,</span> key<span class="token punctuation">,</span> keys<span class="token punctuation">,</span> _vnode<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><p>\u903B\u8F91\u5F88\u7B80\u5355\uFF0C\u89C2\u6D4B\u4ED6\u4EEC\u7684\u53D8\u5316\u6267\u884C <code>pruneCache</code> \u51FD\u6570\uFF0C\u5176\u5B9E\u5C31\u662F\u5BF9 <code>cache</code> \u505A\u904D\u5386\uFF0C\u53D1\u73B0\u7F13\u5B58\u7684\u8282\u70B9\u540D\u79F0\u548C\u65B0\u7684\u89C4\u5219\u6CA1\u6709\u5339\u914D\u4E0A\u7684\u65F6\u5019\uFF0C\u5C31\u628A\u8FD9\u4E2A\u7F13\u5B58\u8282\u70B9\u4ECE\u7F13\u5B58\u4E2D\u6458\u9664\u3002</p><h2 id="\u7EC4\u4EF6\u6E32\u67D3" tabindex="-1"><a class="header-anchor" href="#\u7EC4\u4EF6\u6E32\u67D3" aria-hidden="true">#</a> \u7EC4\u4EF6\u6E32\u67D3</h2><p>\u5230\u6B64\u4E3A\u6B62\uFF0C\u53EA\u4E86\u89E3\u4E86 <code>&lt;keep-alive&gt;</code> \u7684\u7EC4\u4EF6\u5B9E\u73B0\uFF0C\u4F46\u5E76\u4E0D\u77E5\u9053\u5B83\u5305\u88F9\u7684\u5B50\u7EC4\u4EF6\u6E32\u67D3\u548C\u666E\u901A\u7EC4\u4EF6\u6709\u4EC0\u4E48\u4E0D\u4E00\u6837\u7684\u5730\u65B9\u3002\u5173\u6CE8 2 \u4E2A\u65B9\u9762\uFF0C\u9996\u6B21\u6E32\u67D3\u548C\u7F13\u5B58\u6E32\u67D3\u3002</p><p>\u540C\u6837\u4E3A\u4E86\u66F4\u597D\u5730\u7406\u89E3\uFF0C\u4E5F\u7ED3\u5408\u4E00\u4E2A\u793A\u4F8B\u6765\u5206\u6790\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> <span class="token constant">A</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token string">&#39;&lt;div class=&quot;a&quot;&gt;&#39;</span> <span class="token operator">+</span>
  <span class="token string">&#39;&lt;p&gt;A Comp&lt;/p&gt;&#39;</span> <span class="token operator">+</span>
  <span class="token string">&#39;&lt;/div&gt;&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;A&#39;</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> <span class="token constant">B</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token string">&#39;&lt;div class=&quot;b&quot;&gt;&#39;</span> <span class="token operator">+</span>
  <span class="token string">&#39;&lt;p&gt;B Comp&lt;/p&gt;&#39;</span> <span class="token operator">+</span>
  <span class="token string">&#39;&lt;/div&gt;&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;B&#39;</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">el</span><span class="token operator">:</span> <span class="token string">&#39;#app&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token string">&#39;&lt;div&gt;&#39;</span> <span class="token operator">+</span>
  <span class="token string">&#39;&lt;keep-alive&gt;&#39;</span> <span class="token operator">+</span>
  <span class="token string">&#39;&lt;component :is=&quot;currentComp&quot;&gt;&#39;</span> <span class="token operator">+</span>
  <span class="token string">&#39;&lt;/component&gt;&#39;</span> <span class="token operator">+</span>
  <span class="token string">&#39;&lt;/keep-alive&gt;&#39;</span> <span class="token operator">+</span>
  <span class="token string">&#39;&lt;button @click=&quot;change&quot;&gt;switch&lt;/button&gt;&#39;</span> <span class="token operator">+</span>
  <span class="token string">&#39;&lt;/div&gt;&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">currentComp</span><span class="token operator">:</span> <span class="token string">&#39;A&#39;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token function">change</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>currentComp <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>currentComp <span class="token operator">===</span> <span class="token string">&#39;A&#39;</span> <span class="token operator">?</span> <span class="token string">&#39;B&#39;</span> <span class="token operator">:</span> <span class="token string">&#39;A&#39;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">components</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token constant">A</span><span class="token punctuation">,</span>
    <span class="token constant">B</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br></div></div><h3 id="\u9996\u6B21\u6E32\u67D3" tabindex="-1"><a class="header-anchor" href="#\u9996\u6B21\u6E32\u67D3" aria-hidden="true">#</a> \u9996\u6B21\u6E32\u67D3</h3><p>\u77E5\u9053 Vue \u7684\u6E32\u67D3\u6700\u540E\u90FD\u4F1A\u5230 <code>patch</code> \u8FC7\u7A0B\uFF0C\u800C\u7EC4\u4EF6\u7684 <code>patch</code> \u8FC7\u7A0B\u4F1A\u6267\u884C <code>createComponent</code> \u65B9\u6CD5\uFF0C\u5B83\u7684\u5B9A\u4E49\u5728 <code>src/core/vdom/patch.js</code> \u4E2D\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">createComponent</span> <span class="token punctuation">(</span><span class="token parameter">vnode<span class="token punctuation">,</span> insertedVnodeQueue<span class="token punctuation">,</span> parentElm<span class="token punctuation">,</span> refElm</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> i <span class="token operator">=</span> vnode<span class="token punctuation">.</span>data
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDef</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> isReactivated <span class="token operator">=</span> <span class="token function">isDef</span><span class="token punctuation">(</span>vnode<span class="token punctuation">.</span>componentInstance<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> i<span class="token punctuation">.</span>keepAlive
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDef</span><span class="token punctuation">(</span>i <span class="token operator">=</span> i<span class="token punctuation">.</span>hook<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">isDef</span><span class="token punctuation">(</span>i <span class="token operator">=</span> i<span class="token punctuation">.</span>init<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">i</span><span class="token punctuation">(</span>vnode<span class="token punctuation">,</span> <span class="token boolean">false</span> <span class="token comment">/* hydrating */</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// after calling the init hook, if the vnode is a child component</span>
    <span class="token comment">// it should&#39;ve created a child instance and mounted it. the child</span>
    <span class="token comment">// component also has set the placeholder vnode&#39;s elm.</span>
    <span class="token comment">// in that case we can just return the element and be done.</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDef</span><span class="token punctuation">(</span>vnode<span class="token punctuation">.</span>componentInstance<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">initComponent</span><span class="token punctuation">(</span>vnode<span class="token punctuation">,</span> insertedVnodeQueue<span class="token punctuation">)</span>
      <span class="token function">insert</span><span class="token punctuation">(</span>parentElm<span class="token punctuation">,</span> vnode<span class="token punctuation">.</span>elm<span class="token punctuation">,</span> refElm<span class="token punctuation">)</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isTrue</span><span class="token punctuation">(</span>isReactivated<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">reactivateComponent</span><span class="token punctuation">(</span>vnode<span class="token punctuation">,</span> insertedVnodeQueue<span class="token punctuation">,</span> parentElm<span class="token punctuation">,</span> refElm<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">return</span> <span class="token boolean">true</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><p><code>createComponent</code> \u5B9A\u4E49\u4E86 <code>isReactivated</code> \u7684\u53D8\u91CF\uFF0C\u5B83\u662F\u6839\u636E <code>vnode.componentInstance</code> \u4EE5\u53CA <code>vnode.data.keepAlive</code> \u7684\u5224\u65AD\uFF0C\u7B2C\u4E00\u6B21\u6E32\u67D3\u7684\u65F6\u5019\uFF0C<code>vnode.componentInstance</code> \u4E3A <code>undefined</code>\uFF0C<code>vnode.data.keepAlive</code> \u4E3A true\uFF0C\u56E0\u4E3A\u5B83\u7684\u7236\u7EC4\u4EF6 <code>&lt;keep-alive&gt;</code> \u7684 <code>render</code> \u51FD\u6570\u4F1A\u5148\u6267\u884C\uFF0C\u90A3\u4E48\u8BE5 <code>vnode</code> \u7F13\u5B58\u5230\u5185\u5B58\u4E2D\uFF0C\u5E76\u4E14\u8BBE\u7F6E <code>vnode.data.keepAlive</code> \u4E3A true\uFF0C\u56E0\u6B64 <code>isReactivated</code> \u4E3A <code>false</code>\uFF0C\u90A3\u4E48\u8D70\u6B63\u5E38\u7684 <code>init</code> \u7684\u94A9\u5B50\u51FD\u6570\u6267\u884C\u7EC4\u4EF6\u7684 <code>mount</code>\u3002\u5F53 <code>vnode</code> \u5DF2\u7ECF\u6267\u884C\u5B8C <code>patch</code> \u540E\uFF0C\u6267\u884C <code>initComponent</code> \u51FD\u6570\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">initComponent</span> <span class="token punctuation">(</span><span class="token parameter">vnode<span class="token punctuation">,</span> insertedVnodeQueue</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDef</span><span class="token punctuation">(</span>vnode<span class="token punctuation">.</span>data<span class="token punctuation">.</span>pendingInsert<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    insertedVnodeQueue<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>insertedVnodeQueue<span class="token punctuation">,</span> vnode<span class="token punctuation">.</span>data<span class="token punctuation">.</span>pendingInsert<span class="token punctuation">)</span>
    vnode<span class="token punctuation">.</span>data<span class="token punctuation">.</span>pendingInsert <span class="token operator">=</span> <span class="token keyword">null</span>
  <span class="token punctuation">}</span>
  vnode<span class="token punctuation">.</span>elm <span class="token operator">=</span> vnode<span class="token punctuation">.</span>componentInstance<span class="token punctuation">.</span>$el
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isPatchable</span><span class="token punctuation">(</span>vnode<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">invokeCreateHooks</span><span class="token punctuation">(</span>vnode<span class="token punctuation">,</span> insertedVnodeQueue<span class="token punctuation">)</span>
    <span class="token function">setScope</span><span class="token punctuation">(</span>vnode<span class="token punctuation">)</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token comment">// empty component root.</span>
    <span class="token comment">// skip all element-related modules except for ref (#3455)</span>
    <span class="token function">registerRef</span><span class="token punctuation">(</span>vnode<span class="token punctuation">)</span>
    <span class="token comment">// make sure to invoke the insert hook</span>
    insertedVnodeQueue<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>vnode<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p>\u8FD9\u91CC\u4F1A\u6709 <code>vnode.elm</code> \u7F13\u5B58\u4E86 <code>vnode</code> \u521B\u5EFA\u751F\u6210\u7684 DOM \u8282\u70B9\u3002\u6240\u4EE5\u5BF9\u4E8E\u9996\u6B21\u6E32\u67D3\u800C\u8A00\uFF0C\u9664\u4E86\u5728 <code>&lt;keep-alive&gt;</code> \u4E2D\u5EFA\u7ACB\u7F13\u5B58\uFF0C\u548C\u666E\u901A\u7EC4\u4EF6\u6E32\u67D3\u6CA1\u4EC0\u4E48\u533A\u522B\u3002</p><p>\u6240\u4EE5\u5BF9\u7684\u4F8B\u5B50\uFF0C\u521D\u59CB\u5316\u6E32\u67D3 <code>A</code> \u7EC4\u4EF6\u4EE5\u53CA\u7B2C\u4E00\u6B21\u70B9\u51FB <code>switch</code> \u6E32\u67D3 <code>B</code> \u7EC4\u4EF6\uFF0C\u90FD\u662F\u9996\u6B21\u6E32\u67D3\u3002</p><h3 id="\u7F13\u5B58\u6E32\u67D3" tabindex="-1"><a class="header-anchor" href="#\u7F13\u5B58\u6E32\u67D3" aria-hidden="true">#</a> \u7F13\u5B58\u6E32\u67D3</h3><p>\u5F53\u4ECE <code>B</code> \u7EC4\u4EF6\u518D\u6B21\u70B9\u51FB <code>switch</code> \u5207\u6362\u5230 <code>A</code> \u7EC4\u4EF6\uFF0C\u5C31\u4F1A\u547D\u4E2D\u7F13\u5B58\u6E32\u67D3\u3002</p><p>\u4E4B\u524D\u5206\u6790\u8FC7\uFF0C\u5F53\u6570\u636E\u53D1\u9001\u53D8\u5316\uFF0C\u5728 <code>patch</code> \u7684\u8FC7\u7A0B\u4E2D\u4F1A\u6267\u884C <code>patchVnode</code> \u7684\u903B\u8F91\uFF0C\u5B83\u4F1A\u5BF9\u6BD4\u65B0\u65E7 <code>vnode</code> \u8282\u70B9\uFF0C\u751A\u81F3\u5BF9\u6BD4\u5B83\u4EEC\u7684\u5B50\u8282\u70B9\u53BB\u505A\u66F4\u65B0\u903B\u8F91\uFF0C\u4F46\u662F\u5BF9\u4E8E\u7EC4\u4EF6 <code>vnode</code> \u800C\u8A00\uFF0C\u662F\u6CA1\u6709 <code>children</code> \u7684\uFF0C\u90A3\u4E48\u5BF9\u4E8E <code>&lt;keep-alive&gt;</code> \u7EC4\u4EF6\u800C\u8A00\uFF0C\u5982\u4F55\u66F4\u65B0\u5B83\u5305\u88F9\u7684\u5185\u5BB9\u5462\uFF1F</p><p>\u539F\u6765 <code>patchVnode</code> \u5728\u505A\u5404\u79CD diff \u4E4B\u524D\uFF0C\u4F1A\u5148\u6267\u884C <code>prepatch</code> \u7684\u94A9\u5B50\u51FD\u6570\uFF0C\u5B83\u7684\u5B9A\u4E49\u5728 <code>src/core/vdom/create-component</code> \u4E2D\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> componentVNodeHooks <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token function">prepatch</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">oldVnode</span><span class="token operator">:</span> MountedComponentVNode<span class="token punctuation">,</span> <span class="token literal-property property">vnode</span><span class="token operator">:</span> MountedComponentVNode</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> options <span class="token operator">=</span> vnode<span class="token punctuation">.</span>componentOptions
    <span class="token keyword">const</span> child <span class="token operator">=</span> vnode<span class="token punctuation">.</span>componentInstance <span class="token operator">=</span> oldVnode<span class="token punctuation">.</span>componentInstance
    <span class="token function">updateChildComponent</span><span class="token punctuation">(</span>
      child<span class="token punctuation">,</span>
      options<span class="token punctuation">.</span>propsData<span class="token punctuation">,</span> <span class="token comment">// updated props</span>
      options<span class="token punctuation">.</span>listeners<span class="token punctuation">,</span> <span class="token comment">// updated listeners</span>
      vnode<span class="token punctuation">,</span> <span class="token comment">// new parent vnode</span>
      options<span class="token punctuation">.</span>children <span class="token comment">// new children</span>
    <span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p><code>prepatch</code> \u6838\u5FC3\u903B\u8F91\u5C31\u662F\u6267\u884C <code>updateChildComponent</code> \u65B9\u6CD5\uFF0C\u5B83\u7684\u5B9A\u4E49\u5728 <code>src/core/instance/lifecycle.js</code> \u4E2D\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">updateChildComponent</span> <span class="token punctuation">(</span>
  <span class="token parameter"><span class="token literal-property property">vm</span><span class="token operator">:</span> Component<span class="token punctuation">,</span>
  <span class="token literal-property property">propsData</span><span class="token operator">:</span> <span class="token operator">?</span>Object<span class="token punctuation">,</span>
  <span class="token literal-property property">listeners</span><span class="token operator">:</span> <span class="token operator">?</span>Object<span class="token punctuation">,</span>
  <span class="token literal-property property">parentVnode</span><span class="token operator">:</span> MountedComponentVNode<span class="token punctuation">,</span>
  <span class="token literal-property property">renderChildren</span><span class="token operator">:</span> <span class="token operator">?</span>Array<span class="token operator">&lt;</span>VNode<span class="token operator">&gt;</span></span>
<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> hasChildren <span class="token operator">=</span> <span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">(</span>
    renderChildren <span class="token operator">||</span>          
    vm<span class="token punctuation">.</span>$options<span class="token punctuation">.</span>_renderChildren <span class="token operator">||</span>
    parentVnode<span class="token punctuation">.</span>data<span class="token punctuation">.</span>scopedSlots <span class="token operator">||</span> 
    vm<span class="token punctuation">.</span>$scopedSlots <span class="token operator">!==</span> emptyObject 
  <span class="token punctuation">)</span>

  <span class="token comment">// ...</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>hasChildren<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    vm<span class="token punctuation">.</span>$slots <span class="token operator">=</span> <span class="token function">resolveSlots</span><span class="token punctuation">(</span>renderChildren<span class="token punctuation">,</span> parentVnode<span class="token punctuation">.</span>context<span class="token punctuation">)</span>
    vm<span class="token punctuation">.</span><span class="token function">$forceUpdate</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><p><code>updateChildComponent</code> \u65B9\u6CD5\u4E3B\u8981\u662F\u53BB\u66F4\u65B0\u7EC4\u4EF6\u5B9E\u4F8B\u7684\u4E00\u4E9B\u5C5E\u6027\uFF0C\u8FD9\u91CC\u91CD\u70B9\u5173\u6CE8\u4E00\u4E0B <code>slot</code> \u90E8\u5206\uFF0C\u7531\u4E8E <code>&lt;keep-alive&gt;</code> \u7EC4\u4EF6\u672C\u8D28\u4E0A\u652F\u6301\u4E86 <code>slot</code>\uFF0C\u6240\u4EE5\u5B83\u6267\u884C <code>prepatch</code> \u7684\u65F6\u5019\uFF0C\u9700\u8981\u5BF9\u81EA\u5DF1\u7684 <code>children</code>\uFF0C\u4E5F\u5C31\u662F\u8FD9\u4E9B <code>slots</code> \u505A\u91CD\u65B0\u89E3\u6790\uFF0C\u5E76\u89E6\u53D1 <code>&lt;keep-alive&gt;</code> \u7EC4\u4EF6\u5B9E\u4F8B <code>$forceUpdate</code> \u903B\u8F91\uFF0C\u4E5F\u5C31\u662F\u91CD\u65B0\u6267\u884C <code>&lt;keep-alive&gt;</code> \u7684 <code>render</code> \u65B9\u6CD5\uFF0C\u8FD9\u4E2A\u65F6\u5019\u5982\u679C\u5B83\u5305\u88F9\u7684\u7B2C\u4E00\u4E2A\u7EC4\u4EF6 <code>vnode</code> \u547D\u4E2D\u7F13\u5B58\uFF0C\u5219\u76F4\u63A5\u8FD4\u56DE\u7F13\u5B58\u4E2D\u7684 <code>vnode.componentInstance</code>\uFF0C\u5728\u7684\u4F8B\u5B50\u4E2D\u5C31\u662F\u7F13\u5B58\u7684 <code>A</code> \u7EC4\u4EF6\uFF0C\u63A5\u7740\u53C8\u4F1A\u6267\u884C <code>patch</code> \u8FC7\u7A0B\uFF0C\u518D\u6B21\u6267\u884C\u5230 <code>createComponent</code> \u65B9\u6CD5\uFF0C\u518D\u56DE\u987E\u4E00\u4E0B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">createComponent</span> <span class="token punctuation">(</span><span class="token parameter">vnode<span class="token punctuation">,</span> insertedVnodeQueue<span class="token punctuation">,</span> parentElm<span class="token punctuation">,</span> refElm</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> i <span class="token operator">=</span> vnode<span class="token punctuation">.</span>data
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDef</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> isReactivated <span class="token operator">=</span> <span class="token function">isDef</span><span class="token punctuation">(</span>vnode<span class="token punctuation">.</span>componentInstance<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> i<span class="token punctuation">.</span>keepAlive
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDef</span><span class="token punctuation">(</span>i <span class="token operator">=</span> i<span class="token punctuation">.</span>hook<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">isDef</span><span class="token punctuation">(</span>i <span class="token operator">=</span> i<span class="token punctuation">.</span>init<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">i</span><span class="token punctuation">(</span>vnode<span class="token punctuation">,</span> <span class="token boolean">false</span> <span class="token comment">/* hydrating */</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// after calling the init hook, if the vnode is a child component</span>
    <span class="token comment">// it should&#39;ve created a child instance and mounted it. the child</span>
    <span class="token comment">// component also has set the placeholder vnode&#39;s elm.</span>
    <span class="token comment">// in that case we can just return the element and be done.</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDef</span><span class="token punctuation">(</span>vnode<span class="token punctuation">.</span>componentInstance<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">initComponent</span><span class="token punctuation">(</span>vnode<span class="token punctuation">,</span> insertedVnodeQueue<span class="token punctuation">)</span>
      <span class="token function">insert</span><span class="token punctuation">(</span>parentElm<span class="token punctuation">,</span> vnode<span class="token punctuation">.</span>elm<span class="token punctuation">,</span> refElm<span class="token punctuation">)</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isTrue</span><span class="token punctuation">(</span>isReactivated<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">reactivateComponent</span><span class="token punctuation">(</span>vnode<span class="token punctuation">,</span> insertedVnodeQueue<span class="token punctuation">,</span> parentElm<span class="token punctuation">,</span> refElm<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">return</span> <span class="token boolean">true</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><p>\u8FD9\u4E2A\u65F6\u5019 <code>isReactivated</code> \u4E3A true\uFF0C\u5E76\u4E14\u5728\u6267\u884C <code>init</code> \u94A9\u5B50\u51FD\u6570\u7684\u65F6\u5019\u4E0D\u4F1A\u518D\u6267\u884C\u7EC4\u4EF6\u7684 <code>mount</code> \u8FC7\u7A0B\u4E86\uFF0C\u76F8\u5173\u903B\u8F91\u5728 <code>src/core/vdom/create-component.js</code> \u4E2D\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> componentVNodeHooks <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token function">init</span> <span class="token punctuation">(</span>vnode<span class="token operator">:</span> VNodeWithData<span class="token punctuation">,</span> <span class="token literal-property property">hydrating</span><span class="token operator">:</span> boolean<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token operator">?</span>boolean <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>
      vnode<span class="token punctuation">.</span>componentInstance <span class="token operator">&amp;&amp;</span>
      <span class="token operator">!</span>vnode<span class="token punctuation">.</span>componentInstance<span class="token punctuation">.</span>_isDestroyed <span class="token operator">&amp;&amp;</span>
      vnode<span class="token punctuation">.</span>data<span class="token punctuation">.</span>keepAlive
    <span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// kept-alive components, treat as a patch</span>
      <span class="token keyword">const</span> <span class="token literal-property property">mountedNode</span><span class="token operator">:</span> any <span class="token operator">=</span> vnode <span class="token comment">// work around flow</span>
      componentVNodeHooks<span class="token punctuation">.</span><span class="token function">prepatch</span><span class="token punctuation">(</span>mountedNode<span class="token punctuation">,</span> mountedNode<span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> child <span class="token operator">=</span> vnode<span class="token punctuation">.</span>componentInstance <span class="token operator">=</span> <span class="token function">createComponentInstanceForVnode</span><span class="token punctuation">(</span>
        vnode<span class="token punctuation">,</span>
        activeInstance
      <span class="token punctuation">)</span>
      child<span class="token punctuation">.</span><span class="token function">$mount</span><span class="token punctuation">(</span>hydrating <span class="token operator">?</span> vnode<span class="token punctuation">.</span>elm <span class="token operator">:</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span> hydrating<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><p>\u8FD9\u4E5F\u5C31\u662F\u88AB <code>&lt;keep-alive&gt;</code> \u5305\u88F9\u7684\u7EC4\u4EF6\u5728\u6709\u7F13\u5B58\u7684\u65F6\u5019\u5C31\u4E0D\u4F1A\u5728\u6267\u884C\u7EC4\u4EF6\u7684 <code>created</code>\u3001<code>mounted</code> \u7B49\u94A9\u5B50\u51FD\u6570\u7684\u539F\u56E0\u4E86\u3002\u56DE\u5230 <code>createComponent</code> \u65B9\u6CD5\uFF0C\u5728 <code>isReactivated</code> \u4E3A true \u7684\u60C5\u51B5\u4E0B\u4F1A\u6267\u884C <code>reactivateComponent</code> \u65B9\u6CD5\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">reactivateComponent</span> <span class="token punctuation">(</span><span class="token parameter">vnode<span class="token punctuation">,</span> insertedVnodeQueue<span class="token punctuation">,</span> parentElm<span class="token punctuation">,</span> refElm</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> i
  <span class="token comment">// hack for #4339: a reactivated component with inner transition</span>
  <span class="token comment">// does not trigger because the inner node&#39;s created hooks are not called</span>
  <span class="token comment">// again. It&#39;s not ideal to involve module-specific logic in here but</span>
  <span class="token comment">// there doesn&#39;t seem to be a better way to do it.</span>
  <span class="token keyword">let</span> innerNode <span class="token operator">=</span> vnode
  <span class="token keyword">while</span> <span class="token punctuation">(</span>innerNode<span class="token punctuation">.</span>componentInstance<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    innerNode <span class="token operator">=</span> innerNode<span class="token punctuation">.</span>componentInstance<span class="token punctuation">.</span>_vnode
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDef</span><span class="token punctuation">(</span>i <span class="token operator">=</span> innerNode<span class="token punctuation">.</span>data<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">isDef</span><span class="token punctuation">(</span>i <span class="token operator">=</span> i<span class="token punctuation">.</span>transition<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> cbs<span class="token punctuation">.</span>activate<span class="token punctuation">.</span>length<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        cbs<span class="token punctuation">.</span>activate<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">(</span>emptyNode<span class="token punctuation">,</span> innerNode<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
      insertedVnodeQueue<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>innerNode<span class="token punctuation">)</span>
      <span class="token keyword">break</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// unlike a newly created component,</span>
  <span class="token comment">// a reactivated keep-alive component doesn&#39;t insert itself</span>
  <span class="token function">insert</span><span class="token punctuation">(</span>parentElm<span class="token punctuation">,</span> vnode<span class="token punctuation">.</span>elm<span class="token punctuation">,</span> refElm<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><p>\u524D\u9762\u90E8\u5206\u7684\u903B\u8F91\u662F\u89E3\u51B3\u5BF9 <code>reactived</code> \u7EC4\u4EF6 <code>transition</code> \u52A8\u753B\u4E0D\u89E6\u53D1\u7684\u95EE\u9898\uFF0C\u53EF\u4EE5\u5148\u4E0D\u5173\u6CE8\uFF0C\u6700\u540E\u901A\u8FC7\u6267\u884C <code>insert(parentElm, vnode.elm, refElm)</code> \u5C31\u628A\u7F13\u5B58\u7684 DOM \u5BF9\u8C61\u76F4\u63A5\u63D2\u5165\u5230\u76EE\u6807\u5143\u7D20\u4E2D\uFF0C\u8FD9\u6837\u5C31\u5B8C\u6210\u4E86\u5728\u6570\u636E\u66F4\u65B0\u7684\u60C5\u51B5\u4E0B\u7684\u6E32\u67D3\u8FC7\u7A0B\u3002</p><h2 id="\u751F\u547D\u5468\u671F" tabindex="-1"><a class="header-anchor" href="#\u751F\u547D\u5468\u671F" aria-hidden="true">#</a> \u751F\u547D\u5468\u671F</h2><p>\u4E4B\u524D\u63D0\u5230\uFF0C\u7EC4\u4EF6\u4E00\u65E6\u88AB <code>&lt;keep-alive&gt;</code> \u7F13\u5B58\uFF0C\u90A3\u4E48\u518D\u6B21\u6E32\u67D3\u7684\u65F6\u5019\u5C31\u4E0D\u4F1A\u6267\u884C <code>created</code>\u3001<code>mounted</code> \u7B49\u94A9\u5B50\u51FD\u6570\uFF0C\u4F46\u662F\u5F88\u591A\u4E1A\u52A1\u573A\u666F\u90FD\u662F\u5E0C\u671B\u5728\u88AB\u7F13\u5B58\u7684\u7EC4\u4EF6\u518D\u6B21\u88AB\u6E32\u67D3\u7684\u65F6\u5019\u505A\u4E00\u4E9B\u4E8B\u60C5\uFF0C\u597D\u5728 Vue \u63D0\u4F9B\u4E86 <code>activated</code> \u94A9\u5B50\u51FD\u6570\uFF0C\u5B83\u7684\u6267\u884C\u65F6\u673A\u662F <code>&lt;keep-alive&gt;</code> \u5305\u88F9\u7684\u7EC4\u4EF6\u6E32\u67D3\u7684\u65F6\u5019\uFF0C\u63A5\u4E0B\u6765\u4ECE\u6E90\u7801\u89D2\u5EA6\u6765\u5206\u6790\u4E00\u4E0B\u5B83\u7684\u5B9E\u73B0\u539F\u7406\u3002</p><p>\u5728\u6E32\u67D3\u7684\u6700\u540E\u4E00\u6B65\uFF0C\u4F1A\u6267\u884C <code>invokeInsertHook(vnode, insertedVnodeQueue, isInitialPatch)</code> \u51FD\u6570\u6267\u884C <code>vnode</code> \u7684 <code>insert</code> \u94A9\u5B50\u51FD\u6570\uFF0C\u5B83\u7684\u5B9A\u4E49\u5728 <code>src/core/vdom/create-component.js</code> \u4E2D\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> componentVNodeHooks <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token function">insert</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">vnode</span><span class="token operator">:</span> MountedComponentVNode</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> context<span class="token punctuation">,</span> componentInstance <span class="token punctuation">}</span> <span class="token operator">=</span> vnode
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>componentInstance<span class="token punctuation">.</span>_isMounted<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      componentInstance<span class="token punctuation">.</span>_isMounted <span class="token operator">=</span> <span class="token boolean">true</span>
      <span class="token function">callHook</span><span class="token punctuation">(</span>componentInstance<span class="token punctuation">,</span> <span class="token string">&#39;mounted&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>vnode<span class="token punctuation">.</span>data<span class="token punctuation">.</span>keepAlive<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>context<span class="token punctuation">.</span>_isMounted<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// vue-router#1212</span>
        <span class="token comment">// During updates, a kept-alive component&#39;s child components may</span>
        <span class="token comment">// change, so directly walking the tree here may call activated hooks</span>
        <span class="token comment">// on incorrect children. Instead we push them into a queue which will</span>
        <span class="token comment">// be processed after the whole patch process ended.</span>
        <span class="token function">queueActivatedComponent</span><span class="token punctuation">(</span>componentInstance<span class="token punctuation">)</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token function">activateChildComponent</span><span class="token punctuation">(</span>componentInstance<span class="token punctuation">,</span> <span class="token boolean">true</span> <span class="token comment">/* direct */</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><p>\u8FD9\u91CC\u5224\u65AD\u5982\u679C\u662F\u88AB <code>&lt;keep-alive&gt;</code> \u5305\u88F9\u7684\u7EC4\u4EF6\u5DF2\u7ECF <code>mounted</code>\uFF0C\u90A3\u4E48\u5219\u6267\u884C <code>queueActivatedComponent(componentInstance)</code> \uFF0C\u5426\u5219\u6267\u884C <code>activateChildComponent(componentInstance, true)</code>\u3002\u5148\u5206\u6790\u975E <code>mounted</code> \u7684\u60C5\u51B5\uFF0C<code>activateChildComponent</code> \u7684\u5B9A\u4E49\u5728 <code>src/core/instance/lifecycle.js</code> \u4E2D\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">activateChildComponent</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">vm</span><span class="token operator">:</span> Component<span class="token punctuation">,</span> direct<span class="token operator">?</span><span class="token operator">:</span> boolean</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>direct<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    vm<span class="token punctuation">.</span>_directInactive <span class="token operator">=</span> <span class="token boolean">false</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isInInactiveTree</span><span class="token punctuation">(</span>vm<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>vm<span class="token punctuation">.</span>_directInactive<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>vm<span class="token punctuation">.</span>_inactive <span class="token operator">||</span> vm<span class="token punctuation">.</span>_inactive <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    vm<span class="token punctuation">.</span>_inactive <span class="token operator">=</span> <span class="token boolean">false</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> vm<span class="token punctuation">.</span>$children<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">activateChildComponent</span><span class="token punctuation">(</span>vm<span class="token punctuation">.</span>$children<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token function">callHook</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> <span class="token string">&#39;activated&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p>\u53EF\u4EE5\u770B\u5230\u8FD9\u91CC\u5C31\u662F\u6267\u884C\u7EC4\u4EF6\u7684 <code>acitvated</code> \u94A9\u5B50\u51FD\u6570\uFF0C\u5E76\u4E14\u9012\u5F52\u53BB\u6267\u884C\u5B83\u7684\u6240\u6709\u5B50\u7EC4\u4EF6\u7684 <code>activated</code> \u94A9\u5B50\u51FD\u6570\u3002</p><p>\u90A3\u4E48\u518D\u770B <code>queueActivatedComponent</code> \u7684\u903B\u8F91\uFF0C\u5B83\u5B9A\u4E49\u5728 <code>src/core/observer/scheduler.js</code> \u4E2D\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">queueActivatedComponent</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">vm</span><span class="token operator">:</span> Component</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  vm<span class="token punctuation">.</span>_inactive <span class="token operator">=</span> <span class="token boolean">false</span>
  activatedChildren<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>vm<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>\u8FD9\u4E2A\u903B\u8F91\u5F88\u7B80\u5355\uFF0C\u628A\u5F53\u524D <code>vm</code> \u5B9E\u4F8B\u6DFB\u52A0\u5230 <code>activatedChildren</code> \u6570\u7EC4\u4E2D\uFF0C\u7B49\u6240\u6709\u7684\u6E32\u67D3\u5B8C\u6BD5\uFF0C\u5728 <code>nextTick</code>\u540E\u4F1A\u6267\u884C <code>flushSchedulerQueue</code>\uFF0C\u8FD9\u4E2A\u65F6\u5019\u5C31\u4F1A\u6267\u884C\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">flushSchedulerQueue</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
  <span class="token keyword">const</span> activatedQueue <span class="token operator">=</span> activatedChildren<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token function">callActivatedHooks</span><span class="token punctuation">(</span>activatedQueue<span class="token punctuation">)</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span> 

<span class="token keyword">function</span> <span class="token function">callActivatedHooks</span> <span class="token punctuation">(</span><span class="token parameter">queue</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> queue<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    queue<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>_inactive <span class="token operator">=</span> <span class="token boolean">true</span>
    <span class="token function">activateChildComponent</span><span class="token punctuation">(</span>queue<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>\u4E5F\u5C31\u662F\u904D\u5386\u6240\u6709\u7684 <code>activatedChildren</code>\uFF0C\u6267\u884C <code>activateChildComponent</code> \u65B9\u6CD5\uFF0C\u901A\u8FC7\u961F\u5217\u8C03\u7684\u65B9\u5F0F\u5C31\u662F\u628A\u6574\u4E2A <code>activated</code> \u65F6\u673A\u5EF6\u540E\u4E86\u3002</p><p>\u6709 <code>activated</code> \u94A9\u5B50\u51FD\u6570\uFF0C\u4E5F\u5C31\u6709\u5BF9\u5E94\u7684 <code>deactivated</code> \u94A9\u5B50\u51FD\u6570\uFF0C\u5B83\u662F\u53D1\u751F\u5728 <code>vnode</code> \u7684 <code>destory</code> \u94A9\u5B50\u51FD\u6570\uFF0C\u5B9A\u4E49\u5728 <code>src/core/vdom/create-component.js</code> \u4E2D\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> componentVNodeHooks <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token function">destroy</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">vnode</span><span class="token operator">:</span> MountedComponentVNode</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> componentInstance <span class="token punctuation">}</span> <span class="token operator">=</span> vnode
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>componentInstance<span class="token punctuation">.</span>_isDestroyed<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>vnode<span class="token punctuation">.</span>data<span class="token punctuation">.</span>keepAlive<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        componentInstance<span class="token punctuation">.</span><span class="token function">$destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token function">deactivateChildComponent</span><span class="token punctuation">(</span>componentInstance<span class="token punctuation">,</span> <span class="token boolean">true</span> <span class="token comment">/* direct */</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>\u5BF9\u4E8E <code>&lt;keep-alive&gt;</code> \u5305\u88F9\u7684\u7EC4\u4EF6\u800C\u8A00\uFF0C\u5B83\u4F1A\u6267\u884C <code>deactivateChildComponent(componentInstance, true)</code> \u65B9\u6CD5\uFF0C\u5B9A\u4E49\u5728 <code>src/core/instance/lifecycle.js</code> \u4E2D\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">deactivateChildComponent</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">vm</span><span class="token operator">:</span> Component<span class="token punctuation">,</span> direct<span class="token operator">?</span><span class="token operator">:</span> boolean</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>direct<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    vm<span class="token punctuation">.</span>_directInactive <span class="token operator">=</span> <span class="token boolean">true</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isInInactiveTree</span><span class="token punctuation">(</span>vm<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>vm<span class="token punctuation">.</span>_inactive<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    vm<span class="token punctuation">.</span>_inactive <span class="token operator">=</span> <span class="token boolean">true</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> vm<span class="token punctuation">.</span>$children<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">deactivateChildComponent</span><span class="token punctuation">(</span>vm<span class="token punctuation">.</span>$children<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token function">callHook</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> <span class="token string">&#39;deactivated&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p>\u548C <code>activateChildComponent</code> \u65B9\u6CD5\u7C7B\u4F3C\uFF0C\u5C31\u662F\u6267\u884C\u7EC4\u4EF6\u7684 <code>deacitvated</code> \u94A9\u5B50\u51FD\u6570\uFF0C\u5E76\u4E14\u9012\u5F52\u53BB\u6267\u884C\u5B83\u7684\u6240\u6709\u5B50\u7EC4\u4EF6\u7684 <code>deactivated</code> \u94A9\u5B50\u51FD\u6570\u3002</p><h2 id="\u603B\u7ED3" tabindex="-1"><a class="header-anchor" href="#\u603B\u7ED3" aria-hidden="true">#</a> \u603B\u7ED3</h2><p>\u90A3\u4E48\u81F3\u6B64\uFF0C<code>&lt;keep-alive&gt;</code> \u7684\u5B9E\u73B0\u539F\u7406\u5C31\u4ECB\u7ECD\u5B8C\u4E86\uFF0C\u901A\u8FC7\u5206\u6790\u77E5\u9053\u4E86 <code>&lt;keep-alive&gt;</code> \u7EC4\u4EF6\u662F\u4E00\u4E2A\u62BD\u8C61\u7EC4\u4EF6\uFF0C\u5B83\u7684\u5B9E\u73B0\u901A\u8FC7\u81EA\u5B9A\u4E49 <code>render</code> \u51FD\u6570\u5E76\u4E14\u5229\u7528\u4E86\u63D2\u69FD\uFF0C\u5E76\u4E14\u77E5\u9053\u4E86 <code>&lt;keep-alive&gt;</code> \u7F13\u5B58 <code>vnode</code>\uFF0C\u4E86\u89E3\u7EC4\u4EF6\u5305\u88F9\u7684\u5B50\u5143\u7D20\u2014\u2014\u4E5F\u5C31\u662F\u63D2\u69FD\u662F\u5982\u4F55\u505A\u66F4\u65B0\u7684\u3002\u4E14\u5728 <code>patch</code> \u8FC7\u7A0B\u4E2D\u5BF9\u4E8E\u5DF2\u7F13\u5B58\u7684\u7EC4\u4EF6\u4E0D\u4F1A\u6267\u884C <code>mounted</code>\uFF0C\u6240\u4EE5\u4E0D\u4F1A\u6709\u4E00\u822C\u7684\u7EC4\u4EF6\u7684\u751F\u547D\u5468\u671F\u51FD\u6570\u4F46\u662F\u53C8\u63D0\u4F9B\u4E86 <code>activated</code> \u548C <code>deactivated</code> \u94A9\u5B50\u51FD\u6570\u3002\u53E6\u5916\u8FD8\u77E5\u9053\u4E86 <code>&lt;keep-alive&gt;</code> \u7684 <code>props</code> \u9664\u4E86 <code>include</code> \u548C <code>exclude</code> \u8FD8\u6709\u6587\u6863\u4E2D\u6CA1\u6709\u63D0\u5230\u7684 <code>max</code>\uFF0C\u5B83\u80FD\u63A7\u5236\u7F13\u5B58\u7684\u4E2A\u6570\u3002</p>`,67);function e(t,o){return p}var u=s(a,[["render",e]]);export{u as default};
