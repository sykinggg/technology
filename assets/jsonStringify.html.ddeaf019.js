import{r as e,o,c,b as s,d as t,F as l,a,e as n}from"./app.ba47fc91.js";import{_ as u}from"./plugin-vue_export-helper.21dcd24c.js";const r={},i=a(`<h1 id="json-stringify-\u60B2\u4F24\u7684\u6545\u4E8B" tabindex="-1"><a class="header-anchor" href="#json-stringify-\u60B2\u4F24\u7684\u6545\u4E8B" aria-hidden="true">#</a> JSON.stringify \u60B2\u4F24\u7684\u6545\u4E8B</h1><h2 id="\u60B2\u4F24\u7684\u5F00\u59CB" tabindex="-1"><a class="header-anchor" href="#\u60B2\u4F24\u7684\u5F00\u59CB" aria-hidden="true">#</a> \u60B2\u4F24\u7684\u5F00\u59CB</h2><h3 id="\u76F4\u63A5\u9519\u8BEF\u539F\u56E0" tabindex="-1"><a class="header-anchor" href="#\u76F4\u63A5\u9519\u8BEF\u539F\u56E0" aria-hidden="true">#</a> \u76F4\u63A5\u9519\u8BEF\u539F\u56E0</h3><div class="custom-container warning"><p class="custom-container-title">\u9519\u8BEF</p><p>\u975E\u5FC5\u586B\u60C5\u51B5\u4E0B\uFF0CsignInfo\u5B57\u6BB5\u4E2D\u7ECF\u8FC7<code>JSON.stringify</code>\u540E\u7684\u5B57\u7B26\u4E32\u5BF9\u8C61\u7F3A\u5C11<code>value</code> key\uFF0C\u5BFC\u81F4\u540E\u7AEFparse\u4E4B\u540E\u65E0\u6CD5\u6B63\u786E\u8BFB\u53D6value\u503C\uFF0C\u8FDB\u800C\u62A5\u63A5\u53E3\u7CFB\u7EDF\u5F02\u5E38\uFF0C\u7528\u6237\u65E0\u6CD5\u8FDB\u884C\u4E0B\u4E00\u6B65\u52A8\u4F5C\u3002</p></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u5F02\u5E38\u5165\u53C2\u6570\u636E\uFF0C\u6570\u7EC4\u5B57\u7B26\u4E32\u4E2D\u6CA1\u6709value key</span>
<span class="token punctuation">{</span>
  <span class="token literal-property property">signInfo</span><span class="token operator">:</span> <span class="token string">&#39;[{&quot;fieldId&quot;:539},{&quot;fieldId&quot;:540},{&quot;fieldId&quot;:546,&quot;value&quot;:&quot;10:30&quot;}]&#39;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u6B63\u5E38\u5165\u53C2\u6570\u636E</span>
<span class="token punctuation">{</span>
  <span class="token literal-property property">signInfo</span><span class="token operator">:</span> <span class="token string">&#39;[{&quot;fieldId&quot;:539,&quot;value&quot;:&quot;\u94F6\u5361&quot;},{&quot;fieldId&quot;:540,&quot;value&quot;:&quot;2021-03-01&quot;},{&quot;fieldId&quot;:546,&quot;value&quot;:&quot;10:30&quot;}]&#39;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p><strong>\u5F02\u5E38\u6570\u636E\u662F\u5982\u4F55\u4EA7\u751F\u7684</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u9ED8\u8BA4\u60C5\u51B5\u4E0B\u6570\u636E\u662F\u8FD9\u6837\u7684</span>
<span class="token keyword">let</span> signInfo <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">fieldId</span><span class="token operator">:</span> <span class="token number">539</span><span class="token punctuation">,</span>
    <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token keyword">undefined</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">fieldId</span><span class="token operator">:</span> <span class="token number">540</span><span class="token punctuation">,</span>
    <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token keyword">undefined</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">fieldId</span><span class="token operator">:</span> <span class="token number">546</span><span class="token punctuation">,</span>
    <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token keyword">undefined</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span>
<span class="token comment">// \u7ECF\u8FC7JSON.stringify\u4E4B\u540E\u7684\u6570\u636E,\u5C11\u4E86value key,\u5BFC\u81F4\u540E\u7AEF\u65E0\u6CD5\u8BFB\u53D6value\u503C\u8FDB\u884C\u62A5\u9519</span>
<span class="token comment">// \u5177\u4F53\u539F\u56E0\u662F\`undefined\`\u3001\`\u4EFB\u610F\u7684\u51FD\u6570\`\u4EE5\u53CA\`symbol\u503C\`\uFF0C\u51FA\u73B0\u5728\`\u975E\u6570\u7EC4\u5BF9\u8C61\`\u7684\u5C5E\u6027\u503C\u4E2D\u65F6\u5728\u5E8F\u5217\u5316\u8FC7\u7A0B\u4E2D\u4F1A\u88AB\u5FFD\u7565</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>signInfo<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">// &#39;[{&quot;fieldId&quot;:539},{&quot;fieldId&quot;:540},{&quot;fieldId&quot;:546}]&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><h3 id="\u89E3\u51B3\u65B9\u6848" tabindex="-1"><a class="header-anchor" href="#\u89E3\u51B3\u65B9\u6848" aria-hidden="true">#</a> \u89E3\u51B3\u65B9\u6848</h3><p><strong>\u65B9\u6848\u4E00\uFF1A\u65B0\u5F00\u4E00\u4E2A\u5BF9\u8C61\u5904\u7406</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> signInfo <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">fieldId</span><span class="token operator">:</span> <span class="token number">539</span><span class="token punctuation">,</span>
    <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token keyword">undefined</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">fieldId</span><span class="token operator">:</span> <span class="token number">540</span><span class="token punctuation">,</span>
    <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token keyword">undefined</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">fieldId</span><span class="token operator">:</span> <span class="token number">546</span><span class="token punctuation">,</span>
    <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token keyword">undefined</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span>

<span class="token keyword">let</span> newSignInfo <span class="token operator">=</span> signInfo<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">it</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> value <span class="token operator">=</span> <span class="token keyword">typeof</span> it<span class="token punctuation">.</span>value <span class="token operator">===</span> <span class="token string">&#39;undefined&#39;</span> <span class="token operator">?</span> <span class="token string">&#39;&#39;</span> <span class="token operator">:</span> it<span class="token punctuation">.</span>value
  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    <span class="token operator">...</span>it<span class="token punctuation">,</span>
    value
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>newSignInfo<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">// &#39;[{&quot;fieldId&quot;:539,&quot;value&quot;:&quot;&quot;},{&quot;fieldId&quot;:540,&quot;value&quot;:&quot;&quot;},{&quot;fieldId&quot;:546,&quot;value&quot;:&quot;&quot;}]&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><p><strong>\u65B9\u6848\u4E8C\uFF1A\u5229\u7528<code>JSON.stringify</code>\u7B2C\u4E8C\u4E2A\u53C2\u6570\uFF0C\u76F4\u63A5\u5904\u7406</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> signInfo <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">fieldId</span><span class="token operator">:</span> <span class="token number">539</span><span class="token punctuation">,</span>
    <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token keyword">undefined</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">fieldId</span><span class="token operator">:</span> <span class="token number">540</span><span class="token punctuation">,</span>
    <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token keyword">undefined</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">fieldId</span><span class="token operator">:</span> <span class="token number">546</span><span class="token punctuation">,</span>
    <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token keyword">undefined</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span>

<span class="token comment">// \u5224\u65AD\u5230value\u4E3Aundefined\uFF0C\u8FD4\u56DE\u7A7A\u5B57\u7B26\u4E32\u5373\u53EF</span>
<span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>signInfo<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">key<span class="token punctuation">,</span> value</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">typeof</span> value <span class="token operator">===</span> <span class="token string">&#39;undefined&#39;</span> <span class="token operator">?</span> <span class="token string">&#39;&#39;</span> <span class="token operator">:</span> value<span class="token punctuation">)</span>
<span class="token comment">// &#39;[{&quot;fieldId&quot;:539,&quot;value&quot;:&quot;&quot;},{&quot;fieldId&quot;:540,&quot;value&quot;:&quot;&quot;},{&quot;fieldId&quot;:546,&quot;value&quot;:&quot;&quot;}]&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><h2 id="\u5B66\u900Fjson-stringify" tabindex="-1"><a class="header-anchor" href="#\u5B66\u900Fjson-stringify" aria-hidden="true">#</a> \u5B66\u900FJSON.stringify</h2><div class="custom-container tip"><p class="custom-container-title">\u6CE8\u610F</p><p><code>JSON.stringify()</code> \u65B9\u6CD5\u5C06\u4E00\u4E2A <code>JavaScript \u5BF9\u8C61</code>\u6216<code>\u503C</code>\u8F6C\u6362\u4E3A JSON \u5B57\u7B26\u4E32\uFF0C\u5982\u679C\u6307\u5B9A\u4E86\u4E00\u4E2A replacer \u51FD\u6570\uFF0C\u5219\u53EF\u4EE5\u9009\u62E9\u6027\u5730\u66FF\u6362\u503C\uFF0C\u6216\u8005\u6307\u5B9A\u7684 replacer \u662F\u6570\u7EC4\uFF0C\u5219\u53EF\u9009\u62E9\u6027\u5730\u4EC5\u5305\u542B\u6570\u7EC4\u6307\u5B9A\u7684\u5C5E\u6027\u3002</p></div>`,14),k=n("\u4EE5\u4E0B\u4FE1\u606F\u6765\u81EA"),b={href:"https://link.juejin.cn/?target=https%3A%2F%2Fdeveloper.mozilla.org%2Fzh-CN%2Fdocs%2FWeb%2FJavaScript%2FReference%2FGlobal_Objects%2FJSON%2Fstringify%23syntax",target:"_blank",rel:"noopener noreferrer"},m=n("MDN"),d=a(`<h3 id="\u8BED\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u8BED\u6CD5" aria-hidden="true">#</a> \u8BED\u6CD5</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>value<span class="token punctuation">[</span><span class="token punctuation">,</span> replacer <span class="token punctuation">[</span><span class="token punctuation">,</span> space<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="\u53C2\u6570" tabindex="-1"><a class="header-anchor" href="#\u53C2\u6570" aria-hidden="true">#</a> \u53C2\u6570</h4><ul><li><p><code>value</code></p><p>\u5C06\u8981\u5E8F\u5217\u5316\u6210 \u4E00\u4E2A JSON \u5B57\u7B26\u4E32\u7684\u503C\u3002</p></li><li><p><code>replacer</code> \u53EF\u9009</p><ol><li><p>\u5982\u679C\u8BE5\u53C2\u6570\u662F\u4E00\u4E2A\u51FD\u6570\uFF0C\u5219\u5728\u5E8F\u5217\u5316\u8FC7\u7A0B\u4E2D\uFF0C\u88AB\u5E8F\u5217\u5316\u7684\u503C\u7684\u6BCF\u4E2A\u5C5E\u6027\u90FD\u4F1A\u7ECF\u8FC7\u8BE5\u51FD\u6570\u7684\u8F6C\u6362\u548C\u5904\u7406\uFF1B</p></li><li><p>\u5982\u679C\u8BE5\u53C2\u6570\u662F\u4E00\u4E2A\u6570\u7EC4\uFF0C\u5219\u53EA\u6709\u5305\u542B\u5728\u8FD9\u4E2A\u6570\u7EC4\u4E2D\u7684\u5C5E\u6027\u540D\u624D\u4F1A\u88AB\u5E8F\u5217\u5316\u5230\u6700\u7EC8\u7684 JSON \u5B57\u7B26\u4E32\u4E2D\uFF1B</p></li><li><p>\u5982\u679C\u8BE5\u53C2\u6570\u4E3A null \u6216\u8005\u672A\u63D0\u4F9B\uFF0C\u5219\u5BF9\u8C61\u6240\u6709\u7684\u5C5E\u6027\u90FD\u4F1A\u88AB\u5E8F\u5217\u5316\u3002</p></li></ol></li><li><p><code>space</code> \u53EF\u9009</p><ol><li><p>\u6307\u5B9A\u7F29\u8FDB\u7528\u7684\u7A7A\u767D\u5B57\u7B26\u4E32\uFF0C\u7528\u4E8E\u7F8E\u5316\u8F93\u51FA\uFF08pretty-print\uFF09\uFF1B</p></li><li><p>\u5982\u679C\u53C2\u6570\u662F\u4E2A\u6570\u5B57\uFF0C\u5B83\u4EE3\u8868\u6709\u591A\u5C11\u7684\u7A7A\u683C\uFF1B\u4E0A\u9650\u4E3A10\u3002</p></li><li><p>\u8BE5\u503C\u82E5\u5C0F\u4E8E1\uFF0C\u5219\u610F\u5473\u7740\u6CA1\u6709\u7A7A\u683C\uFF1B</p></li><li><p>\u5982\u679C\u8BE5\u53C2\u6570\u4E3A\u5B57\u7B26\u4E32\uFF08\u5F53\u5B57\u7B26\u4E32\u957F\u5EA6\u8D85\u8FC710\u4E2A\u5B57\u6BCD\uFF0C\u53D6\u5176\u524D10\u4E2A\u5B57\u6BCD\uFF09\uFF0C\u8BE5\u5B57\u7B26\u4E32\u5C06\u88AB\u4F5C\u4E3A\u7A7A\u683C\uFF1B</p></li><li><p>\u5982\u679C\u8BE5\u53C2\u6570\u6CA1\u6709\u63D0\u4F9B\uFF08\u6216\u8005\u4E3A null\uFF09\uFF0C\u5C06\u6CA1\u6709\u7A7A\u683C\u3002</p></li></ol></li></ul><h4 id="\u8FD4\u56DE\u503C" tabindex="-1"><a class="header-anchor" href="#\u8FD4\u56DE\u503C" aria-hidden="true">#</a> \u8FD4\u56DE\u503C</h4><p>\u4E00\u4E2A\u8868\u793A\u7ED9\u5B9A\u503C\u7684JSON\u5B57\u7B26\u4E32\u3002</p><h4 id="\u5F02\u5E38" tabindex="-1"><a class="header-anchor" href="#\u5F02\u5E38" aria-hidden="true">#</a> \u5F02\u5E38</h4><ul><li><p>\u5F53\u5728\u5FAA\u73AF\u5F15\u7528\u65F6\u4F1A\u629B\u51FA\u5F02\u5E38<code>TypeError</code>\xA0(&quot;cyclic object value&quot;)\uFF08\u5FAA\u73AF\u5BF9\u8C61\u503C\uFF09</p></li><li><p>\u5F53\u5C1D\u8BD5\u53BB\u8F6C\u6362\xA0<code>BigInt</code>\xA0\u7C7B\u578B\u7684\u503C\u4F1A\u629B\u51FA<code>TypeError</code>\xA0(&quot;BigInt value can&#39;t be serialized in JSON&quot;)\uFF08BigInt\u503C\u4E0D\u80FDJSON\u5E8F\u5217\u5316\uFF09.</p></li></ul><h3 id="\u57FA\u672C\u4F7F\u7528" tabindex="-1"><a class="header-anchor" href="#\u57FA\u672C\u4F7F\u7528" aria-hidden="true">#</a> \u57FA\u672C\u4F7F\u7528</h3><h4 id="\u6CE8\u610F" tabindex="-1"><a class="header-anchor" href="#\u6CE8\u610F" aria-hidden="true">#</a> \u6CE8\u610F</h4><ol><li><p>JSON.stringify\u53EF\u4EE5\u8F6C\u6362\u5BF9\u8C61\u6216\u8005\u503C\uFF08\u5E73\u5E38\u7528\u7684\u66F4\u591A\u7684\u662F\u8F6C\u6362\u5BF9\u8C61\uFF09</p></li><li><p>\u53EF\u4EE5\u6307\u5B9A<code>replacer</code>\u4E3A\u51FD\u6570\u9009\u62E9\u6027\u7684\u5730\u66FF\u6362</p></li><li><p>\u4E5F\u53EF\u4EE5\u6307\u5B9A<code>replacer</code>\u4E3A\u6570\u7EC4\uFF0C\u53EF\u8F6C\u6362\u6307\u5B9A\u7684\u5C5E\u6027</p></li></ol>`,11),y=n("\u8FD9\u91CC\u4EC5\u4EC5\u662F"),f={href:"https://link.juejin.cn/?target=https%3A%2F%2Fdeveloper.mozilla.org%2Fzh-CN%2Fdocs%2FWeb%2FJavaScript%2FReference%2FGlobal_Objects%2FJSON%2Fstringify",target:"_blank",rel:"noopener noreferrer"},g=n("NDN"),q=n("\u4E0A\u5173\u4E8E"),j=s("code",null,"JSON.stringify",-1),h=n("\u5176\u4E2D\u6700\u57FA\u7840\u7684\u8BF4\u660E\uFF0C\u54B1\u4EEC\u5148\u6253\u4E2A\u7801\u8BD5\u8BD5\u8FD9\u51E0\u4E2A\u7279\u6027"),v=a(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// 1. \u8F6C\u6362\u5BF9\u8C61</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;jsonStringify&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">sex</span><span class="token operator">:</span> <span class="token string">&#39;boy&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// &#39;{&quot;name&quot;:&quot;jsonStringify&quot;,&quot;sex&quot;:&quot;boy&quot;}&#39;</span>

<span class="token comment">// 2. \u8F6C\u6362\u666E\u901A\u503C</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token string">&#39;jsonStringify&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// &quot;jsonStringify&quot;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// &quot;1&quot;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// &quot;true&quot;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// &quot;null&quot;</span>

<span class="token comment">// 3. \u6307\u5B9Areplacer\u51FD\u6570</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;jsonStringify&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">sex</span><span class="token operator">:</span> <span class="token string">&#39;boy&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">100</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">key<span class="token punctuation">,</span> value</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">typeof</span> value <span class="token operator">===</span> <span class="token string">&#39;number&#39;</span> <span class="token operator">?</span> <span class="token keyword">undefined</span> <span class="token operator">:</span> value
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">// &#39;{&quot;name&quot;:&quot;jsonStringify&quot;,&quot;sex&quot;:&quot;boy&quot;}&#39;</span>

<span class="token comment">// 4. \u6307\u5B9A\u6570\u7EC4</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;jsonStringify&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">sex</span><span class="token operator">:</span> <span class="token string">&#39;boy&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">100</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span> <span class="token string">&#39;name&#39;</span> <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">// &#39;{&quot;name&quot;:&quot;jsonStringify&quot;}&#39;</span>

<span class="token comment">// 5. \u6307\u5B9Aspace(\u7F8E\u5316\u8F93\u51FA)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;jsonStringify&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">sex</span><span class="token operator">:</span> <span class="token string">&#39;boy&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">100</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">// &#39;{&quot;name&quot;:&quot;jsonStringify&quot;,&quot;sex&quot;:&quot;boy&quot;,&quot;age&quot;:100}&#39;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;jsonStringify&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">sex</span><span class="token operator">:</span> <span class="token string">&#39;boy&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">100</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">null</span> <span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">/*
{
  &quot;name&quot;: &quot;jsonStringify&quot;,
  &quot;sex&quot;: &quot;boy&quot;,
  &quot;age&quot;: 100
}
*/</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br></div></div><h3 id="_9\u5927\u7279\u6027\u8981\u8BB0\u4F4F" tabindex="-1"><a class="header-anchor" href="#_9\u5927\u7279\u6027\u8981\u8BB0\u4F4F" aria-hidden="true">#</a> 9\u5927\u7279\u6027\u8981\u8BB0\u4F4F</h3><h4 id="\u7279\u6027\u4E00" tabindex="-1"><a class="header-anchor" href="#\u7279\u6027\u4E00" aria-hidden="true">#</a> \u7279\u6027\u4E00</h4><ol><li><p><code>undefined</code>\u3001<code>\u4EFB\u610F\u7684\u51FD\u6570</code>\u4EE5\u53CA<code>symbol\u503C</code>\uFF0C\u51FA\u73B0\u5728<code>\u975E\u6570\u7EC4\u5BF9\u8C61</code>\u7684\u5C5E\u6027\u503C\u4E2D\u65F6\u5728\u5E8F\u5217\u5316\u8FC7\u7A0B\u4E2D\u4F1A\u88AB\u5FFD\u7565</p></li><li><p><code>undefined</code>\u3001<code>\u4EFB\u610F\u7684\u51FD\u6570</code>\u4EE5\u53CA<code>symbol\u503C</code>\u51FA\u73B0\u5728<code>\u6570\u7EC4</code>\u4E2D\u65F6\u4F1A\u88AB\u8F6C\u6362\u6210\xA0<code>null</code>\u3002</p></li><li><p><code>undefined</code>\u3001<code>\u4EFB\u610F\u7684\u51FD\u6570</code>\u4EE5\u53CA<code>symbol\u503C</code>\u88AB<code>\u5355\u72EC\u8F6C\u6362</code>\u65F6\uFF0C\u4F1A\u8FD4\u56DE undefined</p></li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// 1. \u5BF9\u8C61\u4E2D\u5B58\u5728\u8FD9\u4E09\u79CD\u503C\u4F1A\u88AB\u5FFD\u7565</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;jsonStringify&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">sex</span><span class="token operator">:</span> <span class="token string">&#39;boy&#39;</span><span class="token punctuation">,</span>
  <span class="token comment">// \u51FD\u6570\u4F1A\u88AB\u5FFD\u7565</span>
  <span class="token function">showName</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;jsonStringify&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// undefined\u4F1A\u88AB\u5FFD\u7565</span>
  <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span>
  <span class="token comment">// Symbol\u4F1A\u88AB\u5FFD\u7565</span>
  <span class="token literal-property property">symbolName</span><span class="token operator">:</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&#39;jsonStringify&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">// &#39;{&quot;name&quot;:&quot;jsonStringify&quot;,&quot;sex&quot;:&quot;boy&quot;}&#39;</span>

<span class="token comment">// 2. \u6570\u7EC4\u4E2D\u5B58\u5728\u7740\u4E09\u79CD\u503C\u4F1A\u88AB\u8F6C\u5316\u4E3Anull</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
  <span class="token string">&#39;jsonStringify&#39;</span><span class="token punctuation">,</span>
  <span class="token string">&#39;boy&#39;</span><span class="token punctuation">,</span>
  <span class="token comment">// \u51FD\u6570\u4F1A\u88AB\u8F6C\u5316\u4E3Anull</span>
  <span class="token keyword">function</span> <span class="token function">showName</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;jsonStringify&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">//undefined\u4F1A\u88AB\u8F6C\u5316\u4E3Anull</span>
  <span class="token keyword">undefined</span><span class="token punctuation">,</span>
  <span class="token comment">//Symbol\u4F1A\u88AB\u8F6C\u5316\u4E3Anull</span>
  <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&#39;jsonStringify&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">// &#39;[&quot;jsonStringify&quot;,&quot;boy&quot;,null,null,null]&#39;</span>

<span class="token comment">// 3.\u5355\u72EC\u8F6C\u6362\u4F1A\u8FD4\u56DEundefined</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>
  <span class="token keyword">function</span> <span class="token function">showName</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;jsonStringify&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// undefined</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token keyword">undefined</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// undefined</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&#39;jsonStringify&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// undefined</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br></div></div><h4 id="\u7279\u6027\u4E8C" tabindex="-1"><a class="header-anchor" href="#\u7279\u6027\u4E8C" aria-hidden="true">#</a> \u7279\u6027\u4E8C</h4><div class="custom-container tip"><p class="custom-container-title">\u6CE8\u610F</p><p><code>\u5E03\u5C14\u503C</code>\u3001<code>\u6570\u5B57</code>\u3001<code>\u5B57\u7B26\u4E32</code>\u7684\u5305\u88C5\u5BF9\u8C61\u5728\u5E8F\u5217\u5316\u8FC7\u7A0B\u4E2D\u4F1A\u81EA\u52A8\u8F6C\u6362\u6210\u5BF9\u5E94\u7684\u539F\u59CB\u503C\u3002</p></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token keyword">new</span> <span class="token class-name">Number</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span><span class="token string">&quot;jsonStringify&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Boolean</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">// &#39;[1,&quot;jsonStringify&quot;,false]&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h4 id="\u7279\u6027\u4E09" tabindex="-1"><a class="header-anchor" href="#\u7279\u6027\u4E09" aria-hidden="true">#</a> \u7279\u6027\u4E09</h4><div class="custom-container tip"><p class="custom-container-title">\u6CE8\u610F</p><p>\u6240\u6709\u4EE5<code>symbol</code>\u4E3A\u5C5E\u6027\u952E\u7684\u5C5E\u6027\u90FD\u4F1A\u88AB\u5B8C\u5168\u5FFD\u7565\u6389\uFF0C\u5373\u4FBF <code>replacer</code> \u53C2\u6570\u4E2D\u5F3A\u5236\u6307\u5B9A\u5305\u542B\u4E86\u5B83\u4EEC\u3002</p></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token punctuation">[</span><span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&#39;jsonStringify&#39;</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token string">&#39;jsonStringify&#39;</span><span class="token punctuation">}</span>
<span class="token punctuation">)</span><span class="token punctuation">)</span> 
<span class="token comment">// &#39;{}&#39;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token punctuation">[</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&#39;jsonStringify&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">]</span><span class="token operator">:</span> <span class="token string">&#39;jsonStringify&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">key<span class="token punctuation">,</span> value</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> key <span class="token operator">===</span> <span class="token string">&#39;symbol&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> value
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">// undefined</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h4 id="\u7279\u6027\u56DB" tabindex="-1"><a class="header-anchor" href="#\u7279\u6027\u56DB" aria-hidden="true">#</a> \u7279\u6027\u56DB</h4><div class="custom-container tip"><p class="custom-container-title">\u6CE8\u610F</p><p><code>NaN</code> \u548C <code>Infinity</code> \u683C\u5F0F\u7684\u6570\u503C\u53CA <code>null</code> \u90FD\u4F1A\u88AB\u5F53\u505A <code>null</code>\u3002</p></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">NaN</span><span class="token punctuation">,</span>
  <span class="token literal-property property">age2</span><span class="token operator">:</span> <span class="token number">Infinity</span><span class="token punctuation">,</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token keyword">null</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">// &#39;{&quot;age&quot;:null,&quot;age2&quot;:null,&quot;name&quot;:null}&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h4 id="\u7279\u6027\u4E94" tabindex="-1"><a class="header-anchor" href="#\u7279\u6027\u4E94" aria-hidden="true">#</a> \u7279\u6027\u4E94</h4><div class="custom-container tip"><p class="custom-container-title">\u6CE8\u610F</p><p>\u8F6C\u6362\u503C\u5982\u679C\u6709 <code>toJSON()</code> \u65B9\u6CD5\uFF0C\u8BE5\u65B9\u6CD5\u5B9A\u4E49\u4EC0\u4E48\u503C\u5C06\u88AB\u5E8F\u5217\u5316\u3002</p></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> toJSONObj <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;jsonStringify&#39;</span><span class="token punctuation">,</span>
  <span class="token function">toJSON</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token string">&#39;JSON.stringify&#39;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>toJSONObj<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">// &quot;JSON.stringify&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h4 id="\u7279\u6027\u516D" tabindex="-1"><a class="header-anchor" href="#\u7279\u6027\u516D" aria-hidden="true">#</a> \u7279\u6027\u516D</h4><div class="custom-container tip"><p class="custom-container-title">\u6CE8\u610F</p><p><code>Date</code> \u65E5\u671F\u8C03\u7528\u4E86 <code>toJSON()</code> \u5C06\u5176\u8F6C\u6362\u4E3A\u4E86 <code>string</code> \u5B57\u7B26\u4E32\uFF08\u540C<code>Date.toISOString()</code>\uFF09\uFF0C\u56E0\u6B64\u4F1A\u88AB\u5F53\u505A\u5B57\u7B26\u4E32\u5904\u7406\u3002</p></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> d <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>d<span class="token punctuation">.</span><span class="token function">toJSON</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// 2021-10-05T14:01:23.932Z</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// &quot;2021-10-05T14:01:23.932Z&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h4 id="\u7279\u6027\u4E03" tabindex="-1"><a class="header-anchor" href="#\u7279\u6027\u4E03" aria-hidden="true">#</a> \u7279\u6027\u4E03</h4><div class="custom-container tip"><p class="custom-container-title">\u6CE8\u610F</p><p>\u5BF9\u5305\u542B\u5FAA\u73AF\u5F15\u7528\u7684\u5BF9\u8C61\uFF08\u5BF9\u8C61\u4E4B\u95F4\u76F8\u4E92\u5F15\u7528\uFF0C\u5F62\u6210\u65E0\u9650\u5FAA\u73AF\uFF09\u6267\u884C\u6B64\u65B9\u6CD5\uFF0C\u4F1A\u629B\u51FA\u9519\u8BEF\u3002</p></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> cyclicObj <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;jsonStringify&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

cyclicObj<span class="token punctuation">.</span>obj <span class="token operator">=</span> cyclicObj

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>cyclicObj<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">// Converting circular structure to JSON</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h4 id="\u7279\u6027\u516B" tabindex="-1"><a class="header-anchor" href="#\u7279\u6027\u516B" aria-hidden="true">#</a> \u7279\u6027\u516B</h4><div class="custom-container tip"><p class="custom-container-title">\u6CE8\u610F</p><p>\u5176\u4ED6\u7C7B\u578B\u7684\u5BF9\u8C61\uFF0C\u5305\u62EC <code>Map</code>/<code>Set</code>/<code>WeakMap</code>/<code>WeakSet</code>\uFF0C\u4EC5\u4F1A\u5E8F\u5217\u5316\u53EF\u679A\u4E3E\u7684\u5C5E\u6027</p></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> enumerableObj <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

Object<span class="token punctuation">.</span><span class="token function">defineProperties</span><span class="token punctuation">(</span>enumerableObj<span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&#39;jsonStringify&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">enumerable</span><span class="token operator">:</span> <span class="token boolean">true</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">sex</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&#39;boy&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">enumerable</span><span class="token operator">:</span> <span class="token boolean">false</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>enumerableObj<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">// &#39;{&quot;name&quot;:&quot;jsonStringify&quot;}&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h4 id="\u7279\u6027\u4E5D" tabindex="-1"><a class="header-anchor" href="#\u7279\u6027\u4E5D" aria-hidden="true">#</a> \u7279\u6027\u4E5D</h4><div class="custom-container tip"><p class="custom-container-title">\u6CE8\u610F</p><p>\u5F53\u5C1D\u8BD5\u53BB\u8F6C\u6362 <code>BigInt</code> \u7C7B\u578B\u7684\u503C\u4F1A\u629B\u51FA\u9519\u8BEF</p></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> alsoHuge <span class="token operator">=</span> <span class="token function">BigInt</span><span class="token punctuation">(</span><span class="token number">9007199254740991</span><span class="token punctuation">)</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>alsoHuge<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">// TypeError: Do not know how to serialize a BigInt</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="\u624B\u5199\u4E00\u4E2Ajson-stringify" tabindex="-1"><a class="header-anchor" href="#\u624B\u5199\u4E00\u4E2Ajson-stringify" aria-hidden="true">#</a> \u624B\u5199\u4E00\u4E2AJSON.stringify</h2><div class="custom-container tip"><p class="custom-container-title">\u6CE8\u610F</p><p>\u7EC8\u4E8E\u91CD\u65B0\u5B66\u5B8C<code>JSON.stringify</code>\u7684\u4F17\u591A\u7279\u6027\u5566\uFF01\u54B1\u4EEC\u6839\u636E\u8FD9\u4E9B\u7279\u6027\u6765\u624B\u5199\u4E00\u4E2A\u7B80\u5355\u7248\u672C\u7684\u5427\uFF08\u65E0replacer\u51FD\u6570\u548Cspace\uFF09</p></div><h3 id="\u6E90\u7801\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#\u6E90\u7801\u5B9E\u73B0" aria-hidden="true">#</a> \u6E90\u7801\u5B9E\u73B0</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">jsonstringify</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u786E\u8BA4\u4E00\u4E2A\u5BF9\u8C61\u662F\u5426\u5B58\u5728\u5FAA\u73AF\u5F15\u7528</span>
  <span class="token keyword">const</span> <span class="token function-variable function">isCyclic</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u4F7F\u7528Set\u6570\u636E\u7C7B\u578B\u6765\u5B58\u50A8\u5DF2\u7ECF\u68C0\u6D4B\u8FC7\u7684\u5BF9\u8C61</span>
  <span class="token keyword">let</span> stackSet <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">let</span> detected <span class="token operator">=</span> <span class="token boolean">false</span>

  <span class="token keyword">const</span> <span class="token function-variable function">detect</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u4E0D\u662F\u5BF9\u8C61\u7C7B\u578B\u7684\u8BDD\uFF0C\u53EF\u4EE5\u76F4\u63A5\u8DF3\u8FC7</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>obj <span class="token operator">&amp;&amp;</span> <span class="token keyword">typeof</span> obj <span class="token operator">!=</span> <span class="token string">&#39;object&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u5F53\u8981\u68C0\u67E5\u7684\u5BF9\u8C61\u5DF2\u7ECF\u5B58\u5728\u4E8EstackSet\u4E2D\u65F6\uFF0C\u8868\u793A\u5B58\u5728\u5FAA\u73AF\u5F15\u7528</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>stackSet<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> detected <span class="token operator">=</span> <span class="token boolean">true</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u5C06\u5F53\u524Dobj\u5B58\u5982stackSet</span>
    stackSet<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span>

    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> key <span class="token keyword">in</span> obj<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u5BF9obj\u4E0B\u7684\u5C5E\u6027\u8FDB\u884C\u6328\u4E2A\u68C0\u6D4B</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>obj<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">detect</span><span class="token punctuation">(</span>obj<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u5E73\u7EA7\u68C0\u6D4B\u5B8C\u6210\u4E4B\u540E\uFF0C\u5C06\u5F53\u524D\u5BF9\u8C61\u5220\u9664\uFF0C\u9632\u6B62\u8BEF\u5224</span>
    <span class="token comment">/*
      \u4F8B\u5982\uFF1A\u5BF9\u8C61\u7684\u5C5E\u6027\u6307\u5411\u540C\u4E00\u5F15\u7528\uFF0C\u5982\u679C\u4E0D\u5220\u9664\u7684\u8BDD\uFF0C\u4F1A\u88AB\u8BA4\u4E3A\u662F\u5FAA\u73AF\u5F15\u7528
      let tempObj = {
        name: &#39;jsonStringify&#39;
      }
      let obj4 = {
        obj1: tempObj,
        obj2: tempObj
      }
    */</span>
    stackSet<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token function">detect</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span>

  <span class="token keyword">return</span> detected
<span class="token punctuation">}</span>

  <span class="token comment">// \u7279\u6027\u4E03:</span>
  <span class="token comment">// \u5BF9\u5305\u542B\u5FAA\u73AF\u5F15\u7528\u7684\u5BF9\u8C61\uFF08\u5BF9\u8C61\u4E4B\u95F4\u76F8\u4E92\u5F15\u7528\uFF0C\u5F62\u6210\u65E0\u9650\u5FAA\u73AF\uFF09\u6267\u884C\u6B64\u65B9\u6CD5\uFF0C\u4F1A\u629B\u51FA\u9519\u8BEF\u3002</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isCyclic</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">TypeError</span><span class="token punctuation">(</span><span class="token string">&#39;Converting circular structure to JSON&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \u7279\u6027\u4E5D:</span>
  <span class="token comment">// \u5F53\u5C1D\u8BD5\u53BB\u8F6C\u6362 BigInt \u7C7B\u578B\u7684\u503C\u4F1A\u629B\u51FA\u9519\u8BEF</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> data <span class="token operator">===</span> <span class="token string">&#39;bigint&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">TypeError</span><span class="token punctuation">(</span><span class="token string">&#39;Do not know how to serialize a BigInt&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">const</span> type <span class="token operator">=</span> <span class="token keyword">typeof</span> data
  <span class="token keyword">const</span> commonKeys1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;undefined&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;symbol&#39;</span><span class="token punctuation">]</span>
  <span class="token keyword">const</span> <span class="token function-variable function">getType</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">s</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\[object (.*?)\\]</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token string">&#39;$1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \u975E\u5BF9\u8C61</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>type <span class="token operator">!==</span> <span class="token string">&#39;object&#39;</span> <span class="token operator">||</span> data <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> result <span class="token operator">=</span> data
    <span class="token comment">// \u7279\u6027\u56DB\uFF1A</span>
    <span class="token comment">// NaN \u548C Infinity \u683C\u5F0F\u7684\u6570\u503C\u53CA null \u90FD\u4F1A\u88AB\u5F53\u505A null\u3002</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">NaN</span><span class="token punctuation">,</span> <span class="token number">Infinity</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      result <span class="token operator">=</span> <span class="token string">&#39;null&#39;</span>
      <span class="token comment">// \u7279\u6027\u4E00\uFF1A</span>
      <span class="token comment">// \`undefined\`\u3001\`\u4EFB\u610F\u7684\u51FD\u6570\`\u4EE5\u53CA\`symbol\u503C\`\u88AB\`\u5355\u72EC\u8F6C\u6362\`\u65F6\uFF0C\u4F1A\u8FD4\u56DE undefined</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>commonKeys1<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>type<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u76F4\u63A5\u5F97\u5230undefined\uFF0C\u5E76\u4E0D\u662F\u4E00\u4E2A\u5B57\u7B26\u4E32&#39;undefined&#39;</span>
      <span class="token keyword">return</span> <span class="token keyword">undefined</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>type <span class="token operator">===</span> <span class="token string">&#39;string&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      result <span class="token operator">=</span> <span class="token string">&#39;&quot;&#39;</span> <span class="token operator">+</span> data <span class="token operator">+</span> <span class="token string">&#39;&quot;&#39;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> <span class="token function">String</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>type <span class="token operator">===</span> <span class="token string">&#39;object&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u7279\u6027\u4E94:</span>
    <span class="token comment">// \u8F6C\u6362\u503C\u5982\u679C\u6709 toJSON() \u65B9\u6CD5\uFF0C\u8BE5\u65B9\u6CD5\u5B9A\u4E49\u4EC0\u4E48\u503C\u5C06\u88AB\u5E8F\u5217\u5316</span>
    <span class="token comment">// \u7279\u6027\u516D:</span>
    <span class="token comment">// Date \u65E5\u671F\u8C03\u7528\u4E86 toJSON() \u5C06\u5176\u8F6C\u6362\u4E3A\u4E86 string \u5B57\u7B26\u4E32\uFF08\u540CDate.toISOString()\uFF09\uFF0C\u56E0\u6B64\u4F1A\u88AB\u5F53\u505A\u5B57\u7B26\u4E32\u5904\u7406\u3002</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> data<span class="token punctuation">.</span>toJSON <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token function">jsonstringify</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span><span class="token function">toJSON</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">let</span> result <span class="token operator">=</span> data<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">it</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u7279\u6027\u4E00:</span>
        <span class="token comment">// \`undefined\`\u3001\`\u4EFB\u610F\u7684\u51FD\u6570\`\u4EE5\u53CA\`symbol\u503C\`\u51FA\u73B0\u5728\`\u6570\u7EC4\`\u4E2D\u65F6\u4F1A\u88AB\u8F6C\u6362\u6210 \`null\`</span>
        <span class="token keyword">return</span> commonKeys1<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> it<span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token string">&#39;null&#39;</span> <span class="token operator">:</span> <span class="token function">jsonstringify</span><span class="token punctuation">(</span>it<span class="token punctuation">)</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>

      <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">[</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>result<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">]</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">&#39;</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&#39;&quot;&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u7279\u6027\u4E8C\uFF1A</span>
      <span class="token comment">// \u5E03\u5C14\u503C\u3001\u6570\u5B57\u3001\u5B57\u7B26\u4E32\u7684\u5305\u88C5\u5BF9\u8C61\u5728\u5E8F\u5217\u5316\u8FC7\u7A0B\u4E2D\u4F1A\u81EA\u52A8\u8F6C\u6362\u6210\u5BF9\u5E94\u7684\u539F\u59CB\u503C\u3002</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;boolean&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;number&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token function">getType</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">String</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">getType</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">&#39;string&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string">&#39;&quot;&#39;</span> <span class="token operator">+</span> data <span class="token operator">+</span> <span class="token string">&#39;&quot;&#39;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
        <span class="token comment">// \u7279\u6027\u516B</span>
        <span class="token comment">// \u5176\u4ED6\u7C7B\u578B\u7684\u5BF9\u8C61\uFF0C\u5305\u62EC Map/Set/WeakMap/WeakSet\uFF0C\u4EC5\u4F1A\u5E8F\u5217\u5316\u53EF\u679A\u4E3E\u7684\u5C5E\u6027</span>
        Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">key</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token comment">// \u7279\u6027\u4E09:</span>
          <span class="token comment">// \u6240\u6709\u4EE5symbol\u4E3A\u5C5E\u6027\u952E\u7684\u5C5E\u6027\u90FD\u4F1A\u88AB\u5B8C\u5168\u5FFD\u7565\u6389\uFF0C\u5373\u4FBF replacer \u53C2\u6570\u4E2D\u5F3A\u5236\u6307\u5B9A\u5305\u542B\u4E86\u5B83\u4EEC\u3002</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> key <span class="token operator">!==</span> <span class="token string">&#39;symbol&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">const</span> value <span class="token operator">=</span> data<span class="token punctuation">[</span>key<span class="token punctuation">]</span>
            <span class="token comment">// \u7279\u6027\u4E00</span>
            <span class="token comment">// \`undefined\`\u3001\`\u4EFB\u610F\u7684\u51FD\u6570\`\u4EE5\u53CA\`symbol\u503C\`\uFF0C\u51FA\u73B0\u5728\`\u975E\u6570\u7EC4\u5BF9\u8C61\`\u7684\u5C5E\u6027\u503C\u4E2D\u65F6\u5728\u5E8F\u5217\u5316\u8FC7\u7A0B\u4E2D\u4F1A\u88AB\u5FFD\u7565</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>commonKeys1<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> value<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
              result<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>key<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token function">jsonstringify</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
            <span class="token punctuation">}</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>

        <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">{</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>result<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">}</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">&#39;</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token string">&#39;&quot;&#39;</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br><span class="line-number">114</span><br><span class="line-number">115</span><br><span class="line-number">116</span><br><span class="line-number">117</span><br><span class="line-number">118</span><br><span class="line-number">119</span><br><span class="line-number">120</span><br><span class="line-number">121</span><br><span class="line-number">122</span><br><span class="line-number">123</span><br></div></div><h3 id="\u6D4B\u8BD5\u4E00\u628A" tabindex="-1"><a class="header-anchor" href="#\u6D4B\u8BD5\u4E00\u628A" aria-hidden="true">#</a> \u6D4B\u8BD5\u4E00\u628A</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// 1. \u6D4B\u8BD5\u4E00\u4E0B\u57FA\u672C\u8F93\u51FA</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">jsonstringify</span><span class="token punctuation">(</span><span class="token keyword">undefined</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// undefined </span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">jsonstringify</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// undefined</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">jsonstringify</span><span class="token punctuation">(</span><span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&#39;jsonStringify&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// undefined</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">jsonstringify</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">NaN</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// null</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">jsonstringify</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">Infinity</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// null</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">jsonstringify</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// null</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">jsonstringify</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;jsonStringify&#39;</span><span class="token punctuation">,</span>
  <span class="token function">toJSON</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;jsonStringify2&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">sex</span><span class="token operator">:</span> <span class="token string">&#39;boy&#39;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">// {&quot;name&quot;:&quot;jsonStringify2&quot;,&quot;sex&quot;:&quot;boy&quot;}</span>

<span class="token comment">// 2. \u548C\u539F\u751F\u7684JSON.stringify\u8F6C\u6362\u8FDB\u884C\u6BD4\u8F83</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">jsonstringify</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">jsonstringify</span><span class="token punctuation">(</span><span class="token keyword">undefined</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token keyword">undefined</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">jsonstringify</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">jsonstringify</span><span class="token punctuation">(</span><span class="token number">NaN</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token number">NaN</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">jsonstringify</span><span class="token punctuation">(</span><span class="token number">Infinity</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token number">Infinity</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// true</span>
<span class="token keyword">let</span> str <span class="token operator">=</span> <span class="token string">&quot;jsonStringify&quot;</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">jsonstringify</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// true</span>
<span class="token keyword">let</span> reg <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RegExp</span><span class="token punctuation">(</span><span class="token string">&quot;\\w&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">jsonstringify</span><span class="token punctuation">(</span>reg<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>reg<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// true</span>
<span class="token keyword">let</span> date <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">jsonstringify</span><span class="token punctuation">(</span>date<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>date<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// true</span>
<span class="token keyword">let</span> sym <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&#39;jsonStringify&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">jsonstringify</span><span class="token punctuation">(</span>sym<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>sym<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// true</span>
<span class="token keyword">let</span> array <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">jsonstringify</span><span class="token punctuation">(</span>array<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>array<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// true</span>
<span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;jsonStringify&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">18</span><span class="token punctuation">,</span>
  <span class="token literal-property property">attr</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;coding&#39;</span><span class="token punctuation">,</span> <span class="token number">123</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token literal-property property">date</span><span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token literal-property property">uni</span><span class="token operator">:</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token function-variable function">sayHi</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;hello world&quot;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">info</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">16</span><span class="token punctuation">,</span>
    <span class="token literal-property property">intro</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">money</span><span class="token operator">:</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span>
      <span class="token literal-property property">job</span><span class="token operator">:</span> <span class="token keyword">null</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">pakingObj</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">boolean</span><span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">Boolean</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token literal-property property">string</span><span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span><span class="token string">&#39;jsonStringify&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token literal-property property">number</span><span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">Number</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">jsonstringify</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">)</span> 
<span class="token comment">// true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token function">jsonstringify</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">// {&quot;name&quot;:&quot;jsonStringify&quot;,&quot;age&quot;:18,&quot;attr&quot;:[&quot;coding&quot;,123],&quot;date&quot;:&quot;2021-10-06T14:59:58.306Z&quot;,&quot;info&quot;:{&quot;age&quot;:16,&quot;intro&quot;:{&quot;job&quot;:null}},&quot;pakingObj&quot;:{&quot;boolean&quot;:false,&quot;string&quot;:&quot;jsonStringify&quot;,&quot;number&quot;:1}}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">// {&quot;name&quot;:&quot;jsonStringify&quot;,&quot;age&quot;:18,&quot;attr&quot;:[&quot;coding&quot;,123],&quot;date&quot;:&quot;2021-10-06T14:59:58.306Z&quot;,&quot;info&quot;:{&quot;age&quot;:16,&quot;intro&quot;:{&quot;job&quot;:null}},&quot;pakingObj&quot;:{&quot;boolean&quot;:false,&quot;string&quot;:&quot;jsonStringify&quot;,&quot;number&quot;:1}}</span>

<span class="token comment">// 3. \u6D4B\u8BD5\u53EF\u904D\u5386\u5BF9\u8C61</span>
<span class="token keyword">let</span> enumerableObj <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

Object<span class="token punctuation">.</span><span class="token function">defineProperties</span><span class="token punctuation">(</span>enumerableObj<span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&#39;jsonStringify&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">enumerable</span><span class="token operator">:</span> <span class="token boolean">true</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">sex</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&#39;boy&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">enumerable</span><span class="token operator">:</span> <span class="token boolean">false</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">jsonstringify</span><span class="token punctuation">(</span>enumerableObj<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">// {&quot;name&quot;:&quot;jsonStringify&quot;}</span>

<span class="token comment">// 4. \u6D4B\u8BD5\u5FAA\u73AF\u5F15\u7528\u548CBigint</span>

<span class="token keyword">let</span> obj1 <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token string">&#39;aa&#39;</span> <span class="token punctuation">}</span>
<span class="token keyword">let</span> obj2 <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;jsonStringify&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">a</span><span class="token operator">:</span> obj1<span class="token punctuation">,</span> <span class="token literal-property property">b</span><span class="token operator">:</span> obj1 <span class="token punctuation">}</span>
obj2<span class="token punctuation">.</span>obj <span class="token operator">=</span> obj2

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">jsonstringify</span><span class="token punctuation">(</span>obj2<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">// TypeError: Converting circular structure to JSON</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">jsonStringify</span><span class="token punctuation">(</span><span class="token function">BigInt</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">// TypeError: Do not know how to serialize a BigInt</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br></div></div>`,35);function w(S,N){const p=e("ExternalLinkIcon");return o(),c(l,null,[i,s("p",null,[k,s("a",b,[m,t(p)])]),d,s("p",null,[y,s("a",f,[g,t(p)]),q,j,h]),v],64)}var J=u(r,[["render",w]]);export{J as default};
