import{a as n}from"./app.ba47fc91.js";import{_ as s}from"./plugin-vue_export-helper.21dcd24c.js";const a={},p=n(`<h1 id="\u6D3E\u53D1\u66F4\u65B0" tabindex="-1"><a class="header-anchor" href="#\u6D3E\u53D1\u66F4\u65B0" aria-hidden="true">#</a> \u6D3E\u53D1\u66F4\u65B0</h1><p>\u901A\u8FC7\u4E0A\u4E00\u8282\u5206\u6790\u4E86\u89E3\u4E86\u54CD\u5E94\u5F0F\u6570\u636E\u4F9D\u8D56\u6536\u96C6\u8FC7\u7A0B\uFF0C\u6536\u96C6\u7684\u76EE\u7684\u5C31\u662F\u4E3A\u4E86\u5F53\u4FEE\u6539\u6570\u636E\u7684\u65F6\u5019\uFF0C\u53EF\u4EE5\u5BF9\u76F8\u5173\u7684\u4F9D\u8D56\u6D3E\u53D1\u66F4\u65B0\uFF0C\u90A3\u4E48\u8FD9\u4E00\u8282\u6765\u8BE6\u7EC6\u5206\u6790\u8FD9\u4E2A\u8FC7\u7A0B\u3002</p><p>\u5148\u6765\u56DE\u987E\u4E00\u4E0B setter \u90E8\u5206\u7684\u903B\u8F91\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * Define a reactive property on an Object.
 */</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">defineReactive</span> <span class="token punctuation">(</span>
  <span class="token parameter"><span class="token literal-property property">obj</span><span class="token operator">:</span> Object<span class="token punctuation">,</span>
  <span class="token literal-property property">key</span><span class="token operator">:</span> string<span class="token punctuation">,</span>
  <span class="token literal-property property">val</span><span class="token operator">:</span> any<span class="token punctuation">,</span>
  customSetter<span class="token operator">?</span><span class="token operator">:</span> <span class="token operator">?</span>Function<span class="token punctuation">,</span>
  shallow<span class="token operator">?</span><span class="token operator">:</span> boolean</span>
<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> dep <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Dep</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

  <span class="token keyword">const</span> property <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">getOwnPropertyDescriptor</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> key<span class="token punctuation">)</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>property <span class="token operator">&amp;&amp;</span> property<span class="token punctuation">.</span>configurable <span class="token operator">===</span> <span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// cater for pre-defined getter/setters</span>
  <span class="token keyword">const</span> getter <span class="token operator">=</span> property <span class="token operator">&amp;&amp;</span> property<span class="token punctuation">.</span>get
  <span class="token keyword">const</span> setter <span class="token operator">=</span> property <span class="token operator">&amp;&amp;</span> property<span class="token punctuation">.</span>set
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">!</span>getter <span class="token operator">||</span> setter<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> arguments<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    val <span class="token operator">=</span> obj<span class="token punctuation">[</span>key<span class="token punctuation">]</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">let</span> childOb <span class="token operator">=</span> <span class="token operator">!</span>shallow <span class="token operator">&amp;&amp;</span> <span class="token function">observe</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span>
  Object<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> key<span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">enumerable</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token literal-property property">configurable</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token comment">// ...</span>
    <span class="token function-variable function">set</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token function">reactiveSetter</span> <span class="token punctuation">(</span><span class="token parameter">newVal</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> value <span class="token operator">=</span> getter <span class="token operator">?</span> <span class="token function">getter</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span> <span class="token operator">:</span> val
      <span class="token comment">/* eslint-disable no-self-compare */</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>newVal <span class="token operator">===</span> value <span class="token operator">||</span> <span class="token punctuation">(</span>newVal <span class="token operator">!==</span> newVal <span class="token operator">&amp;&amp;</span> value <span class="token operator">!==</span> value<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span>
      <span class="token punctuation">}</span>
      <span class="token comment">/* eslint-enable no-self-compare */</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">!==</span> <span class="token string">&#39;production&#39;</span> <span class="token operator">&amp;&amp;</span> customSetter<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">customSetter</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>setter<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">setter</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> newVal<span class="token punctuation">)</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        val <span class="token operator">=</span> newVal
      <span class="token punctuation">}</span>
      childOb <span class="token operator">=</span> <span class="token operator">!</span>shallow <span class="token operator">&amp;&amp;</span> <span class="token function">observe</span><span class="token punctuation">(</span>newVal<span class="token punctuation">)</span>
      dep<span class="token punctuation">.</span><span class="token function">notify</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br></div></div><p>setter \u7684\u903B\u8F91\u6709 2 \u4E2A\u5173\u952E\u7684\u70B9\uFF0C\u4E00\u4E2A\u662F <code>childOb = !shallow &amp;&amp; observe(newVal)</code>\uFF0C\u5982\u679C <code>shallow</code> \u4E3A false \u7684\u60C5\u51B5\uFF0C\u4F1A\u5BF9\u65B0\u8BBE\u7F6E\u7684\u503C\u53D8\u6210\u4E00\u4E2A\u54CD\u5E94\u5F0F\u5BF9\u8C61\uFF1B\u53E6\u4E00\u4E2A\u662F <code>dep.notify()</code>\uFF0C\u901A\u77E5\u6240\u6709\u7684\u8BA2\u9605\u8005\uFF0C\u8FD9\u662F\u672C\u8282\u7684\u5173\u952E\uFF0C\u63A5\u4E0B\u6765\u4F1A\u5E26\u5927\u5BB6\u5B8C\u6574\u7684\u5206\u6790\u6574\u4E2A\u6D3E\u53D1\u66F4\u65B0\u7684\u8FC7\u7A0B\u3002</p><h2 id="\u8FC7\u7A0B\u5206\u6790" tabindex="-1"><a class="header-anchor" href="#\u8FC7\u7A0B\u5206\u6790" aria-hidden="true">#</a> \u8FC7\u7A0B\u5206\u6790</h2><p>\u5F53\u5728\u7EC4\u4EF6\u4E2D\u5BF9\u54CD\u5E94\u7684\u6570\u636E\u505A\u4E86\u4FEE\u6539\uFF0C\u5C31\u4F1A\u89E6\u53D1 setter \u7684\u903B\u8F91\uFF0C\u6700\u540E\u8C03\u7528 <code>dep.notify()</code> \u65B9\u6CD5\uFF0C \u5B83\u662F <code>Dep</code> \u7684\u4E00\u4E2A\u5B9E\u4F8B\u65B9\u6CD5\uFF0C\u5B9A\u4E49\u5728 <code>src/core/observer/dep.js</code> \u4E2D\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">Dep</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
  <span class="token function">notify</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// stabilize the subscriber list first</span>
    <span class="token keyword">const</span> subs <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>subs<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> l <span class="token operator">=</span> subs<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> l<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      subs<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>\u8FD9\u91CC\u7684\u903B\u8F91\u975E\u5E38\u7B80\u5355\uFF0C\u904D\u5386\u6240\u6709\u7684 <code>subs</code>\uFF0C\u4E5F\u5C31\u662F <code>Watcher</code> \u7684\u5B9E\u4F8B\u6570\u7EC4\uFF0C\u7136\u540E\u8C03\u7528\u6BCF\u4E00\u4E2A <code>watcher</code> \u7684 <code>update</code> \u65B9\u6CD5\uFF0C\u5B83\u7684\u5B9A\u4E49\u5728 <code>src/core/observer/watcher.js</code> \u4E2D\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">Watcher</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
  <span class="token function">update</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">/* istanbul ignore else */</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>computed<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// A computed property watcher has two modes: lazy and activated.</span>
      <span class="token comment">// It initializes as lazy by default, and only becomes activated when</span>
      <span class="token comment">// it is depended on by at least one subscriber, which is typically</span>
      <span class="token comment">// another computed property or a component&#39;s render function.</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>dep<span class="token punctuation">.</span>subs<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// In lazy mode, we don&#39;t want to perform computations until necessary,</span>
        <span class="token comment">// so we simply mark the watcher as dirty. The actual computation is</span>
        <span class="token comment">// performed just-in-time in this.evaluate() when the computed property</span>
        <span class="token comment">// is accessed.</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>dirty <span class="token operator">=</span> <span class="token boolean">true</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token comment">// In activated mode, we want to proactively perform the computation</span>
        <span class="token comment">// but only notify our subscribers when the value has indeed changed.</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getAndInvoke</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token keyword">this</span><span class="token punctuation">.</span>dep<span class="token punctuation">.</span><span class="token function">notify</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>sync<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token function">queueWatcher</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>  
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br></div></div><p>\u8FD9\u91CC\u5BF9\u4E8E <code>Watcher</code> \u7684\u4E0D\u540C\u72B6\u6001\uFF0C\u4F1A\u6267\u884C\u4E0D\u540C\u7684\u903B\u8F91\uFF0C<code>computed</code> \u548C <code>sync</code> \u7B49\u72B6\u6001\u7684\u5206\u6790\u4F1A\u4E4B\u540E\u62BD\u4E00\u5C0F\u8282\u8BE6\u7EC6\u4ECB\u7ECD\uFF0C\u5728\u4E00\u822C\u7EC4\u4EF6\u6570\u636E\u66F4\u65B0\u7684\u573A\u666F\uFF0C\u4F1A\u8D70\u5230\u6700\u540E\u4E00\u4E2A <code>queueWatcher(this)</code> \u7684\u903B\u8F91\uFF0C<code>queueWatcher</code> \u7684\u5B9A\u4E49\u5728 <code>src/core/observer/scheduler.js</code> \u4E2D\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token literal-property property">queue</span><span class="token operator">:</span> Array<span class="token operator">&lt;</span>Watcher<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token keyword">let</span> <span class="token literal-property property">has</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token punctuation">[</span>key<span class="token operator">:</span> number<span class="token punctuation">]</span><span class="token operator">:</span> <span class="token operator">?</span><span class="token boolean">true</span> <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token keyword">let</span> waiting <span class="token operator">=</span> <span class="token boolean">false</span>
<span class="token keyword">let</span> flushing <span class="token operator">=</span> <span class="token boolean">false</span>
<span class="token doc-comment comment">/**
 * Push a watcher into the watcher queue.
 * Jobs with duplicate IDs will be skipped unless it&#39;s
 * pushed when the queue is being flushed.
 */</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">queueWatcher</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">watcher</span><span class="token operator">:</span> Watcher</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> id <span class="token operator">=</span> watcher<span class="token punctuation">.</span>id
  <span class="token keyword">if</span> <span class="token punctuation">(</span>has<span class="token punctuation">[</span>id<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    has<span class="token punctuation">[</span>id<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>flushing<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      queue<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>watcher<span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token comment">// if already flushing, splice the watcher based on its id</span>
      <span class="token comment">// if already past its id, it will be run next immediately.</span>
      <span class="token keyword">let</span> i <span class="token operator">=</span> queue<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span>
      <span class="token keyword">while</span> <span class="token punctuation">(</span>i <span class="token operator">&gt;</span> index <span class="token operator">&amp;&amp;</span> queue<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>id <span class="token operator">&gt;</span> watcher<span class="token punctuation">.</span>id<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        i<span class="token operator">--</span>
      <span class="token punctuation">}</span>
      queue<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> watcher<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// queue the flush</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>waiting<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      waiting <span class="token operator">=</span> <span class="token boolean">true</span>
      <span class="token function">nextTick</span><span class="token punctuation">(</span>flushSchedulerQueue<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br></div></div><p>\u8FD9\u91CC\u5F15\u5165\u4E86\u4E00\u4E2A\u961F\u5217\u7684\u6982\u5FF5\uFF0C\u8FD9\u4E5F\u662F Vue \u5728\u505A\u6D3E\u53D1\u66F4\u65B0\u7684\u65F6\u5019\u7684\u4E00\u4E2A\u4F18\u5316\u7684\u70B9\uFF0C\u5B83\u5E76\u4E0D\u4F1A\u6BCF\u6B21\u6570\u636E\u6539\u53D8\u90FD\u89E6\u53D1 <code>watcher</code> \u7684\u56DE\u8C03\uFF0C\u800C\u662F\u628A\u8FD9\u4E9B <code>watcher</code> \u5148\u6DFB\u52A0\u5230\u4E00\u4E2A\u961F\u5217\u91CC\uFF0C\u7136\u540E\u5728 <code>nextTick</code> \u540E\u6267\u884C <code>flushSchedulerQueue</code>\u3002</p><p>\u8FD9\u91CC\u6709\u51E0\u4E2A\u7EC6\u8282\u8981\u6CE8\u610F\u4E00\u4E0B\uFF0C\u9996\u5148\u7528 <code>has</code> \u5BF9\u8C61\u4FDD\u8BC1\u540C\u4E00\u4E2A <code>Watcher</code> \u53EA\u6DFB\u52A0\u4E00\u6B21\uFF1B\u63A5\u7740\u5BF9 <code>flushing</code> \u7684\u5224\u65AD\uFF0Celse \u90E8\u5206\u7684\u903B\u8F91\u7A0D\u540E\u4F1A\u8BB2\uFF1B\u6700\u540E\u901A\u8FC7 <code>waiting</code> \u4FDD\u8BC1\u5BF9 <code>nextTick(flushSchedulerQueue)</code> \u7684\u8C03\u7528\u903B\u8F91\u53EA\u6709\u4E00\u6B21\uFF0C\u53E6\u5916 <code>nextTick</code> \u7684\u5B9E\u73B0\u4E4B\u540E\u4F1A\u62BD\u4E00\u5C0F\u8282\u4E13\u95E8\u53BB\u8BB2\uFF0C\u76EE\u524D\u5C31\u53EF\u4EE5\u7406\u89E3\u5B83\u662F\u5728\u4E0B\u4E00\u4E2A tick\uFF0C\u4E5F\u5C31\u662F\u5F02\u6B65\u7684\u53BB\u6267\u884C <code>flushSchedulerQueue</code>\u3002</p><p>\u63A5\u4E0B\u6765\u6765\u770B <code>flushSchedulerQueue</code> \u7684\u5B9E\u73B0\uFF0C\u5B83\u7684\u5B9A\u4E49\u5728 <code>src/core/observer/scheduler.js</code> \u4E2D\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> flushing <span class="token operator">=</span> <span class="token boolean">false</span>
<span class="token keyword">let</span> index <span class="token operator">=</span> <span class="token number">0</span>
<span class="token doc-comment comment">/**
 * Flush both queues and run the watchers.
 */</span>
<span class="token keyword">function</span> <span class="token function">flushSchedulerQueue</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  flushing <span class="token operator">=</span> <span class="token boolean">true</span>
  <span class="token keyword">let</span> watcher<span class="token punctuation">,</span> id

  <span class="token comment">// Sort queue before flush.</span>
  <span class="token comment">// This ensures that:</span>
  <span class="token comment">// 1. Components are updated from parent to child. (because parent is always</span>
  <span class="token comment">//    created before the child)</span>
  <span class="token comment">// 2. A component&#39;s user watchers are run before its render watcher (because</span>
  <span class="token comment">//    user watchers are created before the render watcher)</span>
  <span class="token comment">// 3. If a component is destroyed during a parent component&#39;s watcher run,</span>
  <span class="token comment">//    its watchers can be skipped.</span>
  queue<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> a<span class="token punctuation">.</span>id <span class="token operator">-</span> b<span class="token punctuation">.</span>id<span class="token punctuation">)</span>

  <span class="token comment">// do not cache length because more watchers might be pushed</span>
  <span class="token comment">// as we run existing watchers</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span>index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> index <span class="token operator">&lt;</span> queue<span class="token punctuation">.</span>length<span class="token punctuation">;</span> index<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    watcher <span class="token operator">=</span> queue<span class="token punctuation">[</span>index<span class="token punctuation">]</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>watcher<span class="token punctuation">.</span>before<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      watcher<span class="token punctuation">.</span><span class="token function">before</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    id <span class="token operator">=</span> watcher<span class="token punctuation">.</span>id
    has<span class="token punctuation">[</span>id<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">null</span>
    watcher<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token comment">// in dev build, check and stop circular updates.</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">!==</span> <span class="token string">&#39;production&#39;</span> <span class="token operator">&amp;&amp;</span> has<span class="token punctuation">[</span>id<span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      circular<span class="token punctuation">[</span>id<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span>circular<span class="token punctuation">[</span>id<span class="token punctuation">]</span> <span class="token operator">||</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>circular<span class="token punctuation">[</span>id<span class="token punctuation">]</span> <span class="token operator">&gt;</span> <span class="token constant">MAX_UPDATE_COUNT</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">warn</span><span class="token punctuation">(</span>
          <span class="token string">&#39;You may have an infinite update loop &#39;</span> <span class="token operator">+</span> <span class="token punctuation">(</span>
            watcher<span class="token punctuation">.</span>user
              <span class="token operator">?</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">in watcher with expression &quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>watcher<span class="token punctuation">.</span>expression<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;</span><span class="token template-punctuation string">\`</span></span>
              <span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">in a component render function.</span><span class="token template-punctuation string">\`</span></span>
          <span class="token punctuation">)</span><span class="token punctuation">,</span>
          watcher<span class="token punctuation">.</span>vm
        <span class="token punctuation">)</span>
        <span class="token keyword">break</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// keep copies of post queues before resetting state</span>
  <span class="token keyword">const</span> activatedQueue <span class="token operator">=</span> activatedChildren<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> updatedQueue <span class="token operator">=</span> queue<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

  <span class="token function">resetSchedulerState</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

  <span class="token comment">// call component updated and activated hooks</span>
  <span class="token function">callActivatedHooks</span><span class="token punctuation">(</span>activatedQueue<span class="token punctuation">)</span>
  <span class="token function">callUpdatedHooks</span><span class="token punctuation">(</span>updatedQueue<span class="token punctuation">)</span>

  <span class="token comment">// devtool hook</span>
  <span class="token comment">/* istanbul ignore if */</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>devtools <span class="token operator">&amp;&amp;</span> config<span class="token punctuation">.</span>devtools<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    devtools<span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">&#39;flush&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br></div></div><p>\u8FD9\u91CC\u6709\u51E0\u4E2A\u91CD\u8981\u7684\u903B\u8F91\u8981\u68B3\u7406\u4E00\u4E0B\uFF0C\u5BF9\u4E8E\u4E00\u4E9B\u5206\u652F\u903B\u8F91\u5982 <code>keep-alive</code> \u7EC4\u4EF6\u76F8\u5173\u548C\u4E4B\u524D\u63D0\u5230\u8FC7\u7684 <code>updated</code> \u94A9\u5B50\u51FD\u6570\u7684\u6267\u884C\u4F1A\u7565\u8FC7\u3002</p><ul><li>\u961F\u5217\u6392\u5E8F</li></ul><p><code>queue.sort((a, b) =&gt; a.id - b.id)</code> \u5BF9\u961F\u5217\u505A\u4E86\u4ECE\u5C0F\u5230\u5927\u7684\u6392\u5E8F\uFF0C\u8FD9\u4E48\u505A\u4E3B\u8981\u6709\u4EE5\u4E0B\u8981\u786E\u4FDD\u4EE5\u4E0B\u51E0\u70B9\uFF1A</p><p>1.\u7EC4\u4EF6\u7684\u66F4\u65B0\u7531\u7236\u5230\u5B50\uFF1B\u56E0\u4E3A\u7236\u7EC4\u4EF6\u7684\u521B\u5EFA\u8FC7\u7A0B\u662F\u5148\u4E8E\u5B50\u7684\uFF0C\u6240\u4EE5 <code>watcher</code> \u7684\u521B\u5EFA\u4E5F\u662F\u5148\u7236\u540E\u5B50\uFF0C\u6267\u884C\u987A\u5E8F\u4E5F\u5E94\u8BE5\u4FDD\u6301\u5148\u7236\u540E\u5B50\u3002</p><p>2.\u7528\u6237\u7684\u81EA\u5B9A\u4E49 <code>watcher</code> \u8981\u4F18\u5148\u4E8E\u6E32\u67D3 <code>watcher</code> \u6267\u884C\uFF1B\u56E0\u4E3A\u7528\u6237\u81EA\u5B9A\u4E49 <code>watcher</code> \u662F\u5728\u6E32\u67D3 <code>watcher</code> \u4E4B\u524D\u521B\u5EFA\u7684\u3002</p><p>3.\u5982\u679C\u4E00\u4E2A\u7EC4\u4EF6\u5728\u7236\u7EC4\u4EF6\u7684 <code>watcher</code> \u6267\u884C\u671F\u95F4\u88AB\u9500\u6BC1\uFF0C\u90A3\u4E48\u5B83\u5BF9\u5E94\u7684 <code>watcher</code> \u6267\u884C\u90FD\u53EF\u4EE5\u88AB\u8DF3\u8FC7\uFF0C\u6240\u4EE5\u7236\u7EC4\u4EF6\u7684 <code>watcher</code> \u5E94\u8BE5\u5148\u6267\u884C\u3002</p><ul><li>\u961F\u5217\u904D\u5386</li></ul><p>\u5728\u5BF9 <code>queue</code> \u6392\u5E8F\u540E\uFF0C\u63A5\u7740\u5C31\u662F\u8981\u5BF9\u5B83\u505A\u904D\u5386\uFF0C\u62FF\u5230\u5BF9\u5E94\u7684 <code>watcher</code>\uFF0C\u6267\u884C <code>watcher.run()</code>\u3002\u8FD9\u91CC\u9700\u8981\u6CE8\u610F\u4E00\u4E2A\u7EC6\u8282\uFF0C\u5728\u904D\u5386\u7684\u65F6\u5019\u6BCF\u6B21\u90FD\u4F1A\u5BF9 <code>queue.length</code> \u6C42\u503C\uFF0C\u56E0\u4E3A\u5728 <code>watcher.run()</code> \u7684\u65F6\u5019\uFF0C\u5F88\u53EF\u80FD\u7528\u6237\u4F1A\u518D\u6B21\u6DFB\u52A0\u65B0\u7684 <code>watcher</code>\uFF0C\u8FD9\u6837\u4F1A\u518D\u6B21\u6267\u884C\u5230 <code>queueWatcher</code>\uFF0C\u5982\u4E0B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">queueWatcher</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">watcher</span><span class="token operator">:</span> Watcher</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> id <span class="token operator">=</span> watcher<span class="token punctuation">.</span>id
  <span class="token keyword">if</span> <span class="token punctuation">(</span>has<span class="token punctuation">[</span>id<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    has<span class="token punctuation">[</span>id<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>flushing<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      queue<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>watcher<span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token comment">// if already flushing, splice the watcher based on its id</span>
      <span class="token comment">// if already past its id, it will be run next immediately.</span>
      <span class="token keyword">let</span> i <span class="token operator">=</span> queue<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span>
      <span class="token keyword">while</span> <span class="token punctuation">(</span>i <span class="token operator">&gt;</span> index <span class="token operator">&amp;&amp;</span> queue<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>id <span class="token operator">&gt;</span> watcher<span class="token punctuation">.</span>id<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        i<span class="token operator">--</span>
      <span class="token punctuation">}</span>
      queue<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> watcher<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// ...</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><p>\u53EF\u4EE5\u770B\u5230\uFF0C\u8FD9\u65F6\u5019 <code>flushing</code> \u4E3A true\uFF0C\u5C31\u4F1A\u6267\u884C\u5230 else \u7684\u903B\u8F91\uFF0C\u7136\u540E\u5C31\u4F1A\u4ECE\u540E\u5F80\u524D\u627E\uFF0C\u627E\u5230\u7B2C\u4E00\u4E2A\u5F85\u63D2\u5165 <code>watcher</code> \u7684 id \u6BD4\u5F53\u524D\u961F\u5217\u4E2D <code>watcher</code> \u7684 id \u5927\u7684\u4F4D\u7F6E\u3002\u628A <code>watcher</code> \u6309\u7167 <code>id </code>\u7684\u63D2\u5165\u5230\u961F\u5217\u4E2D\uFF0C\u56E0\u6B64 <code>queue</code> \u7684\u957F\u5EA6\u53D1\u751F\u4E86\u53D8\u5316\u3002</p><ul><li>\u72B6\u6001\u6062\u590D</li></ul><p>\u8FD9\u4E2A\u8FC7\u7A0B\u5C31\u662F\u6267\u884C <code>resetSchedulerState</code> \u51FD\u6570\uFF0C\u5B83\u7684\u5B9A\u4E49\u5728 <code>src/core/observer/scheduler.js</code> \u4E2D\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token literal-property property">queue</span><span class="token operator">:</span> Array<span class="token operator">&lt;</span>Watcher<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token keyword">let</span> <span class="token literal-property property">has</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token punctuation">[</span>key<span class="token operator">:</span> number<span class="token punctuation">]</span><span class="token operator">:</span> <span class="token operator">?</span><span class="token boolean">true</span> <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token keyword">let</span> <span class="token literal-property property">circular</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token punctuation">[</span>key<span class="token operator">:</span> number<span class="token punctuation">]</span><span class="token operator">:</span> number <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token keyword">let</span> waiting <span class="token operator">=</span> <span class="token boolean">false</span>
<span class="token keyword">let</span> flushing <span class="token operator">=</span> <span class="token boolean">false</span>
<span class="token keyword">let</span> index <span class="token operator">=</span> <span class="token number">0</span>
<span class="token doc-comment comment">/**
 * Reset the scheduler&#39;s state.
 */</span>
<span class="token keyword">function</span> <span class="token function">resetSchedulerState</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  index <span class="token operator">=</span> queue<span class="token punctuation">.</span>length <span class="token operator">=</span> activatedChildren<span class="token punctuation">.</span>length <span class="token operator">=</span> <span class="token number">0</span>
  has <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">!==</span> <span class="token string">&#39;production&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    circular <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  waiting <span class="token operator">=</span> flushing <span class="token operator">=</span> <span class="token boolean">false</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p>\u903B\u8F91\u975E\u5E38\u7B80\u5355\uFF0C\u5C31\u662F\u628A\u8FD9\u4E9B\u63A7\u5236\u6D41\u7A0B\u72B6\u6001\u7684\u4E00\u4E9B\u53D8\u91CF\u6062\u590D\u5230\u521D\u59CB\u503C\uFF0C\u628A <code>watcher</code> \u961F\u5217\u6E05\u7A7A\u3002</p><p>\u63A5\u4E0B\u6765\u7EE7\u7EED\u5206\u6790 <code>watcher.run()</code> \u7684\u903B\u8F91\uFF0C\u5B83\u7684\u5B9A\u4E49\u5728 <code>src/core/observer/watcher.js</code> \u4E2D\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">Watcher</span> <span class="token punctuation">{</span>
  <span class="token doc-comment comment">/**
   * Scheduler job interface.
   * Will be called by the scheduler.
   */</span>
  <span class="token function">run</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>active<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getAndInvoke</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>cb<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token function">getAndInvoke</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">cb</span><span class="token operator">:</span> Function</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> value <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>
      value <span class="token operator">!==</span> <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">||</span>
      <span class="token comment">// Deep watchers and watchers on Object/Arrays should fire even</span>
      <span class="token comment">// when the value is the same, because the value may</span>
      <span class="token comment">// have mutated.</span>
      <span class="token function">isObject</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token operator">||</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>deep
    <span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// set new value</span>
      <span class="token keyword">const</span> oldValue <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>value
      <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">=</span> value
      <span class="token keyword">this</span><span class="token punctuation">.</span>dirty <span class="token operator">=</span> <span class="token boolean">false</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>user<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
          <span class="token function">cb</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>vm<span class="token punctuation">,</span> value<span class="token punctuation">,</span> oldValue<span class="token punctuation">)</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token function">handleError</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>vm<span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">callback for watcher &quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">this</span><span class="token punctuation">.</span>expression<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token function">cb</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>vm<span class="token punctuation">,</span> value<span class="token punctuation">,</span> oldValue<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br></div></div><p><code>run</code> \u51FD\u6570\u5B9E\u9645\u4E0A\u5C31\u662F\u6267\u884C <code>this.getAndInvoke</code> \u65B9\u6CD5\uFF0C\u5E76\u4F20\u5165 <code>watcher</code> \u7684\u56DE\u8C03\u51FD\u6570\u3002<code>getAndInvoke</code> \u51FD\u6570\u903B\u8F91\u4E5F\u5F88\u7B80\u5355\uFF0C\u5148\u901A\u8FC7 <code>this.get()</code> \u5F97\u5230\u5B83\u5F53\u524D\u7684\u503C\uFF0C\u7136\u540E\u505A\u5224\u65AD\uFF0C\u5982\u679C\u6EE1\u8DB3\u65B0\u65E7\u503C\u4E0D\u7B49\u3001\u65B0\u503C\u662F\u5BF9\u8C61\u7C7B\u578B\u3001<code>deep</code> \u6A21\u5F0F\u4EFB\u4F55\u4E00\u4E2A\u6761\u4EF6\uFF0C\u5219\u6267\u884C <code>watcher</code> \u7684\u56DE\u8C03\uFF0C\u6CE8\u610F\u56DE\u8C03\u51FD\u6570\u6267\u884C\u7684\u65F6\u5019\u4F1A\u628A\u7B2C\u4E00\u4E2A\u548C\u7B2C\u4E8C\u4E2A\u53C2\u6570\u4F20\u5165\u65B0\u503C <code>value</code> \u548C\u65E7\u503C <code>oldValue</code>\uFF0C\u8FD9\u5C31\u662F\u5F53\u6DFB\u52A0\u81EA\u5B9A\u4E49 <code>watcher</code> \u7684\u65F6\u5019\u80FD\u5728\u56DE\u8C03\u51FD\u6570\u7684\u53C2\u6570\u4E2D\u62FF\u5230\u65B0\u65E7\u503C\u7684\u539F\u56E0\u3002</p><p>\u90A3\u4E48\u5BF9\u4E8E\u6E32\u67D3 <code>watcher</code> \u800C\u8A00\uFF0C\u5B83\u5728\u6267\u884C <code>this.get()</code> \u65B9\u6CD5\u6C42\u503C\u7684\u65F6\u5019\uFF0C\u4F1A\u6267\u884C <code>getter</code> \u65B9\u6CD5\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function-variable function">updateComponent</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  vm<span class="token punctuation">.</span><span class="token function">_update</span><span class="token punctuation">(</span>vm<span class="token punctuation">.</span><span class="token function">_render</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> hydrating<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u6240\u4EE5\u8FD9\u5C31\u662F\u5F53\u53BB\u4FEE\u6539\u7EC4\u4EF6\u76F8\u5173\u7684\u54CD\u5E94\u5F0F\u6570\u636E\u7684\u65F6\u5019\uFF0C\u4F1A\u89E6\u53D1\u7EC4\u4EF6\u91CD\u65B0\u6E32\u67D3\u7684\u539F\u56E0\uFF0C\u63A5\u7740\u5C31\u4F1A\u91CD\u65B0\u6267\u884C <code>patch</code> \u7684\u8FC7\u7A0B\uFF0C\u4F46\u5B83\u548C\u9996\u6B21\u6E32\u67D3\u6709\u6240\u4E0D\u540C\uFF0C\u4E4B\u540E\u4F1A\u82B1\u4E00\u5C0F\u8282\u53BB\u8BE6\u7EC6\u4ECB\u7ECD\u3002</p><h2 id="\u603B\u7ED3" tabindex="-1"><a class="header-anchor" href="#\u603B\u7ED3" aria-hidden="true">#</a> \u603B\u7ED3</h2><p>\u901A\u8FC7\u8FD9\u4E00\u8282\u7684\u5206\u6790\uFF0C\u5BF9 Vue \u6570\u636E\u4FEE\u6539\u6D3E\u53D1\u66F4\u65B0\u7684\u8FC7\u7A0B\u4E5F\u6709\u4E86\u8BA4\u8BC6\uFF0C\u5B9E\u9645\u4E0A\u5C31\u662F\u5F53\u6570\u636E\u53D1\u751F\u53D8\u5316\u7684\u65F6\u5019\uFF0C\u89E6\u53D1 setter \u903B\u8F91\uFF0C\u628A\u5728\u4F9D\u8D56\u8FC7\u7A0B\u4E2D\u8BA2\u9605\u7684\u7684\u6240\u6709\u89C2\u5BDF\u8005\uFF0C\u4E5F\u5C31\u662F <code>watcher</code>\uFF0C\u90FD\u89E6\u53D1\u5B83\u4EEC\u7684 <code>update</code> \u8FC7\u7A0B\uFF0C\u8FD9\u4E2A\u8FC7\u7A0B\u53C8\u5229\u7528\u4E86\u961F\u5217\u505A\u4E86\u8FDB\u4E00\u6B65\u4F18\u5316\uFF0C\u5728 <code>nextTick</code> \u540E\u6267\u884C\u6240\u6709 <code>watcher</code> \u7684 <code>run</code>\uFF0C\u6700\u540E\u6267\u884C\u5B83\u4EEC\u7684\u56DE\u8C03\u51FD\u6570\u3002<code>nextTick</code> \u662F Vue \u4E00\u4E2A\u6BD4\u8F83\u6838\u5FC3\u7684\u5B9E\u73B0\u4E86\uFF0C\u4E0B\u4E00\u8282\u6765\u91CD\u70B9\u5206\u6790\u5B83\u7684\u5B9E\u73B0\u3002</p>`,38);function e(t,o){return p}var u=s(a,[["render",e]]);export{u as default};
