import{r as e,o,c,b as s,d as t,F as l,a,e as n}from"./app.ee3fc36b.js";import{_ as r}from"./plugin-vue_export-helper.21dcd24c.js";const u={},i=a(`<h2 id="mount" tabindex="-1"><a class="header-anchor" href="#mount" aria-hidden="true">#</a> $mount</h2><p>\u9996\u5148\u770B\u4E00\u4E0Bmount\u7684\u4EE3\u7801</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">/*\u628A\u539F\u672C\u4E0D\u5E26\u7F16\u8BD1\u7684$mount\u65B9\u6CD5\u4FDD\u5B58\u4E0B\u6765\uFF0C\u5728\u6700\u540E\u4F1A\u8C03\u7528\u3002*/</span>
<span class="token keyword">const</span> mount <span class="token operator">=</span> <span class="token class-name">Vue</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>$mount
<span class="token comment">/*\u6302\u8F7D\u7EC4\u4EF6\uFF0C\u5E26\u6A21\u677F\u7F16\u8BD1*/</span>
<span class="token class-name">Vue</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">$mount</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>
  <span class="token parameter">el<span class="token operator">?</span><span class="token operator">:</span> string <span class="token operator">|</span> Element<span class="token punctuation">,</span>
  hydrating<span class="token operator">?</span><span class="token operator">:</span> boolean</span>
<span class="token punctuation">)</span><span class="token operator">:</span> Component <span class="token punctuation">{</span>
  el <span class="token operator">=</span> el <span class="token operator">&amp;&amp;</span> <span class="token function">query</span><span class="token punctuation">(</span>el<span class="token punctuation">)</span>

  <span class="token comment">/* istanbul ignore if */</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>el <span class="token operator">===</span> document<span class="token punctuation">.</span>body <span class="token operator">||</span> el <span class="token operator">===</span> document<span class="token punctuation">.</span>documentElement<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">!==</span> <span class="token string">&#39;production&#39;</span> <span class="token operator">&amp;&amp;</span> <span class="token function">warn</span><span class="token punctuation">(</span>
      <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Do not mount Vue to &lt;html&gt; or &lt;body&gt; - mount to normal elements instead.</span><span class="token template-punctuation string">\`</span></span>
    <span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">const</span> options <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$options
  <span class="token comment">// resolve template/el and convert to render function</span>
  <span class="token comment">/*\u5904\u7406\u6A21\u677Ftemplete\uFF0C\u7F16\u8BD1\u6210render\u51FD\u6570\uFF0Crender\u4E0D\u5B58\u5728\u7684\u65F6\u5019\u624D\u4F1A\u7F16\u8BD1template\uFF0C\u5426\u5219\u4F18\u5148\u4F7F\u7528render*/</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>options<span class="token punctuation">.</span>render<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> template <span class="token operator">=</span> options<span class="token punctuation">.</span>template
    <span class="token comment">/*template\u5B58\u5728\u7684\u65F6\u5019\u53D6template\uFF0C\u4E0D\u5B58\u5728\u7684\u65F6\u5019\u53D6el\u7684outerHTML*/</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>template<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">/*\u5F53template\u662F\u5B57\u7B26\u4E32\u7684\u65F6\u5019*/</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> template <span class="token operator">===</span> <span class="token string">&#39;string&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>template<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">&#39;#&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          template <span class="token operator">=</span> <span class="token function">idToTemplate</span><span class="token punctuation">(</span>template<span class="token punctuation">)</span>
          <span class="token comment">/* istanbul ignore if */</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">!==</span> <span class="token string">&#39;production&#39;</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>template<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">warn</span><span class="token punctuation">(</span>
              <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Template element not found or is empty: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>options<span class="token punctuation">.</span>template<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
              <span class="token keyword">this</span>
            <span class="token punctuation">)</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>template<span class="token punctuation">.</span>nodeType<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">/*\u5F53template\u4E3ADOM\u8282\u70B9\u7684\u65F6\u5019*/</span>
        template <span class="token operator">=</span> template<span class="token punctuation">.</span>innerHTML
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token comment">/*\u62A5\u9519*/</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">!==</span> <span class="token string">&#39;production&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">&#39;invalid template option:&#39;</span> <span class="token operator">+</span> template<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>el<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">/*\u83B7\u53D6element\u7684outerHTML*/</span>
      template <span class="token operator">=</span> <span class="token function">getOuterHTML</span><span class="token punctuation">(</span>el<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>template<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">/* istanbul ignore if */</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">!==</span> <span class="token string">&#39;production&#39;</span> <span class="token operator">&amp;&amp;</span> config<span class="token punctuation">.</span>performance <span class="token operator">&amp;&amp;</span> mark<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">mark</span><span class="token punctuation">(</span><span class="token string">&#39;compile&#39;</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>

      <span class="token comment">/*\u5C06template\u7F16\u8BD1\u6210render\u51FD\u6570\uFF0C\u8FD9\u91CC\u4F1A\u6709render\u4EE5\u53CAstaticRenderFns\u4E24\u4E2A\u8FD4\u56DE\uFF0C\u8FD9\u662Fvue\u7684\u7F16\u8BD1\u65F6\u4F18\u5316\uFF0Cstatic\u9759\u6001\u4E0D\u9700\u8981\u5728VNode\u66F4\u65B0\u65F6\u8FDB\u884Cpatch\uFF0C\u4F18\u5316\u6027\u80FD*/</span>
      <span class="token keyword">const</span> <span class="token punctuation">{</span> render<span class="token punctuation">,</span> staticRenderFns <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">compileToFunctions</span><span class="token punctuation">(</span>template<span class="token punctuation">,</span> <span class="token punctuation">{</span>
        shouldDecodeNewlines<span class="token punctuation">,</span>
        <span class="token literal-property property">delimiters</span><span class="token operator">:</span> options<span class="token punctuation">.</span>delimiters
      <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">)</span>
      options<span class="token punctuation">.</span>render <span class="token operator">=</span> render
      options<span class="token punctuation">.</span>staticRenderFns <span class="token operator">=</span> staticRenderFns

      <span class="token comment">/* istanbul ignore if */</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">!==</span> <span class="token string">&#39;production&#39;</span> <span class="token operator">&amp;&amp;</span> config<span class="token punctuation">.</span>performance <span class="token operator">&amp;&amp;</span> mark<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">mark</span><span class="token punctuation">(</span><span class="token string">&#39;compile end&#39;</span><span class="token punctuation">)</span>
        <span class="token function">measure</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">this</span><span class="token punctuation">.</span>_name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> compile</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> <span class="token string">&#39;compile&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;compile end&#39;</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token comment">/*Github:https://github.com/answershuto*/</span>
  <span class="token comment">/*\u8C03\u7528const mount = Vue.prototype.$mount\u4FDD\u5B58\u4E0B\u6765\u7684\u4E0D\u5E26\u7F16\u8BD1\u7684mount*/</span>
  <span class="token keyword">return</span> <span class="token function">mount</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> el<span class="token punctuation">,</span> hydrating<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br></div></div><p>\u901A\u8FC7mount\u4EE3\u7801\u53EF\u4EE5\u770B\u5230\uFF0C\u5728mount\u7684\u8FC7\u7A0B\u4E2D\uFF0C\u5982\u679Crender\u51FD\u6570\u4E0D\u5B58\u5728\uFF08render\u51FD\u6570\u5B58\u5728\u4F1A\u4F18\u5148\u4F7F\u7528render\uFF09\u4F1A\u5C06template\u8FDB\u884CcompileToFunctions\u5F97\u5230render\u4EE5\u53CAstaticRenderFns\u3002\u8B6C\u5982\u8BF4\u624B\u5199\u7EC4\u4EF6\u65F6\u52A0\u5165\u4E86template\u7684\u60C5\u51B5\u90FD\u4F1A\u5728\u8FD0\u884C\u65F6\u8FDB\u884C\u7F16\u8BD1\u3002\u800Crender function\u5728\u8FD0\u884C\u540E\u4F1A\u8FD4\u56DEVNode\u8282\u70B9\uFF0C\u4F9B\u9875\u9762\u7684\u6E32\u67D3\u4EE5\u53CA\u5728update\u7684\u65F6\u5019patch\u3002\u63A5\u4E0B\u6765\u6765\u770B\u4E00\u4E0Btemplate\u662F\u5982\u4F55\u7F16\u8BD1\u7684\u3002</p><h2 id="\u4E00\u4E9B\u57FA\u7840" tabindex="-1"><a class="header-anchor" href="#\u4E00\u4E9B\u57FA\u7840" aria-hidden="true">#</a> \u4E00\u4E9B\u57FA\u7840</h2><p>\u9996\u5148\uFF0Ctemplate\u4F1A\u88AB\u7F16\u8BD1\u6210AST\uFF0C\u90A3\u4E48AST\u662F\u4EC0\u4E48\uFF1F</p>`,6),k=n("\u5728\u8BA1\u7B97\u673A\u79D1\u5B66\u4E2D\uFF0C\u62BD\u8C61\u8BED\u6CD5\u6811\uFF08abstract syntax tree\u6216\u8005\u7F29\u5199\u4E3AAST\uFF09\uFF0C\u6216\u8005\u8BED\u6CD5\u6811\uFF08syntax tree\uFF09\uFF0C\u662F\u6E90\u4EE3\u7801\u7684\u62BD\u8C61\u8BED\u6CD5\u7ED3\u6784\u7684\u6811\u72B6\u8868\u73B0\u5F62\u5F0F\uFF0C\u8FD9\u91CC\u7279\u6307\u7F16\u7A0B\u8BED\u8A00\u7684\u6E90\u4EE3\u7801\u3002\u5177\u4F53\u53EF\u4EE5\u67E5\u770B"),m={href:"https://zh.wikipedia.org/wiki/%E6%8A%BD%E8%B1%A1%E8%AA%9E%E6%B3%95%E6%A8%B9",target:"_blank",rel:"noopener noreferrer"},b=n("\u62BD\u8C61\u8BED\u6CD5\u6811"),d=n("\u3002"),g=a(`<p>AST\u4F1A\u7ECF\u8FC7generate\u5F97\u5230render\u51FD\u6570\uFF0Crender\u7684\u8FD4\u56DE\u503C\u662FVNode\uFF0CVNode\u662FVue\u7684\u865A\u62DFDOM\u8282\u70B9\uFF0C\u5177\u4F53\u5B9A\u4E49\u5982\u4E0B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">class</span> <span class="token class-name">VNode</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">tag</span><span class="token operator">:</span> string <span class="token operator">|</span> <span class="token keyword">void</span><span class="token punctuation">;</span>
  <span class="token literal-property property">data</span><span class="token operator">:</span> VNodeData <span class="token operator">|</span> <span class="token keyword">void</span><span class="token punctuation">;</span>
  <span class="token literal-property property">children</span><span class="token operator">:</span> <span class="token operator">?</span>Array<span class="token operator">&lt;</span>VNode<span class="token operator">&gt;</span><span class="token punctuation">;</span>
  <span class="token literal-property property">text</span><span class="token operator">:</span> string <span class="token operator">|</span> <span class="token keyword">void</span><span class="token punctuation">;</span>
  <span class="token literal-property property">elm</span><span class="token operator">:</span> Node <span class="token operator">|</span> <span class="token keyword">void</span><span class="token punctuation">;</span>
  <span class="token literal-property property">ns</span><span class="token operator">:</span> string <span class="token operator">|</span> <span class="token keyword">void</span><span class="token punctuation">;</span>
  <span class="token literal-property property">context</span><span class="token operator">:</span> Component <span class="token operator">|</span> <span class="token keyword">void</span><span class="token punctuation">;</span> <span class="token comment">// rendered in this component&#39;s scope</span>
  <span class="token literal-property property">functionalContext</span><span class="token operator">:</span> Component <span class="token operator">|</span> <span class="token keyword">void</span><span class="token punctuation">;</span> <span class="token comment">// only for functional component root nodes</span>
  <span class="token literal-property property">key</span><span class="token operator">:</span> string <span class="token operator">|</span> number <span class="token operator">|</span> <span class="token keyword">void</span><span class="token punctuation">;</span>
  <span class="token literal-property property">componentOptions</span><span class="token operator">:</span> VNodeComponentOptions <span class="token operator">|</span> <span class="token keyword">void</span><span class="token punctuation">;</span>
  <span class="token literal-property property">componentInstance</span><span class="token operator">:</span> Component <span class="token operator">|</span> <span class="token keyword">void</span><span class="token punctuation">;</span> <span class="token comment">// component instance</span>
  <span class="token literal-property property">parent</span><span class="token operator">:</span> VNode <span class="token operator">|</span> <span class="token keyword">void</span><span class="token punctuation">;</span> <span class="token comment">// component placeholder node</span>
  <span class="token literal-property property">raw</span><span class="token operator">:</span> boolean<span class="token punctuation">;</span> <span class="token comment">// contains raw HTML? (server only)</span>
  <span class="token literal-property property">isStatic</span><span class="token operator">:</span> boolean<span class="token punctuation">;</span> <span class="token comment">// hoisted static node</span>
  <span class="token literal-property property">isRootInsert</span><span class="token operator">:</span> boolean<span class="token punctuation">;</span> <span class="token comment">// necessary for enter transition check</span>
  <span class="token literal-property property">isComment</span><span class="token operator">:</span> boolean<span class="token punctuation">;</span> <span class="token comment">// empty comment placeholder?</span>
  <span class="token literal-property property">isCloned</span><span class="token operator">:</span> boolean<span class="token punctuation">;</span> <span class="token comment">// is a cloned node?</span>
  <span class="token literal-property property">isOnce</span><span class="token operator">:</span> boolean<span class="token punctuation">;</span> <span class="token comment">// is a v-once node?</span>
  <span class="token comment">/*Github:https://github.com/answershuto*/</span>
  
  <span class="token function">constructor</span> <span class="token punctuation">(</span>
    <span class="token parameter">tag<span class="token operator">?</span><span class="token operator">:</span> string<span class="token punctuation">,</span>
    data<span class="token operator">?</span><span class="token operator">:</span> VNodeData<span class="token punctuation">,</span>
    children<span class="token operator">?</span><span class="token operator">:</span> <span class="token operator">?</span>Array<span class="token operator">&lt;</span>VNode<span class="token operator">&gt;</span><span class="token punctuation">,</span>
    text<span class="token operator">?</span><span class="token operator">:</span> string<span class="token punctuation">,</span>
    elm<span class="token operator">?</span><span class="token operator">:</span> Node<span class="token punctuation">,</span>
    context<span class="token operator">?</span><span class="token operator">:</span> Component<span class="token punctuation">,</span>
    componentOptions<span class="token operator">?</span><span class="token operator">:</span> VNodeComponentOptions</span>
  <span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">/*\u5F53\u524D\u8282\u70B9\u7684\u6807\u7B7E\u540D*/</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>tag <span class="token operator">=</span> tag
    <span class="token comment">/*\u5F53\u524D\u8282\u70B9\u5BF9\u5E94\u7684\u5BF9\u8C61\uFF0C\u5305\u542B\u4E86\u5177\u4F53\u7684\u4E00\u4E9B\u6570\u636E\u4FE1\u606F\uFF0C\u662F\u4E00\u4E2AVNodeData\u7C7B\u578B\uFF0C\u53EF\u4EE5\u53C2\u8003VNodeData\u7C7B\u578B\u4E2D\u7684\u6570\u636E\u4FE1\u606F*/</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>data <span class="token operator">=</span> data
    <span class="token comment">/*\u5F53\u524D\u8282\u70B9\u7684\u5B50\u8282\u70B9\uFF0C\u662F\u4E00\u4E2A\u6570\u7EC4*/</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>children <span class="token operator">=</span> children
    <span class="token comment">/*\u5F53\u524D\u8282\u70B9\u7684\u6587\u672C*/</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>text <span class="token operator">=</span> text
    <span class="token comment">/*\u5F53\u524D\u865A\u62DF\u8282\u70B9\u5BF9\u5E94\u7684\u771F\u5B9Edom\u8282\u70B9*/</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>elm <span class="token operator">=</span> elm
    <span class="token comment">/*\u5F53\u524D\u8282\u70B9\u7684\u540D\u5B57\u7A7A\u95F4*/</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>ns <span class="token operator">=</span> <span class="token keyword">undefined</span>
    <span class="token comment">/*\u7F16\u8BD1\u4F5C\u7528\u57DF*/</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>context <span class="token operator">=</span> context
    <span class="token comment">/*\u51FD\u6570\u5316\u7EC4\u4EF6\u4F5C\u7528\u57DF*/</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>functionalContext <span class="token operator">=</span> <span class="token keyword">undefined</span>
    <span class="token comment">/*\u8282\u70B9\u7684key\u5C5E\u6027\uFF0C\u88AB\u5F53\u4F5C\u8282\u70B9\u7684\u6807\u5FD7\uFF0C\u7528\u4EE5\u4F18\u5316*/</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>key <span class="token operator">=</span> data <span class="token operator">&amp;&amp;</span> data<span class="token punctuation">.</span>key
    <span class="token comment">/*\u7EC4\u4EF6\u7684option\u9009\u9879*/</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>componentOptions <span class="token operator">=</span> componentOptions
    <span class="token comment">/*\u5F53\u524D\u8282\u70B9\u5BF9\u5E94\u7684\u7EC4\u4EF6\u7684\u5B9E\u4F8B*/</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>componentInstance <span class="token operator">=</span> <span class="token keyword">undefined</span>
    <span class="token comment">/*\u5F53\u524D\u8282\u70B9\u7684\u7236\u8282\u70B9*/</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>parent <span class="token operator">=</span> <span class="token keyword">undefined</span>
    <span class="token comment">/*\u7B80\u800C\u8A00\u4E4B\u5C31\u662F\u662F\u5426\u4E3A\u539F\u751FHTML\u6216\u53EA\u662F\u666E\u901A\u6587\u672C\uFF0CinnerHTML\u7684\u65F6\u5019\u4E3Atrue\uFF0CtextContent\u7684\u65F6\u5019\u4E3Afalse*/</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>raw <span class="token operator">=</span> <span class="token boolean">false</span>
    <span class="token comment">/*\u9759\u6001\u8282\u70B9\u6807\u5FD7*/</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>isStatic <span class="token operator">=</span> <span class="token boolean">false</span>
    <span class="token comment">/*\u662F\u5426\u4F5C\u4E3A\u8DDF\u8282\u70B9\u63D2\u5165*/</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>isRootInsert <span class="token operator">=</span> <span class="token boolean">true</span>
    <span class="token comment">/*\u662F\u5426\u4E3A\u6CE8\u91CA\u8282\u70B9*/</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>isComment <span class="token operator">=</span> <span class="token boolean">false</span>
    <span class="token comment">/*\u662F\u5426\u4E3A\u514B\u9686\u8282\u70B9*/</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>isCloned <span class="token operator">=</span> <span class="token boolean">false</span>
    <span class="token comment">/*\u662F\u5426\u6709v-once\u6307\u4EE4*/</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>isOnce <span class="token operator">=</span> <span class="token boolean">false</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// DEPRECATED: alias for componentInstance for backwards compat.</span>
  <span class="token comment">/* istanbul ignore next */</span>
  <span class="token keyword">get</span> <span class="token function">child</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> Component <span class="token operator">|</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>componentInstance
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br></div></div>`,2),y=n("\u5173\u4E8EVNode\u7684\u4E00\u4E9B\u7EC6\u8282\uFF0C\u8BF7\u53C2\u8003"),h={href:"https://github.com/answershuto/learnVue/blob/master/docs/VNode%E8%8A%82%E7%82%B9.MarkDown",target:"_blank",rel:"noopener noreferrer"},f=n("VNode\u8282\u70B9"),v=n("\u3002"),w=a(`<h2 id="createcompiler" tabindex="-1"><a class="header-anchor" href="#createcompiler" aria-hidden="true">#</a> createCompiler</h2><p>createCompiler\u7528\u4EE5\u521B\u5EFA\u7F16\u8BD1\u5668\uFF0C\u8FD4\u56DE\u503C\u662Fcompile\u4EE5\u53CAcompileToFunctions\u3002compile\u662F\u4E00\u4E2A\u7F16\u8BD1\u5668\uFF0C\u5B83\u4F1A\u5C06\u4F20\u5165\u7684template\u8F6C\u6362\u6210\u5BF9\u5E94\u7684AST\u3001render\u51FD\u6570\u4EE5\u53CAstaticRenderFns\u51FD\u6570\u3002\u800CcompileToFunctions\u5219\u662F\u5E26\u7F13\u5B58\u7684\u7F16\u8BD1\u5668\uFF0C\u540C\u65F6staticRenderFns\u4EE5\u53CArender\u51FD\u6570\u4F1A\u88AB\u8F6C\u6362\u6210Funtion\u5BF9\u8C61\u3002</p><p>\u56E0\u4E3A\u4E0D\u540C\u5E73\u53F0\u6709\u4E00\u4E9B\u4E0D\u540C\u7684options\uFF0C\u6240\u4EE5createCompiler\u4F1A\u6839\u636E\u5E73\u53F0\u533A\u5206\u4F20\u5165\u4E00\u4E2AbaseOptions\uFF0C\u4F1A\u4E0Ecompile\u672C\u8EAB\u4F20\u5165\u7684options\u5408\u5E76\u5F97\u5230\u6700\u7EC8\u7684finalOptions\u3002</p><h2 id="compiletofunctions" tabindex="-1"><a class="header-anchor" href="#compiletofunctions" aria-hidden="true">#</a> compileToFunctions</h2><p>\u9996\u5148\u8FD8\u662F\u8D34\u4E00\u4E0BcompileToFunctions\u7684\u4EE3\u7801\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token comment">/*\u5E26\u7F13\u5B58\u7684\u7F16\u8BD1\u5668\uFF0C\u540C\u65F6staticRenderFns\u4EE5\u53CArender\u51FD\u6570\u4F1A\u88AB\u8F6C\u6362\u6210Funtion\u5BF9\u8C61*/</span>
  <span class="token keyword">function</span> <span class="token function">compileToFunctions</span> <span class="token punctuation">(</span>
    <span class="token parameter"><span class="token literal-property property">template</span><span class="token operator">:</span> string<span class="token punctuation">,</span>
    options<span class="token operator">?</span><span class="token operator">:</span> CompilerOptions<span class="token punctuation">,</span>
    vm<span class="token operator">?</span><span class="token operator">:</span> Component</span>
  <span class="token punctuation">)</span><span class="token operator">:</span> CompiledFunctionResult <span class="token punctuation">{</span>
    options <span class="token operator">=</span> options <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

    <span class="token comment">/* istanbul ignore if */</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">!==</span> <span class="token string">&#39;production&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// detect possible CSP restriction</span>
      <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token keyword">new</span> <span class="token class-name">Function</span><span class="token punctuation">(</span><span class="token string">&#39;return 1&#39;</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">unsafe-eval|CSP</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token function">warn</span><span class="token punctuation">(</span>
            <span class="token string">&#39;It seems you are using the standalone build of Vue.js in an &#39;</span> <span class="token operator">+</span>
            <span class="token string">&#39;environment with Content Security Policy that prohibits unsafe-eval. &#39;</span> <span class="token operator">+</span>
            <span class="token string">&#39;The template compiler cannot work in this environment. Consider &#39;</span> <span class="token operator">+</span>
            <span class="token string">&#39;relaxing the policy to allow unsafe-eval or pre-compiling your &#39;</span> <span class="token operator">+</span>
            <span class="token string">&#39;templates into render functions.&#39;</span>
          <span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token comment">/*Github:https://github.com/answershuto*/</span>
    <span class="token comment">// check cache</span>
    <span class="token comment">/*\u6709\u7F13\u5B58\u7684\u65F6\u5019\u76F4\u63A5\u53D6\u51FA\u7F13\u5B58\u4E2D\u7684\u7ED3\u679C\u5373\u53EF*/</span>
    <span class="token keyword">const</span> key <span class="token operator">=</span> options<span class="token punctuation">.</span>delimiters
      <span class="token operator">?</span> <span class="token function">String</span><span class="token punctuation">(</span>options<span class="token punctuation">.</span>delimiters<span class="token punctuation">)</span> <span class="token operator">+</span> template
      <span class="token operator">:</span> template
    <span class="token keyword">if</span> <span class="token punctuation">(</span>functionCompileCache<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> functionCompileCache<span class="token punctuation">[</span>key<span class="token punctuation">]</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// compile</span>
    <span class="token comment">/*\u7F16\u8BD1*/</span>
    <span class="token keyword">const</span> compiled <span class="token operator">=</span> <span class="token function">compile</span><span class="token punctuation">(</span>template<span class="token punctuation">,</span> options<span class="token punctuation">)</span>

    <span class="token comment">// check compilation errors/tips</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">!==</span> <span class="token string">&#39;production&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>compiled<span class="token punctuation">.</span>errors <span class="token operator">&amp;&amp;</span> compiled<span class="token punctuation">.</span>errors<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">warn</span><span class="token punctuation">(</span>
          <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Error compiling template:\\n\\n</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>template<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\\n\\n</span><span class="token template-punctuation string">\`</span></span> <span class="token operator">+</span>
          compiled<span class="token punctuation">.</span>errors<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">e</span> <span class="token operator">=&gt;</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">- </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>e<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;\\n&#39;</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&#39;\\n&#39;</span><span class="token punctuation">,</span>
          vm
        <span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>compiled<span class="token punctuation">.</span>tips <span class="token operator">&amp;&amp;</span> compiled<span class="token punctuation">.</span>tips<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        compiled<span class="token punctuation">.</span>tips<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">msg</span> <span class="token operator">=&gt;</span> <span class="token function">tip</span><span class="token punctuation">(</span>msg<span class="token punctuation">,</span> vm<span class="token punctuation">)</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// turn code into functions</span>
    <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
    <span class="token keyword">const</span> fnGenErrors <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token comment">/*\u5C06render\u8F6C\u6362\u6210Funtion\u5BF9\u8C61*/</span>
    res<span class="token punctuation">.</span>render <span class="token operator">=</span> <span class="token function">makeFunction</span><span class="token punctuation">(</span>compiled<span class="token punctuation">.</span>render<span class="token punctuation">,</span> fnGenErrors<span class="token punctuation">)</span>
    <span class="token comment">/*\u5C06staticRenderFns\u5168\u90E8\u8F6C\u5316\u6210Funtion\u5BF9\u8C61 */</span>
    <span class="token keyword">const</span> l <span class="token operator">=</span> compiled<span class="token punctuation">.</span>staticRenderFns<span class="token punctuation">.</span>length
    res<span class="token punctuation">.</span>staticRenderFns <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span>l<span class="token punctuation">)</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> l<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      res<span class="token punctuation">.</span>staticRenderFns<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">makeFunction</span><span class="token punctuation">(</span>compiled<span class="token punctuation">.</span>staticRenderFns<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> fnGenErrors<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// check function generation errors.</span>
    <span class="token comment">// this should only happen if there is a bug in the compiler itself.</span>
    <span class="token comment">// mostly for codegen development use</span>
    <span class="token comment">/* istanbul ignore if */</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">!==</span> <span class="token string">&#39;production&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">!</span>compiled<span class="token punctuation">.</span>errors <span class="token operator">||</span> <span class="token operator">!</span>compiled<span class="token punctuation">.</span>errors<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> fnGenErrors<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">warn</span><span class="token punctuation">(</span>
          <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Failed to generate render function:\\n\\n</span><span class="token template-punctuation string">\`</span></span> <span class="token operator">+</span>
          fnGenErrors<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> err<span class="token punctuation">,</span> code <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>err<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> in\\n\\n</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>code<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\\n</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;\\n&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
          vm
        <span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token comment">/*\u5B58\u653E\u5728\u7F13\u5B58\u4E2D\uFF0C\u4EE5\u514D\u6BCF\u6B21\u90FD\u91CD\u65B0\u7F16\u8BD1*/</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>functionCompileCache<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> res<span class="token punctuation">)</span> 
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br></div></div><p>\u53EF\u4EE5\u53D1\u73B0\uFF0C\u5728\u95ED\u5305\u4E2D\uFF0C\u4F1A\u6709\u4E00\u4E2AfunctionCompileCache\u5BF9\u8C61\u4F5C\u4E3A\u7F13\u5B58\u5668\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token comment">/*\u4F5C\u4E3A\u7F13\u5B58\uFF0C\u9632\u6B62\u6BCF\u6B21\u90FD\u91CD\u65B0\u7F16\u8BD1*/</span>
  <span class="token keyword">const</span> <span class="token literal-property property">functionCompileCache</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token punctuation">[</span>key<span class="token operator">:</span> string<span class="token punctuation">]</span><span class="token operator">:</span> CompiledFunctionResult<span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>\u5728\u8FDB\u5165compileToFunctions\u4EE5\u540E\uFF0C\u4F1A\u5148\u68C0\u67E5\u7F13\u5B58\u4E2D\u662F\u5426\u6709\u5DF2\u7ECF\u7F16\u8BD1\u597D\u7684\u7ED3\u679C\uFF0C\u5982\u679C\u6709\u7ED3\u679C\u5219\u76F4\u63A5\u4ECE\u7F13\u5B58\u4E2D\u8BFB\u53D6\u3002\u8FD9\u6837\u505A\u9632\u6B62\u6BCF\u6B21\u540C\u6837\u7684\u6A21\u677F\u90FD\u8981\u8FDB\u884C\u91CD\u590D\u7684\u7F16\u8BD1\u5DE5\u4F5C\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>    <span class="token comment">// check cache</span>
    <span class="token comment">/*\u6709\u7F13\u5B58\u7684\u65F6\u5019\u76F4\u63A5\u53D6\u51FA\u7F13\u5B58\u4E2D\u7684\u7ED3\u679C\u5373\u53EF*/</span>
    <span class="token keyword">const</span> key <span class="token operator">=</span> options<span class="token punctuation">.</span>delimiters
      <span class="token operator">?</span> <span class="token function">String</span><span class="token punctuation">(</span>options<span class="token punctuation">.</span>delimiters<span class="token punctuation">)</span> <span class="token operator">+</span> template
      <span class="token operator">:</span> template
    <span class="token keyword">if</span> <span class="token punctuation">(</span>functionCompileCache<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> functionCompileCache<span class="token punctuation">[</span>key<span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>\u5728compileToFunctions\u7684\u672B\u5C3E\u4F1A\u5C06\u7F16\u8BD1\u7ED3\u679C\u8FDB\u884C\u7F13\u5B58</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token comment">/*\u5B58\u653E\u5728\u7F13\u5B58\u4E2D\uFF0C\u4EE5\u514D\u6BCF\u6B21\u90FD\u91CD\u65B0\u7F16\u8BD1*/</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>functionCompileCache<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> res<span class="token punctuation">)</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="compile" tabindex="-1"><a class="header-anchor" href="#compile" aria-hidden="true">#</a> compile</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token comment">/*\u7F16\u8BD1\uFF0C\u5C06\u6A21\u677Ftemplate\u7F16\u8BD1\u6210AST\u3001render\u51FD\u6570\u4EE5\u53CAstaticRenderFns\u51FD\u6570*/</span>
  <span class="token keyword">function</span> <span class="token function">compile</span> <span class="token punctuation">(</span>
    <span class="token parameter"><span class="token literal-property property">template</span><span class="token operator">:</span> string<span class="token punctuation">,</span>
    options<span class="token operator">?</span><span class="token operator">:</span> CompilerOptions</span>
  <span class="token punctuation">)</span><span class="token operator">:</span> CompiledResult <span class="token punctuation">{</span>
    <span class="token keyword">const</span> finalOptions <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>baseOptions<span class="token punctuation">)</span>
    <span class="token keyword">const</span> errors <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token keyword">const</span> tips <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    finalOptions<span class="token punctuation">.</span><span class="token function-variable function">warn</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">msg<span class="token punctuation">,</span> tip</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token punctuation">(</span>tip <span class="token operator">?</span> tips <span class="token operator">:</span> errors<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token comment">/*\u505A\u4E0B\u9762\u8FD9\u4E9Bmerge\u7684\u76EE\u7684\u56E0\u4E3A\u4E0D\u540C\u5E73\u53F0\u53EF\u4EE5\u63D0\u4F9B\u81EA\u5DF1\u672C\u8EAB\u5E73\u53F0\u7684\u4E00\u4E2AbaseOptions\uFF0C\u5185\u90E8\u5C01\u88C5\u4E86\u5E73\u53F0\u81EA\u5DF1\u7684\u5B9E\u73B0\uFF0C\u7136\u540E\u628A\u5171\u540C\u7684\u90E8\u5206\u62BD\u79BB\u5F00\u6765\u653E\u5728\u8FD9\u5C42compiler\u4E2D\uFF0C\u6240\u4EE5\u5728\u8FD9\u91CC\u9700\u8981merge\u4E00\u4E0B*/</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>options<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// merge custom modules</span>
      <span class="token comment">/*\u5408\u5E76modules*/</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>options<span class="token punctuation">.</span>modules<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        finalOptions<span class="token punctuation">.</span>modules <span class="token operator">=</span> <span class="token punctuation">(</span>baseOptions<span class="token punctuation">.</span>modules <span class="token operator">||</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>options<span class="token punctuation">.</span>modules<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
      <span class="token comment">// merge custom directives</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>options<span class="token punctuation">.</span>directives<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">/*\u5408\u5E76directives*/</span>
        finalOptions<span class="token punctuation">.</span>directives <span class="token operator">=</span> <span class="token function">extend</span><span class="token punctuation">(</span>
          Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>baseOptions<span class="token punctuation">.</span>directives<span class="token punctuation">)</span><span class="token punctuation">,</span>
          options<span class="token punctuation">.</span>directives
        <span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
      <span class="token comment">// copy other options</span>
      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> key <span class="token keyword">in</span> options<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">/*\u5408\u5E76\u5176\u4F59\u7684options\uFF0Cmodules\u4E0Edirectives\u5DF2\u7ECF\u5728\u4E0A\u9762\u505A\u4E86\u7279\u6B8A\u5904\u7406\u4E86*/</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>key <span class="token operator">!==</span> <span class="token string">&#39;modules&#39;</span> <span class="token operator">&amp;&amp;</span> key <span class="token operator">!==</span> <span class="token string">&#39;directives&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          finalOptions<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> options<span class="token punctuation">[</span>key<span class="token punctuation">]</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token comment">/*\u57FA\u7840\u6A21\u677F\u7F16\u8BD1\uFF0C\u5F97\u5230\u7F16\u8BD1\u7ED3\u679C*/</span>
    <span class="token keyword">const</span> compiled <span class="token operator">=</span> <span class="token function">baseCompile</span><span class="token punctuation">(</span>template<span class="token punctuation">,</span> finalOptions<span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">!==</span> <span class="token string">&#39;production&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      errors<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>errors<span class="token punctuation">,</span> <span class="token function">detectErrors</span><span class="token punctuation">(</span>compiled<span class="token punctuation">.</span>ast<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    compiled<span class="token punctuation">.</span>errors <span class="token operator">=</span> errors
    compiled<span class="token punctuation">.</span>tips <span class="token operator">=</span> tips
    <span class="token keyword">return</span> compiled
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br></div></div><p>compile\u4E3B\u8981\u505A\u4E86\u4E24\u4EF6\u4E8B\uFF0C\u4E00\u4EF6\u662F\u5408\u5E76option\uFF08\u524D\u9762\u8BF4\u7684\u5C06\u5E73\u53F0\u81EA\u6709\u7684option\u4E0E\u4F20\u5165\u7684option\u8FDB\u884C\u5408\u5E76\uFF09\uFF0C\u53E6\u4E00\u4EF6\u662FbaseCompile\uFF0C\u8FDB\u884C\u6A21\u677Ftemplate\u7684\u7F16\u8BD1\u3002</p><p>\u6765\u770B\u4E00\u4E0BbaseCompile</p><h2 id="basecompile" tabindex="-1"><a class="header-anchor" href="#basecompile" aria-hidden="true">#</a> baseCompile</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">baseCompile</span> <span class="token punctuation">(</span>
  <span class="token parameter"><span class="token literal-property property">template</span><span class="token operator">:</span> string<span class="token punctuation">,</span>
  <span class="token literal-property property">options</span><span class="token operator">:</span> CompilerOptions</span>
<span class="token punctuation">)</span><span class="token operator">:</span> CompiledResult <span class="token punctuation">{</span>
  <span class="token comment">/*parse\u89E3\u6790\u5F97\u5230AST*/</span>
  <span class="token keyword">const</span> ast <span class="token operator">=</span> <span class="token function">parse</span><span class="token punctuation">(</span>template<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> options<span class="token punctuation">)</span>
  <span class="token comment">/*
    \u5C06AST\u8FDB\u884C\u4F18\u5316
    \u4F18\u5316\u7684\u76EE\u6807\uFF1A\u751F\u6210\u6A21\u677FAST\uFF0C\u68C0\u6D4B\u4E0D\u9700\u8981\u8FDB\u884CDOM\u6539\u53D8\u7684\u9759\u6001\u5B50\u6811\u3002
    \u4E00\u65E6\u68C0\u6D4B\u5230\u8FD9\u4E9B\u9759\u6001\u6811\uFF0C\u5C31\u80FD\u505A\u4EE5\u4E0B\u8FD9\u4E9B\u4E8B\u60C5\uFF1A
    1.\u628A\u5B83\u4EEC\u53D8\u6210\u5E38\u6570\uFF0C\u8FD9\u6837\u5C31\u518D\u4E5F\u4E0D\u9700\u8981\u6BCF\u6B21\u91CD\u65B0\u6E32\u67D3\u65F6\u521B\u5EFA\u65B0\u7684\u8282\u70B9\u4E86\u3002
    2.\u5728patch\u7684\u8FC7\u7A0B\u4E2D\u76F4\u63A5\u8DF3\u8FC7\u3002
 */</span>
  <span class="token function">optimize</span><span class="token punctuation">(</span>ast<span class="token punctuation">,</span> options<span class="token punctuation">)</span>
  <span class="token comment">/*\u6839\u636EAST\u751F\u6210\u6240\u9700\u7684code\uFF08\u5185\u90E8\u5305\u542Brender\u4E0EstaticRenderFns\uFF09*/</span>
  <span class="token keyword">const</span> code <span class="token operator">=</span> <span class="token function">generate</span><span class="token punctuation">(</span>ast<span class="token punctuation">,</span> options<span class="token punctuation">)</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    ast<span class="token punctuation">,</span>
    <span class="token literal-property property">render</span><span class="token operator">:</span> code<span class="token punctuation">.</span>render<span class="token punctuation">,</span>
    <span class="token literal-property property">staticRenderFns</span><span class="token operator">:</span> code<span class="token punctuation">.</span>staticRenderFns
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><p>baseCompile\u9996\u5148\u4F1A\u5C06\u6A21\u677Ftemplate\u8FDB\u884Cparse\u5F97\u5230\u4E00\u4E2AAST\uFF0C\u518D\u901A\u8FC7optimize\u505A\u4E00\u4E9B\u4F18\u5316\uFF0C\u6700\u540E\u901A\u8FC7generate\u5F97\u5230render\u4EE5\u53CAstaticRenderFns\u3002</p><h3 id="parse" tabindex="-1"><a class="header-anchor" href="#parse" aria-hidden="true">#</a> parse</h3>`,20),_=n("parse\u7684\u6E90\u7801\u53EF\u4EE5\u53C2\u89C1"),x={href:"https://github.com/answershuto/learnVue/blob/master/vue-src/compiler/parser/index.js#L53",target:"_blank",rel:"noopener noreferrer"},C=n("https://github.com/answershuto/learnVue/blob/master/vue-src/compiler/parser/index.js#L53"),V=n("\u3002"),N=a(`<p>parse\u4F1A\u7528\u6B63\u5219\u7B49\u65B9\u5F0F\u89E3\u6790template\u6A21\u677F\u4E2D\u7684\u6307\u4EE4\u3001class\u3001style\u7B49\u6570\u636E\uFF0C\u5F62\u6210AST\u3002</p><h3 id="optimize" tabindex="-1"><a class="header-anchor" href="#optimize" aria-hidden="true">#</a> optimize</h3><p>optimize\u7684\u4E3B\u8981\u4F5C\u7528\u662F\u6807\u8BB0static\u9759\u6001\u8282\u70B9\uFF0C\u8FD9\u662FVue\u5728\u7F16\u8BD1\u8FC7\u7A0B\u4E2D\u7684\u4E00\u5904\u4F18\u5316\uFF0C\u540E\u9762\u5F53update\u66F4\u65B0\u754C\u9762\u65F6\uFF0C\u4F1A\u6709\u4E00\u4E2Apatch\u7684\u8FC7\u7A0B\uFF0Cdiff\u7B97\u6CD5\u4F1A\u76F4\u63A5\u8DF3\u8FC7\u9759\u6001\u8282\u70B9\uFF0C\u4ECE\u800C\u51CF\u5C11\u4E86\u6BD4\u8F83\u7684\u8FC7\u7A0B\uFF0C\u4F18\u5316\u4E86patch\u7684\u6027\u80FD\u3002</p><h3 id="generate" tabindex="-1"><a class="header-anchor" href="#generate" aria-hidden="true">#</a> generate</h3><p>generate\u662F\u5C06AST\u8F6C\u5316\u6210render funtion\u5B57\u7B26\u4E32\u7684\u8FC7\u7A0B\uFF0C\u5F97\u5230\u7ED3\u679C\u662Frender\u7684\u5B57\u7B26\u4E32\u4EE5\u53CAstaticRenderFns\u5B57\u7B26\u4E32\u3002</p><hr><p>\u81F3\u6B64\uFF0C\u7684template\u6A21\u677F\u5DF2\u7ECF\u88AB\u8F6C\u5316\u6210\u4E86\u6240\u9700\u7684AST\u3001render function\u5B57\u7B26\u4E32\u4EE5\u53CAstaticRenderFns\u5B57\u7B26\u4E32\u3002</p><h2 id="\u4E3E\u4E2A\u4F8B\u5B50" tabindex="-1"><a class="header-anchor" href="#\u4E3E\u4E2A\u4F8B\u5B50" aria-hidden="true">#</a> \u4E3E\u4E2A\u4F8B\u5B50</h2><p>\u6765\u770B\u4E00\u4E0B\u8FD9\u6BB5\u4EE3\u7801\u7684\u7F16\u8BD1\u7ED3\u679C</p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>main<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>bindClass<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>{{text}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>hello world<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>(item, index) in arr<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>{{item.name}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>{{item.value}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>{{index}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>---<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        {{text}}
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">v-else</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p>\u8F6C\u5316\u540E\u5F97\u5230AST\uFF0C\u5982\u4E0B\u56FE\uFF1A</p><p><img src="https://i.loli.net/2017/09/07/59b135001cbfa.png" alt="img"></p><p>\u53EF\u4EE5\u770B\u5230\u6700\u5916\u5C42\u7684div\u662F\u8FD9\u9897AST\u7684\u6839\u8282\u70B9\uFF0C\u8282\u70B9\u4E0A\u6709\u8BB8\u591A\u6570\u636E\u4EE3\u8868\u8FD9\u4E2A\u8282\u70B9\u7684\u5F62\u6001\uFF0C\u6BD4\u5982static\u8868\u793A\u662F\u5426\u662F\u9759\u6001\u8282\u70B9\uFF0CstaticClass\u8868\u793A\u9759\u6001class\u5C5E\u6027\uFF08\u975Ebind:class\uFF09\u3002children\u4EE3\u8868\u8BE5\u8282\u70B9\u7684\u5B50\u8282\u70B9\uFF0C\u53EF\u4EE5\u770B\u5230children\u662F\u4E00\u4E2A\u957F\u5EA6\u4E3A4\u7684\u6570\u7EC4\uFF0C\u91CC\u9762\u5305\u542B\u7684\u662F\u8BE5\u8282\u70B9\u4E0B\u7684\u56DB\u4E2Adiv\u5B50\u8282\u70B9\u3002children\u91CC\u9762\u7684\u8282\u70B9\u4E0E\u7236\u8282\u70B9\u7684\u7ED3\u6784\u7C7B\u4F3C\uFF0C\u5C42\u5C42\u5F80\u4E0B\u5F62\u6210\u4E00\u68F5AST\u3002</p><p>\u518D\u6765\u770B\u770B\u7531AST\u5F97\u5230\u7684render\u51FD\u6570</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">with</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">_c</span><span class="token punctuation">(</span>  <span class="token string">&#39;div&#39;</span><span class="token punctuation">,</span>
                <span class="token punctuation">{</span>
                    <span class="token comment">/*static class*/</span>
                    <span class="token literal-property property">staticClass</span><span class="token operator">:</span><span class="token string">&quot;main&quot;</span><span class="token punctuation">,</span>
                    <span class="token comment">/*bind class*/</span>
                    <span class="token keyword">class</span><span class="token operator">:</span>bindClass
                <span class="token punctuation">}</span><span class="token punctuation">,</span>
                <span class="token punctuation">[</span>
                    <span class="token function">_c</span><span class="token punctuation">(</span> <span class="token string">&#39;div&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token function">_v</span><span class="token punctuation">(</span><span class="token function">_s</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                    <span class="token function">_c</span><span class="token punctuation">(</span><span class="token string">&#39;div&#39;</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token function">_v</span><span class="token punctuation">(</span><span class="token string">&quot;hello world&quot;</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                    <span class="token comment">/*\u8FD9\u662F\u4E00\u4E2Av-for\u5FAA\u73AF*/</span>
                    <span class="token function">_l</span><span class="token punctuation">(</span>
                        <span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">,</span>
                        <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">item<span class="token punctuation">,</span>index</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                            <span class="token keyword">return</span> <span class="token function">_c</span><span class="token punctuation">(</span>  <span class="token string">&#39;div&#39;</span><span class="token punctuation">,</span>
                                        <span class="token punctuation">[</span><span class="token function">_c</span><span class="token punctuation">(</span><span class="token string">&#39;p&#39;</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token function">_v</span><span class="token punctuation">(</span><span class="token function">_s</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                                        <span class="token function">_c</span><span class="token punctuation">(</span><span class="token string">&#39;p&#39;</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token function">_v</span><span class="token punctuation">(</span><span class="token function">_s</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                                        <span class="token function">_c</span><span class="token punctuation">(</span><span class="token string">&#39;p&#39;</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token function">_v</span><span class="token punctuation">(</span><span class="token function">_s</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                                        <span class="token function">_c</span><span class="token punctuation">(</span><span class="token string">&#39;p&#39;</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token function">_v</span><span class="token punctuation">(</span><span class="token string">&quot;---&quot;</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
                                    <span class="token punctuation">)</span>
                        <span class="token punctuation">}</span>
                    <span class="token punctuation">)</span><span class="token punctuation">,</span>
                    <span class="token comment">/*\u8FD9\u662Fv-if*/</span>
                    <span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token operator">?</span><span class="token function">_c</span><span class="token punctuation">(</span><span class="token string">&#39;div&#39;</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token function">_v</span><span class="token punctuation">(</span><span class="token function">_s</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token function">_c</span><span class="token punctuation">(</span><span class="token string">&#39;div&#39;</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token function">_v</span><span class="token punctuation">(</span><span class="token string">&quot;no text&quot;</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
                    <span class="token number">2</span>
            <span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br></div></div><h2 id="c-v-s-q" tabindex="-1"><a class="header-anchor" href="#c-v-s-q" aria-hidden="true">#</a> _c\uFF0C_v\uFF0C_s\uFF0C_q</h2><p>\u770B\u4E86render function\u5B57\u7B26\u4E32\uFF0C\u53D1\u73B0\u6709\u5927\u91CF\u7684_c\uFF0C_v\uFF0C_s\uFF0C_q\uFF0C\u8FD9\u4E9B\u51FD\u6570\u7A76\u7ADF\u662F\u4EC0\u4E48\uFF1F</p>`,17),E=n("\u5E26\u7740\u95EE\u9898\uFF0C\u6765\u770B\u4E00\u4E0B"),O={href:"https://github.com/answershuto/learnVue/blob/master/vue-src/core/instance/render.js#L124",target:"_blank",rel:"noopener noreferrer"},T=n("core/instance/render"),F=n("\u3002"),j=a(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">/*\u5904\u7406v-once\u7684\u6E32\u67D3\u51FD\u6570*/</span>
  <span class="token class-name">Vue</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>_o <span class="token operator">=</span> markOnce
  <span class="token comment">/*\u5C06\u5B57\u7B26\u4E32\u8F6C\u5316\u4E3A\u6570\u5B57\uFF0C\u5982\u679C\u8F6C\u6362\u5931\u8D25\u4F1A\u8FD4\u56DE\u539F\u5B57\u7B26\u4E32*/</span>
  <span class="token class-name">Vue</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>_n <span class="token operator">=</span> toNumber
  <span class="token comment">/*\u5C06val\u8F6C\u5316\u6210\u5B57\u7B26\u4E32*/</span>
  <span class="token class-name">Vue</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>_s <span class="token operator">=</span> toString
  <span class="token comment">/*\u5904\u7406v-for\u5217\u8868\u6E32\u67D3*/</span>
  <span class="token class-name">Vue</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>_l <span class="token operator">=</span> renderList
  <span class="token comment">/*\u5904\u7406slot\u7684\u6E32\u67D3*/</span>
  <span class="token class-name">Vue</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>_t <span class="token operator">=</span> renderSlot
  <span class="token comment">/*\u68C0\u6D4B\u4E24\u4E2A\u53D8\u91CF\u662F\u5426\u76F8\u7B49*/</span>
  <span class="token class-name">Vue</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>_q <span class="token operator">=</span> looseEqual
  <span class="token comment">/*\u68C0\u6D4Barr\u6570\u7EC4\u4E2D\u662F\u5426\u5305\u542B\u4E0Eval\u53D8\u91CF\u76F8\u7B49\u7684\u9879*/</span>
  <span class="token class-name">Vue</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>_i <span class="token operator">=</span> looseIndexOf
  <span class="token comment">/*\u5904\u7406static\u6811\u7684\u6E32\u67D3*/</span>
  <span class="token class-name">Vue</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>_m <span class="token operator">=</span> renderStatic
  <span class="token comment">/*\u5904\u7406filters*/</span>
  <span class="token class-name">Vue</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>_f <span class="token operator">=</span> resolveFilter
  <span class="token comment">/*\u4ECEconfig\u914D\u7F6E\u4E2D\u68C0\u67E5eventKeyCode\u662F\u5426\u5B58\u5728*/</span>
  <span class="token class-name">Vue</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>_k <span class="token operator">=</span> checkKeyCodes
  <span class="token comment">/*\u5408\u5E76v-bind\u6307\u4EE4\u5230VNode\u4E2D*/</span>
  <span class="token class-name">Vue</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>_b <span class="token operator">=</span> bindObjectProps
  <span class="token comment">/*\u521B\u5EFA\u4E00\u4E2A\u6587\u672C\u8282\u70B9*/</span>
  <span class="token class-name">Vue</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>_v <span class="token operator">=</span> createTextVNode
  <span class="token comment">/*\u521B\u5EFA\u4E00\u4E2A\u7A7AVNode\u8282\u70B9*/</span>
  <span class="token class-name">Vue</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>_e <span class="token operator">=</span> createEmptyVNode
  <span class="token comment">/*\u5904\u7406ScopedSlots*/</span>
  <span class="token class-name">Vue</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>_u <span class="token operator">=</span> resolveScopedSlots

  <span class="token comment">/*\u521B\u5EFAVNode\u8282\u70B9*/</span>
  vm<span class="token punctuation">.</span><span class="token function-variable function">_c</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c<span class="token punctuation">,</span> d</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">createElement</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c<span class="token punctuation">,</span> d<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br></div></div><p>\u901A\u8FC7\u8FD9\u4E9B\u51FD\u6570\uFF0Crender\u51FD\u6570\u6700\u540E\u4F1A\u8FD4\u56DE\u4E00\u4E2AVNode\u8282\u70B9\uFF0C\u5728_update\u7684\u65F6\u5019\uFF0C\u7ECF\u8FC7patch\u4E0E\u4E4B\u524D\u7684VNode\u8282\u70B9\u8FDB\u884C\u6BD4\u8F83\uFF0C\u5F97\u51FA\u5DEE\u5F02\u540E\u5C06\u8FD9\u4E9B\u5DEE\u5F02\u6E32\u67D3\u5230\u771F\u5B9E\u7684DOM\u4E0A\u3002</p>`,2);function S(A,q){const p=e("ExternalLinkIcon");return o(),c(l,null,[i,s("p",null,[k,s("a",m,[b,t(p)]),d]),g,s("p",null,[y,s("a",h,[f,t(p)]),v]),w,s("p",null,[_,s("a",x,[C,t(p)]),V]),N,s("p",null,[E,s("a",O,[T,t(p)]),F]),j],64)}var L=r(u,[["render",S]]);export{L as default};
