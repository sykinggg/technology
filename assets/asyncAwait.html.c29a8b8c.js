import{o as p,c as t,b as a,F as e,a as n}from"./app.ba47fc91.js";import{_ as o}from"./plugin-vue_export-helper.21dcd24c.js";const c={},l=n(`<h1 id="async-await\u539F\u7406" tabindex="-1"><a class="header-anchor" href="#async-await\u539F\u7406" aria-hidden="true">#</a> async/await\u539F\u7406</h1><h2 id="async-await\u7528\u6CD5" tabindex="-1"><a class="header-anchor" href="#async-await\u7528\u6CD5" aria-hidden="true">#</a> async/await\u7528\u6CD5</h2><h3 id="\u4F7F\u7528\u573A\u666F" tabindex="-1"><a class="header-anchor" href="#\u4F7F\u7528\u573A\u666F" aria-hidden="true">#</a> \u4F7F\u7528\u573A\u666F</h3><p><code>async/await</code>\u7684\u7528\u5904\u5C31\u662F\uFF1A<strong>\u7528\u540C\u6B65\u65B9\u5F0F\uFF0C\u6267\u884C\u5F02\u6B65\u64CD\u4F5C</strong>\uFF0C\u4E3E\u4E2A\u4F8B\u5B50</p><p>\u6BD4\u5982\u6211\u73B0\u5728\u6709\u4E00\u4E2A\u9700\u6C42\uFF1A\u5148\u8BF7\u6C42\u5B8C<code>\u63A5\u53E31</code>\uFF0C\u518D\u53BB\u8BF7\u6C42<code>\u63A5\u53E32</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">request</span><span class="token punctuation">(</span><span class="token parameter">num</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u6A21\u62DF\u63A5\u53E3\u8BF7\u6C42</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token parameter">resolve</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token function">resolve</span><span class="token punctuation">(</span>num <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token function">request</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res1</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res1<span class="token punctuation">)</span> <span class="token comment">// 1\u79D2\u540E \u8F93\u51FA 2</span>

  <span class="token function">request</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res2</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res2<span class="token punctuation">)</span> <span class="token comment">// 2\u79D2\u540E \u8F93\u51FA 4</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p>\u6216\u8005\u6211\u73B0\u5728\u53C8\u6709\u4E00\u4E2A\u9700\u6C42\uFF1A\u5148\u8BF7\u6C42\u5B8C<code>\u63A5\u53E31</code>\uFF0C\u518D\u62FF<code>\u63A5\u53E31</code>\u8FD4\u56DE\u7684\u6570\u636E\uFF0C\u53BB\u5F53\u505A<code>\u63A5\u53E32</code>\u7684\u8BF7\u6C42\u53C2\u6570</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">request</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res1</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res1<span class="token punctuation">)</span> <span class="token comment">// 1\u79D2\u540E \u8F93\u51FA 10</span>

  <span class="token function">request</span><span class="token punctuation">(</span>res1<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res2</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res2<span class="token punctuation">)</span> <span class="token comment">// 2\u79D2\u540E \u8F93\u51FA 20</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>\u5176\u5B9E\u8FD9\u4E48\u505A\u662F\u6CA1\u95EE\u9898\u7684\uFF0C\u4F46\u662F\u5982\u679C\u5D4C\u5957\u7684\u591A\u4E86\uFF0C\u4E0D\u514D\u6709\u70B9\u4E0D\u96C5\u89C2\uFF0C\u8FD9\u4E2A\u65F6\u5019\u5C31\u53EF\u4EE5\u7528<code>async/await</code>\u6765\u89E3\u51B3\u4E86</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">fn</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> res1 <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">request</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> res2 <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">request</span><span class="token punctuation">(</span>res1<span class="token punctuation">)</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res2<span class="token punctuation">)</span> <span class="token comment">// 2\u79D2\u540E\u8F93\u51FA 20</span>
<span class="token punctuation">}</span>
<span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="\u4F7F\u7528\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u4F7F\u7528\u65B9\u6CD5" aria-hidden="true">#</a> \u4F7F\u7528\u65B9\u6CD5</h3><p>\u9700\u6C42\u4E00\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">fn</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">await</span> <span class="token function">request</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
  <span class="token keyword">await</span> <span class="token function">request</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
  <span class="token comment">// 2\u79D2\u540E\u6267\u884C\u5B8C</span>
<span class="token punctuation">}</span>
<span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>\u9700\u6C42\u4E8C\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">fn</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> res1 <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">request</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> res2 <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">request</span><span class="token punctuation">(</span>res1<span class="token punctuation">)</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res2<span class="token punctuation">)</span> <span class="token comment">// 2\u79D2\u540E\u8F93\u51FA 20</span>
<span class="token punctuation">}</span>
<span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div>`,15),u=["src"],i=n(`<p>\u5728a<code>sync</code>\u51FD\u6570\u4E2D\uFF0C<code>await</code>\u89C4\u5B9A\u4E86\u5F02\u6B65\u64CD\u4F5C\u53EA\u80FD\u4E00\u4E2A\u4E00\u4E2A\u6392\u961F\u6267\u884C\uFF0C\u4ECE\u800C\u8FBE\u5230<strong>\u7528\u540C\u6B65\u65B9\u5F0F\uFF0C\u6267\u884C\u5F02\u6B65\u64CD\u4F5C\u7684\u6548\u679C</strong>\uFF0C\u8FD9\u91CC\u6CE8\u610F\u4E86\uFF1A<strong>await\u53EA\u80FD\u5728async\u51FD\u6570\u4E2D\u4F7F\u7528\uFF0C\u4E0D\u7136\u4F1A\u62A5\u9519</strong></p><p>\u521A\u521A\u4E0A\u9762\u7684\u4F8B\u5B50<code>await</code>\u540E\u9762\u90FD\u662F\u8DDF\u7740\u5F02\u6B65\u64CD\u4F5C<code>Promise</code>\uFF0C\u90A3\u5982\u679C\u4E0D\u63A5<code>Promise</code>\u4F1A\u600E\u4E48\u6837\u5462\uFF1F</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">request</span><span class="token punctuation">(</span><span class="token parameter">num</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u53BB\u6389Promise</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>num <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">await</span> <span class="token function">request</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment">// 2</span>
  <span class="token keyword">await</span> <span class="token function">request</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token comment">// 4</span>
  <span class="token comment">// 1\u79D2\u540E\u6267\u884C\u5B8C  \u540C\u65F6\u8F93\u51FA</span>
<span class="token punctuation">}</span>
<span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p><code>async</code>\u662F\u4E00\u4E2A\u4F4D\u4E8Efunction\u4E4B\u524D\u7684\u524D\u7F00\uFF0C\u53EA\u6709<code>async\u51FD\u6570</code>\u4E2D\uFF0C\u624D\u80FD\u4F7F\u7528<code>await</code>\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">fn</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>fn<span class="token punctuation">)</span> <span class="token comment">// [AsyncFunction: fn]</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// Promise {&lt;fulfilled&gt;: undefined}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><code>async\u51FD\u6570</code>\u6267\u884C\u5B8C\u4F1A\u81EA\u52A8\u8FD4\u56DE\u4E00\u4E2A\u72B6\u6001\u4E3A<code>fulfilled</code>\u7684Promise\uFF0C\u4E5F\u5C31\u662F\u6210\u529F\u72B6\u6001\uFF0C\u4F46\u662F\u503C\u5374\u662Fundefined\uFF0C\u90A3\u8981\u600E\u4E48\u624D\u80FD\u4F7F\u503C\u4E0D\u662Fundefined\u5462\uFF1F\u5F88\u7B80\u5355\uFF0C\u51FD\u6570\u6709<code>return</code>\u8FD4\u56DE\u503C\u5C31\u884C\u4E86</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">fn</span> <span class="token punctuation">(</span><span class="token parameter">num</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> num
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>fn<span class="token punctuation">)</span> <span class="token comment">// [AsyncFunction: fn]</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">fn</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// Promise {&lt;fulfilled&gt;: 10}</span>
<span class="token function">fn</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// 10</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="\u603B\u7ED3" tabindex="-1"><a class="header-anchor" href="#\u603B\u7ED3" aria-hidden="true">#</a> \u603B\u7ED3</h3><div class="custom-container tip"><p class="custom-container-title">TIP</p><ul><li><p>await\u53EA\u80FD\u5728async\u51FD\u6570\u4E2D\u4F7F\u7528\uFF0C\u4E0D\u7136\u4F1A\u62A5\u9519</p></li><li><p>async\u51FD\u6570\u8FD4\u56DE\u7684\u662F\u4E00\u4E2A\u72B6\u6001\u4E3Afuifilled\u7684Promise\u5BF9\u8C61\uFF0C\u6709\u65E0\u503C\u770B\u6709\u65E0return\u503C</p></li><li><p>await\u540E\u9762\u53EA\u6709\u63A5\u4E86Promise\u624D\u80FD\u5B9E\u73B0\u6392\u961F\u6548\u679C</p></li><li><p>async/await\u4F5C\u7528\u662F<strong>\u7528\u540C\u6B65\u65B9\u5F0F\uFF0C\u6267\u884C\u5F02\u6B65\u64CD\u4F5C</strong></p></li></ul></div><h2 id="generator\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#generator\u51FD\u6570" aria-hidden="true">#</a> generator\u51FD\u6570</h2><h3 id="\u57FA\u672C\u7528\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u57FA\u672C\u7528\u6CD5" aria-hidden="true">#</a> \u57FA\u672C\u7528\u6CD5</h3><p><code>generator\u51FD\u6570</code>\u8DDF\u666E\u901A\u51FD\u6570\u5728\u5199\u6CD5\u4E0A\u7684\u533A\u522B\u5C31\u662F\uFF0C\u591A\u4E86\u4E00\u4E2A\u661F\u53F7<code>*</code>\uFF0C\u5E76\u4E14\u53EA\u6709\u5728<code>generator\u51FD\u6570</code>\u4E2D\u624D\u80FD\u4F7F\u7528<code>yield</code>\uFF0C\u4ED6\u76F8\u5F53\u4E8E<code>generator\u51FD\u6570</code>\u6267\u884C\u7684<code>\u4E2D\u9014\u6682\u505C\u70B9</code>\uFF0C\u6682\u505C\u540E\u7EE7\u7EED\u8D70\u5C31\u5F97\u4F7F\u7528\u5230<code>next\u65B9\u6CD5</code>\uFF0C<code>next\u65B9\u6CD5</code>\u6267\u884C\u540E\u4F1A\u8FD4\u56DE\u4E00\u4E2A\u5BF9\u8C61\uFF0C\u5BF9\u8C61\u4E2D\u6709<code>value</code> \u548C <code>done</code>\u4E24\u4E2A\u5C5E\u6027</p><ul><li><p><code>value</code>\uFF1A\u6682\u505C\u70B9\u540E\u9762\u63A5\u7684\u503C\uFF0C\u4E5F\u5C31\u662F<code>yield</code>\u540E\u9762\u63A5\u7684\u503C</p></li><li><p><code>done</code>\uFF1A\u662F\u5426<code>generator</code>\u51FD\u6570\u5DF2\u8D70\u5B8C\uFF0C\u6CA1\u8D70\u5B8C\u4E3A<code>false</code>\uFF0C\u8D70\u5B8C\u4E3A<code>true</code></p></li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">gen</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">yield</span> <span class="token number">1</span>
  <span class="token keyword">yield</span> <span class="token number">2</span>
  <span class="token keyword">yield</span> <span class="token number">3</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> g <span class="token operator">=</span> <span class="token function">gen</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>g<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// { value: 1, done: false }</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>g<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// { value: 2, done: false }</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>g<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// { value: 3, done: false }</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>g<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// { value: undefined, done: true }</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>\u53EF\u4EE5\u770B\u5230\u6700\u540E\u4E00\u4E2A\u662F<code>undefined</code>\uFF0C\u8FD9\u53D6\u51B3\u4E8E\u4F60<code>generator</code>\u51FD\u6570\u6709\u65E0\u8FD4\u56DE\u503C</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">gen</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">yield</span> <span class="token number">1</span>
  <span class="token keyword">yield</span> <span class="token number">2</span>
  <span class="token keyword">yield</span> <span class="token number">3</span>
  <span class="token keyword">return</span> <span class="token number">4</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> g <span class="token operator">=</span> <span class="token function">gen</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>g<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// { value: 1, done: false }</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>g<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// { value: 2, done: false }</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>g<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// { value: 3, done: false }</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>g<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// { value: 4, done: true }</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div>`,16),r=["src"],k=n(`<h3 id="yield-\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#yield-\u51FD\u6570" aria-hidden="true">#</a> yield &amp;&amp; \u51FD\u6570</h3><p>yield\u540E\u9762\u63A5\u51FD\u6570\u7684\u8BDD\uFF0C\u5230\u4E86\u5BF9\u5E94\u6682\u505C\u70B9yield\uFF0C\u4F1A\u9A6C\u4E0A\u6267\u884C\u6B64\u51FD\u6570\uFF0C\u5E76\u4E14\u8BE5\u51FD\u6570\u7684\u6267\u884C\u8FD4\u56DE\u503C\uFF0C\u4F1A\u88AB\u5F53\u505A\u6B64\u6682\u505C\u70B9\u5BF9\u8C61\u7684<code>value</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token parameter">num</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span>
  <span class="token keyword">return</span> num
<span class="token punctuation">}</span>
<span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">gen</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">yield</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
  <span class="token keyword">yield</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
  <span class="token keyword">return</span> <span class="token number">3</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> g <span class="token operator">=</span> <span class="token function">gen</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>g<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> 
<span class="token comment">// 1</span>
<span class="token comment">// { value: 1, done: false }</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>g<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">// 2</span>
<span class="token comment">//  { value: 2, done: false }</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>g<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> 
<span class="token comment">// { value: 3, done: true }</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><h3 id="yield-promise" tabindex="-1"><a class="header-anchor" href="#yield-promise" aria-hidden="true">#</a> yield &amp;&amp; Promise</h3><p>\u524D\u9762\u8BF4\u4E86\uFF0C\u51FD\u6570\u6267\u884C\u8FD4\u56DE\u503C\u4F1A\u5F53\u505A\u6682\u505C\u70B9\u5BF9\u8C61\u7684value\u503C\uFF0C\u90A3\u4E48\u4E0B\u9762\u4F8B\u5B50\u5C31\u53EF\u4EE5\u7406\u89E3\u4E86\uFF0C\u524D\u4E24\u4E2A\u7684value\u90FD\u662Fpending\u72B6\u6001\u7684Promise\u5BF9\u8C61</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token parameter">num</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token parameter">resolve</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token function">resolve</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">gen</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">yield</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
  <span class="token keyword">yield</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
  <span class="token keyword">return</span> <span class="token number">3</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> g <span class="token operator">=</span> <span class="token function">gen</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>g<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// { value: Promise { &lt;pending&gt; }, done: false }</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>g<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// { value: Promise { &lt;pending&gt; }, done: false }</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>g<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// { value: 3, done: true }</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div>`,6),m=["src"],b=n(`<p>\u5176\u5B9E\u6211\u4EEC\u60F3\u8981\u7684\u7ED3\u679C\u662F\uFF0C\u4E24\u4E2APromise\u7684\u7ED3\u679C<code>1 \u548C 2</code>\uFF0C\u90A3\u600E\u4E48\u505A\u5462\uFF1F\u5F88\u7B80\u5355\uFF0C\u4F7F\u7528Promise\u7684then\u65B9\u6CD5\u5C31\u884C\u4E86</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> g <span class="token operator">=</span> <span class="token function">gen</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> next1 <span class="token operator">=</span> g<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
next1<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res1</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>next1<span class="token punctuation">)</span> <span class="token comment">// 1\u79D2\u540E\u8F93\u51FA { value: Promise { 1 }, done: false }</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res1<span class="token punctuation">)</span> <span class="token comment">// 1\u79D2\u540E\u8F93\u51FA 1</span>

  <span class="token keyword">const</span> next2 <span class="token operator">=</span> g<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  next2<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res2</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>next2<span class="token punctuation">)</span> <span class="token comment">// 2\u79D2\u540E\u8F93\u51FA { value: Promise { 2 }, done: false }</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res2<span class="token punctuation">)</span> <span class="token comment">// 2\u79D2\u540E\u8F93\u51FA 2</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>g<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// 2\u79D2\u540E\u8F93\u51FA { value: 3, done: true }</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div>`,2),d=["src"],f=n(`<h3 id="next\u51FD\u6570\u4F20\u53C2" tabindex="-1"><a class="header-anchor" href="#next\u51FD\u6570\u4F20\u53C2" aria-hidden="true">#</a> next\u51FD\u6570\u4F20\u53C2</h3><p>generator\u51FD\u6570\u53EF\u4EE5\u7528<code>next\u65B9\u6CD5</code>\u6765\u4F20\u53C2\uFF0C\u5E76\u4E14\u53EF\u4EE5\u901A\u8FC7<code>yield</code>\u6765\u63A5\u6536\u8FD9\u4E2A\u53C2\u6570\uFF0C\u6CE8\u610F\u4E24\u70B9</p><ul><li><p>\u7B2C\u4E00\u6B21next\u4F20\u53C2\u662F\u6CA1\u7528\u7684\uFF0C\u53EA\u6709\u4ECE\u7B2C\u4E8C\u6B21\u5F00\u59CBnext\u4F20\u53C2\u624D\u6709\u7528</p></li><li><p>next\u4F20\u503C\u65F6\uFF0C\u8981\u8BB0\u4F4F\u987A\u5E8F\u662F\uFF0C\u5148\u53F3\u8FB9yield\uFF0C\u540E\u5DE6\u8FB9\u63A5\u6536\u53C2\u6570</p></li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">gen</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> num1 <span class="token operator">=</span> <span class="token keyword">yield</span> <span class="token number">1</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>num1<span class="token punctuation">)</span>
  <span class="token keyword">const</span> num2 <span class="token operator">=</span> <span class="token keyword">yield</span> <span class="token number">2</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>num2<span class="token punctuation">)</span>
  <span class="token keyword">return</span> <span class="token number">3</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> g <span class="token operator">=</span> <span class="token function">gen</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>g<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// { value: 1, done: false }</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>g<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token number">11111</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">// 11111</span>
<span class="token comment">//  { value: 2, done: false }</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>g<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token number">22222</span><span class="token punctuation">)</span><span class="token punctuation">)</span> 
<span class="token comment">// 22222</span>
<span class="token comment">// { value: 3, done: true }</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div>`,4),g=["src"],y=n(`<h3 id="promise-next\u4F20\u53C2" tabindex="-1"><a class="header-anchor" href="#promise-next\u4F20\u53C2" aria-hidden="true">#</a> Promise+next\u4F20\u53C2</h3><p>\u524D\u9762\u8BB2\u4E86</p><ul><li><p><code>yield</code>\u540E\u9762\u63A5<code>Promise</code></p></li><li><p><code>next</code>\u51FD\u6570\u4F20\u53C2</p></li></ul><p>\u90A3\u8FD9\u4E24\u4E2A\u7EC4\u5408\u8D77\u6765\u4F1A\u662F\u4EC0\u4E48\u6837\u5462\uFF1F</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token parameter">nums</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token parameter">resolve</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token function">resolve</span><span class="token punctuation">(</span>nums <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">gen</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> num1 <span class="token operator">=</span> <span class="token keyword">yield</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> num2 <span class="token operator">=</span> <span class="token keyword">yield</span> <span class="token function">fn</span><span class="token punctuation">(</span>num1<span class="token punctuation">)</span>
  <span class="token keyword">const</span> num3 <span class="token operator">=</span> <span class="token keyword">yield</span> <span class="token function">fn</span><span class="token punctuation">(</span>num2<span class="token punctuation">)</span>
  <span class="token keyword">return</span> num3
<span class="token punctuation">}</span>
<span class="token keyword">const</span> g <span class="token operator">=</span> <span class="token function">gen</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> next1 <span class="token operator">=</span> g<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
next1<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res1</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>next1<span class="token punctuation">)</span> <span class="token comment">// 1\u79D2\u540E\u540C\u65F6\u8F93\u51FA { value: Promise { 2 }, done: false }</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res1<span class="token punctuation">)</span> <span class="token comment">// 1\u79D2\u540E\u540C\u65F6\u8F93\u51FA 2</span>

  <span class="token keyword">const</span> next2 <span class="token operator">=</span> g<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span>res1<span class="token punctuation">)</span> <span class="token comment">// \u4F20\u5165\u4E0A\u6B21\u7684res1</span>
  next2<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res2</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>next2<span class="token punctuation">)</span> <span class="token comment">// 2\u79D2\u540E\u540C\u65F6\u8F93\u51FA { value: Promise { 4 }, done: false }</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res2<span class="token punctuation">)</span> <span class="token comment">// 2\u79D2\u540E\u540C\u65F6\u8F93\u51FA 4</span>

    <span class="token keyword">const</span> next3 <span class="token operator">=</span> g<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span>res2<span class="token punctuation">)</span> <span class="token comment">// \u4F20\u5165\u4E0A\u6B21\u7684res2</span>
    next3<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res3</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>next3<span class="token punctuation">)</span> <span class="token comment">// 3\u79D2\u540E\u540C\u65F6\u8F93\u51FA { value: Promise { 8 }, done: false }</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res3<span class="token punctuation">)</span> <span class="token comment">// 3\u79D2\u540E\u540C\u65F6\u8F93\u51FA 8</span>

       <span class="token comment">// \u4F20\u5165\u4E0A\u6B21\u7684res3</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>g<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span>res3<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// 3\u79D2\u540E\u540C\u65F6\u8F93\u51FA { value: 8, done: true }</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br></div></div>`,5),w=["src"],v=n('<h2 id="\u5B9E\u73B0async-await" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u73B0async-await" aria-hidden="true">#</a> \u5B9E\u73B0async/await</h2><p>\u5176\u5B9E\u4E0A\u65B9\u7684<code>generator</code>\u51FD\u6570\u7684<code>Promise+next\u4F20\u53C2</code>\uFF0C\u5C31\u5F88\u50CF<code>async/await</code>\u4E86\uFF0C\u533A\u522B\u5728\u4E8E</p><ul><li><p>gen\u51FD\u6570\u6267\u884C\u8FD4\u56DE\u503C\u4E0D\u662FPromise\uFF0CasyncFn\u6267\u884C\u8FD4\u56DE\u503C\u662FPromise</p></li><li><p>gen\u51FD\u6570\u9700\u8981\u6267\u884C\u76F8\u5E94\u7684\u64CD\u4F5C\uFF0C\u624D\u80FD\u7B49\u540C\u4E8EasyncFn\u7684\u6392\u961F\u6548\u679C</p></li><li><p>gen\u51FD\u6570\u6267\u884C\u7684\u64CD\u4F5C\u662F\u4E0D\u5B8C\u5584\u7684\uFF0C\u56E0\u4E3A\u5E76\u4E0D\u786E\u5B9A\u6709\u51E0\u4E2Ayield\uFF0C\u4E0D\u786E\u5B9A\u4F1A\u5D4C\u5957\u51E0\u6B21</p></li></ul>',3),h=["src"],x=n(`<p><code>\u9AD8\u9636\u51FD\u6570</code>\u7684\u7279\u70B9\u662F\uFF1A<strong>\u53C2\u6570\u662F\u51FD\u6570\uFF0C\u8FD4\u56DE\u503C\u4E5F\u662F\u51FD\u6570</strong>\u3002\u4E0B\u65B9\u7684<code>highorderFn</code>\u5C31\u662F\u4E00\u4E2A<code>\u9AD8\u9636\u51FD\u6570</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">highorderFn</span><span class="token punctuation">(</span><span class="token parameter">\u51FD\u6570</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u4E00\u7CFB\u5217\u5904\u7406</span>
  <span class="token keyword">return</span> \u51FD\u6570
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>\u6211\u4EEC\u53EF\u4EE5\u5C01\u88C5\u4E00\u4E2A\u9AD8\u9636\u51FD\u6570\uFF0C\u63A5\u6536\u4E00\u4E2A<code>generator</code>\u51FD\u6570\uFF0C\u5E76\u7ECF\u8FC7\u4E00\u7CFB\u5217\u5904\u7406\uFF0C\u8FD4\u56DE\u4E00\u4E2A\u5177\u6709<code>async</code>\u51FD\u6570\u529F\u80FD\u7684\u51FD\u6570</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">generatorToAsync</span><span class="token punctuation">(</span><span class="token parameter">generatorFn</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u7ECF\u8FC7\u4E00\u7CFB\u5217\u5904\u7406 </span>
  <span class="token keyword">return</span> \u5177\u6709<span class="token keyword">async</span>\u51FD\u6570\u529F\u80FD\u7684\u51FD\u6570
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="\u8FD4\u56DE\u503Cpromise" tabindex="-1"><a class="header-anchor" href="#\u8FD4\u56DE\u503Cpromise" aria-hidden="true">#</a> \u8FD4\u56DE\u503CPromise</h3><p><code>async</code>\u51FD\u6570\u7684\u6267\u884C\u8FD4\u56DE\u503C\u662F\u4E00\u4E2A<code>Promise</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">gen</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

<span class="token punctuation">}</span>

<span class="token keyword">const</span> asyncFn <span class="token operator">=</span> <span class="token function">generatorToAsync</span><span class="token punctuation">(</span>gen<span class="token punctuation">)</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">asyncFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// \u671F\u671B\u8FD9\u91CC\u8F93\u51FA Promise</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>\u5176\u5B9E\u5F88\u7B80\u5355\uFF0C<code>generatorToAsync\u51FD\u6570</code>\u91CC\u505A\u4E00\u4E0B\u5904\u7406\u5C31\u884C\u4E86</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">gen</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">generatorToAsync</span> <span class="token punctuation">(</span><span class="token parameter">generatorFn</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>

    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> asyncFn <span class="token operator">=</span> <span class="token function">generatorToAsync</span><span class="token punctuation">(</span>gen<span class="token punctuation">)</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">asyncFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// Promise</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h3 id="\u52A0\u5165\u64CD\u4F5C" tabindex="-1"><a class="header-anchor" href="#\u52A0\u5165\u64CD\u4F5C" aria-hidden="true">#</a> \u52A0\u5165\u64CD\u4F5C</h3><p>\u52A0\u5165<code>generatorToAsync</code>\u51FD\u6570\u4E2D</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token parameter">nums</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token parameter">resolve</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token function">resolve</span><span class="token punctuation">(</span>nums <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">gen</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> num1 <span class="token operator">=</span> <span class="token keyword">yield</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> num2 <span class="token operator">=</span> <span class="token keyword">yield</span> <span class="token function">fn</span><span class="token punctuation">(</span>num1<span class="token punctuation">)</span>
  <span class="token keyword">const</span> num3 <span class="token operator">=</span> <span class="token keyword">yield</span> <span class="token function">fn</span><span class="token punctuation">(</span>num2<span class="token punctuation">)</span>
  <span class="token keyword">return</span> num3
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">generatorToAsync</span><span class="token punctuation">(</span><span class="token parameter">generatorFn</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> g <span class="token operator">=</span> <span class="token function">generatorFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token keyword">const</span> next1 <span class="token operator">=</span> g<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      next1<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res1</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>

        <span class="token keyword">const</span> next2 <span class="token operator">=</span> g<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span>res1<span class="token punctuation">)</span> <span class="token comment">// \u4F20\u5165\u4E0A\u6B21\u7684res1</span>
        next2<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res2</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>

          <span class="token keyword">const</span> next3 <span class="token operator">=</span> g<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span>res2<span class="token punctuation">)</span> <span class="token comment">// \u4F20\u5165\u4E0A\u6B21\u7684res2</span>
          next3<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res3</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>

            <span class="token comment">// \u4F20\u5165\u4E0A\u6B21\u7684res3</span>
            <span class="token function">resolve</span><span class="token punctuation">(</span>g<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span>res3<span class="token punctuation">)</span><span class="token punctuation">.</span>value<span class="token punctuation">)</span>
          <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> asyncFn <span class="token operator">=</span> <span class="token function">generatorToAsync</span><span class="token punctuation">(</span>gen<span class="token punctuation">)</span>

<span class="token function">asyncFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// 3\u79D2\u540E\u8F93\u51FA 8</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br></div></div><p>\u5DF2\u7ECF\u5B9E\u73B0\u4E86\u4EE5\u4E0B\u7684<code>async/await</code>\u7684\u7ED3\u679C\u4E86</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">asyncFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> num1 <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> num2 <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fn</span><span class="token punctuation">(</span>num1<span class="token punctuation">)</span>
  <span class="token keyword">const</span> num3 <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fn</span><span class="token punctuation">(</span>num2<span class="token punctuation">)</span>
  <span class="token keyword">return</span> num3
<span class="token punctuation">}</span>
<span class="token function">asyncFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// 3\u79D2\u540E\u8F93\u51FA 8</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="\u5B8C\u5584\u4EE3\u7801" tabindex="-1"><a class="header-anchor" href="#\u5B8C\u5584\u4EE3\u7801" aria-hidden="true">#</a> \u5B8C\u5584\u4EE3\u7801</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">generatorToAsync</span><span class="token punctuation">(</span><span class="token parameter">generatorFn</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> gen <span class="token operator">=</span> <span class="token function">generatorFn</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> arguments<span class="token punctuation">)</span> <span class="token comment">// gen\u6709\u53EF\u80FD\u4F20\u53C2</span>

    <span class="token comment">// \u8FD4\u56DE\u4E00\u4E2APromise</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>

      <span class="token keyword">function</span> <span class="token function">go</span><span class="token punctuation">(</span><span class="token parameter">key<span class="token punctuation">,</span> arg</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> res
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
          res <span class="token operator">=</span> gen<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">(</span>arg<span class="token punctuation">)</span> <span class="token comment">// \u8FD9\u91CC\u6709\u53EF\u80FD\u4F1A\u6267\u884C\u8FD4\u56DEreject\u72B6\u6001\u7684Promise</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">return</span> <span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token comment">// \u62A5\u9519\u7684\u8BDD\u4F1A\u8D70catch\uFF0C\u76F4\u63A5reject</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// \u89E3\u6784\u83B7\u5F97value\u548Cdone</span>
        <span class="token keyword">const</span> <span class="token punctuation">{</span> value<span class="token punctuation">,</span> done <span class="token punctuation">}</span> <span class="token operator">=</span> res
        <span class="token keyword">if</span> <span class="token punctuation">(</span>done<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token comment">// \u5982\u679Cdone\u4E3Atrue\uFF0C\u8BF4\u660E\u8D70\u5B8C\u4E86\uFF0C\u8FDB\u884Cresolve(value)</span>
          <span class="token keyword">return</span> <span class="token function">resolve</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
          <span class="token comment">// \u5982\u679Cdone\u4E3Afalse\uFF0C\u8BF4\u660E\u6CA1\u8D70\u5B8C\uFF0C\u8FD8\u5F97\u7EE7\u7EED\u8D70</span>

          <span class="token comment">// value\u6709\u53EF\u80FD\u662F\uFF1A\u5E38\u91CF\uFF0CPromise\uFF0CPromise\u6709\u53EF\u80FD\u662F\u6210\u529F\u6216\u8005\u5931\u8D25</span>
          <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">val</span> <span class="token operator">=&gt;</span> <span class="token function">go</span><span class="token punctuation">(</span><span class="token string">&#39;next&#39;</span><span class="token punctuation">,</span> val<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token parameter">err</span> <span class="token operator">=&gt;</span> <span class="token function">go</span><span class="token punctuation">(</span><span class="token string">&#39;throw&#39;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>

      <span class="token function">go</span><span class="token punctuation">(</span><span class="token string">&quot;next&quot;</span><span class="token punctuation">)</span> <span class="token comment">// \u7B2C\u4E00\u6B21\u6267\u884C</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> asyncFn <span class="token operator">=</span> <span class="token function">generatorToAsync</span><span class="token punctuation">(</span>gen<span class="token punctuation">)</span>

<span class="token function">asyncFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br></div></div><h3 id="\u793A\u4F8B" tabindex="-1"><a class="header-anchor" href="#\u793A\u4F8B" aria-hidden="true">#</a> \u793A\u4F8B</h3><p><code>async/await</code>\u7248\u672C</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">asyncFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> num1 <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>num1<span class="token punctuation">)</span> <span class="token comment">// 2</span>
  <span class="token keyword">const</span> num2 <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fn</span><span class="token punctuation">(</span>num1<span class="token punctuation">)</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>num2<span class="token punctuation">)</span> <span class="token comment">// 4</span>
  <span class="token keyword">const</span> num3 <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fn</span><span class="token punctuation">(</span>num2<span class="token punctuation">)</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>num3<span class="token punctuation">)</span> <span class="token comment">// 8</span>
  <span class="token keyword">return</span> num3
<span class="token punctuation">}</span>
<span class="token keyword">const</span> asyncRes <span class="token operator">=</span> <span class="token function">asyncFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>asyncRes<span class="token punctuation">)</span> <span class="token comment">// Promise</span>
asyncRes<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// 8</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>\u4F7F\u7528<code>generatorToAsync\u51FD\u6570</code>\u7684\u7248\u672C</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">gen</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> num1 <span class="token operator">=</span> <span class="token keyword">yield</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>num1<span class="token punctuation">)</span> <span class="token comment">// 2</span>
  <span class="token keyword">const</span> num2 <span class="token operator">=</span> <span class="token keyword">yield</span> <span class="token function">fn</span><span class="token punctuation">(</span>num1<span class="token punctuation">)</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>num2<span class="token punctuation">)</span> <span class="token comment">// 4</span>
  <span class="token keyword">const</span> num3 <span class="token operator">=</span> <span class="token keyword">yield</span> <span class="token function">fn</span><span class="token punctuation">(</span>num2<span class="token punctuation">)</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>num3<span class="token punctuation">)</span> <span class="token comment">// 8</span>
  <span class="token keyword">return</span> num3
<span class="token punctuation">}</span>

<span class="token keyword">const</span> genToAsync <span class="token operator">=</span> <span class="token function">generatorToAsync</span><span class="token punctuation">(</span>gen<span class="token punctuation">)</span>
<span class="token keyword">const</span> asyncRes <span class="token operator">=</span> <span class="token function">genToAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>asyncRes<span class="token punctuation">)</span> <span class="token comment">// Promise</span>
asyncRes<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// 8</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div>`,21);function j(s,P){return p(),t(e,null,[l,a("img",{src:s.$withBase("/assets/jsInterview/c63ae650b71144e2a1ba8dc2bdaceed3_tplv-k3u1fbpfcp-watermark.awebp"),alt:"demo"},null,8,u),i,a("img",{src:s.$withBase("/assets/jsInterview/d56e8dea0f204cc18a2d86d1ffcf51ef_tplv-k3u1fbpfcp-watermark.awebp"),alt:"demo"},null,8,r),k,a("img",{src:s.$withBase("/assets/jsInterview/39a4a3ec5ecc4e9e88a9515be0bc7bb1_tplv-k3u1fbpfcp-watermark.awebp"),alt:"demo"},null,8,m),b,a("img",{src:s.$withBase("/assets/jsInterview/56134335085443e9a86da9c3a9c139b6_tplv-k3u1fbpfcp-watermark.awebp"),alt:"demo"},null,8,d),f,a("img",{src:s.$withBase("/assets/jsInterview/c49ec193e19249d2876fba7909f89acc_tplv-k3u1fbpfcp-watermark.awebp"),alt:"demo"},null,8,g),y,a("img",{src:s.$withBase("/assets/jsInterview/8db7c759079a404ebab41b9aacc90c77_tplv-k3u1fbpfcp-watermark.awebp"),alt:"demo"},null,8,w),v,a("img",{src:s.$withBase("/assets/jsInterview/2465072c79684ecabd9b0377e22b05f8_tplv-k3u1fbpfcp-watermark.awebp"),alt:"demo"},null,8,h),x],64)}var T=o(c,[["render",j]]);export{T as default};
