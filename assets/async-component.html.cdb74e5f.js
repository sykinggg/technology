import{a as n}from"./app.ee3fc36b.js";import{_ as s}from"./plugin-vue_export-helper.21dcd24c.js";const a={},p=n(`<h1 id="\u5F02\u6B65\u7EC4\u4EF6" tabindex="-1"><a class="header-anchor" href="#\u5F02\u6B65\u7EC4\u4EF6" aria-hidden="true">#</a> \u5F02\u6B65\u7EC4\u4EF6</h1><p>\u5728\u5E73\u65F6\u7684\u5F00\u53D1\u5DE5\u4F5C\u4E2D\uFF0C\u4E3A\u4E86\u51CF\u5C11\u9996\u5C4F\u4EE3\u7801\u4F53\u79EF\uFF0C\u5F80\u5F80\u4F1A\u628A\u4E00\u4E9B\u975E\u9996\u5C4F\u7684\u7EC4\u4EF6\u8BBE\u8BA1\u6210\u5F02\u6B65\u7EC4\u4EF6\uFF0C\u6309\u9700\u52A0\u8F7D\u3002Vue \u4E5F\u539F\u751F\u652F\u6301\u4E86\u5F02\u6B65\u7EC4\u4EF6\u7684\u80FD\u529B\uFF0C\u5982\u4E0B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Vue<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span><span class="token string">&#39;async-example&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token comment">// \u8FD9\u4E2A\u7279\u6B8A\u7684 require \u8BED\u6CD5\u544A\u8BC9 webpack</span>
   <span class="token comment">// \u81EA\u52A8\u5C06\u7F16\u8BD1\u540E\u7684\u4EE3\u7801\u5206\u5272\u6210\u4E0D\u540C\u7684\u5757\uFF0C</span>
   <span class="token comment">// \u8FD9\u4E9B\u5757\u5C06\u901A\u8FC7 Ajax \u8BF7\u6C42\u81EA\u52A8\u4E0B\u8F7D\u3002</span>
   <span class="token function">require</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;./my-async-component&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> resolve<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>\u793A\u4F8B\u4E2D\u53EF\u4EE5\u770B\u5230\uFF0CVue \u6CE8\u518C\u7684\u7EC4\u4EF6\u4E0D\u518D\u662F\u4E00\u4E2A\u5BF9\u8C61\uFF0C\u800C\u662F\u4E00\u4E2A\u5DE5\u5382\u51FD\u6570\uFF0C\u51FD\u6570\u6709\u4E24\u4E2A\u53C2\u6570 <code>resolve</code> \u548C <code>reject</code>\uFF0C\u51FD\u6570\u5185\u90E8\u7528 <code>setTimout</code> \u6A21\u62DF\u4E86\u5F02\u6B65\uFF0C\u5B9E\u9645\u4F7F\u7528\u53EF\u80FD\u662F\u901A\u8FC7\u52A8\u6001\u8BF7\u6C42\u5F02\u6B65\u7EC4\u4EF6\u7684 JS \u5730\u5740\uFF0C\u6700\u7EC8\u901A\u8FC7\u6267\u884C <code>resolve</code> \u65B9\u6CD5\uFF0C\u5B83\u7684\u53C2\u6570\u5C31\u662F\u7684\u5F02\u6B65\u7EC4\u4EF6\u5BF9\u8C61\u3002</p><p>\u5728\u4E86\u89E3\u4E86\u5F02\u6B65\u7EC4\u4EF6\u5982\u4F55\u6CE8\u518C\u540E\uFF0C\u4ECE\u6E90\u7801\u7684\u89D2\u5EA6\u6765\u5206\u6790\u4E00\u4E0B\u5B83\u7684\u5B9E\u73B0\u3002</p><p>\u4E0A\u4E00\u8282\u5206\u6790\u4E86\u7EC4\u4EF6\u7684\u6CE8\u518C\u903B\u8F91\uFF0C\u7531\u4E8E\u7EC4\u4EF6\u7684\u5B9A\u4E49\u5E76\u4E0D\u662F\u4E00\u4E2A\u666E\u901A\u5BF9\u8C61\uFF0C\u6240\u4EE5\u4E0D\u4F1A\u6267\u884C <code>Vue.extend</code> \u7684\u903B\u8F91\u628A\u5B83\u53D8\u6210\u4E00\u4E2A\u7EC4\u4EF6\u7684\u6784\u9020\u51FD\u6570\uFF0C\u4F46\u662F\u5B83\u4ECD\u7136\u53EF\u4EE5\u6267\u884C\u5230 <code>createComponent</code> \u51FD\u6570\uFF0C\u518D\u6765\u5BF9\u8FD9\u4E2A\u51FD\u6570\u505A\u56DE\u987E\uFF0C\u5B83\u7684\u5B9A\u4E49\u5728 <code>src/core/vdom/create-component/js</code> \u4E2D\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">createComponent</span> <span class="token punctuation">(</span>
  <span class="token parameter"><span class="token literal-property property">Ctor</span><span class="token operator">:</span> Class<span class="token operator">&lt;</span>Component<span class="token operator">&gt;</span> <span class="token operator">|</span> Function <span class="token operator">|</span> Object <span class="token operator">|</span> <span class="token keyword">void</span><span class="token punctuation">,</span>
  <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token operator">?</span>VNodeData<span class="token punctuation">,</span>
  <span class="token literal-property property">context</span><span class="token operator">:</span> Component<span class="token punctuation">,</span>
  <span class="token literal-property property">children</span><span class="token operator">:</span> <span class="token operator">?</span>Array<span class="token operator">&lt;</span>VNode<span class="token operator">&gt;</span><span class="token punctuation">,</span>
  tag<span class="token operator">?</span><span class="token operator">:</span> string</span>
<span class="token punctuation">)</span><span class="token operator">:</span> VNode <span class="token operator">|</span> Array<span class="token operator">&lt;</span>VNode<span class="token operator">&gt;</span> <span class="token operator">|</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isUndef</span><span class="token punctuation">(</span>Ctor<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">const</span> baseCtor <span class="token operator">=</span> context<span class="token punctuation">.</span>$options<span class="token punctuation">.</span>_base

  <span class="token comment">// plain options object: turn it into a constructor</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isObject</span><span class="token punctuation">(</span>Ctor<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    Ctor <span class="token operator">=</span> baseCtor<span class="token punctuation">.</span><span class="token function">extend</span><span class="token punctuation">(</span>Ctor<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  
  <span class="token comment">// ...</span>

  <span class="token comment">// async component</span>
  <span class="token keyword">let</span> asyncFactory
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isUndef</span><span class="token punctuation">(</span>Ctor<span class="token punctuation">.</span>cid<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    asyncFactory <span class="token operator">=</span> Ctor
    Ctor <span class="token operator">=</span> <span class="token function">resolveAsyncComponent</span><span class="token punctuation">(</span>asyncFactory<span class="token punctuation">,</span> baseCtor<span class="token punctuation">,</span> context<span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>Ctor <span class="token operator">===</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// return a placeholder node for async component, which is rendered</span>
      <span class="token comment">// as a comment node but preserves all the raw information for the node.</span>
      <span class="token comment">// the information will be used for async server-rendering and hydration.</span>
      <span class="token keyword">return</span> <span class="token function">createAsyncPlaceholder</span><span class="token punctuation">(</span>
        asyncFactory<span class="token punctuation">,</span>
        data<span class="token punctuation">,</span>
        context<span class="token punctuation">,</span>
        children<span class="token punctuation">,</span>
        tag
      <span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br></div></div><p>\u7701\u7565\u4E86\u4E0D\u5FC5\u8981\u7684\u903B\u8F91\uFF0C\u53EA\u4FDD\u7559\u5173\u952E\u903B\u8F91\uFF0C\u7531\u4E8E\u8FD9\u4E2A\u65F6\u5019\u4F20\u5165\u7684 <code>Ctor</code> \u662F\u4E00\u4E2A\u51FD\u6570\uFF0C\u90A3\u4E48\u5B83\u4E5F\u5E76\u4E0D\u4F1A\u6267\u884C <code>Vue.extend</code> \u903B\u8F91\uFF0C\u56E0\u6B64\u5B83\u7684 <code>cid</code> \u662F <code>undefiend</code>\uFF0C\u8FDB\u5165\u4E86\u5F02\u6B65\u7EC4\u4EF6\u521B\u5EFA\u7684\u903B\u8F91\u3002\u8FD9\u91CC\u9996\u5148\u6267\u884C\u4E86 <code>Ctor = resolveAsyncComponent(asyncFactory, baseCtor, context)</code> \u65B9\u6CD5\uFF0C\u5B83\u7684\u5B9A\u4E49\u5728 <code>src/core/vdom/helpers/resolve-async-component.js</code> \u4E2D\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">resolveAsyncComponent</span> <span class="token punctuation">(</span>
  <span class="token parameter"><span class="token literal-property property">factory</span><span class="token operator">:</span> Function<span class="token punctuation">,</span>
  <span class="token literal-property property">baseCtor</span><span class="token operator">:</span> Class<span class="token operator">&lt;</span>Component<span class="token operator">&gt;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">context</span><span class="token operator">:</span> Component</span>
<span class="token punctuation">)</span><span class="token operator">:</span> Class<span class="token operator">&lt;</span>Component<span class="token operator">&gt;</span> <span class="token operator">|</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isTrue</span><span class="token punctuation">(</span>factory<span class="token punctuation">.</span>error<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">isDef</span><span class="token punctuation">(</span>factory<span class="token punctuation">.</span>errorComp<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> factory<span class="token punctuation">.</span>errorComp
  <span class="token punctuation">}</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDef</span><span class="token punctuation">(</span>factory<span class="token punctuation">.</span>resolved<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> factory<span class="token punctuation">.</span>resolved
  <span class="token punctuation">}</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isTrue</span><span class="token punctuation">(</span>factory<span class="token punctuation">.</span>loading<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">isDef</span><span class="token punctuation">(</span>factory<span class="token punctuation">.</span>loadingComp<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> factory<span class="token punctuation">.</span>loadingComp
  <span class="token punctuation">}</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDef</span><span class="token punctuation">(</span>factory<span class="token punctuation">.</span>contexts<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// already pending</span>
    factory<span class="token punctuation">.</span>contexts<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> contexts <span class="token operator">=</span> factory<span class="token punctuation">.</span>contexts <span class="token operator">=</span> <span class="token punctuation">[</span>context<span class="token punctuation">]</span>
    <span class="token keyword">let</span> sync <span class="token operator">=</span> <span class="token boolean">true</span>

    <span class="token keyword">const</span> <span class="token function-variable function">forceRender</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> l <span class="token operator">=</span> contexts<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> l<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        contexts<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">$forceUpdate</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">const</span> resolve <span class="token operator">=</span> <span class="token function">once</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">res</span><span class="token operator">:</span> Object <span class="token operator">|</span> Class<span class="token operator">&lt;</span>Component<span class="token operator">&gt;</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token comment">// cache resolved</span>
      factory<span class="token punctuation">.</span>resolved <span class="token operator">=</span> <span class="token function">ensureCtor</span><span class="token punctuation">(</span>res<span class="token punctuation">,</span> baseCtor<span class="token punctuation">)</span>
      <span class="token comment">// invoke callbacks only if this is not a synchronous resolve</span>
      <span class="token comment">// (async resolves are shimmed as synchronous during SSR)</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>sync<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">forceRender</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>

    <span class="token keyword">const</span> reject <span class="token operator">=</span> <span class="token function">once</span><span class="token punctuation">(</span><span class="token parameter">reason</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">!==</span> <span class="token string">&#39;production&#39;</span> <span class="token operator">&amp;&amp;</span> <span class="token function">warn</span><span class="token punctuation">(</span>
        <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Failed to resolve async component: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token function">String</span><span class="token punctuation">(</span>factory<span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span> <span class="token operator">+</span>
        <span class="token punctuation">(</span>reason <span class="token operator">?</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">\\nReason: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>reason<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span> <span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
      <span class="token punctuation">)</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDef</span><span class="token punctuation">(</span>factory<span class="token punctuation">.</span>errorComp<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        factory<span class="token punctuation">.</span>error <span class="token operator">=</span> <span class="token boolean">true</span>
        <span class="token function">forceRender</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>

    <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token function">factory</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isObject</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> res<span class="token punctuation">.</span>then <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// () =&gt; Promise</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isUndef</span><span class="token punctuation">(</span>factory<span class="token punctuation">.</span>resolved<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          res<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDef</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>component<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">typeof</span> res<span class="token punctuation">.</span>component<span class="token punctuation">.</span>then <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        res<span class="token punctuation">.</span>component<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDef</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>error<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          factory<span class="token punctuation">.</span>errorComp <span class="token operator">=</span> <span class="token function">ensureCtor</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>error<span class="token punctuation">,</span> baseCtor<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDef</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>loading<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          factory<span class="token punctuation">.</span>loadingComp <span class="token operator">=</span> <span class="token function">ensureCtor</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>loading<span class="token punctuation">,</span> baseCtor<span class="token punctuation">)</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span>res<span class="token punctuation">.</span>delay <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            factory<span class="token punctuation">.</span>loading <span class="token operator">=</span> <span class="token boolean">true</span>
          <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
              <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isUndef</span><span class="token punctuation">(</span>factory<span class="token punctuation">.</span>resolved<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">isUndef</span><span class="token punctuation">(</span>factory<span class="token punctuation">.</span>error<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                factory<span class="token punctuation">.</span>loading <span class="token operator">=</span> <span class="token boolean">true</span>
                <span class="token function">forceRender</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
              <span class="token punctuation">}</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span> res<span class="token punctuation">.</span>delay <span class="token operator">||</span> <span class="token number">200</span><span class="token punctuation">)</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDef</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>timeout<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isUndef</span><span class="token punctuation">(</span>factory<span class="token punctuation">.</span>resolved<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
              <span class="token function">reject</span><span class="token punctuation">(</span>
                process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">!==</span> <span class="token string">&#39;production&#39;</span>
                  <span class="token operator">?</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">timeout (</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>res<span class="token punctuation">.</span>timeout<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">ms)</span><span class="token template-punctuation string">\`</span></span>
                  <span class="token operator">:</span> <span class="token keyword">null</span>
              <span class="token punctuation">)</span>
            <span class="token punctuation">}</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span> res<span class="token punctuation">.</span>timeout<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    sync <span class="token operator">=</span> <span class="token boolean">false</span>
    <span class="token comment">// return in case resolved synchronously</span>
    <span class="token keyword">return</span> factory<span class="token punctuation">.</span>loading
      <span class="token operator">?</span> factory<span class="token punctuation">.</span>loadingComp
      <span class="token operator">:</span> factory<span class="token punctuation">.</span>resolved
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br></div></div><p><code>resolveAsyncComponent</code> \u51FD\u6570\u7684\u903B\u8F91\u7565\u590D\u6742\uFF0C\u56E0\u4E3A\u5B83\u5B9E\u9645\u4E0A\u5904\u7406\u4E86 3 \u79CD\u5F02\u6B65\u7EC4\u4EF6\u7684\u521B\u5EFA\u65B9\u5F0F\uFF0C\u9664\u4E86\u521A\u624D\u793A\u4F8B\u7684\u7EC4\u4EF6\u6CE8\u518C\u65B9\u5F0F\uFF0C\u8FD8\u652F\u6301 2 \u79CD\uFF0C\u4E00\u79CD\u662F\u652F\u6301 <code>Promise</code> \u521B\u5EFA\u7EC4\u4EF6\u7684\u65B9\u5F0F\uFF0C\u5982\u4E0B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Vue<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span>
  <span class="token string">&#39;async-webpack-example&#39;</span><span class="token punctuation">,</span>
  <span class="token comment">// \u8BE5 \`import\` \u51FD\u6570\u8FD4\u56DE\u4E00\u4E2A \`Promise\` \u5BF9\u8C61\u3002</span>
  <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;./my-async-component&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>\u53E6\u4E00\u79CD\u662F\u9AD8\u7EA7\u5F02\u6B65\u7EC4\u4EF6\uFF0C\u5982\u4E0B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">AsyncComp</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token comment">// \u9700\u8981\u52A0\u8F7D\u7684\u7EC4\u4EF6\u3002\u5E94\u5F53\u662F\u4E00\u4E2A Promise</span>
  <span class="token literal-property property">component</span><span class="token operator">:</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;./MyComp.vue&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token comment">// \u52A0\u8F7D\u4E2D\u5E94\u5F53\u6E32\u67D3\u7684\u7EC4\u4EF6</span>
  <span class="token literal-property property">loading</span><span class="token operator">:</span> LoadingComp<span class="token punctuation">,</span>
  <span class="token comment">// \u51FA\u9519\u65F6\u6E32\u67D3\u7684\u7EC4\u4EF6</span>
  <span class="token literal-property property">error</span><span class="token operator">:</span> ErrorComp<span class="token punctuation">,</span>
  <span class="token comment">// \u6E32\u67D3\u52A0\u8F7D\u4E2D\u7EC4\u4EF6\u524D\u7684\u7B49\u5F85\u65F6\u95F4\u3002\u9ED8\u8BA4\uFF1A200ms\u3002</span>
  <span class="token literal-property property">delay</span><span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span>
  <span class="token comment">// \u6700\u957F\u7B49\u5F85\u65F6\u95F4\u3002\u8D85\u51FA\u6B64\u65F6\u95F4\u5219\u6E32\u67D3\u9519\u8BEF\u7EC4\u4EF6\u3002\u9ED8\u8BA4\uFF1AInfinity</span>
  <span class="token literal-property property">timeout</span><span class="token operator">:</span> <span class="token number">3000</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
Vue<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span><span class="token string">&#39;async-example&#39;</span><span class="token punctuation">,</span> AsyncComp<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>\u90A3\u4E48\u89E3\u4E0B\u6765\uFF0C\u5C31\u6839\u636E\u8FD9 3 \u79CD\u5F02\u6B65\u7EC4\u4EF6\u7684\u60C5\u51B5\uFF0C\u6765\u5206\u522B\u53BB\u5206\u6790 <code>resolveAsyncComponent</code> \u7684\u903B\u8F91\u3002</p><h2 id="\u666E\u901A\u51FD\u6570\u5F02\u6B65\u7EC4\u4EF6" tabindex="-1"><a class="header-anchor" href="#\u666E\u901A\u51FD\u6570\u5F02\u6B65\u7EC4\u4EF6" aria-hidden="true">#</a> \u666E\u901A\u51FD\u6570\u5F02\u6B65\u7EC4\u4EF6</h2><p>\u9488\u5BF9\u666E\u901A\u51FD\u6570\u7684\u60C5\u51B5\uFF0C\u524D\u9762\u51E0\u4E2A if \u5224\u65AD\u53EF\u4EE5\u5FFD\u7565\uFF0C\u5B83\u4EEC\u662F\u4E3A\u9AD8\u7EA7\u7EC4\u4EF6\u6240\u7528\uFF0C\u5BF9\u4E8E <code>factory.contexts</code> \u7684\u5224\u65AD\uFF0C\u662F\u8003\u8651\u5230\u591A\u4E2A\u5730\u65B9\u540C\u65F6\u521D\u59CB\u5316\u4E00\u4E2A\u5F02\u6B65\u7EC4\u4EF6\uFF0C\u90A3\u4E48\u5B83\u7684\u5B9E\u9645\u52A0\u8F7D\u5E94\u8BE5\u53EA\u6709\u4E00\u6B21\u3002\u63A5\u7740\u8FDB\u5165\u5B9E\u9645\u52A0\u8F7D\u903B\u8F91\uFF0C\u5B9A\u4E49\u4E86 <code>forceRender</code>\u3001<code>resolve</code> \u548C <code>reject</code> \u51FD\u6570\uFF0C\u6CE8\u610F <code>resolve</code> \u548C <code>reject</code> \u51FD\u6570\u7528 <code>once</code> \u51FD\u6570\u505A\u4E86\u4E00\u5C42\u5305\u88C5\uFF0C\u5B83\u7684\u5B9A\u4E49\u5728 <code>src/shared/util.js</code> \u4E2D\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * Ensure a function is called only once.
 */</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">once</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">fn</span><span class="token operator">:</span> Function</span><span class="token punctuation">)</span><span class="token operator">:</span> Function <span class="token punctuation">{</span>
  <span class="token keyword">let</span> called <span class="token operator">=</span> <span class="token boolean">false</span>
  <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>called<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      called <span class="token operator">=</span> <span class="token boolean">true</span>
      <span class="token function">fn</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> arguments<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p><code>once</code> \u903B\u8F91\u975E\u5E38\u7B80\u5355\uFF0C\u4F20\u5165\u4E00\u4E2A\u51FD\u6570\uFF0C\u5E76\u8FD4\u56DE\u4E00\u4E2A\u65B0\u51FD\u6570\uFF0C\u5B83\u975E\u5E38\u5DE7\u5999\u5730\u5229\u7528\u95ED\u5305\u548C\u4E00\u4E2A\u6807\u5FD7\u4F4D\u4FDD\u8BC1\u4E86\u5B83\u5305\u88C5\u7684\u51FD\u6570\u53EA\u4F1A\u6267\u884C\u4E00\u6B21\uFF0C\u4E5F\u5C31\u662F\u786E\u4FDD <code>resolve</code> \u548C <code>reject</code> \u51FD\u6570\u53EA\u6267\u884C\u4E00\u6B21\u3002</p><p>\u63A5\u4E0B\u6765\u6267\u884C <code>const res = factory(resolve, reject)</code> \u903B\u8F91\uFF0C\u8FD9\u5757\u513F\u5C31\u662F\u6267\u884C\u7EC4\u4EF6\u7684\u5DE5\u5382\u51FD\u6570\uFF0C\u540C\u65F6\u628A <code>resolve</code> \u548C <code>reject</code> \u51FD\u6570\u4F5C\u4E3A\u53C2\u6570\u4F20\u5165\uFF0C\u7EC4\u4EF6\u7684\u5DE5\u5382\u51FD\u6570\u901A\u5E38\u4F1A\u5148\u53D1\u9001\u8BF7\u6C42\u53BB\u52A0\u8F7D\u7684\u5F02\u6B65\u7EC4\u4EF6\u7684 JS \u6587\u4EF6\uFF0C\u62FF\u5230\u7EC4\u4EF6\u5B9A\u4E49\u7684\u5BF9\u8C61 <code>res</code> \u540E\uFF0C\u6267\u884C <code>resolve(res)</code> \u903B\u8F91\uFF0C\u5B83\u4F1A\u5148\u6267\u884C <code>factory.resolved = ensureCtor(res, baseCtor)</code>\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">ensureCtor</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">comp</span><span class="token operator">:</span> any<span class="token punctuation">,</span> base</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>
    comp<span class="token punctuation">.</span>__esModule <span class="token operator">||</span>
    <span class="token punctuation">(</span>hasSymbol <span class="token operator">&amp;&amp;</span> comp<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>toStringTag<span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token string">&#39;Module&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">)</span> <span class="token punctuation">{</span>
    comp <span class="token operator">=</span> comp<span class="token punctuation">.</span>default
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token function">isObject</span><span class="token punctuation">(</span>comp<span class="token punctuation">)</span>
    <span class="token operator">?</span> base<span class="token punctuation">.</span><span class="token function">extend</span><span class="token punctuation">(</span>comp<span class="token punctuation">)</span>
    <span class="token operator">:</span> comp
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>\u8FD9\u4E2A\u51FD\u6570\u76EE\u7684\u662F\u4E3A\u4E86\u4FDD\u8BC1\u80FD\u627E\u5230\u5F02\u6B65\u7EC4\u4EF6 JS \u5B9A\u4E49\u7684\u7EC4\u4EF6\u5BF9\u8C61\uFF0C\u5E76\u4E14\u5982\u679C\u5B83\u662F\u4E00\u4E2A\u666E\u901A\u5BF9\u8C61\uFF0C\u5219\u8C03\u7528 <code>Vue.extend</code> \u628A\u5B83\u8F6C\u6362\u6210\u4E00\u4E2A\u7EC4\u4EF6\u7684\u6784\u9020\u51FD\u6570\u3002</p><p><code>resolve</code> \u903B\u8F91\u6700\u540E\u5224\u65AD\u4E86 <code>sync</code>\uFF0C\u663E\u7136\u8FD9\u4E2A\u573A\u666F\u4E0B <code>sync</code> \u4E3A false\uFF0C\u90A3\u4E48\u5C31\u4F1A\u6267\u884C <code>forceRender</code> \u51FD\u6570\uFF0C\u5B83\u4F1A\u904D\u5386 <code>factory.contexts</code>\uFF0C\u62FF\u5230\u6BCF\u4E00\u4E2A\u8C03\u7528\u5F02\u6B65\u7EC4\u4EF6\u7684\u5B9E\u4F8B <code>vm</code>, \u6267\u884C <code>vm.$forceUpdate()</code> \u65B9\u6CD5\uFF0C\u5B83\u7684\u5B9A\u4E49\u5728 <code>src/core/instance/lifecycle.js</code> \u4E2D\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token class-name">Vue</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">$forceUpdate</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token literal-property property">vm</span><span class="token operator">:</span> Component <span class="token operator">=</span> <span class="token keyword">this</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>vm<span class="token punctuation">.</span>_watcher<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    vm<span class="token punctuation">.</span>_watcher<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p><code>$forceUpdate</code> \u7684\u903B\u8F91\u975E\u5E38\u7B80\u5355\uFF0C\u5C31\u662F\u8C03\u7528\u6E32\u67D3 <code>watcher</code> \u7684 <code>update</code> \u65B9\u6CD5\uFF0C\u8BA9\u6E32\u67D3 <code>watcher</code> \u5BF9\u5E94\u7684\u56DE\u8C03\u51FD\u6570\u6267\u884C\uFF0C\u4E5F\u5C31\u662F\u89E6\u53D1\u4E86\u7EC4\u4EF6\u7684\u91CD\u65B0\u6E32\u67D3\u3002\u4E4B\u6240\u4EE5\u8FD9\u4E48\u505A\u662F\u56E0\u4E3A Vue \u901A\u5E38\u662F\u6570\u636E\u9A71\u52A8\u89C6\u56FE\u91CD\u65B0\u6E32\u67D3\uFF0C\u4F46\u662F\u5728\u6574\u4E2A\u5F02\u6B65\u7EC4\u4EF6\u52A0\u8F7D\u8FC7\u7A0B\u4E2D\u662F\u6CA1\u6709\u6570\u636E\u53D1\u751F\u53D8\u5316\u7684\uFF0C\u6240\u4EE5\u901A\u8FC7\u6267\u884C <code>$forceUpdate</code> \u53EF\u4EE5\u5F3A\u5236\u7EC4\u4EF6\u91CD\u65B0\u6E32\u67D3\u4E00\u6B21\u3002</p><h2 id="promise-\u5F02\u6B65\u7EC4\u4EF6" tabindex="-1"><a class="header-anchor" href="#promise-\u5F02\u6B65\u7EC4\u4EF6" aria-hidden="true">#</a> <code>Promise</code> \u5F02\u6B65\u7EC4\u4EF6</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Vue<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span>
  <span class="token string">&#39;async-webpack-example&#39;</span><span class="token punctuation">,</span>
  <span class="token comment">// \u8BE5 \`import\` \u51FD\u6570\u8FD4\u56DE\u4E00\u4E2A \`Promise\` \u5BF9\u8C61\u3002</span>
  <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;./my-async-component&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>webpack 2+ \u652F\u6301\u4E86\u5F02\u6B65\u52A0\u8F7D\u7684\u8BED\u6CD5\u7CD6\uFF1A<code>() =&gt; import(&#39;./my-async-component&#39;)</code>\uFF0C\u5F53\u6267\u884C\u5B8C <code>res = factory(resolve, reject)</code>\uFF0C\u8FD4\u56DE\u7684\u503C\u5C31\u662F <code> import(&#39;./my-async-component&#39;)</code> \u7684\u8FD4\u56DE\u503C\uFF0C\u5B83\u662F\u4E00\u4E2A <code>Promise</code> \u5BF9\u8C61\u3002\u63A5\u7740\u8FDB\u5165 if \u6761\u4EF6\uFF0C\u53C8\u5224\u65AD\u4E86 <code>typeof res.then === &#39;function&#39;)</code>\uFF0C\u6761\u4EF6\u6EE1\u8DB3\uFF0C\u6267\u884C\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isUndef</span><span class="token punctuation">(</span>factory<span class="token punctuation">.</span>resolved<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  res<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u5F53\u7EC4\u4EF6\u5F02\u6B65\u52A0\u8F7D\u6210\u529F\u540E\uFF0C\u6267\u884C <code>resolve</code>\uFF0C\u52A0\u8F7D\u5931\u8D25\u5219\u6267\u884C <code>reject</code>\uFF0C\u8FD9\u6837\u5C31\u975E\u5E38\u5DE7\u5999\u5730\u5B9E\u73B0\u4E86\u914D\u5408 webpack 2+ \u7684\u5F02\u6B65\u52A0\u8F7D\u7EC4\u4EF6\u7684\u65B9\u5F0F\uFF08<code>Promise</code>\uFF09\u52A0\u8F7D\u5F02\u6B65\u7EC4\u4EF6\u3002</p><h2 id="\u9AD8\u7EA7\u5F02\u6B65\u7EC4\u4EF6" tabindex="-1"><a class="header-anchor" href="#\u9AD8\u7EA7\u5F02\u6B65\u7EC4\u4EF6" aria-hidden="true">#</a> \u9AD8\u7EA7\u5F02\u6B65\u7EC4\u4EF6</h2><p>\u7531\u4E8E\u5F02\u6B65\u52A0\u8F7D\u7EC4\u4EF6\u9700\u8981\u52A8\u6001\u52A0\u8F7D JS\uFF0C\u6709\u4E00\u5B9A\u7F51\u7EDC\u5EF6\u65F6\uFF0C\u800C\u4E14\u6709\u52A0\u8F7D\u5931\u8D25\u7684\u60C5\u51B5\uFF0C\u6240\u4EE5\u901A\u5E38\u5728\u5F00\u53D1\u5F02\u6B65\u7EC4\u4EF6\u76F8\u5173\u903B\u8F91\u7684\u65F6\u5019\u9700\u8981\u8BBE\u8BA1 loading \u7EC4\u4EF6\u548C error \u7EC4\u4EF6\uFF0C\u5E76\u5728\u9002\u5F53\u7684\u65F6\u673A\u6E32\u67D3\u5B83\u4EEC\u3002Vue.js 2.3+ \u652F\u6301\u4E86\u4E00\u79CD\u9AD8\u7EA7\u5F02\u6B65\u7EC4\u4EF6\u7684\u65B9\u5F0F\uFF0C\u5B83\u901A\u8FC7\u4E00\u4E2A\u7B80\u5355\u7684\u5BF9\u8C61\u914D\u7F6E\uFF0C\u5E2E\u4F60\u641E\u5B9A loading \u7EC4\u4EF6\u548C error \u7EC4\u4EF6\u7684\u6E32\u67D3\u65F6\u673A\uFF0C\u4F60\u5B8C\u5168\u4E0D\u7528\u5173\u5FC3\u7EC6\u8282\uFF0C\u975E\u5E38\u65B9\u4FBF\u3002\u63A5\u4E0B\u6765\u5C31\u4ECE\u6E90\u7801\u7684\u89D2\u5EA6\u6765\u5206\u6790\u9AD8\u7EA7\u5F02\u6B65\u7EC4\u4EF6\u662F\u600E\u4E48\u5B9E\u73B0\u7684\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">AsyncComp</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token comment">// \u9700\u8981\u52A0\u8F7D\u7684\u7EC4\u4EF6\u3002\u5E94\u5F53\u662F\u4E00\u4E2A Promise</span>
  <span class="token literal-property property">component</span><span class="token operator">:</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;./MyComp.vue&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token comment">// \u52A0\u8F7D\u4E2D\u5E94\u5F53\u6E32\u67D3\u7684\u7EC4\u4EF6</span>
  <span class="token literal-property property">loading</span><span class="token operator">:</span> LoadingComp<span class="token punctuation">,</span>
  <span class="token comment">// \u51FA\u9519\u65F6\u6E32\u67D3\u7684\u7EC4\u4EF6</span>
  <span class="token literal-property property">error</span><span class="token operator">:</span> ErrorComp<span class="token punctuation">,</span>
  <span class="token comment">// \u6E32\u67D3\u52A0\u8F7D\u4E2D\u7EC4\u4EF6\u524D\u7684\u7B49\u5F85\u65F6\u95F4\u3002\u9ED8\u8BA4\uFF1A200ms\u3002</span>
  <span class="token literal-property property">delay</span><span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span>
  <span class="token comment">// \u6700\u957F\u7B49\u5F85\u65F6\u95F4\u3002\u8D85\u51FA\u6B64\u65F6\u95F4\u5219\u6E32\u67D3\u9519\u8BEF\u7EC4\u4EF6\u3002\u9ED8\u8BA4\uFF1AInfinity</span>
  <span class="token literal-property property">timeout</span><span class="token operator">:</span> <span class="token number">3000</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
Vue<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span><span class="token string">&#39;async-example&#39;</span><span class="token punctuation">,</span> AsyncComp<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>\u9AD8\u7EA7\u5F02\u6B65\u7EC4\u4EF6\u7684\u521D\u59CB\u5316\u903B\u8F91\u548C\u666E\u901A\u5F02\u6B65\u7EC4\u4EF6\u4E00\u6837\uFF0C\u4E5F\u662F\u6267\u884C <code>resolveAsyncComponent</code>\uFF0C\u5F53\u6267\u884C\u5B8C <code>res = factory(resolve, reject)</code>\uFF0C\u8FD4\u56DE\u503C\u5C31\u662F\u5B9A\u4E49\u7684\u7EC4\u4EF6\u5BF9\u8C61\uFF0C\u663E\u7136\u6EE1\u8DB3 <code>else if (isDef(res.component) &amp;&amp; typeof res.component.then === &#39;function&#39;)</code> \u7684\u903B\u8F91\uFF0C\u63A5\u7740\u6267\u884C <code>res.component.then(resolve, reject)</code>\uFF0C\u5F53\u5F02\u6B65\u7EC4\u4EF6\u52A0\u8F7D\u6210\u529F\u540E\uFF0C\u6267\u884C <code>resolve</code>\uFF0C\u5931\u8D25\u6267\u884C <code>reject</code>\u3002</p><p>\u56E0\u4E3A\u5F02\u6B65\u7EC4\u4EF6\u52A0\u8F7D\u662F\u4E00\u4E2A\u5F02\u6B65\u8FC7\u7A0B\uFF0C\u5B83\u63A5\u7740\u53C8\u540C\u6B65\u6267\u884C\u4E86\u5982\u4E0B\u903B\u8F91\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDef</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>error<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  factory<span class="token punctuation">.</span>errorComp <span class="token operator">=</span> <span class="token function">ensureCtor</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>error<span class="token punctuation">,</span> baseCtor<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDef</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>loading<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  factory<span class="token punctuation">.</span>loadingComp <span class="token operator">=</span> <span class="token function">ensureCtor</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>loading<span class="token punctuation">,</span> baseCtor<span class="token punctuation">)</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>res<span class="token punctuation">.</span>delay <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    factory<span class="token punctuation">.</span>loading <span class="token operator">=</span> <span class="token boolean">true</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isUndef</span><span class="token punctuation">(</span>factory<span class="token punctuation">.</span>resolved<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">isUndef</span><span class="token punctuation">(</span>factory<span class="token punctuation">.</span>error<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        factory<span class="token punctuation">.</span>loading <span class="token operator">=</span> <span class="token boolean">true</span>
        <span class="token function">forceRender</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> res<span class="token punctuation">.</span>delay <span class="token operator">||</span> <span class="token number">200</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDef</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>timeout<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isUndef</span><span class="token punctuation">(</span>factory<span class="token punctuation">.</span>resolved<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">reject</span><span class="token punctuation">(</span>
        process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">!==</span> <span class="token string">&#39;production&#39;</span>
          <span class="token operator">?</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">timeout (</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>res<span class="token punctuation">.</span>timeout<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">ms)</span><span class="token template-punctuation string">\`</span></span>
          <span class="token operator">:</span> <span class="token keyword">null</span>
      <span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> res<span class="token punctuation">.</span>timeout<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br></div></div><p>\u5148\u5224\u65AD <code>res.error</code> \u662F\u5426\u5B9A\u4E49\u4E86 error \u7EC4\u4EF6\uFF0C\u5982\u679C\u6709\u7684\u8BDD\u5219\u8D4B\u503C\u7ED9 <code>factory.errorComp</code>\u3002 \u63A5\u7740\u5224\u65AD <code>res.loading</code> \u662F\u5426\u5B9A\u4E49\u4E86 loading \u7EC4\u4EF6\uFF0C\u5982\u679C\u6709\u7684\u8BDD\u5219\u8D4B\u503C\u7ED9 <code>factory.loadingComp</code>\uFF0C\u5982\u679C\u8BBE\u7F6E\u4E86 <code>res.delay</code> \u4E14\u4E3A 0\uFF0C\u5219\u8BBE\u7F6E <code>factory.loading = true</code>\uFF0C\u5426\u5219\u5EF6\u65F6 <code>delay</code> \u7684\u65F6\u95F4\u6267\u884C\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isUndef</span><span class="token punctuation">(</span>factory<span class="token punctuation">.</span>resolved<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">isUndef</span><span class="token punctuation">(</span>factory<span class="token punctuation">.</span>error<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    factory<span class="token punctuation">.</span>loading <span class="token operator">=</span> <span class="token boolean">true</span>
    <span class="token function">forceRender</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>\u6700\u540E\u5224\u65AD <code>res.timeout</code>\uFF0C\u5982\u679C\u914D\u7F6E\u4E86\u8BE5\u9879\uFF0C\u5219\u5728 <code>res.timout</code> \u65F6\u95F4\u540E\uFF0C\u5982\u679C\u7EC4\u4EF6\u6CA1\u6709\u6210\u529F\u52A0\u8F7D\uFF0C\u6267\u884C <code>reject</code>\u3002</p><p>\u5728 <code>resolveAsyncComponent</code> \u7684\u6700\u540E\u6709\u4E00\u6BB5\u903B\u8F91\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>sync <span class="token operator">=</span> <span class="token boolean">false</span>
<span class="token keyword">return</span> factory<span class="token punctuation">.</span>loading
  <span class="token operator">?</span> factory<span class="token punctuation">.</span>loadingComp
  <span class="token operator">:</span> factory<span class="token punctuation">.</span>resolved
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>\u5982\u679C <code>delay</code> \u914D\u7F6E\u4E3A 0\uFF0C\u5219\u8FD9\u6B21\u76F4\u63A5\u6E32\u67D3 loading \u7EC4\u4EF6\uFF0C\u5426\u5219\u5219\u5EF6\u65F6 <code>delay</code> \u6267\u884C <code>forceRender</code>\uFF0C\u90A3\u4E48\u53C8\u4F1A\u518D\u4E00\u6B21\u6267\u884C\u5230 <code>resolveAsyncComponent</code>\u3002</p><p>\u90A3\u4E48\u8FD9\u65F6\u5019\u6709\u51E0\u79CD\u60C5\u51B5\uFF0C\u6309\u903B\u8F91\u7684\u6267\u884C\u987A\u5E8F\uFF0C\u5BF9\u4E0D\u540C\u7684\u60C5\u51B5\u505A\u5224\u65AD\u3002</p><h3 id="\u5F02\u6B65\u7EC4\u4EF6\u52A0\u8F7D\u5931\u8D25" tabindex="-1"><a class="header-anchor" href="#\u5F02\u6B65\u7EC4\u4EF6\u52A0\u8F7D\u5931\u8D25" aria-hidden="true">#</a> \u5F02\u6B65\u7EC4\u4EF6\u52A0\u8F7D\u5931\u8D25</h3><p>\u5F53\u5F02\u6B65\u7EC4\u4EF6\u52A0\u8F7D\u5931\u8D25\uFF0C\u4F1A\u6267\u884C <code>reject</code> \u51FD\u6570\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> reject <span class="token operator">=</span> <span class="token function">once</span><span class="token punctuation">(</span><span class="token parameter">reason</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">!==</span> <span class="token string">&#39;production&#39;</span> <span class="token operator">&amp;&amp;</span> <span class="token function">warn</span><span class="token punctuation">(</span>
    <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Failed to resolve async component: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token function">String</span><span class="token punctuation">(</span>factory<span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span> <span class="token operator">+</span>
    <span class="token punctuation">(</span>reason <span class="token operator">?</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">\\nReason: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>reason<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span> <span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">)</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDef</span><span class="token punctuation">(</span>factory<span class="token punctuation">.</span>errorComp<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    factory<span class="token punctuation">.</span>error <span class="token operator">=</span> <span class="token boolean">true</span>
    <span class="token function">forceRender</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>\u8FD9\u4E2A\u65F6\u5019\u4F1A\u628A <code>factory.error</code> \u8BBE\u7F6E\u4E3A <code>true</code>\uFF0C\u540C\u65F6\u6267\u884C <code>forceRender()</code> \u518D\u6B21\u6267\u884C\u5230 <code>resolveAsyncComponent</code>\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isTrue</span><span class="token punctuation">(</span>factory<span class="token punctuation">.</span>error<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">isDef</span><span class="token punctuation">(</span>factory<span class="token punctuation">.</span>errorComp<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> factory<span class="token punctuation">.</span>errorComp
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u90A3\u4E48\u8FD9\u4E2A\u65F6\u5019\u5C31\u8FD4\u56DE <code>factory.errorComp</code>\uFF0C\u76F4\u63A5\u6E32\u67D3 error \u7EC4\u4EF6\u3002</p><h3 id="\u5F02\u6B65\u7EC4\u4EF6\u52A0\u8F7D\u6210\u529F" tabindex="-1"><a class="header-anchor" href="#\u5F02\u6B65\u7EC4\u4EF6\u52A0\u8F7D\u6210\u529F" aria-hidden="true">#</a> \u5F02\u6B65\u7EC4\u4EF6\u52A0\u8F7D\u6210\u529F</h3><p>\u5F53\u5F02\u6B65\u7EC4\u4EF6\u52A0\u8F7D\u6210\u529F\uFF0C\u4F1A\u6267\u884C <code>resolve</code> \u51FD\u6570\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> resolve <span class="token operator">=</span> <span class="token function">once</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">res</span><span class="token operator">:</span> Object <span class="token operator">|</span> Class<span class="token operator">&lt;</span>Component<span class="token operator">&gt;</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  factory<span class="token punctuation">.</span>resolved <span class="token operator">=</span> <span class="token function">ensureCtor</span><span class="token punctuation">(</span>res<span class="token punctuation">,</span> baseCtor<span class="token punctuation">)</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>sync<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">forceRender</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>\u9996\u5148\u628A\u52A0\u8F7D\u7ED3\u679C\u7F13\u5B58\u5230 <code>factory.resolved</code> \u4E2D\uFF0C\u8FD9\u4E2A\u65F6\u5019\u56E0\u4E3A <code>sync</code> \u5DF2\u7ECF\u4E3A false\uFF0C\u5219\u6267\u884C <code>forceRender()</code> \u518D\u6B21\u6267\u884C\u5230 <code>resolveAsyncComponent</code>\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDef</span><span class="token punctuation">(</span>factory<span class="token punctuation">.</span>resolved<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> factory<span class="token punctuation">.</span>resolved
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u90A3\u4E48\u8FD9\u4E2A\u65F6\u5019\u76F4\u63A5\u8FD4\u56DE <code>factory.resolved</code>\uFF0C\u6E32\u67D3\u6210\u529F\u52A0\u8F7D\u7684\u7EC4\u4EF6\u3002</p><h3 id="\u5F02\u6B65\u7EC4\u4EF6\u52A0\u8F7D\u4E2D" tabindex="-1"><a class="header-anchor" href="#\u5F02\u6B65\u7EC4\u4EF6\u52A0\u8F7D\u4E2D" aria-hidden="true">#</a> \u5F02\u6B65\u7EC4\u4EF6\u52A0\u8F7D\u4E2D</h3><p>\u5982\u679C\u5F02\u6B65\u7EC4\u4EF6\u52A0\u8F7D\u4E2D\u5E76\u672A\u8FD4\u56DE\uFF0C\u8FD9\u65F6\u5019\u4F1A\u8D70\u5230\u8FD9\u4E2A\u903B\u8F91\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isTrue</span><span class="token punctuation">(</span>factory<span class="token punctuation">.</span>loading<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">isDef</span><span class="token punctuation">(</span>factory<span class="token punctuation">.</span>loadingComp<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> factory<span class="token punctuation">.</span>loadingComp
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u90A3\u4E48\u5219\u4F1A\u8FD4\u56DE <code>factory.loadingComp</code>\uFF0C\u6E32\u67D3 loading \u7EC4\u4EF6\u3002</p><h3 id="\u5F02\u6B65\u7EC4\u4EF6\u52A0\u8F7D\u8D85\u65F6" tabindex="-1"><a class="header-anchor" href="#\u5F02\u6B65\u7EC4\u4EF6\u52A0\u8F7D\u8D85\u65F6" aria-hidden="true">#</a> \u5F02\u6B65\u7EC4\u4EF6\u52A0\u8F7D\u8D85\u65F6</h3><p>\u5982\u679C\u8D85\u65F6\uFF0C\u5219\u8D70\u5230\u4E86 <code>reject</code> \u903B\u8F91\uFF0C\u4E4B\u540E\u903B\u8F91\u548C\u52A0\u8F7D\u5931\u8D25\u4E00\u6837\uFF0C\u6E32\u67D3 error \u7EC4\u4EF6\u3002</p><h2 id="\u5F02\u6B65\u7EC4\u4EF6-patch" tabindex="-1"><a class="header-anchor" href="#\u5F02\u6B65\u7EC4\u4EF6-patch" aria-hidden="true">#</a> \u5F02\u6B65\u7EC4\u4EF6 patch</h2><p>\u56DE\u5230 <code>createComponent</code> \u7684\u903B\u8F91\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Ctor <span class="token operator">=</span> <span class="token function">resolveAsyncComponent</span><span class="token punctuation">(</span>asyncFactory<span class="token punctuation">,</span> baseCtor<span class="token punctuation">,</span> context<span class="token punctuation">)</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>Ctor <span class="token operator">===</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token function">createAsyncPlaceholder</span><span class="token punctuation">(</span>
    asyncFactory<span class="token punctuation">,</span>
    data<span class="token punctuation">,</span>
    context<span class="token punctuation">,</span>
    children<span class="token punctuation">,</span>
    tag
  <span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>\u5982\u679C\u662F\u7B2C\u4E00\u6B21\u6267\u884C <code>resolveAsyncComponent</code>\uFF0C\u9664\u975E\u4F7F\u7528\u9AD8\u7EA7\u5F02\u6B65\u7EC4\u4EF6 <code>0 delay</code> \u53BB\u521B\u5EFA\u4E86\u4E00\u4E2A loading \u7EC4\u4EF6\uFF0C\u5426\u5219\u8FD4\u56DE\u662F <code>undefiend</code>\uFF0C\u63A5\u7740\u901A\u8FC7 <code>createAsyncPlaceholder</code> \u521B\u5EFA\u4E00\u4E2A\u6CE8\u91CA\u8282\u70B9\u4F5C\u4E3A\u5360\u4F4D\u7B26\u3002\u5B83\u7684\u5B9A\u4E49\u5728 <code>src/core/vdom/helpers/resolve-async-components.js</code> \u4E2D\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">createAsyncPlaceholder</span> <span class="token punctuation">(</span>
  <span class="token parameter"><span class="token literal-property property">factory</span><span class="token operator">:</span> Function<span class="token punctuation">,</span>
  <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token operator">?</span>VNodeData<span class="token punctuation">,</span>
  <span class="token literal-property property">context</span><span class="token operator">:</span> Component<span class="token punctuation">,</span>
  <span class="token literal-property property">children</span><span class="token operator">:</span> <span class="token operator">?</span>Array<span class="token operator">&lt;</span>VNode<span class="token operator">&gt;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">tag</span><span class="token operator">:</span> <span class="token operator">?</span>string</span>
<span class="token punctuation">)</span><span class="token operator">:</span> VNode <span class="token punctuation">{</span>
  <span class="token keyword">const</span> node <span class="token operator">=</span> <span class="token function">createEmptyVNode</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  node<span class="token punctuation">.</span>asyncFactory <span class="token operator">=</span> factory
  node<span class="token punctuation">.</span>asyncMeta <span class="token operator">=</span> <span class="token punctuation">{</span> data<span class="token punctuation">,</span> context<span class="token punctuation">,</span> children<span class="token punctuation">,</span> tag <span class="token punctuation">}</span>
  <span class="token keyword">return</span> node
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>\u5B9E\u9645\u4E0A\u5C31\u662F\u5C31\u662F\u521B\u5EFA\u4E86\u4E00\u4E2A\u5360\u4F4D\u7684\u6CE8\u91CA VNode\uFF0C\u540C\u65F6\u628A <code>asyncFactory</code> \u548C <code>asyncMeta</code> \u8D4B\u503C\u7ED9\u5F53\u524D <code>vnode</code>\u3002</p><p>\u5F53\u6267\u884C <code>forceRender</code> \u7684\u65F6\u5019\uFF0C\u4F1A\u89E6\u53D1\u7EC4\u4EF6\u7684\u91CD\u65B0\u6E32\u67D3\uFF0C\u90A3\u4E48\u4F1A\u518D\u4E00\u6B21\u6267\u884C <code>resolveAsyncComponent</code>\uFF0C\u8FD9\u65F6\u5019\u5C31\u4F1A\u6839\u636E\u4E0D\u540C\u7684\u60C5\u51B5\uFF0C\u53EF\u80FD\u8FD4\u56DE loading\u3001error \u6216\u6210\u529F\u52A0\u8F7D\u7684\u5F02\u6B65\u7EC4\u4EF6\uFF0C\u8FD4\u56DE\u503C\u4E0D\u4E3A <code>undefined</code>\uFF0C\u56E0\u6B64\u5C31\u8D70\u6B63\u5E38\u7684\u7EC4\u4EF6 <code>render</code>\u3001<code>patch</code> \u8FC7\u7A0B\uFF0C\u4E0E\u7EC4\u4EF6\u7B2C\u4E00\u6B21\u6E32\u67D3\u6D41\u7A0B\u4E0D\u4E00\u6837\uFF0C\u8FD9\u4E2A\u65F6\u5019\u662F\u5B58\u5728\u65B0\u65E7 <code>vnode</code> \u7684\uFF0C\u4E0B\u4E00\u7AE0\u4F1A\u5206\u6790\u7EC4\u4EF6\u66F4\u65B0\u7684 <code>patch</code> \u8FC7\u7A0B\u3002</p><h2 id="\u603B\u7ED3" tabindex="-1"><a class="header-anchor" href="#\u603B\u7ED3" aria-hidden="true">#</a> \u603B\u7ED3</h2><p>\u901A\u8FC7\u4EE5\u4E0A\u4EE3\u7801\u5206\u6790\uFF0C\u5BF9 Vue \u7684\u5F02\u6B65\u7EC4\u4EF6\u7684\u5B9E\u73B0\u6709\u4E86\u6DF1\u5165\u7684\u4E86\u89E3\uFF0C\u77E5\u9053\u4E86 3 \u79CD\u5F02\u6B65\u7EC4\u4EF6\u7684\u5B9E\u73B0\u65B9\u5F0F\uFF0C\u5E76\u4E14\u770B\u5230\u9AD8\u7EA7\u5F02\u6B65\u7EC4\u4EF6\u7684\u5B9E\u73B0\u662F\u975E\u5E38\u5DE7\u5999\u7684\uFF0C\u5B83\u5B9E\u73B0\u4E86 loading\u3001resolve\u3001reject\u3001timeout 4 \u79CD\u72B6\u6001\u3002\u5F02\u6B65\u7EC4\u4EF6\u5B9E\u73B0\u7684\u672C\u8D28\u662F 2 \u6B21\u6E32\u67D3\uFF0C\u9664\u4E86 0 delay \u7684\u9AD8\u7EA7\u5F02\u6B65\u7EC4\u4EF6\u7B2C\u4E00\u6B21\u76F4\u63A5\u6E32\u67D3\u6210 loading \u7EC4\u4EF6\u5916\uFF0C\u5176\u5B83\u90FD\u662F\u7B2C\u4E00\u6B21\u6E32\u67D3\u751F\u6210\u4E00\u4E2A\u6CE8\u91CA\u8282\u70B9\uFF0C\u5F53\u5F02\u6B65\u83B7\u53D6\u7EC4\u4EF6\u6210\u529F\u540E\uFF0C\u518D\u901A\u8FC7 <code>forceRender</code> \u5F3A\u5236\u91CD\u65B0\u6E32\u67D3\uFF0C\u8FD9\u6837\u5C31\u80FD\u6B63\u786E\u6E32\u67D3\u51FA\u5F02\u6B65\u52A0\u8F7D\u7684\u7EC4\u4EF6\u4E86\u3002</p>`,69);function e(t,o){return p}var r=s(a,[["render",e]]);export{r as default};
