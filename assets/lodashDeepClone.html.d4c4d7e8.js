import{a as n}from"./app.ee3fc36b.js";import{_ as s}from"./plugin-vue_export-helper.21dcd24c.js";const a={},p=n(`<h3 id="\u3010\u8FDB\u96364-4\u671F\u3011lodash\u662F\u5982\u4F55\u5B9E\u73B0\u6DF1\u62F7\u8D1D\u7684" tabindex="-1"><a class="header-anchor" href="#\u3010\u8FDB\u96364-4\u671F\u3011lodash\u662F\u5982\u4F55\u5B9E\u73B0\u6DF1\u62F7\u8D1D\u7684" aria-hidden="true">#</a> \u3010\u8FDB\u96364-4\u671F\u3011Lodash\u662F\u5982\u4F55\u5B9E\u73B0\u6DF1\u62F7\u8D1D\u7684</h3><h2 id="\u6574\u4F53\u6D41\u7A0B" tabindex="-1"><a class="header-anchor" href="#\u6574\u4F53\u6D41\u7A0B" aria-hidden="true">#</a> <strong>\u6574\u4F53\u6D41\u7A0B</strong></h2><hr><h2 id="\u5165\u53E3" tabindex="-1"><a class="header-anchor" href="#\u5165\u53E3" aria-hidden="true">#</a> <strong>\u5165\u53E3</strong></h2><p>\u5165\u53E3\u6587\u4EF6\u662F <code>cloneDeep.js</code>\uFF0C\u76F4\u63A5\u8C03\u7528\u6838\u5FC3\u6587\u4EF6 <code>baseClone.js</code> \u7684\u65B9\u6CD5\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token constant">CLONE_DEEP_FLAG</span> <span class="token operator">=</span> <span class="token number">1</span>
<span class="token keyword">const</span> <span class="token constant">CLONE_SYMBOLS_FLAG</span> <span class="token operator">=</span> <span class="token number">4</span>

<span class="token keyword">function</span> <span class="token function">cloneDeep</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">baseClone</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> <span class="token constant">CLONE_DEEP_FLAG</span> <span class="token operator">|</span> <span class="token constant">CLONE_SYMBOLS_FLAG</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>\u7B2C\u4E00\u4E2A\u53C2\u6570\u662F\u9700\u8981\u62F7\u8D1D\u7684\u5BF9\u8C61\uFF0C\u7B2C\u4E8C\u4E2A\u662F\u4F4D\u63A9\u7801\uFF08Bitwise\uFF09\uFF0C\u5173\u4E8E\u4F4D\u63A9\u7801\u7684\u8BE6\u7EC6\u4ECB\u7ECD\u8BF7\u770B\u4E0B\u9762\u62D3\u5C55\u90E8\u5206\u3002</p><p><strong>baseClone \u65B9\u6CD5</strong></p><p>\u7136\u540E\u8FDB\u5165 <code>./.internal/baseClone.js</code> \u8DEF\u5F84\u67E5\u770B\u5177\u4F53\u65B9\u6CD5\uFF0C\u4E3B\u8981\u5B9E\u73B0\u903B\u8F91\u90FD\u5728\u8FD9\u4E2A\u65B9\u6CD5\u91CC\u3002</p><p>\u5148\u4ECB\u7ECD\u4E0B\u8BE5\u65B9\u6CD5\u7684\u53C2\u6570 <code>baseClone(value, bitmask, customizer, key, object, stack)</code></p><ul><li><p>value\uFF1A\u9700\u8981\u62F7\u8D1D\u7684\u5BF9\u8C61</p></li><li><p>bitmask\uFF1A\u4F4D\u63A9\u7801\uFF0C\u5176\u4E2D 1 \u662F\u6DF1\u62F7\u8D1D\uFF0C2 \u62F7\u8D1D\u539F\u578B\u94FE\u4E0A\u7684\u5C5E\u6027\uFF0C4 \u662F\u62F7\u8D1D Symbols \u5C5E\u6027</p></li><li><p>customizer\uFF1A\u5B9A\u5236\u7684 <code>clone</code> \u51FD\u6570</p></li><li><p>key\uFF1A\u4F20\u5165 value \u503C\u7684 key</p></li><li><p>object\uFF1A\u4F20\u5165 value \u503C\u7684\u7236\u5BF9\u8C61</p></li><li><p>stack\uFF1AStack \u6808\uFF0C\u7528\u6765\u5904\u7406\u5FAA\u73AF\u5F15\u7528</p></li></ul><p>\u5C06\u5206\u6210\u4EE5\u4E0B\u51E0\u90E8\u5206\u8FDB\u884C\u8BB2\u89E3\uFF0C\u53EF\u4EE5\u9009\u62E9\u81EA\u5DF1\u611F\u5174\u8DA3\u7684\u90E8\u5206\u9605\u8BFB\u3002</p><ul><li><p>\u4F4D\u63A9\u7801</p></li><li><p>\u5B9A\u5236 <code>clone</code> \u51FD\u6570</p></li><li><p>\u975E\u5BF9\u8C61</p></li><li><p>\u6570\u7EC4 &amp; \u6B63\u5219</p></li><li><p>\u5BF9\u8C61 &amp; \u51FD\u6570</p></li><li><p>\u5FAA\u73AF\u5F15\u7528</p></li><li><p>Map &amp; Set</p></li><li><p>Symbol &amp; \u539F\u578B\u94FE</p></li></ul><p><strong>baseClone \u5B8C\u6574\u4EE3\u7801</strong></p><p>\u8FD9\u90E8\u5206\u5C31\u662F\u6838\u5FC3\u4EE3\u7801\u4E86\uFF0C\u5404\u529F\u80FD\u5206\u5272\u5982\u4E0B\uFF0C\u8BE6\u7EC6\u529F\u80FD\u5B9E\u73B0\u90E8\u5206\u5C06\u5BF9\u5404\u4E2A\u529F\u80FD\u8BE6\u7EC6\u89E3\u8BFB\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">baseClone</span><span class="token punctuation">(</span><span class="token parameter">value<span class="token punctuation">,</span> bitmask<span class="token punctuation">,</span> customizer<span class="token punctuation">,</span> key<span class="token punctuation">,</span> object<span class="token punctuation">,</span> stack</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> result

    <span class="token comment">// \u6807\u5FD7\u4F4D</span>
    <span class="token keyword">const</span> isDeep <span class="token operator">=</span> bitmask <span class="token operator">&amp;</span> <span class="token constant">CLONE_DEEP_FLAG</span>		<span class="token comment">// \u6DF1\u62F7\u8D1D\uFF0Ctrue</span>
    <span class="token keyword">const</span> isFlat <span class="token operator">=</span> bitmask <span class="token operator">&amp;</span> <span class="token constant">CLONE_FLAT_FLAG</span>		<span class="token comment">// \u62F7\u8D1D\u539F\u578B\u94FE\uFF0Cfalse</span>
    <span class="token keyword">const</span> isFull <span class="token operator">=</span> bitmask <span class="token operator">&amp;</span> <span class="token constant">CLONE_SYMBOLS_FLAG</span>	<span class="token comment">// \u62F7\u8D1D Symbol\uFF0Ctrue</span>

    <span class="token comment">// \u81EA\u5B9A\u4E49 clone \u51FD\u6570</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>customizer<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        result <span class="token operator">=</span> object <span class="token operator">?</span> <span class="token function">customizer</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> key<span class="token punctuation">,</span> object<span class="token punctuation">,</span> stack<span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token function">customizer</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>result <span class="token operator">!==</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> result
    <span class="token punctuation">}</span>

    <span class="token comment">// \u975E\u5BF9\u8C61  </span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isObject</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> value
    <span class="token punctuation">}</span>
    
    <span class="token keyword">const</span> isArr <span class="token operator">=</span> Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>
    <span class="token keyword">const</span> tag <span class="token operator">=</span> <span class="token function">getTag</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>isArr<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u6570\u7EC4</span>
        result <span class="token operator">=</span> <span class="token function">initCloneArray</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isDeep<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token function">copyArray</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> result<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5BF9\u8C61</span>
        <span class="token keyword">const</span> isFunc <span class="token operator">=</span> <span class="token keyword">typeof</span> value <span class="token operator">==</span> <span class="token string">&#39;function&#39;</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isBuffer</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token function">cloneBuffer</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> isDeep<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>tag <span class="token operator">==</span> objectTag <span class="token operator">||</span> tag <span class="token operator">==</span> argsTag <span class="token operator">||</span> <span class="token punctuation">(</span>isFunc <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>object<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            result <span class="token operator">=</span> <span class="token punctuation">(</span>isFlat <span class="token operator">||</span> isFunc<span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token operator">:</span> <span class="token function">initCloneObject</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isDeep<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> isFlat
                    <span class="token operator">?</span> <span class="token function">copySymbolsIn</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> <span class="token function">copyObject</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> <span class="token function">keysIn</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">,</span> result<span class="token punctuation">)</span><span class="token punctuation">)</span>
                	<span class="token operator">:</span> <span class="token function">copySymbols</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span>result<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>isFunc <span class="token operator">||</span> <span class="token operator">!</span>cloneableTags<span class="token punctuation">[</span>tag<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> object <span class="token operator">?</span> value <span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
            result <span class="token operator">=</span> <span class="token function">initCloneByTag</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> tag<span class="token punctuation">,</span> isDeep<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u5FAA\u73AF\u5F15\u7528</span>
    stack <span class="token operator">||</span> <span class="token punctuation">(</span>stack <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Stack</span><span class="token punctuation">)</span>
    <span class="token keyword">const</span> stacked <span class="token operator">=</span> stack<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>stacked<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> stacked
    <span class="token punctuation">}</span>
    stack<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> result<span class="token punctuation">)</span>

    <span class="token comment">// Map</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>tag <span class="token operator">==</span> mapTag<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        value<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">subValue<span class="token punctuation">,</span> key</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            result<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> <span class="token function">baseClone</span><span class="token punctuation">(</span>subValue<span class="token punctuation">,</span> bitmask<span class="token punctuation">,</span> customizer<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">,</span> stack<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> result
    <span class="token punctuation">}</span>

    <span class="token comment">// Set</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>tag <span class="token operator">==</span> setTag<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        value<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">subValue</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            result<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token function">baseClone</span><span class="token punctuation">(</span>subValue<span class="token punctuation">,</span> bitmask<span class="token punctuation">,</span> customizer<span class="token punctuation">,</span> subValue<span class="token punctuation">,</span> value<span class="token punctuation">,</span> stack<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> result
    <span class="token punctuation">}</span>

    <span class="token comment">// TypedArray</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isTypedArray</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> result
    <span class="token punctuation">}</span>

    <span class="token comment">// Symbol &amp; \u539F\u578B\u94FE</span>
    <span class="token keyword">const</span> keysFunc <span class="token operator">=</span> isFull
    	<span class="token operator">?</span> <span class="token punctuation">(</span>isFlat <span class="token operator">?</span> getAllKeysIn <span class="token operator">:</span> getAllKeys<span class="token punctuation">)</span>
    	<span class="token operator">:</span> <span class="token punctuation">(</span>isFlat <span class="token operator">?</span> keysIn <span class="token operator">:</span> keys<span class="token punctuation">)</span>

    <span class="token keyword">const</span> props <span class="token operator">=</span> isArr <span class="token operator">?</span> <span class="token keyword">undefined</span> <span class="token operator">:</span> <span class="token function">keysFunc</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>
    
    <span class="token comment">// \u904D\u5386\u8D4B\u503C</span>
    <span class="token function">arrayEach</span><span class="token punctuation">(</span>props <span class="token operator">||</span> value<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">subValue<span class="token punctuation">,</span> key</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>props<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            key <span class="token operator">=</span> subValue
            subValue <span class="token operator">=</span> value<span class="token punctuation">[</span>key<span class="token punctuation">]</span>
        <span class="token punctuation">}</span>
        <span class="token function">assignValue</span><span class="token punctuation">(</span>result<span class="token punctuation">,</span> key<span class="token punctuation">,</span> <span class="token function">baseClone</span><span class="token punctuation">(</span>subValue<span class="token punctuation">,</span> bitmask<span class="token punctuation">,</span> customizer<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">,</span> stack<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    
    <span class="token comment">// \u8FD4\u56DE\u7ED3\u679C</span>
    <span class="token keyword">return</span> result
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br></div></div><h2 id="\u8BE6\u7EC6\u529F\u80FD\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#\u8BE6\u7EC6\u529F\u80FD\u5B9E\u73B0" aria-hidden="true">#</a> <strong>\u8BE6\u7EC6\u529F\u80FD\u5B9E\u73B0</strong></h2><hr><h2 id="\u4F4D\u63A9\u7801" tabindex="-1"><a class="header-anchor" href="#\u4F4D\u63A9\u7801" aria-hidden="true">#</a> <strong>\u4F4D\u63A9\u7801</strong></h2><p>\u4E0A\u9762\u7B80\u5355\u4ECB\u7ECD\u4E86\u4F4D\u63A9\u7801\uFF0C\u53C2\u6570\u5B9A\u4E49\u5982\u4E0B\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u4E3B\u7EBF\u4EE3\u7801</span>
<span class="token keyword">const</span> <span class="token constant">CLONE_DEEP_FLAG</span> <span class="token operator">=</span> <span class="token number">1</span>		<span class="token comment">// 1 \u5373 0001\uFF0C\u6DF1\u62F7\u8D1D\u6807\u5FD7\u4F4D</span>
<span class="token keyword">const</span> <span class="token constant">CLONE_FLAT_FLAG</span> <span class="token operator">=</span> <span class="token number">2</span>		<span class="token comment">// 2 \u5373 0010\uFF0C\u62F7\u8D1D\u539F\u578B\u94FE\u6807\u5FD7\u4F4D\uFF0C</span>
<span class="token keyword">const</span> <span class="token constant">CLONE_SYMBOLS_FLAG</span> <span class="token operator">=</span> <span class="token number">4</span>	<span class="token comment">// 4 \u5373 0100\uFF0C\u62F7\u8D1D Symbols \u6807\u5FD7\u4F4D</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>\u4F4D\u63A9\u7801\u7528\u4E8E\u5904\u7406\u540C\u65F6\u5B58\u5728\u591A\u4E2A\u5E03\u5C14\u9009\u9879\u7684\u60C5\u51B5\uFF0C\u5176\u4E2D<strong>\u63A9\u7801\u4E2D\u7684\u6BCF\u4E2A\u9009\u9879\u7684\u503C\u90FD\u7B49\u4E8E 2 \u7684\u5E42</strong>\u3002\u76F8\u6BD4\u76F4\u63A5\u4F7F\u7528\u53D8\u91CF\u6765\u8BF4\uFF0C\u4F18\u70B9\u662F\u53EF\u4EE5\u8282\u7701\u5185\u5B58\uFF081/32\uFF09\uFF08\u6765\u81EAMDN\uFF09</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u4E3B\u7EBF\u4EE3\u7801</span>
<span class="token comment">// cloneDeep.js \u6DFB\u52A0\u6807\u5FD7\u4F4D\uFF0C1 | 4 \u5373 0001 | 0100 \u5373 0101 \u5373 5</span>
<span class="token constant">CLONE_DEEP_FLAG</span> <span class="token operator">|</span> <span class="token constant">CLONE_SYMBOLS_FLAG</span>

<span class="token comment">// baseClone.js \u53D6\u51FA\u6807\u5FD7\u4F4D</span>
<span class="token keyword">let</span> result <span class="token comment">// \u521D\u59CB\u5316\u8FD4\u56DE\u7ED3\u679C\uFF0C\u540E\u7EED\u4EE3\u7801\u9700\u8981\uFF0C\u548C\u4F4D\u63A9\u7801\u65E0\u5173</span>
<span class="token keyword">const</span> isDeep <span class="token operator">=</span> bitmask <span class="token operator">&amp;</span> <span class="token constant">CLONE_DEEP_FLAG</span> 	<span class="token comment">// 5 &amp; 1 \u5373 1 \u5373 true</span>
<span class="token keyword">const</span> isFlat <span class="token operator">=</span> bitmask <span class="token operator">&amp;</span> <span class="token constant">CLONE_FLAT_FLAG</span>	<span class="token comment">// 5 &amp; 2 \u5373 0 \u5373 false</span>
<span class="token keyword">const</span> isFull <span class="token operator">=</span> bitmask <span class="token operator">&amp;</span> <span class="token constant">CLONE_SYMBOLS_FLAG</span> <span class="token comment">// 5 &amp; 4 \u5373 4 \u5373 true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>\u5E38\u7528\u7684\u57FA\u672C\u64CD\u4F5C\u5982\u4E0B</p><ul><li><p><code>a | b</code>\uFF1A\u6DFB\u52A0\u6807\u5FD7\u4F4D a \u548C b</p></li><li><p><code>mask &amp; a</code>\uFF1A\u53D6\u51FA\u6807\u5FD7\u4F4D a</p></li><li><p><code>mask &amp; ~a</code>\uFF1A\u6E05\u9664\u6807\u5FD7\u4F4D a</p></li><li><p><code>mask ^ a</code>\uFF1A\u53D6\u51FA\u4E0E a \u7684\u4E0D\u540C\u90E8\u5206</p></li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token constant">FLAG_A</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">// 0001</span>
<span class="token keyword">var</span> <span class="token constant">FLAG_B</span> <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span> <span class="token comment">// 0100</span>

<span class="token comment">// \u6DFB\u52A0\u6807\u5FD7\u4F4D a \u548C b =&gt; a | b</span>
<span class="token keyword">var</span> mask <span class="token operator">=</span> <span class="token constant">FLAG_A</span> <span class="token operator">|</span> <span class="token parameter"><span class="token constant">FLAG_B</span></span> <span class="token operator">=&gt;</span> <span class="token number">0101</span> <span class="token operator">=&gt;</span> <span class="token number">5</span>

<span class="token comment">// \u53D6\u51FA\u6807\u5FD7\u4F4D a =&gt; mask &amp; a</span>
mask <span class="token operator">&amp;</span> <span class="token parameter"><span class="token constant">FLAG_A</span></span> <span class="token operator">=&gt;</span> <span class="token number">0001</span> <span class="token operator">=&gt;</span> <span class="token number">1</span>
mask <span class="token operator">&amp;</span> <span class="token parameter"><span class="token constant">FLAG_B</span></span> <span class="token operator">=&gt;</span> <span class="token number">0100</span> <span class="token operator">=&gt;</span> <span class="token number">4</span>

<span class="token comment">// \u6E05\u9664\u6807\u8BB0\u4F4D a =&gt; mask &amp; ~a</span>
mask <span class="token operator">&amp;</span> <span class="token operator">~</span><span class="token parameter"><span class="token constant">FLAG_A</span></span> <span class="token operator">=&gt;</span> <span class="token number">0100</span> <span class="token operator">=&gt;</span> <span class="token number">4</span>

<span class="token comment">// \u53D6\u51FA\u4E0E a \u7684\u4E0D\u540C\u90E8\u5206 =&gt; mask ^ a</span>
mask <span class="token operator">^</span> <span class="token parameter"><span class="token constant">FLAG_A</span></span> <span class="token operator">=&gt;</span> <span class="token number">0100</span> <span class="token operator">=&gt;</span> <span class="token number">4</span>
mask <span class="token operator">^</span> <span class="token parameter"><span class="token constant">FLAG_B</span></span> <span class="token operator">=&gt;</span> <span class="token number">0001</span> <span class="token operator">=&gt;</span> <span class="token number">1</span>
<span class="token constant">FLAG_A</span> <span class="token operator">^</span> <span class="token parameter"><span class="token constant">FLAG_B</span></span> <span class="token operator">=&gt;</span> <span class="token number">0101</span> <span class="token operator">=&gt;</span> <span class="token number">5</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p><strong>\u5B9A\u5236 <code>clone</code> \u51FD\u6570</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u4E3B\u7EBF\u4EE3\u7801</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>customizer<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	result <span class="token operator">=</span> object <span class="token operator">?</span> <span class="token function">customizer</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> key<span class="token punctuation">,</span> object<span class="token punctuation">,</span> stack<span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token function">customizer</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>result <span class="token operator">!==</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> result
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>\u4E0A\u9762\u4EE3\u7801\u6BD4\u8F83\u6E05\u6670\uFF0C\u5B58\u5728\u5B9A\u5236 <code>clone</code> \u51FD\u6570\u65F6\uFF0C\u5982\u679C\u5B58\u5728 value \u503C\u7684\u7236\u5BF9\u8C61\uFF0C\u5C31\u4F20\u5165 <code>value\u3001key\u3001object\u3001stack</code> \u8FD9\u4E9B\u503C\uFF0C\u4E0D\u5B58\u5728\u7236\u5BF9\u8C61\u76F4\u63A5\u4F20\u5165 <code>value</code> \u6267\u884C\u5B9A\u5236\u51FD\u6570\u3002\u51FD\u6570\u8FD4\u56DE\u503C <code>result</code> \u4E0D\u4E3A\u7A7A\u5219\u8FD4\u56DE\u6267\u884C\u7ED3\u679C\u3002</p><p>\u8FD9\u90E8\u5206\u662F\u4E3A\u4E86\u5B9A\u5236 <code>clone</code> \u51FD\u6570\u66B4\u9732\u51FA\u6765\u7684\u65B9\u6CD5\u3002</p><p><strong>\u975E\u5BF9\u8C61</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u4E3B\u7EBF\u4EE3\u7801</span>
<span class="token comment">//\u5224\u65AD\u8981\u62F7\u8D1D\u7684\u503C\u662F\u5426\u662F\u5BF9\u8C61\uFF0C\u975E\u5BF9\u8C61\u76F4\u63A5\u8FD4\u56DE\u672C\u6765\u7684\u503C</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isObject</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> value<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// ../isObject.js</span>
<span class="token keyword">function</span> <span class="token function">isObject</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> type <span class="token operator">=</span> <span class="token keyword">typeof</span> value<span class="token punctuation">;</span>
    <span class="token keyword">return</span> value <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>type <span class="token operator">==</span> <span class="token string">&#39;object&#39;</span> <span class="token operator">||</span> type <span class="token operator">=</span><span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>\u8FD9\u91CC\u7684\u5904\u7406\u548C\u5728\u3010\u8FDB\u96363-3\u3011\u7684\u5904\u7406\u4E00\u6837\uFF0C\u6709\u4E00\u70B9\u4E0D\u540C\u5728\u4E8E\u5BF9\u8C61\u7684\u5224\u65AD\u4E2D\u52A0\u5165\u4E86 <code>function</code>\uFF0C\u5BF9\u4E8E\u51FD\u6570\u7684\u62F7\u8D1D\u8BE6\u89C1\u4E0B\u9762\u51FD\u6570\u90E8\u5206\u3002</p><h2 id="\u6570\u7EC4-\u6B63\u5219" tabindex="-1"><a class="header-anchor" href="#\u6570\u7EC4-\u6B63\u5219" aria-hidden="true">#</a> <strong>\u6570\u7EC4 &amp; \u6B63\u5219</strong></h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u4E3B\u7EBF\u4EE3\u7801</span>
<span class="token keyword">const</span> isArr <span class="token operator">=</span> Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>
<span class="token keyword">const</span> hasOwnProperty <span class="token operator">=</span> <span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>hasOwnProperty

<span class="token keyword">if</span> <span class="token punctuation">(</span>isArr<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u6570\u7EC4</span>
    result <span class="token operator">=</span> <span class="token function">initCloneArray</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isDeep<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">copyArray</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> result<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token operator">...</span> <span class="token comment">// \u975E\u6570\u7EC4\uFF0C\u540E\u9762\u89E3\u6790</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u521D\u59CB\u5316\u4E00\u4E2A\u6570\u7EC4</span>
<span class="token keyword">function</span> <span class="token function">initCloneArray</span><span class="token punctuation">(</span><span class="token parameter">array</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  	<span class="token keyword">const</span> <span class="token punctuation">{</span> length <span class="token punctuation">}</span> <span class="token operator">=</span> array
    <span class="token comment">// \u6784\u9020\u76F8\u540C\u957F\u5EA6\u7684\u65B0\u6570\u7EC4</span>
  	<span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">array<span class="token punctuation">.</span>constructor</span><span class="token punctuation">(</span>length<span class="token punctuation">)</span>

  	<span class="token comment">// \u6B63\u5219 \`RegExp#exec\` \u8FD4\u56DE\u7684\u6570\u7EC4</span>
  	<span class="token keyword">if</span> <span class="token punctuation">(</span>length <span class="token operator">&amp;&amp;</span> <span class="token keyword">typeof</span> array<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">&#39;string&#39;</span> <span class="token operator">&amp;&amp;</span> <span class="token function">hasOwnProperty</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>array<span class="token punctuation">,</span> <span class="token string">&#39;index&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
   	 	result<span class="token punctuation">.</span>index <span class="token operator">=</span> array<span class="token punctuation">.</span>index
    	result<span class="token punctuation">.</span>input <span class="token operator">=</span> array<span class="token punctuation">.</span>input
  	<span class="token punctuation">}</span>
  	<span class="token keyword">return</span> result
<span class="token punctuation">}</span>
    
<span class="token comment">// ... \u672A\u5B8C\u5F85\u7EED\uFF0C\u6700\u540E\u90E8\u5206\u6709\u6570\u7EC4\u904D\u5386\u8D4B\u503C   </span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br></div></div><p>\u4F20\u5165\u7684\u5BF9\u8C61\u662F\u6570\u7EC4\u65F6\uFF0C\u6784\u9020\u4E00\u4E2A\u76F8\u540C\u957F\u5EA6\u7684\u6570\u7EC4 <code>new array.constructor(length)</code>\uFF0C\u8FD9\u91CC\u76F8\u5F53\u4E8E <code>new Array(length)</code>\uFF0C\u56E0\u4E3A <code>array.constructor === Array</code>\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
a<span class="token punctuation">.</span>constructor <span class="token operator">===</span> Array<span class="token punctuation">;</span> <span class="token comment">// true</span>

<span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">;</span>
a<span class="token punctuation">.</span>constructor <span class="token operator">===</span> Array <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>\u5982\u679C\u5B58\u5728\u6B63\u5219 <code>RegExp#exec</code> \u8FD4\u56DE\u7684\u6570\u7EC4\uFF0C\u62F7\u8D1D\u5C5E\u6027 <code>index</code> \u548C <code>input</code>\u3002\u5224\u65AD\u903B\u8F91\u662F 1\u3001\u6570\u7EC4\u957F\u5EA6\u5927\u4E8E 0\uFF0C2\u3001\u6570\u7EC4\u7B2C\u4E00\u4E2A\u5143\u7D20\u662F\u5B57\u7B26\u4E32\u7C7B\u578B\uFF0C3\u3001\u6570\u7EC4\u5B58\u5728 <code>index</code> \u5C5E\u6027\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">if</span> <span class="token punctuation">(</span>length <span class="token operator">&amp;&amp;</span> <span class="token keyword">typeof</span> array<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">&#39;string&#39;</span> <span class="token operator">&amp;&amp;</span> <span class="token function">hasOwnProperty</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>array<span class="token punctuation">,</span> <span class="token string">&#39;index&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    result<span class="token punctuation">.</span>index <span class="token operator">=</span> array<span class="token punctuation">.</span>index
    result<span class="token punctuation">.</span>input <span class="token operator">=</span> array<span class="token punctuation">.</span>input
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>\u5176\u4E2D\u6B63\u5219\u8868\u8FBE\u5F0F <code>regexObj.exec(str)</code> \u5339\u914D\u6210\u529F\u65F6\uFF0C\u8FD4\u56DE\u4E00\u4E2A\u6570\u7EC4\uFF0C\u5E76\u66F4\u65B0\u6B63\u5219\u8868\u8FBE\u5F0F\u5BF9\u8C61\u7684\u5C5E\u6027\u3002\u8FD4\u56DE\u7684\u6570\u7EC4\u5C06\u5B8C\u5168\u5339\u914D\u6210\u529F\u7684\u6587\u672C\u4F5C\u4E3A\u7B2C\u4E00\u9879\uFF0C\u5C06\u6B63\u5219\u62EC\u53F7\u91CC\u5339\u914D\u6210\u529F\u7684\u4F5C\u4E3A\u6570\u7EC4\u586B\u5145\u5230\u540E\u9762\u3002\u5339\u914D\u5931\u8D25\u65F6\u8FD4\u56DE <code>null</code>\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> re <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">quick\\s(brown).+?(jumps)</span><span class="token regex-delimiter">/</span><span class="token regex-flags">ig</span></span><span class="token punctuation">;</span>
<span class="token keyword">var</span> result <span class="token operator">=</span> re<span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span><span class="token string">&#39;The Quick Brown Fox Jumps Over The Lazy Dog&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// [</span>
<span class="token comment">//	0: &quot;Quick Brown Fox Jumps&quot; 	// \u5339\u914D\u7684\u5168\u90E8\u5B57\u7B26\u4E32</span>
<span class="token comment">//	1: &quot;Brown&quot;					// \u62EC\u53F7\u4E2D\u7684\u5206\u7EC4\u6355\u83B7</span>
<span class="token comment">//	2: &quot;Jumps&quot;</span>
<span class="token comment">//	groups: undefined</span>
<span class="token comment">//	index: 4					// \u5339\u914D\u5230\u7684\u5B57\u7B26\u4F4D\u4E8E\u539F\u59CB\u5B57\u7B26\u4E32\u7684\u57FA\u4E8E0\u7684\u7D22\u5F15\u503C</span>
<span class="token comment">//	input: &quot;The Quick Brown Fox Jumps Over The Lazy Dog&quot; // \u539F\u59CB\u5B57\u7B26\u4E32</span>
<span class="token comment">//	length: 3</span>
<span class="token comment">// ]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>\u5982\u679C\u4E0D\u662F\u6DF1\u62F7\u8D1D\uFF0C\u4F20\u5165<code>value</code> \u548C <code>result</code>\uFF0C\u76F4\u63A5\u8FD4\u56DE\u6D45\u62F7\u8D1D\u540E\u7684\u6570\u7EC4\u3002\u8FD9\u91CC\u7684\u6D45\u62F7\u8D1D\u65B9\u5F0F\u5C31\u662F\u5FAA\u73AF\u7136\u540E\u590D\u5236\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isDeep<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">return</span> <span class="token function">copyArray</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> result<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u6D45\u62F7\u8D1D\u6570\u7EC4</span>
<span class="token keyword">function</span> <span class="token function">copyArray</span><span class="token punctuation">(</span><span class="token parameter">source<span class="token punctuation">,</span> array</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> index <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span>
  <span class="token keyword">const</span> length <span class="token operator">=</span> source<span class="token punctuation">.</span>length
  array <span class="token operator">||</span> <span class="token punctuation">(</span>array <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span>length<span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">++</span>index <span class="token operator">&lt;</span> length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    array<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">=</span> source<span class="token punctuation">[</span>index<span class="token punctuation">]</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> array
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h2 id="\u5BF9\u8C61-\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#\u5BF9\u8C61-\u51FD\u6570" aria-hidden="true">#</a> <strong>\u5BF9\u8C61 &amp; \u51FD\u6570</strong></h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u4E3B\u7EBF\u4EE3\u7801</span>
<span class="token keyword">const</span> isArr <span class="token operator">=</span> Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>
<span class="token keyword">const</span> tag <span class="token operator">=</span> <span class="token function">getTag</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>isArr<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token operator">...</span> <span class="token comment">// \u6570\u7EC4\u60C5\u51B5\uFF0C\u8BE6\u89C1\u4E0A\u9762\u89E3\u6790</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u51FD\u6570</span>
    <span class="token keyword">const</span> isFunc <span class="token operator">=</span> <span class="token keyword">typeof</span> value <span class="token operator">==</span> <span class="token string">&#39;function&#39;</span>

    <span class="token comment">// \u5982\u679C\u662F Buffer \u5BF9\u8C61\uFF0C\u62F7\u8D1D\u5E76\u8FD4\u56DE</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isBuffer</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">cloneBuffer</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> isDeep<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    
    <span class="token comment">// Object \u5BF9\u8C61\u3001\u7C7B\u6570\u7EC4\u3001\u6216\u8005\u662F\u51FD\u6570\u4F46\u6CA1\u6709\u7236\u5BF9\u8C61</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>tag <span class="token operator">==</span> objectTag <span class="token operator">||</span> tag <span class="token operator">==</span> argsTag <span class="token operator">||</span> <span class="token punctuation">(</span>isFunc <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>object<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u62F7\u8D1D\u539F\u578B\u94FE\u6216\u8005 value \u662F\u51FD\u6570\u65F6\uFF0C\u8FD4\u56DE {}\uFF0C\u4E0D\u7136\u521D\u59CB\u5316\u5BF9\u8C61</span>
        result <span class="token operator">=</span> <span class="token punctuation">(</span>isFlat <span class="token operator">||</span> isFunc<span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token operator">:</span> <span class="token function">initCloneObject</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isDeep<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> isFlat
                <span class="token operator">?</span> <span class="token function">copySymbolsIn</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> <span class="token function">copyObject</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> <span class="token function">keysIn</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">,</span> result<span class="token punctuation">)</span><span class="token punctuation">)</span>
            	<span class="token operator">:</span> <span class="token function">copySymbols</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span>result<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5728 cloneableTags \u4E2D\uFF0C\u53EA\u6709 error \u548C weakmap \u8FD4\u56DE false</span>
        <span class="token comment">// \u51FD\u6570\u6216\u8005 error \u6216\u8005 weakmap \u65F6\uFF0C</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>isFunc <span class="token operator">||</span> <span class="token operator">!</span>cloneableTags<span class="token punctuation">[</span>tag<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u5B58\u5728\u7236\u5BF9\u8C61\u8FD4\u56DEvalue\uFF0C\u4E0D\u7136\u8FD4\u56DE\u7A7A\u5BF9\u8C61 {}</span>
            <span class="token keyword">return</span> object <span class="token operator">?</span> value <span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// \u521D\u59CB\u5316\u975E\u5E38\u89C4\u7C7B\u578B</span>
        result <span class="token operator">=</span> <span class="token function">initCloneByTag</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> tag<span class="token punctuation">,</span> isDeep<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br></div></div><p>\u901A\u8FC7\u4E0A\u9762\u4EE3\u7801\u53EF\u4EE5\u53D1\u73B0\uFF0C\u51FD\u6570\u3001<code>error</code> \u548C <code>weakmap</code> \u65F6\u8FD4\u56DE\u7A7A\u5BF9\u8C61 {}\uFF0C\u5E76\u4E0D\u4F1A\u771F\u6B63\u62F7\u8D1D\u51FD\u6570\u3002</p><p><code>value</code> \u7C7B\u578B\u662F <code>Object</code> \u5BF9\u8C61\u548C\u7C7B\u6570\u7EC4\u65F6\uFF0C\u8C03\u7528 <code>initCloneObject</code> \u521D\u59CB\u5316\u5BF9\u8C61\uFF0C\u6700\u7EC8\u8C03\u7528 <code>Object.create</code> \u751F\u6210\u65B0\u5BF9\u8C61\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">initCloneObject</span><span class="token punctuation">(</span><span class="token parameter">object</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u6784\u9020\u51FD\u6570\u5E76\u4E14\u81EA\u5DF1\u4E0D\u5728\u81EA\u5DF1\u7684\u539F\u578B\u94FE\u4E0A</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> object<span class="token punctuation">.</span>constructor <span class="token operator">==</span> <span class="token string">&#39;function&#39;</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token function">isPrototype</span><span class="token punctuation">(</span>object<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token operator">?</span> Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>Object<span class="token punctuation">.</span><span class="token function">getPrototypeOf</span><span class="token punctuation">(</span>object<span class="token punctuation">)</span><span class="token punctuation">)</span>
    	<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u672C\u8D28\u4E0A\u5B9E\u73B0\u4E86\u4E00\u4E2Ainstanceof\uFF0C\u7528\u6765\u6D4B\u8BD5\u81EA\u5DF1\u662F\u5426\u5728\u81EA\u5DF1\u7684\u539F\u578B\u94FE\u4E0A</span>
<span class="token keyword">function</span> <span class="token function">isPrototype</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> Ctor <span class="token operator">=</span> value <span class="token operator">&amp;&amp;</span> value<span class="token punctuation">.</span>constructor
    <span class="token comment">// \u5BFB\u627E\u5BF9\u5E94\u539F\u578B</span>
    <span class="token keyword">const</span> proto <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> Ctor <span class="token operator">==</span> <span class="token string">&#39;function&#39;</span> <span class="token operator">&amp;&amp;</span> <span class="token class-name">Ctor</span><span class="token punctuation">.</span>prototype<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token class-name">Object</span><span class="token punctuation">.</span>prototype
    <span class="token keyword">return</span> value <span class="token operator">===</span> proto
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p>\u5176\u4E2D <code>Object</code> \u7684\u6784\u9020\u51FD\u6570\u662F\u4E00\u4E2A\u51FD\u6570\u5BF9\u8C61\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> obj <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">typeof</span> obj<span class="token punctuation">.</span>constructor<span class="token punctuation">;</span> 
<span class="token comment">// &#39;function&#39;</span>

<span class="token keyword">var</span> obj2 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">typeof</span> obj2<span class="token punctuation">.</span>constructor<span class="token punctuation">;</span>
<span class="token comment">// &#39;function&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>\u5BF9\u4E8E\u975E\u5E38\u89C4\u7C7B\u578B\u5BF9\u8C61\uFF0C\u901A\u8FC7\u5404\u81EA\u7C7B\u578B\u5206\u522B\u8FDB\u884C\u521D\u59CB\u5316\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">initCloneByTag</span><span class="token punctuation">(</span><span class="token parameter">object<span class="token punctuation">,</span> tag<span class="token punctuation">,</span> isDeep</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> Ctor <span class="token operator">=</span> object<span class="token punctuation">.</span>constructor
    <span class="token keyword">switch</span> <span class="token punctuation">(</span>tag<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">case</span> <span class="token literal-property property">arrayBufferTag</span><span class="token operator">:</span>
            <span class="token keyword">return</span> <span class="token function">cloneArrayBuffer</span><span class="token punctuation">(</span>object<span class="token punctuation">)</span>

        <span class="token keyword">case</span> <span class="token literal-property property">boolTag</span><span class="token operator">:</span> <span class="token comment">// \u5E03\u5C14\u4E0E\u65F6\u95F4\u7C7B\u578B</span>
        <span class="token keyword">case</span> <span class="token literal-property property">dateTag</span><span class="token operator">:</span>
            <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Ctor</span><span class="token punctuation">(</span><span class="token operator">+</span>object<span class="token punctuation">)</span> <span class="token comment">// + \u8F6C\u6362\u4E3A\u6570\u5B57</span>

        <span class="token keyword">case</span> <span class="token literal-property property">dataViewTag</span><span class="token operator">:</span>
            <span class="token keyword">return</span> <span class="token function">cloneDataView</span><span class="token punctuation">(</span>object<span class="token punctuation">,</span> isDeep<span class="token punctuation">)</span>

        <span class="token keyword">case</span> <span class="token literal-property property">float32Tag</span><span class="token operator">:</span> <span class="token keyword">case</span> <span class="token literal-property property">float64Tag</span><span class="token operator">:</span>
        <span class="token keyword">case</span> <span class="token literal-property property">int8Tag</span><span class="token operator">:</span> <span class="token keyword">case</span> <span class="token literal-property property">int16Tag</span><span class="token operator">:</span> <span class="token keyword">case</span> <span class="token literal-property property">int32Tag</span><span class="token operator">:</span>
        <span class="token keyword">case</span> <span class="token literal-property property">uint8Tag</span><span class="token operator">:</span> <span class="token keyword">case</span> <span class="token literal-property property">uint8ClampedTag</span><span class="token operator">:</span> <span class="token keyword">case</span> <span class="token literal-property property">uint16Tag</span><span class="token operator">:</span> <span class="token keyword">case</span> <span class="token literal-property property">uint32Tag</span><span class="token operator">:</span>
            <span class="token keyword">return</span> <span class="token function">cloneTypedArray</span><span class="token punctuation">(</span>object<span class="token punctuation">,</span> isDeep<span class="token punctuation">)</span>

        <span class="token keyword">case</span> <span class="token literal-property property">mapTag</span><span class="token operator">:</span> <span class="token comment">// Map \u7C7B\u578B</span>
            <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Ctor</span>

        <span class="token keyword">case</span> <span class="token literal-property property">numberTag</span><span class="token operator">:</span> <span class="token comment">// \u6570\u5B57\u548C\u5B57\u7B26\u4E32\u7C7B\u578B</span>
        <span class="token keyword">case</span> <span class="token literal-property property">stringTag</span><span class="token operator">:</span>
            <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Ctor</span><span class="token punctuation">(</span>object<span class="token punctuation">)</span>

        <span class="token keyword">case</span> <span class="token literal-property property">regexpTag</span><span class="token operator">:</span> <span class="token comment">// \u6B63\u5219</span>
            <span class="token keyword">return</span> <span class="token function">cloneRegExp</span><span class="token punctuation">(</span>object<span class="token punctuation">)</span>

        <span class="token keyword">case</span> <span class="token literal-property property">setTag</span><span class="token operator">:</span> <span class="token comment">// Set \u7C7B\u578B</span>
            <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Ctor</span>

        <span class="token keyword">case</span> <span class="token literal-property property">symbolTag</span><span class="token operator">:</span> <span class="token comment">// Symbol \u7C7B\u578B</span>
            <span class="token keyword">return</span> <span class="token function">cloneSymbol</span><span class="token punctuation">(</span>object<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br></div></div><p>\u62F7\u8D1D\u6B63\u5219\u7C7B\u578B</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \\w \u7528\u4E8E\u5339\u914D\u5B57\u6BCD\uFF0C\u6570\u5B57\u6216\u4E0B\u5212\u7EBF\u5B57\u7B26\uFF0C\u76F8\u5F53\u4E8E[A-Za-z0-9_]</span>
<span class="token keyword">const</span> reFlags <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\w*$</span><span class="token regex-delimiter">/</span></span>
<span class="token keyword">function</span> <span class="token function">cloneRegExp</span><span class="token punctuation">(</span><span class="token parameter">regexp</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u8FD4\u56DE\u5F53\u524D\u5339\u914D\u7684\u6587\u672C</span>
    <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">regexp<span class="token punctuation">.</span>constructor</span><span class="token punctuation">(</span>regexp<span class="token punctuation">.</span>source<span class="token punctuation">,</span> reFlags<span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span>regexp<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token comment">// \u4E0B\u4E00\u6B21\u5339\u914D\u7684\u8D77\u59CB\u7D22\u5F15</span>
    result<span class="token punctuation">.</span>lastIndex <span class="token operator">=</span> regexp<span class="token punctuation">.</span>lastIndex
    <span class="token keyword">return</span> result
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>\u521D\u59CB\u5316 <code>Symbol</code> \u7C7B\u578B</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> symbolValueOf <span class="token operator">=</span> <span class="token class-name">Symbol</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>valueOf
<span class="token keyword">function</span> <span class="token function">cloneSymbol</span><span class="token punctuation">(</span><span class="token parameter">symbol</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">Object</span><span class="token punctuation">(</span><span class="token function">symbolValueOf</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>symbol<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="\u5FAA\u73AF\u5F15\u7528" tabindex="-1"><a class="header-anchor" href="#\u5FAA\u73AF\u5F15\u7528" aria-hidden="true">#</a> <strong>\u5FAA\u73AF\u5F15\u7528</strong></h2><p>\u6784\u9020\u4E86\u4E00\u4E2A\u6808\u7528\u6765\u89E3\u51B3\u5FAA\u73AF\u5F15\u7528\u7684\u95EE\u9898\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u4E3B\u7EBF\u4EE3\u7801</span>
stack <span class="token operator">||</span> <span class="token punctuation">(</span>stack <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Stack</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> stacked <span class="token operator">=</span> stack<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>
<span class="token comment">// \u5DF2\u5B58\u5728</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>stacked<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> stacked
<span class="token punctuation">}</span>
stack<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> result<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>\u5982\u679C\u5F53\u524D\u9700\u8981\u62F7\u8D1D\u7684\u503C\u5DF2\u5B58\u5728\u4E8E\u6808\u4E2D\uFF0C\u8BF4\u660E\u6709\u73AF\uFF0C\u76F4\u63A5\u8FD4\u56DE\u5373\u53EF\u3002\u6808\u4E2D\u6CA1\u6709\u8BE5\u503C\u65F6\u4FDD\u5B58\u5230\u6808\u4E2D\uFF0C\u4F20\u5165 <code>value</code> \u548C <code>result</code>\u3002\u8FD9\u91CC\u7684 <code>result</code> \u662F\u4E00\u4E2A\u5BF9\u8C61\u5F15\u7528\uFF0C\u540E\u7EED\u5BF9 <code>result</code> \u7684\u4FEE\u6539\u4E5F\u4F1A\u53CD\u5E94\u5230\u6808\u4E2D\u3002</p><h2 id="map-set" tabindex="-1"><a class="header-anchor" href="#map-set" aria-hidden="true">#</a> <strong>Map &amp; Set</strong></h2><p><code>value</code> \u503C\u662F <code>Map</code> \u7C7B\u578B\u65F6\uFF0C\u904D\u5386 <code>value</code> \u5E76\u9012\u5F52\u5176 <code>subValue</code>\uFF0C\u904D\u5386\u5B8C\u6210\u8FD4\u56DE <code>result</code> \u7ED3\u679C\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u4E3B\u7EBF\u4EE3\u7801</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>tag <span class="token operator">==</span> mapTag<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    value<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">subValue<span class="token punctuation">,</span> key</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        result<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> <span class="token function">baseClone</span><span class="token punctuation">(</span>subValue<span class="token punctuation">,</span> bitmask<span class="token punctuation">,</span> customizer<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">,</span> stack<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> result
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p><code>value</code> \u503C\u662F <code>Set</code> \u7C7B\u578B\u65F6\uFF0C\u904D\u5386 <code>value</code> \u5E76\u9012\u5F52\u5176 <code>subValue</code>\uFF0C\u904D\u5386\u5B8C\u6210\u8FD4\u56DE <code>result</code> \u7ED3\u679C\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u4E3B\u7EBF\u4EE3\u7801</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>tag <span class="token operator">==</span> setTag<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    value<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">subValue</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        result<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token function">baseClone</span><span class="token punctuation">(</span>subValue<span class="token punctuation">,</span> bitmask<span class="token punctuation">,</span> customizer<span class="token punctuation">,</span> subValue<span class="token punctuation">,</span> value<span class="token punctuation">,</span> stack<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> result
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>\u4E0A\u9762\u7684\u533A\u522B\u5728\u4E8E\u6DFB\u52A0\u5143\u7D20\u7684 API \u4E0D\u540C\uFF0C\u5373 <code>Map.set</code> \u548C <code>Set.add</code>\u3002</p><h2 id="symbol-\u539F\u578B\u94FE" tabindex="-1"><a class="header-anchor" href="#symbol-\u539F\u578B\u94FE" aria-hidden="true">#</a> <strong>Symbol &amp; \u539F\u578B\u94FE</strong></h2><p>\u8FD9\u91CC\u4ECB\u7ECD\u4E0B <code>Symbol</code> \u548C \u539F\u578B\u94FE\u5C5E\u6027\u7684\u62F7\u8D1D\uFF0C\u901A\u8FC7\u6807\u5FD7\u4F4D <code>isFull</code> \u548C <code>isFlat</code> \u6765\u63A7\u5236\u662F\u5426\u62F7\u8D1D\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u4E3B\u7EBF\u4EE3\u7801</span>
<span class="token comment">// \u7C7B\u578B\u5316\u6570\u7EC4\u5BF9\u8C61</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isTypedArray</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> result
<span class="token punctuation">}</span>

<span class="token keyword">const</span> keysFunc <span class="token operator">=</span> isFull <span class="token comment">// \u62F7\u8D1D Symbol \u6807\u5FD7\u4F4D</span>
	<span class="token operator">?</span> <span class="token punctuation">(</span>isFlat 			<span class="token comment">// \u62F7\u8D1D\u539F\u578B\u94FE\u5C5E\u6027\u6807\u5FD7\u4F4D</span>
       <span class="token operator">?</span> getAllKeysIn 	<span class="token comment">// \u5305\u542B\u81EA\u8EAB\u548C\u539F\u578B\u94FE\u4E0A\u53EF\u679A\u4E3E\u5C5E\u6027\u540D\u4EE5\u53CA Symbol</span>
       <span class="token operator">:</span> getAllKeys<span class="token punctuation">)</span>	<span class="token comment">// \u4EC5\u5305\u542B\u81EA\u8EAB\u53EF\u679A\u4E3E\u5C5E\u6027\u540D\u4EE5\u53CA Symbol</span>
	<span class="token operator">:</span> <span class="token punctuation">(</span>isFlat 
       <span class="token operator">?</span> keysIn 		<span class="token comment">// \u5305\u542B\u81EA\u8EAB\u548C\u539F\u578B\u94FE\u4E0A\u53EF\u679A\u4E3E\u5C5E\u6027\u540D\u7684\u6570\u7EC4</span>
       <span class="token operator">:</span> keys<span class="token punctuation">)</span>			<span class="token comment">// \u4EC5\u5305\u542B\u81EA\u8EAB\u53EF\u679A\u4E3E\u5C5E\u6027\u540D\u7684\u6570\u7EC4</span>

<span class="token keyword">const</span> props <span class="token operator">=</span> isArr <span class="token operator">?</span> <span class="token keyword">undefined</span> <span class="token operator">:</span> <span class="token function">keysFunc</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>
<span class="token function">arrayEach</span><span class="token punctuation">(</span>props <span class="token operator">||</span> value<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">subValue<span class="token punctuation">,</span> key</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>props<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        key <span class="token operator">=</span> subValue
        subValue <span class="token operator">=</span> value<span class="token punctuation">[</span>key<span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u9012\u5F52\u62F7\u8D1D\uFF08\u6613\u53D7\u8C03\u7528\u5806\u6808\u9650\u5236\uFF09</span>
    <span class="token function">assignValue</span><span class="token punctuation">(</span>result<span class="token punctuation">,</span> key<span class="token punctuation">,</span> <span class="token function">baseClone</span><span class="token punctuation">(</span>subValue<span class="token punctuation">,</span> bitmask<span class="token punctuation">,</span> customizer<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">,</span> stack<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">return</span> result
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><p>\u5148\u6765\u770B\u4E0B\u600E\u4E48\u83B7\u53D6\u81EA\u8EAB\u3001\u539F\u578B\u94FE\u3001Symbol \u8FD9\u51E0\u79CD\u5C5E\u6027\u540D\u7EC4\u6210\u7684\u6570\u7EC4 <code>keys</code>\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u521B\u5EFA\u4E00\u4E2A\u5305\u542B\u81EA\u8EAB\u548C\u539F\u578B\u94FE\u4E0A\u53EF\u679A\u4E3E\u5C5E\u6027\u540D\u4EE5\u53CA Symbol \u7684\u6570\u7EC4</span>
<span class="token comment">// \u4F7F\u7528 for...in \u904D\u5386</span>
<span class="token keyword">function</span> <span class="token function">getAllKeysIn</span><span class="token punctuation">(</span><span class="token parameter">object</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token function">keysIn</span><span class="token punctuation">(</span>object<span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>object<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        result<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token operator">...</span><span class="token function">getSymbolsIn</span><span class="token punctuation">(</span>object<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> result
<span class="token punctuation">}</span>

<span class="token comment">// \u521B\u5EFA\u4E00\u4E2A\u4EC5\u5305\u542B\u81EA\u8EAB\u53EF\u679A\u4E3E\u5C5E\u6027\u540D\u4EE5\u53CA Symbol \u7684\u6570\u7EC4</span>
<span class="token comment">// \u975E ArrayLike \u6570\u7EC4\u4F7F\u7528 Object.keys</span>
<span class="token keyword">function</span> <span class="token function">getAllKeys</span><span class="token punctuation">(</span><span class="token parameter">object</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token function">keys</span><span class="token punctuation">(</span>object<span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>object<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        result<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token operator">...</span><span class="token function">getSymbols</span><span class="token punctuation">(</span>object<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> result
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><p>\u4E0A\u9762\u901A\u8FC7 <code>keysIn</code> \u548C <code>keys</code> \u83B7\u53D6\u5E38\u89C4\u53EF\u679A\u4E3E\u5C5E\u6027\uFF0C\u901A\u8FC7 <code>getSymbolsIn</code> \u548C <code>getSymbols</code> \u83B7\u53D6 <code>Symbol</code> \u53EF\u679A\u4E3E\u5C5E\u6027\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u521B\u5EFA\u4E00\u4E2A\u5305\u542B\u81EA\u8EAB\u548C\u539F\u578B\u94FE\u4E0A\u53EF\u679A\u4E3E\u5C5E\u6027\u540D\u7684\u6570\u7EC4</span>
<span class="token comment">// \u4F7F\u7528 for...in \u904D\u5386</span>
<span class="token keyword">function</span> <span class="token function">keysIn</span><span class="token punctuation">(</span><span class="token parameter">object</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> key <span class="token keyword">in</span> object<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        result<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> result
<span class="token punctuation">}</span>

<span class="token comment">// \u521B\u5EFA\u4E00\u4E2A\u4EC5\u5305\u542B\u81EA\u8EAB\u53EF\u679A\u4E3E\u5C5E\u6027\u540D\u7684\u6570\u7EC4</span>
<span class="token comment">// \u975E ArrayLike \u6570\u7EC4\u4F7F\u7528 Object.keys</span>
<span class="token keyword">function</span> <span class="token function">keys</span><span class="token punctuation">(</span><span class="token parameter">object</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">isArrayLike</span><span class="token punctuation">(</span>object<span class="token punctuation">)</span>
        <span class="token operator">?</span> <span class="token function">arrayLikeKeys</span><span class="token punctuation">(</span>object<span class="token punctuation">)</span>
    	<span class="token operator">:</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span><span class="token function">Object</span><span class="token punctuation">(</span>object<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u6D4B\u8BD5\u4EE3\u7801</span>
<span class="token keyword">function</span> <span class="token function">Foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>a <span class="token operator">=</span> <span class="token number">1</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>b <span class="token operator">=</span> <span class="token number">2</span>
<span class="token punctuation">}</span>
<span class="token class-name">Foo</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>c <span class="token operator">=</span> <span class="token number">3</span>

<span class="token function">keysIn</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Foo</span><span class="token punctuation">)</span>
<span class="token comment">// [&#39;a&#39;, &#39;b&#39;, &#39;c&#39;] (\u8FED\u4EE3\u987A\u5E8F\u65E0\u6CD5\u4FDD\u8BC1)</span>
     
<span class="token function">keys</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Foo</span><span class="token punctuation">)</span>
<span class="token comment">// [&#39;a&#39;, &#39;b&#39;] (\u8FED\u4EE3\u987A\u5E8F\u65E0\u6CD5\u4FDD\u8BC1)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br></div></div><p>\u5E38\u89C4\u5C5E\u6027\u904D\u5386\u539F\u578B\u94FE\u7528\u7684\u662F <code>for.. in</code>\uFF0C\u90A3\u4E48 <code>Symbol</code> \u662F\u5982\u4F55\u904D\u5386\u539F\u578B\u94FE\u7684\u5462\uFF0C\u8FD9\u91CC\u901A\u8FC7\u5FAA\u73AF\u4EE5\u53CA\u4F7F\u7528 <code>Object.getPrototypeOf</code> \u83B7\u53D6\u539F\u578B\u94FE\u4E0A\u7684 <code>Symbol</code>\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u521B\u5EFA\u4E00\u4E2A\u5305\u542B\u81EA\u8EAB\u548C\u539F\u578B\u94FE\u4E0A\u53EF\u679A\u4E3E Symbol \u7684\u6570\u7EC4</span>
<span class="token comment">// \u901A\u8FC7\u5FAA\u73AF\u548C\u4F7F\u7528 Object.getPrototypeOf \u83B7\u53D6\u539F\u578B\u94FE\u4E0A\u7684 Symbol</span>
<span class="token keyword">function</span> <span class="token function">getSymbolsIn</span> <span class="token punctuation">(</span><span class="token parameter">object</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>object<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u5FAA\u73AF</span>
        result<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token operator">...</span><span class="token function">getSymbols</span><span class="token punctuation">(</span>object<span class="token punctuation">)</span><span class="token punctuation">)</span>
        object <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">getPrototypeOf</span><span class="token punctuation">(</span><span class="token function">Object</span><span class="token punctuation">(</span>object<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> result
<span class="token punctuation">}</span>

<span class="token comment">// \u521B\u5EFA\u4E00\u4E2A\u4EC5\u5305\u542B\u81EA\u8EAB\u53EF\u679A\u4E3E Symbol \u7684\u6570\u7EC4</span>
<span class="token comment">// \u901A\u8FC7 Object.getOwnPropertySymbols \u83B7\u53D6 Symbol \u5C5E\u6027</span>
<span class="token keyword">const</span> nativeGetSymbols <span class="token operator">=</span> Object<span class="token punctuation">.</span>getOwnPropertySymbols
<span class="token keyword">const</span> propertyIsEnumerable <span class="token operator">=</span> <span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>propertyIsEnumerable

<span class="token keyword">function</span> <span class="token function">getSymbols</span> <span class="token punctuation">(</span><span class="token parameter">object</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>object <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u5224\u7A7A</span>
        <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
    object <span class="token operator">=</span> <span class="token function">Object</span><span class="token punctuation">(</span>object<span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token function">nativeGetSymbols</span><span class="token punctuation">(</span>object<span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">symbol</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">propertyIsEnumerable</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>object<span class="token punctuation">,</span> symbol<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><p>\u56DE\u5230\u4E3B\u7EBF\u4EE3\u7801\uFF0C\u83B7\u53D6\u5230 <code>keys</code> \u7EC4\u6210\u7684 <code>props</code> \u6570\u7EC4\u4E4B\u540E\uFF0C\u904D\u5386\u5E76\u9012\u5F52\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u4E3B\u7EBF\u4EE3\u7801</span>
<span class="token keyword">const</span> props <span class="token operator">=</span> isArr <span class="token operator">?</span> <span class="token keyword">undefined</span> <span class="token operator">:</span> <span class="token function">keysFunc</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>
<span class="token function">arrayEach</span><span class="token punctuation">(</span>props <span class="token operator">||</span> value<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">subValue<span class="token punctuation">,</span> key</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// props \u65F6\u66FF\u6362 key \u548C subValue\uFF0C\u56E0\u4E3A props \u91CC\u9762\u7684 subValue \u53EA\u662F value \u7684 key</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>props<span class="token punctuation">)</span> <span class="token punctuation">{</span> 
        key <span class="token operator">=</span> subValue
        subValue <span class="token operator">=</span> value<span class="token punctuation">[</span>key<span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u9012\u5F52\u62F7\u8D1D\uFF08\u6613\u53D7\u8C03\u7528\u5806\u6808\u9650\u5236\uFF09</span>
    <span class="token function">assignValue</span><span class="token punctuation">(</span>result<span class="token punctuation">,</span> key<span class="token punctuation">,</span> <span class="token function">baseClone</span><span class="token punctuation">(</span>subValue<span class="token punctuation">,</span> bitmask<span class="token punctuation">,</span> customizer<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">,</span> stack<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// \u8FD4\u56DE\u7ED3\u679C\uFF0C\u4E3B\u7EBF\u7ED3\u675F</span>
<span class="token keyword">return</span> result
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p>\u770B\u4E0B <code>arrayEach</code> \u7684\u5B9E\u73B0\uFF0C\u4E3B\u8981\u5B9E\u73B0\u4E86\u4E00\u4E2A\u904D\u5386\uFF0C\u5E76\u5728 <code>iteratee</code> \u8FD4\u56DE\u4E3A <code>false</code> \u65F6\u9000\u51FA\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u8FED\u4EE3\u6570\u7EC4</span>
<span class="token comment">// iteratee \u662F\u6BCF\u6B21\u8FED\u4EE3\u8C03\u7528\u7684\u51FD\u6570</span>
<span class="token keyword">function</span> <span class="token function">arrayEach</span><span class="token punctuation">(</span><span class="token parameter">array<span class="token punctuation">,</span> iteratee</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> index <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span>
    <span class="token keyword">const</span> length <span class="token operator">=</span> array<span class="token punctuation">.</span>length

    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">++</span>index <span class="token operator">&lt;</span> length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">iteratee</span><span class="token punctuation">(</span>array<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">,</span> index<span class="token punctuation">,</span> array<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">break</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> array
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>\u770B\u4E0B <code>assignValue</code> \u7684\u5B9E\u73B0\uFF0C\u5728\u503C\u4E0D\u76F8\u7B49\u60C5\u51B5\u4E0B\uFF0C\u5C06 value \u5206\u914D\u7ED9 <code>object[key]</code>\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> hasOwnProperty <span class="token operator">=</span> <span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>hasOwnProperty

<span class="token comment">// \u5982\u679C\u73B0\u6709\u503C\u4E0D\u76F8\u7B49\uFF0C\u5219\u5C06 value \u5206\u914D\u7ED9 object[key]\u3002</span>
<span class="token keyword">function</span> <span class="token function">assignValue</span><span class="token punctuation">(</span><span class="token parameter">object<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> objValue <span class="token operator">=</span> object<span class="token punctuation">[</span>key<span class="token punctuation">]</span>

    <span class="token comment">// \u4E0D\u76F8\u7B49</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span> <span class="token punctuation">(</span><span class="token function">hasOwnProperty</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>object<span class="token punctuation">,</span> key<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">eq</span><span class="token punctuation">(</span>objValue<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u503C\u53EF\u7528</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>value <span class="token operator">!==</span> <span class="token number">0</span> <span class="token operator">||</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">/</span> value<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">/</span> objValue<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">baseAssignValue</span><span class="token punctuation">(</span>object<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token comment">// \u503C\u672A\u5B9A\u4E49\u800C\u4E14\u952E key \u4E0D\u5728\u5BF9\u8C61\u4E2D    </span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>value <span class="token operator">===</span> <span class="token keyword">undefined</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token punctuation">(</span>key <span class="token keyword">in</span> object<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">baseAssignValue</span><span class="token punctuation">(</span>object<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u8D4B\u503C\u57FA\u672C\u5B9E\u73B0\uFF0C\u5176\u4E2D\u6CA1\u6709\u503C\u68C0\u67E5\u3002</span>
<span class="token keyword">function</span> <span class="token function">baseAssignValue</span><span class="token punctuation">(</span><span class="token parameter">object<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>key <span class="token operator">==</span> <span class="token string">&#39;__proto__&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        Object<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span>object<span class="token punctuation">,</span> key<span class="token punctuation">,</span> <span class="token punctuation">{</span>
            <span class="token string-property property">&#39;configurable&#39;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
            <span class="token string-property property">&#39;enumerable&#39;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
            <span class="token string-property property">&#39;value&#39;</span><span class="token operator">:</span> value<span class="token punctuation">,</span>
            <span class="token string-property property">&#39;writable&#39;</span><span class="token operator">:</span> <span class="token boolean">true</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        object<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> value
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u6BD4\u8F83\u4E24\u4E2A\u503C\u662F\u5426\u76F8\u7B49</span>
<span class="token comment">// (value !== value &amp;&amp; other !== other) \u662F\u4E3A\u4E86\u5224\u65AD NaN</span>
<span class="token keyword">function</span> <span class="token function">eq</span><span class="token punctuation">(</span><span class="token parameter">value<span class="token punctuation">,</span> other</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> value <span class="token operator">===</span> other <span class="token operator">||</span> <span class="token punctuation">(</span>value <span class="token operator">!==</span> value <span class="token operator">&amp;&amp;</span> other <span class="token operator">!==</span> other<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br></div></div>`,81);function e(t,o){return p}var u=s(a,[["render",e]]);export{u as default};
