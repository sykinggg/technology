import{a as n}from"./app.ba47fc91.js";import{_ as s}from"./plugin-vue_export-helper.21dcd24c.js";const a={},p=n(`<h1 id="" tabindex="-1"><a class="header-anchor" href="#" aria-hidden="true">#</a></h1><h1 id="immutable-data" tabindex="-1"><a class="header-anchor" href="#immutable-data" aria-hidden="true">#</a> Immutable Data</h1><p>Immutable Data \u5C31\u662F\u4E00\u65E6\u521B\u5EFA\uFF0C\u5C31\u4E0D\u80FD\u518D\u88AB\u66F4\u6539\u7684\u6570\u636E\u3002\u5BF9 Immutable \u5BF9\u8C61\u7684\u4EFB\u4F55\u4FEE\u6539\u6216\u6DFB\u52A0\u5220\u9664\u64CD\u4F5C\u90FD\u4F1A\u8FD4\u56DE\u4E00\u4E2A\u65B0\u7684 Immutable \u5BF9\u8C61\u3002Immutable \u5B9E\u73B0\u7684\u539F\u7406\u662F <strong>Persistent Data Structure\uFF08\u6301\u4E45\u5316\u6570\u636E\u7ED3\u6784\uFF09</strong>\uFF0C\u4E5F\u5C31\u662F\u4F7F\u7528\u65E7\u6570\u636E\u521B\u5EFA\u65B0\u6570\u636E\u65F6\uFF0C\u8981\u4FDD\u8BC1\u65E7\u6570\u636E\u540C\u65F6\u53EF\u7528\u4E14\u4E0D\u53D8\u3002\u540C\u65F6\u4E3A\u4E86\u907F\u514D deepCopy \u628A\u6240\u6709\u8282\u70B9\u90FD\u590D\u5236\u4E00\u904D\u5E26\u6765\u7684\u6027\u80FD\u635F\u8017\uFF0CImmutable \u4F7F\u7528\u4E86 <strong>Structural Sharing\uFF08\u7ED3\u6784\u5171\u4EAB\uFF09</strong>\uFF0C\u5373\u5982\u679C\u5BF9\u8C61\u6811\u4E2D\u4E00\u4E2A\u8282\u70B9\u53D1\u751F\u53D8\u5316\uFF0C\u53EA\u4FEE\u6539\u8FD9\u4E2A\u8282\u70B9\u548C\u53D7\u5B83\u5F71\u54CD\u7684\u7236\u8282\u70B9\uFF0C\u5176\u5B83\u8282\u70B9\u5219\u8FDB\u884C\u5171\u4EAB\u3002</p><p><img src="https://pic4.zhimg.com/80/2b4c801a7b40eefcd4ee6767fb984fdf_720w.jpg" alt="demo"></p><ol><li>immutable.js</li></ol><p>\u5185\u90E8\u5B9E\u73B0\u4E86\u4E00\u5957\u5B8C\u6574\u7684 Persistent Data Structure\uFF0C\u8FD8\u6709\u5F88\u591A\u6613\u7528\u7684\u6570\u636E\u7C7B\u578B\u3002\u50CF <code>Collection</code>\u3001<code>List</code>\u3001<code>Map</code>\u3001<code>Set</code>\u3001<code>Record</code>\u3001<code>Seq</code>\u3002\u6709\u975E\u5E38\u5168\u9762\u7684<code>map</code>\u3001<code>filter</code>\u3001<code>groupBy</code>\u3001<code>reduce\`\`find</code>\u51FD\u6570\u5F0F\u64CD\u4F5C\u65B9\u6CD5\u3002\u540C\u65F6 API \u4E5F\u5C3D\u91CF\u4E0E Object \u6216 Array \u7C7B\u4F3C\u3002</p><ul><li><p><strong>Map</strong>\uFF1A\u952E\u503C\u5BF9\u96C6\u5408\uFF0C\u5BF9\u5E94\u4E8E Object\uFF0CES6 \u4E5F\u6709\u4E13\u95E8\u7684 Map \u5BF9\u8C61</p></li><li><p><strong>List</strong>\uFF1A\u6709\u5E8F\u53EF\u91CD\u590D\u7684\u5217\u8868\uFF0C\u5BF9\u5E94\u4E8E Array</p></li><li><p><strong>Set</strong>\uFF1A\u65E0\u5E8F\u4E14\u4E0D\u53EF\u91CD\u590D\u7684\u5217\u8868</p></li></ul><ol start="2"><li>seamless-immutable</li></ol><p><code>seamless-immutable</code> \u5E76\u6CA1\u6709\u5B9E\u73B0\u5B8C\u6574\u7684 Persistent Data Structure\uFF0C\u800C\u662F\u4F7F\u7528 <code>Object.defineProperty</code>\uFF08\u56E0\u6B64\u53EA\u80FD\u5728 IE9 \u53CA\u4EE5\u4E0A\u4F7F\u7528\uFF09\u6269\u5C55\u4E86 JavaScript \u7684 Array \u548C Object \u5BF9\u8C61\u6765\u5B9E\u73B0\uFF0C\u53EA\u652F\u6301 Array \u548C Object \u4E24\u79CD\u6570\u636E\u7C7B\u578B\uFF0CAPI \u57FA\u4E8E\u4E0E Array \u548C Object \u64CD\u6301\u4E0D\u53D8\u3002\u4EE3\u7801\u5E93\u975E\u5E38\u5C0F\uFF0C\u538B\u7F29\u540E\u4E0B\u8F7D\u53EA\u6709 2K\u3002\u800C Immutable.js \u538B\u7F29\u540E\u4E0B\u8F7D\u6709 16K\u3002</p><div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code><span class="token comment">// \u539F\u6765\u7684\u5199\u6CD5</span>
<span class="token keyword">let</span> foo <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> bar <span class="token operator">=</span> foo<span class="token punctuation">;</span>
bar<span class="token punctuation">.</span>a<span class="token punctuation">.</span>b <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>foo<span class="token punctuation">.</span>a<span class="token punctuation">.</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// \u6253\u5370 2</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>foo <span class="token operator">===</span> bar<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//  \u6253\u5370 true</span>

<span class="token comment">// \u4F7F\u7528 immutable.js \u540E</span>
<span class="token keyword">import</span> Immutable <span class="token keyword">from</span> <span class="token string">&#39;immutable&#39;</span><span class="token punctuation">;</span>
foo <span class="token operator">=</span> Immutable<span class="token punctuation">.</span><span class="token function">fromJS</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
bar <span class="token operator">=</span> foo<span class="token punctuation">.</span><span class="token function">setIn</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">// \u4F7F\u7528 setIn \u8D4B\u503C</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>foo<span class="token punctuation">.</span><span class="token function">getIn</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// \u4F7F\u7528 getIn \u53D6\u503C\uFF0C\u6253\u5370 1</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>foo <span class="token operator">===</span> bar<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//  \u6253\u5370 false</span>

<span class="token comment">// \u4F7F\u7528  seamless-immutable.js \u540E</span>
<span class="token keyword">import</span> SImmutable <span class="token keyword">from</span> <span class="token string">&#39;seamless-immutable&#39;</span><span class="token punctuation">;</span>
foo <span class="token operator">=</span> <span class="token function">SImmutable</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
bar <span class="token operator">=</span> foo<span class="token punctuation">.</span><span class="token function">merge</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span>   <span class="token comment">// \u4F7F\u7528 merge \u8D4B\u503C</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>foo<span class="token punctuation">.</span>a<span class="token punctuation">.</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// \u50CF\u539F\u751F Object \u4E00\u6837\u53D6\u503C\uFF0C\u6253\u5370 1</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>foo <span class="token operator">===</span> bar<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//  \u6253\u5370 false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><h2 id="immutable-\u4F18\u70B9" tabindex="-1"><a class="header-anchor" href="#immutable-\u4F18\u70B9" aria-hidden="true">#</a> Immutable \u4F18\u70B9</h2><ol><li>Immutable \u964D\u4F4E\u4E86 Mutable \u5E26\u6765\u7684\u590D\u6742\u5EA6</li></ol><p>\u53EF\u53D8\uFF08Mutable\uFF09\u6570\u636E\u8026\u5408\u4E86 Time \u548C Value \u7684\u6982\u5FF5\uFF0C\u9020\u6210\u4E86\u6570\u636E\u5F88\u96BE\u88AB\u56DE\u6EAF\u3002</p><p>\u6BD4\u5982\u4E0B\u9762\u4E00\u6BB5\u4EE3\u7801\uFF1A</p><div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code><span class="token keyword">function</span> <span class="token function">touchAndLog</span><span class="token punctuation">(</span><span class="token parameter">touchFn</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> data <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">&#39;value&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token function">touchFn</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u731C\u731C\u4F1A\u6253\u5370\u4EC0\u4E48\uFF1F</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><blockquote><p>\u5728\u4E0D\u67E5\u770B <code>touchFn</code> \u7684\u4EE3\u7801\u7684\u60C5\u51B5\u4E0B\uFF0C\u56E0\u4E3A\u4E0D\u786E\u5B9A\u5B83\u5BF9 <code>data</code> \u505A\u4E86\u4EC0\u4E48\uFF0C\u4F60\u662F\u4E0D\u53EF\u80FD\u77E5\u9053\u4F1A\u6253\u5370\u4EC0\u4E48\uFF08\u8FD9\u4E0D\u662F\u5E9F\u8BDD\u5417\uFF09\u3002\u4F46\u5982\u679C <code>data</code> \u662F Immutable \u7684\u5462\uFF0C\u4F60\u53EF\u4EE5\u5F88\u80AF\u5B9A\u7684\u77E5\u9053\u6253\u5370\u7684\u662F <code>value</code>\u3002</p></blockquote><ol start="2"><li>\u8282\u7701\u5185\u5B58</li></ol><p><code>Immutable.js</code> \u4F7F\u7528\u4E86 Structure Sharing \u4F1A\u5C3D\u91CF\u590D\u7528\u5185\u5B58\u3002\u6CA1\u6709\u88AB\u5F15\u7528\u7684\u5BF9\u8C61\u4F1A\u88AB\u5783\u573E\u56DE\u6536\u3002</p><div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> Map<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;immutable&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token function">Map</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">select</span><span class="token operator">:</span> <span class="token string">&#39;users&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">filter</span><span class="token operator">:</span> <span class="token function">Map</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Cam&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">let</span> b <span class="token operator">=</span> a<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&#39;select&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;people&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

a <span class="token operator">===</span> b<span class="token punctuation">;</span> <span class="token comment">// false</span>

a<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;filter&#39;</span><span class="token punctuation">)</span> <span class="token operator">===</span> b<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;filter&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>\u4E0A\u9762 a \u548C b \u5171\u4EAB\u4E86\u6CA1\u6709\u53D8\u5316\u7684 <code>filter</code> \u8282\u70B9\u3002</p><ol start="3"><li><code>Undo/Redo</code>\uFF0C<code>Copy/Paste</code>\uFF0C\u751A\u81F3\u65F6\u95F4\u65C5\u884C\u8FD9\u4E9B\u529F\u80FD\u505A\u8D77\u6765\u5C0F\u83DC\u4E00\u789F</li></ol><p>\u56E0\u4E3A\u6BCF\u6B21\u6570\u636E\u90FD\u662F\u4E0D\u4E00\u6837\u7684\uFF0C\u53EA\u8981\u628A\u8FD9\u4E9B\u6570\u636E\u653E\u5230\u4E00\u4E2A\u6570\u7EC4\u91CC\u50A8\u5B58\u8D77\u6765\uFF0C\u60F3\u56DE\u9000\u5230\u54EA\u91CC\u5C31\u62FF\u51FA\u5BF9\u5E94\u6570\u636E\u5373\u53EF\uFF0C\u5F88\u5BB9\u6613\u5F00\u53D1\u51FA\u64A4\u9500\u91CD\u505A\u8FD9\u79CD\u529F\u80FD\u3002</p><ol start="4"><li>\u5E76\u53D1\u5B89\u5168</li></ol><p>\u4F20\u7EDF\u7684\u5E76\u53D1\u975E\u5E38\u96BE\u505A\uFF0C\u56E0\u4E3A\u8981\u5904\u7406\u5404\u79CD\u6570\u636E\u4E0D\u4E00\u81F4\u95EE\u9898\uFF0C\u56E0\u6B64\u300E\u806A\u660E\u4EBA\u300F\u53D1\u660E\u4E86\u5404\u79CD\u9501\u6765\u89E3\u51B3\u3002\u4F46\u4F7F\u7528\u4E86 <code>Immutable</code> \u4E4B\u540E\uFF0C\u6570\u636E\u5929\u751F\u662F\u4E0D\u53EF\u53D8\u7684\uFF0C<strong>\u5E76\u53D1\u9501\u5C31\u4E0D\u9700\u8981\u4E86</strong>\u3002</p><ol start="5"><li>\u62E5\u62B1\u51FD\u6570\u5F0F\u7F16\u7A0B</li></ol><p><code>Immutable</code> \u672C\u8EAB\u5C31\u662F\u51FD\u6570\u5F0F\u7F16\u7A0B\u4E2D\u7684\u6982\u5FF5\uFF0C\u7EAF\u51FD\u6570\u5F0F\u7F16\u7A0B\u6BD4\u9762\u5411\u5BF9\u8C61\u66F4\u9002\u7528\u4E8E\u524D\u7AEF\u5F00\u53D1\u3002\u56E0\u4E3A\u53EA\u8981\u8F93\u5165\u4E00\u81F4\uFF0C\u8F93\u51FA\u5FC5\u7136\u4E00\u81F4\uFF0C\u8FD9\u6837\u5F00\u53D1\u7684\u7EC4\u4EF6\u66F4\u6613\u4E8E\u8C03\u8BD5\u548C\u7EC4\u88C5\u3002</p><h2 id="\u4F7F\u7528-immutable-\u7684\u7F3A\u70B9" tabindex="-1"><a class="header-anchor" href="#\u4F7F\u7528-immutable-\u7684\u7F3A\u70B9" aria-hidden="true">#</a> \u4F7F\u7528 Immutable \u7684\u7F3A\u70B9</h2><ol><li><p>\u9700\u8981\u5B66\u4E60\u65B0\u7684 API</p></li><li><p>\u589E\u52A0\u4E86\u8D44\u6E90\u6587\u4EF6\u5927\u5C0F</p></li><li><p>\u5BB9\u6613\u4E0E\u539F\u751F\u5BF9\u8C61\u6DF7\u6DC6</p></li></ol><p>\u8FD9\u70B9\u662F\u4F7F\u7528 Immutable.js \u8FC7\u7A0B\u4E2D\u9047\u5230\u6700\u5927\u7684\u95EE\u9898\u3002\u5199\u4EE3\u7801\u8981\u505A\u601D\u7EF4\u4E0A\u7684\u8F6C\u53D8\u3002</p><p>\u867D\u7136 Immutable.js \u5C3D\u91CF\u5C1D\u8BD5\u628A API \u8BBE\u8BA1\u7684\u539F\u751F\u5BF9\u8C61\u7C7B\u4F3C\uFF0C\u6709\u7684\u65F6\u5019\u8FD8\u662F\u5F88\u96BE\u533A\u522B\u5230\u5E95\u662F Immutable \u5BF9\u8C61\u8FD8\u662F\u539F\u751F\u5BF9\u8C61\uFF0C\u5BB9\u6613\u6DF7\u6DC6\u64CD\u4F5C\u3002</p><p>Immutable \u4E2D\u7684 Map \u548C List \u867D\u5BF9\u5E94\u539F\u751F Object \u548C Array\uFF0C\u4F46\u64CD\u4F5C\u975E\u5E38\u4E0D\u540C\uFF0C\u6BD4\u5982\u4F60\u8981\u7528 <code>map.get(&#39;key&#39;)</code> \u800C\u4E0D\u662F <code>map.key</code>\uFF0C<code>array.get(0)</code> \u800C\u4E0D\u662F <code>array[0]</code>\u3002\u53E6\u5916 Immutable \u6BCF\u6B21\u4FEE\u6539\u90FD\u4F1A\u8FD4\u56DE\u65B0\u5BF9\u8C61\uFF0C\u4E5F\u5F88\u5BB9\u6613\u5FD8\u8BB0\u8D4B\u503C\u3002</p><p>\u5F53\u4F7F\u7528\u5916\u90E8\u5E93\u7684\u65F6\u5019\uFF0C\u4E00\u822C\u9700\u8981\u4F7F\u7528\u539F\u751F\u5BF9\u8C61\uFF0C\u4E5F\u5F88\u5BB9\u6613\u5FD8\u8BB0\u8F6C\u6362\u3002</p><p>\u4E0B\u9762\u7ED9\u51FA\u4E00\u4E9B\u529E\u6CD5\u6765\u907F\u514D\u7C7B\u4F3C\u95EE\u9898\u53D1\u751F\uFF1A</p><ul><li><p>\u4F7F\u7528 Flow \u6216 TypeScript \u8FD9\u7C7B\u6709\u9759\u6001\u7C7B\u578B\u68C0\u67E5\u7684\u5DE5\u5177</p></li><li><p>\u7EA6\u5B9A\u53D8\u91CF\u547D\u540D\u89C4\u5219\uFF1A\u5982\u6240\u6709 Immutable \u7C7B\u578B\u5BF9\u8C61\u4EE5 <code>$$</code> \u5F00\u5934\u3002</p></li><li><p>\u4F7F\u7528 <code>Immutable.fromJS</code> \u800C\u4E0D\u662F <code>Immutable.Map</code> \u6216 <code>Immutable.List</code> \u6765\u521B\u5EFA\u5BF9\u8C61\uFF0C\u8FD9\u6837\u53EF\u4EE5\u907F\u514D Immutable \u548C\u539F\u751F\u5BF9\u8C61\u95F4\u7684\u6DF7\u7528\u3002</p></li></ul><h2 id="\u66F4\u591A\u8BA4\u8BC6" tabindex="-1"><a class="header-anchor" href="#\u66F4\u591A\u8BA4\u8BC6" aria-hidden="true">#</a> \u66F4\u591A\u8BA4\u8BC6</h2><ol><li>Immutable.is</li></ol><p>\u4E24\u4E2A immutable \u5BF9\u8C61\u53EF\u4EE5\u4F7F\u7528 <code>===</code> \u6765\u6BD4\u8F83\uFF0C\u8FD9\u6837\u662F\u76F4\u63A5\u6BD4\u8F83\u5185\u5B58\u5730\u5740\uFF0C\u6027\u80FD\u6700\u597D\u3002\u4F46\u5373\u4F7F\u4E24\u4E2A\u5BF9\u8C61\u7684\u503C\u662F\u4E00\u6837\u7684\uFF0C\u4E5F\u4F1A\u8FD4\u56DE <code>false</code>\uFF1A</p><div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code><span class="token keyword">let</span> map1 <span class="token operator">=</span> Immutable<span class="token punctuation">.</span><span class="token function">Map</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">a</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">b</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">c</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> map2 <span class="token operator">=</span> Immutable<span class="token punctuation">.</span><span class="token function">Map</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">a</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">b</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">c</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
map1 <span class="token operator">===</span> map2<span class="token punctuation">;</span>             <span class="token comment">// false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u4E3A\u4E86\u76F4\u63A5\u6BD4\u8F83\u5BF9\u8C61\u7684\u503C\uFF0Cimmutable.js \u63D0\u4F9B\u4E86 <code>Immutable.is</code> \u6765\u505A\u300E\u503C\u6BD4\u8F83\u300F\uFF0C\u7ED3\u679C\u5982\u4E0B\uFF1A</p><div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code>Immutable<span class="token punctuation">.</span><span class="token function">is</span><span class="token punctuation">(</span>map1<span class="token punctuation">,</span> map2<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><code>Immutable.is</code> \u6BD4\u8F83\u7684\u662F\u4E24\u4E2A\u5BF9\u8C61\u7684 <code>hashCode</code> \u6216 <code>valueOf</code>\uFF08\u5BF9\u4E8E JavaScript \u5BF9\u8C61\uFF09\u3002\u7531\u4E8E immutable \u5185\u90E8\u4F7F\u7528\u4E86 Trie \u6570\u636E\u7ED3\u6784\u6765\u5B58\u50A8\uFF0C\u53EA\u8981\u4E24\u4E2A\u5BF9\u8C61\u7684 <code>hashCode</code> \u76F8\u7B49\uFF0C\u503C\u5C31\u662F\u4E00\u6837\u7684\u3002\u8FD9\u6837\u7684\u7B97\u6CD5\u907F\u514D\u4E86\u6DF1\u5EA6\u904D\u5386\u6BD4\u8F83\uFF0C\u6027\u80FD\u975E\u5E38\u597D\u3002</p><p>\u540E\u9762\u4F1A\u4F7F\u7528 <code>Immutable.is</code> \u6765\u51CF\u5C11 React \u91CD\u590D\u6E32\u67D3\uFF0C\u63D0\u9AD8\u6027\u80FD\u3002</p><ol start="2"><li>\u4E0E Object.freeze\u3001const \u533A\u522B</li></ol><p><code>Object.freeze</code> \u548C ES6 \u4E2D\u65B0\u52A0\u5165\u7684 <code>const</code> \u90FD\u53EF\u4EE5\u8FBE\u5230\u9632\u6B62\u5BF9\u8C61\u88AB\u7BE1\u6539\u7684\u529F\u80FD\uFF0C\u4F46\u5B83\u4EEC\u662F shallowCopy \u7684\u3002\u5BF9\u8C61\u5C42\u7EA7\u4E00\u6DF1\u5C31\u8981\u7279\u6B8A\u5904\u7406\u4E86\u3002</p><ol start="3"><li>Cursor \u7684\u6982\u5FF5</li></ol><p>\u8FD9\u4E2A Cursor \u548C\u6570\u636E\u5E93\u4E2D\u7684\u6E38\u6807\u662F\u5B8C\u5168\u4E0D\u540C\u7684\u6982\u5FF5\u3002</p><p>\u7531\u4E8E Immutable \u6570\u636E\u4E00\u822C\u5D4C\u5957\u975E\u5E38\u6DF1\uFF0C\u4E3A\u4E86\u4FBF\u4E8E\u8BBF\u95EE\u6DF1\u5C42\u6570\u636E\uFF0CCursor \u63D0\u4F9B\u4E86\u53EF\u4EE5\u76F4\u63A5\u8BBF\u95EE\u8FD9\u4E2A\u6DF1\u5C42\u6570\u636E\u7684\u5F15\u7528\u3002</p><div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code><span class="token keyword">import</span> Immutable <span class="token keyword">from</span> <span class="token string">&#39;immutable&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> Cursor <span class="token keyword">from</span> <span class="token string">&#39;immutable/contrib/cursor&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> data <span class="token operator">=</span> Immutable<span class="token punctuation">.</span><span class="token function">fromJS</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">c</span><span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u8BA9 cursor \u6307\u5411 { c: 1 }</span>
<span class="token keyword">let</span> cursor <span class="token operator">=</span> Cursor<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token parameter">newData</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u5F53 cursor \u6216\u5176\u5B50 cursor \u6267\u884C update \u65F6\u8C03\u7528</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>newData<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

cursor<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;c&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 1</span>
cursor <span class="token operator">=</span> cursor<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token string">&#39;c&#39;</span><span class="token punctuation">,</span> <span class="token parameter">x</span> <span class="token operator">=&gt;</span> x <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
cursor<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;c&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h2 id="\u5B9E\u8DF5" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u8DF5" aria-hidden="true">#</a> \u5B9E\u8DF5</h2><ol><li>\u4E0E React \u642D\u914D\u4F7F\u7528\uFF0CPure Render</li></ol><p>\u719F\u6089 React \u7684\u90FD\u77E5\u9053\uFF0CReact \u505A\u6027\u80FD\u4F18\u5316\u65F6\u6709\u4E00\u4E2A\u907F\u514D\u91CD\u590D\u6E32\u67D3\u7684\u5927\u62DB\uFF0C\u5C31\u662F\u4F7F\u7528 <code>shouldComponentUpdate()</code>\uFF0C\u4F46\u5B83\u9ED8\u8BA4\u8FD4\u56DE <code>true</code>\uFF0C\u5373\u59CB\u7EC8\u4F1A\u6267\u884C <code>render()</code> \u65B9\u6CD5\uFF0C\u7136\u540E\u505A Virtual DOM \u6BD4\u8F83\uFF0C\u5E76\u5F97\u51FA\u662F\u5426\u9700\u8981\u505A\u771F\u5B9E DOM \u66F4\u65B0\uFF0C\u8FD9\u91CC\u5F80\u5F80\u4F1A\u5E26\u6765\u5F88\u591A\u65E0\u5FC5\u8981\u7684\u6E32\u67D3\u5E76\u6210\u4E3A\u6027\u80FD\u74F6\u9888\u3002</p><p>\u5F53\u7136\u4E5F\u53EF\u4EE5\u5728 <code>shouldComponentUpdate()</code> \u4E2D\u4F7F\u7528\u4F7F\u7528 deepCopy \u548C deepCompare \u6765\u907F\u514D\u65E0\u5FC5\u8981\u7684 <code>render()</code>\uFF0C<strong>\u4F46 deepCopy \u548C deepCompare \u4E00\u822C\u90FD\u662F\u975E\u5E38\u8017\u6027\u80FD\u7684</strong>\u3002</p><p><strong>Immutable \u5219\u63D0\u4F9B\u4E86\u7B80\u6D01\u9AD8\u6548\u7684\u5224\u65AD\u6570\u636E\u662F\u5426\u53D8\u5316\u7684\u65B9\u6CD5</strong>\uFF0C\u53EA\u9700 <code>===</code> \u548C <code>is</code> \u6BD4\u8F83\u5C31\u80FD\u77E5\u9053\u662F\u5426\u9700\u8981\u6267\u884C <code>render()</code>\uFF0C\u800C\u8FD9\u4E2A<strong>\u64CD\u4F5C\u51E0\u4E4E 0 \u6210\u672C</strong>\uFF0C\u6240\u4EE5\u53EF\u4EE5\u6781\u5927\u63D0\u9AD8\u6027\u80FD\u3002\u4FEE\u6539\u540E\u7684 <code>shouldComponentUpdate</code> \u662F\u8FD9\u6837\u7684\uFF1A</p><div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> is <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;immutable&#39;</span><span class="token punctuation">;</span>

<span class="token function-variable function">shouldComponentUpdate</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">nextProps <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> nextState <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> thisProps <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>props <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> thisState <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span>Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>thisProps<span class="token punctuation">)</span><span class="token punctuation">.</span>length <span class="token operator">!==</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>nextProps<span class="token punctuation">)</span><span class="token punctuation">.</span>length <span class="token operator">||</span>
      Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>thisState<span class="token punctuation">)</span><span class="token punctuation">.</span>length <span class="token operator">!==</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>nextState<span class="token punctuation">)</span><span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> key <span class="token keyword">in</span> nextProps<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>thisProps<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">!==</span> nextProps<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">||</span> <span class="token function">\uFF01is</span><span class="token punctuation">(</span>thisProps<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">,</span> nextProps<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> key <span class="token keyword">in</span> nextState<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>thisState<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">!==</span> nextState<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">||</span> <span class="token function">\uFF01is</span><span class="token punctuation">(</span>thisState<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">,</span> nextState<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><p>\u4F7F\u7528 Immutable \u540E\uFF0C\u5982\u4E0B\u56FE\uFF0C\u5F53\u7EA2\u8272\u8282\u70B9\u7684 state \u53D8\u5316\u540E\uFF0C\u4E0D\u4F1A\u518D\u6E32\u67D3\u6811\u4E2D\u7684\u6240\u6709\u8282\u70B9\uFF0C\u800C\u662F\u53EA\u6E32\u67D3\u56FE\u4E2D\u7EFF\u8272\u7684\u90E8\u5206\uFF1A</p><p><img src="https://pic3.zhimg.com/80/005a24678dc39c202dbf3d1df96da13e_720w.jpg" alt="\u793A\u4F8B"></p><p><strong>setState \u7684\u4E00\u4E2A\u6280\u5DE7</strong></p><p>React \u5EFA\u8BAE\u628A <code>this.state</code> \u5F53\u4F5C Immutable \u7684\uFF0C\u56E0\u6B64\u4FEE\u6539\u524D\u9700\u8981\u505A\u4E00\u4E2A deepCopy\uFF0C\u663E\u5F97\u9EBB\u70E6\uFF1A</p><div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code><span class="token keyword">import</span> <span class="token string">&#39;_&#39;</span> <span class="token keyword">from</span> <span class="token string">&#39;lodash&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> Component <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">createClass</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token function">getInitialState</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">times</span><span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">handleAdd</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> data <span class="token operator">=</span> _<span class="token punctuation">.</span><span class="token function">cloneDeep</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
    data<span class="token punctuation">.</span>times <span class="token operator">=</span> data<span class="token punctuation">.</span>times <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">data</span><span class="token operator">:</span> data <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u5982\u679C\u4E0A\u9762\u4E0D\u505A cloneDeep\uFF0C\u4E0B\u9762\u6253\u5370\u7684\u7ED3\u679C\u4F1A\u662F\u5DF2\u7ECF\u52A0 1 \u540E\u7684\u503C\u3002</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>data<span class="token punctuation">.</span>times<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><p>\u4F7F\u7528 Immutable \u540E\uFF1A</p><div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code><span class="token function">getInitialState</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token function">Map</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">times</span><span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token function">handleAdd</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>data<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token string">&#39;times&#39;</span><span class="token punctuation">,</span> <span class="token parameter">v</span> <span class="token operator">=&gt;</span> v <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u8FD9\u65F6\u7684 times \u5E76\u4E0D\u4F1A\u6539\u53D8</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>data<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;times&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>\u4E0A\u9762\u7684 <code>handleAdd</code> \u53EF\u4EE5\u7B80\u5199\u6210\uFF1A</p><div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code><span class="token function">handleAdd</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span>data<span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">data</span><span class="token operator">:</span> data<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token string">&#39;times&#39;</span><span class="token punctuation">,</span> <span class="token parameter">v</span> <span class="token operator">=&gt;</span> v <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><ol start="2"><li>\u4E0E Flux \u642D\u914D\u4F7F\u7528</li></ol><p>\u7531\u4E8E Flux \u5E76\u6CA1\u6709\u9650\u5B9A Store \u4E2D\u6570\u636E\u7684\u7C7B\u578B\uFF0C\u4F7F\u7528 Immutable \u975E\u5E38\u7B80\u5355\u3002</p><p>\u73B0\u5728\u662F\u5B9E\u73B0\u4E00\u4E2A\u7C7B\u4F3C\u5E26\u6709\u6DFB\u52A0\u548C\u64A4\u9500\u529F\u80FD\u7684 Store\uFF1A</p><div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> Map<span class="token punctuation">,</span> OrderedMap <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;immutable&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> todos <span class="token operator">=</span> <span class="token function">OrderedMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> history <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token comment">// \u666E\u901A\u6570\u7EC4\uFF0C\u5B58\u653E\u6BCF\u6B21\u64CD\u4F5C\u540E\u4EA7\u751F\u7684\u6570\u636E</span>

<span class="token keyword">let</span> TodoStore <span class="token operator">=</span> <span class="token function">createStore</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token function">getAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> todos<span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

Dispatcher<span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span><span class="token parameter">action</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>action<span class="token punctuation">.</span>actionType <span class="token operator">===</span> <span class="token string">&#39;create&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> id <span class="token operator">=</span> <span class="token function">createGUID</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    history<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>todos<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// \u8BB0\u5F55\u5F53\u524D\u64CD\u4F5C\u524D\u7684\u6570\u636E\uFF0C\u4FBF\u4E8E\u64A4\u9500</span>
    todos <span class="token operator">=</span> todos<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>id<span class="token punctuation">,</span> <span class="token function">Map</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">id</span><span class="token operator">:</span> id<span class="token punctuation">,</span>
      <span class="token literal-property property">complete</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
      <span class="token literal-property property">text</span><span class="token operator">:</span> action<span class="token punctuation">.</span>text<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    TodoStore<span class="token punctuation">.</span><span class="token function">emitChange</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>action<span class="token punctuation">.</span>actionType <span class="token operator">===</span> <span class="token string">&#39;undo&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u8FD9\u91CC\u662F\u64A4\u9500\u529F\u80FD\u5B9E\u73B0\uFF0C</span>
    <span class="token comment">// \u53EA\u9700\u4ECE history \u6570\u7EC4\u4E2D\u53D6\u524D\u4E00\u6B21 todos \u5373\u53EF</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>history<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      todos <span class="token operator">=</span> history<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    TodoStore<span class="token punctuation">.</span><span class="token function">emitChange</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br></div></div><h2 id="\u603B\u7ED3" tabindex="-1"><a class="header-anchor" href="#\u603B\u7ED3" aria-hidden="true">#</a> \u603B\u7ED3</h2><p><code>Immutable</code> \u53EF\u4EE5\u7ED9\u5E94\u7528\u5E26\u6765\u6781\u5927\u7684\u6027\u80FD\u63D0\u5347\uFF0C\u4F46\u662F\u5426\u4F7F\u7528\u8FD8\u8981\u770B\u9879\u76EE\u60C5\u51B5\u3002\u7531\u4E8E\u4FB5\u5165\u6027\u8F83\u5F3A\uFF0C\u65B0\u9879\u76EE\u5F15\u5165\u6BD4\u8F83\u5BB9\u6613\uFF0C\u8001\u9879\u76EE\u8FC1\u79FB\u9700\u8981\u8BC4\u4F30\u8FC1\u79FB\u3002\u5BF9\u4E8E\u4E00\u4E9B\u63D0\u4F9B\u7ED9\u5916\u90E8\u4F7F\u7528\u7684\u516C\u5171\u7EC4\u4EF6\uFF0C\u6700\u597D\u4E0D\u8981\u628A <code>Immutable</code> \u5BF9\u8C61\u76F4\u63A5\u66B4\u9732\u5728\u5BF9\u5916\u63A5\u53E3\u4E2D\u3002</p><p>\u5982\u679C JS \u539F\u751F <code>Immutable</code> \u7C7B\u578B\u4F1A\u4E0D\u4F1A\u592A\u7F8E\uFF0C\u88AB\u79F0\u4E3A React API \u7EC8\u7ED3\u8005\u7684 Sebastian Markb\xE5ge \u6709\u4E00\u4E2A\u8FD9\u6837\u7684\u63D0\u6848\uFF0C\u80FD\u5426\u901A\u8FC7\u73B0\u5728\u8FD8\u4E0D\u786E\u5B9A\u3002\u4E0D\u8FC7\u53EF\u4EE5\u80AF\u5B9A\u7684\u662F <code>Immutable</code> \u4F1A\u88AB\u8D8A\u6765\u8D8A\u591A\u7684\u9879\u76EE\u4F7F\u7528\u3002</p>`,70);function t(e,o){return p}var u=s(a,[["render",t]]);export{u as default};
