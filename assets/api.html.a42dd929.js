import{a as n}from"./app.b05da4ec.js";import{_ as s}from"./plugin-vue_export-helper.21dcd24c.js";const a={},p=n(`<h1 id="api" tabindex="-1"><a class="header-anchor" href="#api" aria-hidden="true">#</a> API</h1><p>\u4E0A\u4E00\u8282\u5BF9 Vuex \u7684\u521D\u59CB\u5316\u8FC7\u7A0B\u6709\u4E86\u6DF1\u5165\u7684\u5206\u6790\uFF0C\u5728\u6784\u9020\u597D\u8FD9\u4E2A <code>store</code> \u540E\uFF0C\u9700\u8981\u63D0\u4F9B\u4E00\u4E9B API \u5BF9\u8FD9\u4E2A <code>store</code> \u505A\u5B58\u53D6\u7684\u64CD\u4F5C\uFF0C\u90A3\u4E48\u8FD9\u4E00\u8282\u5C31\u4ECE\u6E90\u7801\u7684\u89D2\u5EA6\u5BF9\u8FD9\u4E9B API \u505A\u5206\u6790\u3002</p><h2 id="\u6570\u636E\u83B7\u53D6" tabindex="-1"><a class="header-anchor" href="#\u6570\u636E\u83B7\u53D6" aria-hidden="true">#</a> \u6570\u636E\u83B7\u53D6</h2><p>Vuex \u6700\u7EC8\u5B58\u50A8\u7684\u6570\u636E\u662F\u5728 <code>state</code> \u4E0A\u7684\uFF0C\u4E4B\u524D\u5206\u6790\u8FC7\u5728 <code>store.state</code> \u5B58\u50A8\u7684\u662F <code>root state</code>\uFF0C\u90A3\u4E48\u5BF9\u4E8E\u6A21\u5757\u4E0A\u7684 <code>state</code>\uFF0C\u5047\u8BBE\u6709 2 \u4E2A\u5D4C\u5957\u7684 <code>modules</code>\uFF0C\u5B83\u4EEC\u7684 <code>key</code> \u5206\u522B\u4E3A <code>a</code> \u548C <code>b</code>\uFF0C\u53EF\u4EE5\u901A\u8FC7 <code>store.state.a.b.xxx</code> \u7684\u65B9\u5F0F\u53BB\u83B7\u53D6\u3002\u5B83\u7684\u5B9E\u73B0\u662F\u5728\u53D1\u751F\u5728 <code>installModule</code> \u7684\u65F6\u5019\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">installModule</span> <span class="token punctuation">(</span><span class="token parameter">store<span class="token punctuation">,</span> rootState<span class="token punctuation">,</span> path<span class="token punctuation">,</span> module<span class="token punctuation">,</span> hot</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> isRoot <span class="token operator">=</span> <span class="token operator">!</span>path<span class="token punctuation">.</span>length
  
  <span class="token comment">// ...</span>
  <span class="token comment">// set state</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isRoot <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>hot<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> parentState <span class="token operator">=</span> <span class="token function">getNestedState</span><span class="token punctuation">(</span>rootState<span class="token punctuation">,</span> path<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">const</span> moduleName <span class="token operator">=</span> path<span class="token punctuation">[</span>path<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span>
    store<span class="token punctuation">.</span><span class="token function">_withCommit</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      Vue<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>parentState<span class="token punctuation">,</span> moduleName<span class="token punctuation">,</span> module<span class="token punctuation">.</span>state<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p>\u5728\u9012\u5F52\u6267\u884C <code>installModule</code> \u7684\u8FC7\u7A0B\u4E2D\uFF0C\u5C31\u5B8C\u6210\u4E86\u6574\u4E2A <code>state</code> \u7684\u5EFA\u8BBE\uFF0C\u8FD9\u6837\u5C31\u53EF\u4EE5\u901A\u8FC7 <code>module</code> \u540D\u7684 <code>path</code> \u53BB\u8BBF\u95EE\u5230\u4E00\u4E2A\u6DF1\u5C42 <code>module</code> \u7684 <code>state</code>\u3002</p><p>\u6709\u4E9B\u65F6\u5019\uFF0C\u83B7\u53D6\u7684\u6570\u636E\u4E0D\u4EC5\u4EC5\u662F\u4E00\u4E2A <code>state</code>\uFF0C\u800C\u662F\u7531\u591A\u4E2A <code>state</code> \u8BA1\u7B97\u800C\u6765\uFF0CVuex \u63D0\u4F9B\u4E86 <code>getters</code>\uFF0C\u5141\u8BB8\u5B9A\u4E49\u4E00\u4E2A <code>getter</code> \u51FD\u6570\uFF0C\u5982\u4E0B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token literal-property property">getters</span><span class="token operator">:</span> <span class="token punctuation">{</span>
  <span class="token function">total</span> <span class="token punctuation">(</span><span class="token parameter">state<span class="token punctuation">,</span> getters<span class="token punctuation">,</span> localState<span class="token punctuation">,</span> localGetters</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u53EF\u8BBF\u95EE\u5168\u5C40 state \u548C getters\uFF0C\u4EE5\u53CA\u5982\u679C\u662F\u5728 modules \u4E0B\u9762\uFF0C\u53EF\u4EE5\u8BBF\u95EE\u5230\u5C40\u90E8 state \u548C \u5C40\u90E8 getters</span>
    <span class="token keyword">return</span> state<span class="token punctuation">.</span>a <span class="token operator">+</span> state<span class="token punctuation">.</span>b
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>\u5728 <code>installModule</code> \u7684\u8FC7\u7A0B\u4E2D\uFF0C\u9012\u5F52\u6267\u884C\u4E86\u6240\u6709 <code>getters</code> \u5B9A\u4E49\u7684\u6CE8\u518C\uFF0C\u5728\u4E4B\u540E\u7684 <code>resetStoreVM</code> \u8FC7\u7A0B\u4E2D\uFF0C\u6267\u884C\u4E86 <code>store.getters</code> \u7684\u521D\u59CB\u5316\u5DE5\u4F5C\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">installModule</span> <span class="token punctuation">(</span><span class="token parameter">store<span class="token punctuation">,</span> rootState<span class="token punctuation">,</span> path<span class="token punctuation">,</span> module<span class="token punctuation">,</span> hot</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
  <span class="token keyword">const</span> namespace <span class="token operator">=</span> store<span class="token punctuation">.</span>_modules<span class="token punctuation">.</span><span class="token function">getNamespace</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span>
  <span class="token comment">// ...</span>
  <span class="token keyword">const</span> local <span class="token operator">=</span> module<span class="token punctuation">.</span>context <span class="token operator">=</span> <span class="token function">makeLocalContext</span><span class="token punctuation">(</span>store<span class="token punctuation">,</span> namespace<span class="token punctuation">,</span> path<span class="token punctuation">)</span>

  <span class="token comment">// ...</span>

  module<span class="token punctuation">.</span><span class="token function">forEachGetter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">getter<span class="token punctuation">,</span> key</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> namespacedType <span class="token operator">=</span> namespace <span class="token operator">+</span> key
    <span class="token function">registerGetter</span><span class="token punctuation">(</span>store<span class="token punctuation">,</span> namespacedType<span class="token punctuation">,</span> getter<span class="token punctuation">,</span> local<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>

  <span class="token comment">// ...</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">registerGetter</span> <span class="token punctuation">(</span><span class="token parameter">store<span class="token punctuation">,</span> type<span class="token punctuation">,</span> rawGetter<span class="token punctuation">,</span> local</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>store<span class="token punctuation">.</span>_wrappedGetters<span class="token punctuation">[</span>type<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">!==</span> <span class="token string">&#39;production&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">[vuex] duplicate getter key: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>type<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span>
  <span class="token punctuation">}</span>
  store<span class="token punctuation">.</span>_wrappedGetters<span class="token punctuation">[</span>type<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">wrappedGetter</span> <span class="token punctuation">(</span><span class="token parameter">store</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">rawGetter</span><span class="token punctuation">(</span>
      local<span class="token punctuation">.</span>state<span class="token punctuation">,</span> <span class="token comment">// local state</span>
      local<span class="token punctuation">.</span>getters<span class="token punctuation">,</span> <span class="token comment">// local getters</span>
      store<span class="token punctuation">.</span>state<span class="token punctuation">,</span> <span class="token comment">// root state</span>
      store<span class="token punctuation">.</span>getters <span class="token comment">// root getters</span>
    <span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>


<span class="token keyword">function</span> <span class="token function">resetStoreVM</span> <span class="token punctuation">(</span><span class="token parameter">store<span class="token punctuation">,</span> state<span class="token punctuation">,</span> hot</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
  <span class="token comment">// bind store public getters</span>
  store<span class="token punctuation">.</span>getters <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token keyword">const</span> wrappedGetters <span class="token operator">=</span> store<span class="token punctuation">.</span>_wrappedGetters
  <span class="token keyword">const</span> computed <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token function">forEachValue</span><span class="token punctuation">(</span>wrappedGetters<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">fn<span class="token punctuation">,</span> key</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// use computed to leverage its lazy-caching mechanism</span>
    computed<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">fn</span><span class="token punctuation">(</span>store<span class="token punctuation">)</span>
    Object<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span>store<span class="token punctuation">.</span>getters<span class="token punctuation">,</span> key<span class="token punctuation">,</span> <span class="token punctuation">{</span>
      <span class="token function-variable function">get</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> store<span class="token punctuation">.</span>_vm<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token literal-property property">enumerable</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token comment">// for local getters</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>

  <span class="token comment">// use a Vue instance to store the state tree</span>
  <span class="token comment">// suppress warnings just in case the user has added</span>
  <span class="token comment">// some funky global mixins</span>
  <span class="token comment">// ...</span>
  store<span class="token punctuation">.</span>_vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">$$state</span><span class="token operator">:</span> state
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    computed
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br></div></div><p>\u5728 <code>installModule</code> \u7684\u8FC7\u7A0B\u4E2D\uFF0C\u4E3A\u5EFA\u7ACB\u4E86\u6BCF\u4E2A\u6A21\u5757\u7684\u4E0A\u4E0B\u6587\u73AF\u5883\uFF0C \u56E0\u6B64\u5F53\u8BBF\u95EE <code>store.getters.xxx</code> \u7684\u65F6\u5019\uFF0C\u5B9E\u9645\u4E0A\u5C31\u662F\u6267\u884C\u4E86 <code>rawGetter(local.state,...)</code>\uFF0C<code>rawGetter</code> \u5C31\u662F\u5B9A\u4E49\u7684 <code>getter</code> \u65B9\u6CD5\uFF0C\u8FD9\u4E5F\u5C31\u662F\u4E3A\u4EC0\u4E48\u7684 <code>getter</code> \u51FD\u6570\u652F\u6301\u8FD9\u56DB\u4E2A\u53C2\u6570\uFF0C\u5E76\u4E14\u9664\u4E86\u5168\u5C40\u7684 <code>state</code> \u548C <code>getter</code> \u5916\uFF0C\u8FD8\u53EF\u4EE5\u8BBF\u95EE\u5230\u5F53\u524D <code>module</code> \u4E0B\u7684 <code>state</code> \u548C <code>getter</code>\u3002</p><h2 id="\u6570\u636E\u5B58\u50A8" tabindex="-1"><a class="header-anchor" href="#\u6570\u636E\u5B58\u50A8" aria-hidden="true">#</a> \u6570\u636E\u5B58\u50A8</h2><p>Vuex \u5BF9\u6570\u636E\u5B58\u50A8\u7684\u5B58\u50A8\u672C\u8D28\u4E0A\u5C31\u662F\u5BF9 <code>state</code> \u505A\u4FEE\u6539\uFF0C\u5E76\u4E14\u53EA\u5141\u8BB8\u901A\u8FC7\u63D0\u4EA4 <code>mutaion</code> \u7684\u5F62\u5F0F\u53BB\u4FEE\u6539 <code>state</code>\uFF0C<code>mutation</code> \u662F\u4E00\u4E2A\u51FD\u6570\uFF0C\u5982\u4E0B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token literal-property property">mutations</span><span class="token operator">:</span> <span class="token punctuation">{</span>
  <span class="token function">increment</span> <span class="token punctuation">(</span><span class="token parameter">state</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    state<span class="token punctuation">.</span>count<span class="token operator">++</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p><code>mutations</code> \u7684\u521D\u59CB\u5316\u4E5F\u662F\u5728 <code>installModule</code> \u7684\u65F6\u5019\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">installModule</span> <span class="token punctuation">(</span><span class="token parameter">store<span class="token punctuation">,</span> rootState<span class="token punctuation">,</span> path<span class="token punctuation">,</span> module<span class="token punctuation">,</span> hot</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
  <span class="token keyword">const</span> namespace <span class="token operator">=</span> store<span class="token punctuation">.</span>_modules<span class="token punctuation">.</span><span class="token function">getNamespace</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span>

  <span class="token comment">// ...</span>
  <span class="token keyword">const</span> local <span class="token operator">=</span> module<span class="token punctuation">.</span>context <span class="token operator">=</span> <span class="token function">makeLocalContext</span><span class="token punctuation">(</span>store<span class="token punctuation">,</span> namespace<span class="token punctuation">,</span> path<span class="token punctuation">)</span>

  module<span class="token punctuation">.</span><span class="token function">forEachMutation</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">mutation<span class="token punctuation">,</span> key</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> namespacedType <span class="token operator">=</span> namespace <span class="token operator">+</span> key
    <span class="token function">registerMutation</span><span class="token punctuation">(</span>store<span class="token punctuation">,</span> namespacedType<span class="token punctuation">,</span> mutation<span class="token punctuation">,</span> local<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">registerMutation</span> <span class="token punctuation">(</span><span class="token parameter">store<span class="token punctuation">,</span> type<span class="token punctuation">,</span> handler<span class="token punctuation">,</span> local</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> entry <span class="token operator">=</span> store<span class="token punctuation">.</span>_mutations<span class="token punctuation">[</span>type<span class="token punctuation">]</span> <span class="token operator">||</span> <span class="token punctuation">(</span>store<span class="token punctuation">.</span>_mutations<span class="token punctuation">[</span>type<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
  entry<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token function">wrappedMutationHandler</span> <span class="token punctuation">(</span><span class="token parameter">payload</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">handler</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>store<span class="token punctuation">,</span> local<span class="token punctuation">.</span>state<span class="token punctuation">,</span> payload<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><p><code>store</code> \u63D0\u4F9B\u4E86<code>commit</code> \u65B9\u6CD5\u8BA9\u63D0\u4EA4\u4E00\u4E2A <code>mutation</code>\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">commit</span> <span class="token punctuation">(</span><span class="token parameter">_type<span class="token punctuation">,</span> _payload<span class="token punctuation">,</span> _options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// check object-style commit</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span>
    type<span class="token punctuation">,</span>
    payload<span class="token punctuation">,</span>
    options
  <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">unifyObjectStyle</span><span class="token punctuation">(</span>_type<span class="token punctuation">,</span> _payload<span class="token punctuation">,</span> _options<span class="token punctuation">)</span>

  <span class="token keyword">const</span> mutation <span class="token operator">=</span> <span class="token punctuation">{</span> type<span class="token punctuation">,</span> payload <span class="token punctuation">}</span>
  <span class="token keyword">const</span> entry <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_mutations<span class="token punctuation">[</span>type<span class="token punctuation">]</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>entry<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">!==</span> <span class="token string">&#39;production&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">[vuex] unknown mutation type: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>type<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">_withCommit</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    entry<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token function">commitIterator</span> <span class="token punctuation">(</span><span class="token parameter">handler</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">handler</span><span class="token punctuation">(</span>payload<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>_subscribers<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">sub</span> <span class="token operator">=&gt;</span> <span class="token function">sub</span><span class="token punctuation">(</span>mutation<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">)</span><span class="token punctuation">)</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span>
    process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">!==</span> <span class="token string">&#39;production&#39;</span> <span class="token operator">&amp;&amp;</span>
    options <span class="token operator">&amp;&amp;</span> options<span class="token punctuation">.</span>silent
  <span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span>
      <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">[vuex] mutation type: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>type<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">. Silent option has been removed. </span><span class="token template-punctuation string">\`</span></span> <span class="token operator">+</span>
      <span class="token string">&#39;Use the filter functionality in the vue-devtools&#39;</span>
    <span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br></div></div><p>\u8FD9\u91CC\u4F20\u5165\u7684 <code>_type</code> \u5C31\u662F <code>mutation</code> \u7684 <code>type</code>\uFF0C\u53EF\u4EE5\u4ECE <code>store._mutations</code> \u627E\u5230\u5BF9\u5E94\u7684\u51FD\u6570\u6570\u7EC4\uFF0C\u904D\u5386\u5B83\u4EEC\u6267\u884C\u83B7\u53D6\u5230\u6BCF\u4E2A <code>handler</code> \u7136\u540E\u6267\u884C\uFF0C\u5B9E\u9645\u4E0A\u5C31\u662F\u6267\u884C\u4E86 <code>wrappedMutationHandler(playload)</code>\uFF0C\u63A5\u7740\u4F1A\u6267\u884C\u5B9A\u4E49\u7684 <code>mutation</code> \u51FD\u6570\uFF0C\u5E76\u4F20\u5165\u5F53\u524D\u6A21\u5757\u7684 <code>state</code>\uFF0C\u6240\u4EE5\u7684 <code>mutation</code> \u51FD\u6570\u4E5F\u5C31\u662F\u5BF9\u5F53\u524D\u6A21\u5757\u7684 <code>state</code> \u505A\u4FEE\u6539\u3002</p><p>\u9700\u8981\u6CE8\u610F\u7684\u662F\uFF0C <code>mutation</code> \u5FC5\u987B\u662F\u540C\u6B65\u51FD\u6570\uFF0C\u4F46\u662F\u5728\u5F00\u53D1\u5B9E\u9645\u9879\u76EE\u4E2D\uFF0C\u7ECF\u5E38\u4F1A\u9047\u5230\u8981\u5148\u53BB\u53D1\u9001\u4E00\u4E2A\u8BF7\u6C42\uFF0C\u7136\u540E\u6839\u636E\u8BF7\u6C42\u7684\u7ED3\u679C\u53BB\u4FEE\u6539 <code>state</code>\uFF0C\u90A3\u4E48\u5355\u7EAF\u53EA\u901A\u8FC7 <code>mutation</code> \u662F\u65E0\u6CD5\u5B8C\u6210\u9700\u6C42\uFF0C\u56E0\u6B64 Vuex \u53C8\u7ED9\u8BBE\u8BA1\u4E86\u4E00\u4E2A <code>action</code> \u7684\u6982\u5FF5\u3002</p><p><code>action</code> \u7C7B\u4F3C\u4E8E <code>mutation</code>\uFF0C\u4E0D\u540C\u5728\u4E8E <code>action</code> \u63D0\u4EA4\u7684\u662F <code>mutation</code>\uFF0C\u800C\u4E0D\u662F\u76F4\u63A5\u64CD\u4F5C <code>state</code>\uFF0C\u5E76\u4E14\u5B83\u53EF\u4EE5\u5305\u542B\u4EFB\u610F\u5F02\u6B65\u64CD\u4F5C\u3002\u4F8B\u5982\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token literal-property property">mutations</span><span class="token operator">:</span> <span class="token punctuation">{</span>
  <span class="token function">increment</span> <span class="token punctuation">(</span><span class="token parameter">state</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    state<span class="token punctuation">.</span>count<span class="token operator">++</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token literal-property property">actions</span><span class="token operator">:</span> <span class="token punctuation">{</span>
  <span class="token function">increment</span> <span class="token punctuation">(</span><span class="token parameter">context</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      context<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token string">&#39;increment&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p><code>actions</code> \u7684\u521D\u59CB\u5316\u4E5F\u662F\u5728 <code>installModule</code> \u7684\u65F6\u5019\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">installModule</span> <span class="token punctuation">(</span><span class="token parameter">store<span class="token punctuation">,</span> rootState<span class="token punctuation">,</span> path<span class="token punctuation">,</span> module<span class="token punctuation">,</span> hot</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
  <span class="token keyword">const</span> namespace <span class="token operator">=</span> store<span class="token punctuation">.</span>_modules<span class="token punctuation">.</span><span class="token function">getNamespace</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span>

  <span class="token comment">// ...</span>
  <span class="token keyword">const</span> local <span class="token operator">=</span> module<span class="token punctuation">.</span>context <span class="token operator">=</span> <span class="token function">makeLocalContext</span><span class="token punctuation">(</span>store<span class="token punctuation">,</span> namespace<span class="token punctuation">,</span> path<span class="token punctuation">)</span>

  module<span class="token punctuation">.</span><span class="token function">forEachAction</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">action<span class="token punctuation">,</span> key</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> type <span class="token operator">=</span> action<span class="token punctuation">.</span>root <span class="token operator">?</span> key <span class="token operator">:</span> namespace <span class="token operator">+</span> key
    <span class="token keyword">const</span> handler <span class="token operator">=</span> action<span class="token punctuation">.</span>handler <span class="token operator">||</span> action
    <span class="token function">registerAction</span><span class="token punctuation">(</span>store<span class="token punctuation">,</span> type<span class="token punctuation">,</span> handler<span class="token punctuation">,</span> local<span class="token punctuation">)</span>
<span class="token punctuation">}</span>  <span class="token punctuation">)</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">registerAction</span> <span class="token punctuation">(</span><span class="token parameter">store<span class="token punctuation">,</span> type<span class="token punctuation">,</span> handler<span class="token punctuation">,</span> local</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> entry <span class="token operator">=</span> store<span class="token punctuation">.</span>_actions<span class="token punctuation">[</span>type<span class="token punctuation">]</span> <span class="token operator">||</span> <span class="token punctuation">(</span>store<span class="token punctuation">.</span>_actions<span class="token punctuation">[</span>type<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
  entry<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token function">wrappedActionHandler</span> <span class="token punctuation">(</span><span class="token parameter">payload<span class="token punctuation">,</span> cb</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token function">handler</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>store<span class="token punctuation">,</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">dispatch</span><span class="token operator">:</span> local<span class="token punctuation">.</span>dispatch<span class="token punctuation">,</span>
      <span class="token literal-property property">commit</span><span class="token operator">:</span> local<span class="token punctuation">.</span>commit<span class="token punctuation">,</span>
      <span class="token literal-property property">getters</span><span class="token operator">:</span> local<span class="token punctuation">.</span>getters<span class="token punctuation">,</span>
      <span class="token literal-property property">state</span><span class="token operator">:</span> local<span class="token punctuation">.</span>state<span class="token punctuation">,</span>
      <span class="token literal-property property">rootGetters</span><span class="token operator">:</span> store<span class="token punctuation">.</span>getters<span class="token punctuation">,</span>
      <span class="token literal-property property">rootState</span><span class="token operator">:</span> store<span class="token punctuation">.</span>state
    <span class="token punctuation">}</span><span class="token punctuation">,</span> payload<span class="token punctuation">,</span> cb<span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isPromise</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      res <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>store<span class="token punctuation">.</span>_devtoolHook<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> res<span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">err</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        store<span class="token punctuation">.</span>_devtoolHook<span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">&#39;vuex:error&#39;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
        <span class="token keyword">throw</span> err
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> res
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br></div></div><p><code>store</code> \u63D0\u4F9B\u4E86<code>dispatch</code> \u65B9\u6CD5\u8BA9\u63D0\u4EA4\u4E00\u4E2A <code>action</code>\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">dispatch</span> <span class="token punctuation">(</span><span class="token parameter">_type<span class="token punctuation">,</span> _payload</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// check object-style dispatch</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span>
    type<span class="token punctuation">,</span>
    payload
  <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">unifyObjectStyle</span><span class="token punctuation">(</span>_type<span class="token punctuation">,</span> _payload<span class="token punctuation">)</span>

  <span class="token keyword">const</span> action <span class="token operator">=</span> <span class="token punctuation">{</span> type<span class="token punctuation">,</span> payload <span class="token punctuation">}</span>
  <span class="token keyword">const</span> entry <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_actions<span class="token punctuation">[</span>type<span class="token punctuation">]</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>entry<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">!==</span> <span class="token string">&#39;production&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">[vuex] unknown action type: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>type<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">this</span><span class="token punctuation">.</span>_actionSubscribers<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">sub</span> <span class="token operator">=&gt;</span> <span class="token function">sub</span><span class="token punctuation">(</span>action<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">)</span><span class="token punctuation">)</span>

  <span class="token keyword">return</span> entry<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">1</span>
    <span class="token operator">?</span> Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span>entry<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">handler</span> <span class="token operator">=&gt;</span> <span class="token function">handler</span><span class="token punctuation">(</span>payload<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token operator">:</span> entry<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">(</span>payload<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><p>\u8FD9\u91CC\u4F20\u5165\u7684 <code>_type</code> \u5C31\u662F <code>action</code> \u7684 <code>type</code>\uFF0C\u53EF\u4EE5\u4ECE <code>store._actions</code> \u627E\u5230\u5BF9\u5E94\u7684\u51FD\u6570\u6570\u7EC4\uFF0C\u904D\u5386\u5B83\u4EEC\u6267\u884C\u83B7\u53D6\u5230\u6BCF\u4E2A <code>handler</code> \u7136\u540E\u6267\u884C\uFF0C\u5B9E\u9645\u4E0A\u5C31\u662F\u6267\u884C\u4E86 <code>wrappedActionHandler(payload)</code>\uFF0C\u63A5\u7740\u4F1A\u6267\u884C\u5B9A\u4E49\u7684 <code>action</code> \u51FD\u6570\uFF0C\u5E76\u4F20\u5165\u4E00\u4E2A\u5BF9\u8C61\uFF0C\u5305\u542B\u4E86\u5F53\u524D\u6A21\u5757\u4E0B\u7684 <code>dispatch</code>\u3001<code>commit</code>\u3001<code>getters</code>\u3001<code>state</code>\uFF0C\u4EE5\u53CA\u5168\u5C40\u7684 <code>rootState</code> \u548C <code>rootGetters</code>\uFF0C\u6240\u4EE5\u5B9A\u4E49\u7684 <code>action</code> \u51FD\u6570\u80FD\u62FF\u5230\u5F53\u524D\u6A21\u5757\u4E0B\u7684 <code>commit</code> \u65B9\u6CD5\u3002</p><p>\u56E0\u6B64 <code>action</code> \u6BD4\u81EA\u5DF1\u5199\u4E00\u4E2A\u51FD\u6570\u6267\u884C\u5F02\u6B65\u64CD\u4F5C\u7136\u540E\u63D0\u4EA4 <code>muataion</code> \u7684\u597D\u5904\u662F\u5728\u4E8E\u5B83\u53EF\u4EE5\u5728\u53C2\u6570\u4E2D\u83B7\u53D6\u5230\u5F53\u524D\u6A21\u5757\u7684\u4E00\u4E9B\u65B9\u6CD5\u548C\u72B6\u6001\uFF0CVuex \u5E2E\u505A\u597D\u4E86\u8FD9\u4E9B\u3002</p><h2 id="\u8BED\u6CD5\u7CD6" tabindex="-1"><a class="header-anchor" href="#\u8BED\u6CD5\u7CD6" aria-hidden="true">#</a> \u8BED\u6CD5\u7CD6</h2><p>\u77E5\u9053 <code>store</code> \u662F <code>Store</code> \u5BF9\u8C61\u7684\u4E00\u4E2A\u5B9E\u4F8B\uFF0C\u5B83\u662F\u4E00\u4E2A\u539F\u751F\u7684 Javascript \u5BF9\u8C61\uFF0C\u53EF\u4EE5\u5728\u4EFB\u610F\u5730\u65B9\u4F7F\u7528\u5B83\u4EEC\u3002\u4F46\u5927\u90E8\u5206\u7684\u4F7F\u7528\u573A\u666F\u8FD8\u662F\u5728\u7EC4\u4EF6\u4E2D\u4F7F\u7528\uFF0C\u90A3\u4E48\u4E4B\u524D\u4ECB\u7ECD\u8FC7\uFF0C\u5728 Vuex \u5B89\u88C5\u9636\u6BB5\uFF0C\u5B83\u4F1A\u5F80\u6BCF\u4E00\u4E2A\u7EC4\u4EF6\u5B9E\u4F8B\u4E0A\u6DF7\u5165 <code>beforeCreate</code> \u94A9\u5B50\u51FD\u6570\uFF0C\u7136\u540E\u5F80\u7EC4\u4EF6\u5B9E\u4F8B\u4E0A\u6DFB\u52A0\u4E00\u4E2A <code>$store</code> \u7684\u5B9E\u4F8B\uFF0C\u5B83\u6307\u5411\u7684\u5C31\u662F\u5B9E\u4F8B\u5316\u7684 <code>store</code>\uFF0C\u56E0\u6B64\u53EF\u4EE5\u5728\u7EC4\u4EF6\u4E2D\u8BBF\u95EE\u5230 <code>store</code> \u7684\u4EFB\u4F55\u5C5E\u6027\u548C\u65B9\u6CD5\u3002</p><p>\u6BD4\u5982\u5728\u7EC4\u4EF6\u4E2D\u8BBF\u95EE <code>state</code>\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> Counter <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&lt;div&gt;{{ count }}&lt;/div&gt;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
  <span class="token literal-property property">computed</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token function">count</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$store<span class="token punctuation">.</span>state<span class="token punctuation">.</span>count
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>\u4F46\u662F\u5F53\u4E00\u4E2A\u7EC4\u4EF6\u9700\u8981\u83B7\u53D6\u591A\u4E2A\u72B6\u6001\u65F6\u5019\uFF0C\u5C06\u8FD9\u4E9B\u72B6\u6001\u90FD\u58F0\u660E\u4E3A\u8BA1\u7B97\u5C5E\u6027\u4F1A\u6709\u4E9B\u91CD\u590D\u548C\u5197\u4F59\u3002\u540C\u6837\u8FD9\u4E9B\u95EE\u9898\u4E5F\u5728\u5B58\u4E8E <code>getter</code>\u3001<code>mutation</code> \u548C <code>action</code>\u3002</p><p>\u4E3A\u4E86\u89E3\u51B3\u8FD9\u4E2A\u95EE\u9898\uFF0CVuex \u63D0\u4F9B\u4E86\u4E00\u7CFB\u5217 <code>mapXXX</code> \u8F85\u52A9\u51FD\u6570\u5E2E\u52A9\u5B9E\u73B0\u5728\u7EC4\u4EF6\u4E2D\u53EF\u4EE5\u5F88\u65B9\u4FBF\u7684\u6CE8\u5165 <code>store</code> \u7684\u5C5E\u6027\u548C\u65B9\u6CD5\u3002</p><h3 id="mapstate" tabindex="-1"><a class="header-anchor" href="#mapstate" aria-hidden="true">#</a> <code>mapState</code></h3><p>\u5148\u6765\u770B\u4E00\u4E0B <code>mapState</code> \u7684\u7528\u6CD5\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u5728\u5355\u72EC\u6784\u5EFA\u7684\u7248\u672C\u4E2D\u8F85\u52A9\u51FD\u6570\u4E3A Vuex.mapState</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> mapState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vuex&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
  <span class="token literal-property property">computed</span><span class="token operator">:</span> <span class="token function">mapState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token comment">// \u7BAD\u5934\u51FD\u6570\u53EF\u4F7F\u4EE3\u7801\u66F4\u7B80\u7EC3</span>
    <span class="token function-variable function">count</span><span class="token operator">:</span> <span class="token parameter">state</span> <span class="token operator">=&gt;</span> state<span class="token punctuation">.</span>count<span class="token punctuation">,</span>

    <span class="token comment">// \u4F20\u5B57\u7B26\u4E32\u53C2\u6570 &#39;count&#39; \u7B49\u540C\u4E8E \`state =&gt; state.count\`</span>
    <span class="token literal-property property">countAlias</span><span class="token operator">:</span> <span class="token string">&#39;count&#39;</span><span class="token punctuation">,</span>

    <span class="token comment">// \u4E3A\u4E86\u80FD\u591F\u4F7F\u7528 \`this\` \u83B7\u53D6\u5C40\u90E8\u72B6\u6001\uFF0C\u5FC5\u987B\u4F7F\u7528\u5E38\u89C4\u51FD\u6570</span>
    <span class="token function">countPlusLocalState</span> <span class="token punctuation">(</span><span class="token parameter">state</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> state<span class="token punctuation">.</span>count <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>localCount
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><p>\u518D\u6765\u770B\u4E00\u4E0B <code>mapState</code> \u65B9\u6CD5\u7684\u5B9A\u4E49\uFF0C\u5728 <code>src/helpers.js</code> \u4E2D\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> mapState <span class="token operator">=</span> <span class="token function">normalizeNamespace</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">namespace<span class="token punctuation">,</span> states</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token function">normalizeMap</span><span class="token punctuation">(</span>states<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> key<span class="token punctuation">,</span> val <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    res<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">mappedState</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">let</span> state <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$store<span class="token punctuation">.</span>state
      <span class="token keyword">let</span> getters <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$store<span class="token punctuation">.</span>getters
      <span class="token keyword">if</span> <span class="token punctuation">(</span>namespace<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> module <span class="token operator">=</span> <span class="token function">getModuleByNamespace</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$store<span class="token punctuation">,</span> <span class="token string">&#39;mapState&#39;</span><span class="token punctuation">,</span> namespace<span class="token punctuation">)</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>module<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">return</span>
        <span class="token punctuation">}</span>
        state <span class="token operator">=</span> module<span class="token punctuation">.</span>context<span class="token punctuation">.</span>state
        getters <span class="token operator">=</span> module<span class="token punctuation">.</span>context<span class="token punctuation">.</span>getters
      <span class="token punctuation">}</span>
      <span class="token keyword">return</span> <span class="token keyword">typeof</span> val <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span>
        <span class="token operator">?</span> <span class="token function">val</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> state<span class="token punctuation">,</span> getters<span class="token punctuation">)</span>
        <span class="token operator">:</span> state<span class="token punctuation">[</span>val<span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// mark vuex getter for devtools</span>
    res<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">.</span>vuex <span class="token operator">=</span> <span class="token boolean">true</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token keyword">return</span> res
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">function</span> <span class="token function">normalizeNamespace</span> <span class="token punctuation">(</span><span class="token parameter">fn</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token parameter">namespace<span class="token punctuation">,</span> map</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> namespace <span class="token operator">!==</span> <span class="token string">&#39;string&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      map <span class="token operator">=</span> namespace
      namespace <span class="token operator">=</span> <span class="token string">&#39;&#39;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>namespace<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>namespace<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">!==</span> <span class="token string">&#39;/&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      namespace <span class="token operator">+=</span> <span class="token string">&#39;/&#39;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token function">fn</span><span class="token punctuation">(</span>namespace<span class="token punctuation">,</span> map<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">normalizeMap</span> <span class="token punctuation">(</span><span class="token parameter">map</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>map<span class="token punctuation">)</span>
    <span class="token operator">?</span> map<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">key</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> key<span class="token punctuation">,</span> <span class="token literal-property property">val</span><span class="token operator">:</span> key <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token operator">:</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>map<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">key</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> key<span class="token punctuation">,</span> <span class="token literal-property property">val</span><span class="token operator">:</span> map<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br></div></div><p>\u9996\u5148 <code>mapState</code> \u662F\u901A\u8FC7\u6267\u884C <code>normalizeNamespace</code> \u8FD4\u56DE\u7684\u51FD\u6570\uFF0C\u5B83\u63A5\u6536 2 \u4E2A\u53C2\u6570\uFF0C\u5176\u4E2D <code>namespace</code> \u8868\u793A\u547D\u540D\u7A7A\u95F4\uFF0C<code>map</code> \u8868\u793A\u5177\u4F53\u7684\u5BF9\u8C61\uFF0C<code>namespace</code> \u53EF\u4E0D\u4F20\uFF0C\u7A0D\u540E\u6765\u4ECB\u7ECD <code>namespace</code> \u7684\u4F5C\u7528\u3002</p><p>\u5F53\u6267\u884C <code>mapState(map)</code> \u51FD\u6570\u7684\u65F6\u5019\uFF0C\u5B9E\u9645\u4E0A\u5C31\u662F\u6267\u884C <code>normalizeNamespace</code> \u5305\u88F9\u7684\u51FD\u6570\uFF0C\u7136\u540E\u628A <code>map</code> \u4F5C\u4E3A\u53C2\u6570 <code>states</code> \u4F20\u5165\u3002</p><p><code>mapState</code> \u6700\u7EC8\u662F\u8981\u6784\u9020\u4E00\u4E2A\u5BF9\u8C61\uFF0C\u6BCF\u4E2A\u5BF9\u8C61\u7684\u5143\u7D20\u90FD\u662F\u4E00\u4E2A\u65B9\u6CD5\uFF0C\u56E0\u4E3A\u8FD9\u4E2A\u5BF9\u8C61\u662F\u8981\u6269\u5C55\u5230\u7EC4\u4EF6\u7684 <code>computed</code> \u8BA1\u7B97\u5C5E\u6027\u4E2D\u7684\u3002\u51FD\u6570\u9996\u5148\u6267\u884C <code>normalizeMap</code> \u65B9\u6CD5\uFF0C\u628A\u8FD9\u4E2A <code>states</code> \u53D8\u6210\u4E00\u4E2A\u6570\u7EC4\uFF0C\u6570\u7EC4\u7684\u6BCF\u4E2A\u5143\u7D20\u90FD\u662F <code>{key, val}</code> \u7684\u5F62\u5F0F\u3002\u63A5\u7740\u518D\u904D\u5386\u8FD9\u4E2A\u6570\u7EC4\uFF0C\u4EE5 <code>key</code> \u4F5C\u4E3A\u5BF9\u8C61\u7684 <code>key</code>\uFF0C\u503C\u4E3A\u4E00\u4E2A <code>mappedState</code> \u7684\u51FD\u6570\uFF0C\u5728\u8FD9\u4E2A\u51FD\u6570\u7684\u5185\u90E8\uFF0C\u83B7\u53D6\u5230 <code>$store.getters</code> \u548C <code>$store.state</code>\uFF0C\u7136\u540E\u518D\u5224\u65AD\u6570\u7EC4\u7684 <code>val</code> \u5982\u679C\u662F\u4E00\u4E2A\u51FD\u6570\uFF0C\u6267\u884C\u8BE5\u51FD\u6570\uFF0C\u4F20\u5165 <code>state</code> \u548C <code>getters</code>\uFF0C\u5426\u5219\u76F4\u63A5\u8BBF\u95EE <code>state[val]</code>\u3002</p><p>\u6BD4\u8D77\u4E00\u4E2A\u4E2A\u624B\u52A8\u58F0\u660E\u8BA1\u7B97\u5C5E\u6027\uFF0C<code>mapState</code> \u786E\u5B9E\u8981\u65B9\u4FBF\u8BB8\u591A\uFF0C\u4E0B\u9762\u6765\u770B\u4E00\u4E0B <code>namespace</code> \u7684\u4F5C\u7528\u3002</p><p>\u5F53\u60F3\u8BBF\u95EE\u4E00\u4E2A\u5B50\u6A21\u5757\u7684 <code>state</code> \u7684\u65F6\u5019\uFF0C\u53EF\u80FD\u9700\u8981\u8FD9\u6837\u8BBF\u95EE\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token literal-property property">computed</span><span class="token operator">:</span> <span class="token punctuation">{</span>
  <span class="token function">mapState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token function-variable function">a</span><span class="token operator">:</span> <span class="token parameter">state</span> <span class="token operator">=&gt;</span> state<span class="token punctuation">.</span>some<span class="token punctuation">.</span>nested<span class="token punctuation">.</span>module<span class="token punctuation">.</span>a<span class="token punctuation">,</span>
    <span class="token function-variable function">b</span><span class="token operator">:</span> <span class="token parameter">state</span> <span class="token operator">=&gt;</span> state<span class="token punctuation">.</span>some<span class="token punctuation">.</span>nested<span class="token punctuation">.</span>module<span class="token punctuation">.</span>b
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>\u8FD9\u6837\u4ECE\u5199\u6CD5\u4E0A\u5C31\u5F88\u4E0D\u53CB\u597D\uFF0C<code>mapState</code> \u652F\u6301\u4F20\u5165 <code>namespace</code>\uFF0C \u56E0\u6B64\u53EF\u4EE5\u8FD9\u4E48\u5199\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token literal-property property">computed</span><span class="token operator">:</span> <span class="token punctuation">{</span>
  <span class="token function">mapState</span><span class="token punctuation">(</span><span class="token string">&#39;some/nested/module&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token function-variable function">a</span><span class="token operator">:</span> <span class="token parameter">state</span> <span class="token operator">=&gt;</span> state<span class="token punctuation">.</span>a<span class="token punctuation">,</span>
    <span class="token function-variable function">b</span><span class="token operator">:</span> <span class="token parameter">state</span> <span class="token operator">=&gt;</span> state<span class="token punctuation">.</span>b
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>\u8FD9\u6837\u770B\u8D77\u6765\u5C31\u6E05\u723D\u8BB8\u591A\u3002\u5728 <code>mapState</code> \u7684\u5B9E\u73B0\u4E2D\uFF0C\u5982\u679C\u6709 <code>namespace</code>\uFF0C\u5219\u5C1D\u8BD5\u53BB\u901A\u8FC7 <code>getModuleByNamespace(this.$store, &#39;mapState&#39;, namespace)</code> \u5BF9\u5E94\u7684 <code>module</code>\uFF0C\u7136\u540E\u628A <code>state</code> \u548C <code>getters</code> \u4FEE\u6539\u4E3A <code>module</code> \u5BF9\u5E94\u7684 <code>state</code> \u548C <code>getters</code>\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">getModuleByNamespace</span> <span class="token punctuation">(</span><span class="token parameter">store<span class="token punctuation">,</span> helper<span class="token punctuation">,</span> namespace</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> module <span class="token operator">=</span> store<span class="token punctuation">.</span>_modulesNamespaceMap<span class="token punctuation">[</span>namespace<span class="token punctuation">]</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">!==</span> <span class="token string">&#39;production&#39;</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>module<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">[vuex] module namespace not found in </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>helper<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">(): </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>namespace<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> module
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>\u5728 Vuex \u521D\u59CB\u5316\u6267\u884C <code>installModule</code> \u7684\u8FC7\u7A0B\u4E2D\uFF0C\u521D\u59CB\u5316\u4E86\u8FD9\u4E2A\u6620\u5C04\u8868\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">installModule</span> <span class="token punctuation">(</span><span class="token parameter">store<span class="token punctuation">,</span> rootState<span class="token punctuation">,</span> path<span class="token punctuation">,</span> module<span class="token punctuation">,</span> hot</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
  <span class="token keyword">const</span> namespace <span class="token operator">=</span> store<span class="token punctuation">.</span>_modules<span class="token punctuation">.</span><span class="token function">getNamespace</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span>

  <span class="token comment">// register in namespace map</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>module<span class="token punctuation">.</span>namespaced<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    store<span class="token punctuation">.</span>_modulesNamespaceMap<span class="token punctuation">[</span>namespace<span class="token punctuation">]</span> <span class="token operator">=</span> module
  <span class="token punctuation">}</span>

  <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h3 id="mapgetters" tabindex="-1"><a class="header-anchor" href="#mapgetters" aria-hidden="true">#</a> <code>mapGetters</code></h3><p>\u5148\u6765\u770B\u4E00\u4E0B <code>mapGetters</code> \u7684\u7528\u6CD5\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> mapGetters <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vuex&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
  <span class="token literal-property property">computed</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u4F7F\u7528\u5BF9\u8C61\u5C55\u5F00\u8FD0\u7B97\u7B26\u5C06 getter \u6DF7\u5165 computed \u5BF9\u8C61\u4E2D</span>
    <span class="token function">mapGetters</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
      <span class="token string">&#39;doneTodosCount&#39;</span><span class="token punctuation">,</span>
      <span class="token string">&#39;anotherGetter&#39;</span><span class="token punctuation">,</span>
      <span class="token comment">// ...</span>
    <span class="token punctuation">]</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>\u548C <code>mapState</code> \u7C7B\u4F3C\uFF0C<code>mapGetters</code> \u662F\u5C06 <code>store</code> \u4E2D\u7684 <code>getter</code> \u6620\u5C04\u5230\u5C40\u90E8\u8BA1\u7B97\u5C5E\u6027\uFF0C\u6765\u770B\u4E00\u4E0B\u5B83\u7684\u5B9A\u4E49\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> mapGetters <span class="token operator">=</span> <span class="token function">normalizeNamespace</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">namespace<span class="token punctuation">,</span> getters</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token function">normalizeMap</span><span class="token punctuation">(</span>getters<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> key<span class="token punctuation">,</span> val <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// thie namespace has been mutate by normalizeNamespace</span>
    val <span class="token operator">=</span> namespace <span class="token operator">+</span> val
    res<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">mappedGetter</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>namespace <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token function">getModuleByNamespace</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$store<span class="token punctuation">,</span> <span class="token string">&#39;mapGetters&#39;</span><span class="token punctuation">,</span> namespace<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">!==</span> <span class="token string">&#39;production&#39;</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token punctuation">(</span>val <span class="token keyword">in</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$store<span class="token punctuation">.</span>getters<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">[vuex] unknown getter: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>val<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
        <span class="token keyword">return</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$store<span class="token punctuation">.</span>getters<span class="token punctuation">[</span>val<span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// mark vuex getter for devtools</span>
    res<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">.</span>vuex <span class="token operator">=</span> <span class="token boolean">true</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token keyword">return</span> res
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><p><code>mapGetters</code> \u4E5F\u540C\u6837\u652F\u6301 <code>namespace</code>\uFF0C\u5982\u679C\u4E0D\u5199 <code>namespace</code> \uFF0C\u8BBF\u95EE\u4E00\u4E2A\u5B50 <code>module</code> \u7684\u5C5E\u6027\u9700\u8981\u5199\u5F88\u957F\u7684 <code>key</code>\uFF0C\u4E00\u65E6\u4F7F\u7528\u4E86 <code>namespace</code>\uFF0C\u5C31\u53EF\u4EE5\u65B9\u4FBF\u7684\u4E66\u5199\uFF0C\u6BCF\u4E2A <code>mappedGetter</code> \u7684\u5B9E\u73B0\u5B9E\u9645\u4E0A\u5C31\u662F\u53D6 <code>this.$store.getters[val]</code>\u3002</p><h3 id="mapmutations" tabindex="-1"><a class="header-anchor" href="#mapmutations" aria-hidden="true">#</a> <code>mapMutations</code></h3><p>\u53EF\u4EE5\u5728\u7EC4\u4EF6\u4E2D\u4F7F\u7528 <code>this.$store.commit(&#39;xxx&#39;)</code> \u63D0\u4EA4 <code>mutation</code>\uFF0C\u6216\u8005\u4F7F\u7528 <code>mapMutations</code> \u8F85\u52A9\u51FD\u6570\u5C06\u7EC4\u4EF6\u4E2D\u7684 <code>methods</code> \u6620\u5C04\u4E3A <code>store.commit</code> \u7684\u8C03\u7528\u3002</p><p>\u5148\u6765\u770B\u4E00\u4E0B <code>mapMutations</code> \u7684\u7528\u6CD5\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> mapMutations <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vuex&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
  <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token operator">...</span><span class="token function">mapMutations</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
      <span class="token string">&#39;increment&#39;</span><span class="token punctuation">,</span> <span class="token comment">// \u5C06 \`this.increment()\` \u6620\u5C04\u4E3A \`this.$store.commit(&#39;increment&#39;)\`</span>

      <span class="token comment">// \`mapMutations\` \u4E5F\u652F\u6301\u8F7D\u8377\uFF1A</span>
      <span class="token string">&#39;incrementBy&#39;</span> <span class="token comment">// \u5C06 \`this.incrementBy(amount)\` \u6620\u5C04\u4E3A \`this.$store.commit(&#39;incrementBy&#39;, amount)\`</span>
    <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token operator">...</span><span class="token function">mapMutations</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">add</span><span class="token operator">:</span> <span class="token string">&#39;increment&#39;</span> <span class="token comment">// \u5C06 \`this.add()\` \u6620\u5C04\u4E3A \`this.$store.commit(&#39;increment&#39;)\`</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><p><code>mapMutations</code> \u652F\u6301\u4F20\u5165\u4E00\u4E2A\u6570\u7EC4\u6216\u8005\u4E00\u4E2A\u5BF9\u8C61\uFF0C\u76EE\u6807\u90FD\u662F\u7EC4\u4EF6\u4E2D\u5BF9\u5E94\u7684 <code>methods</code> \u6620\u5C04\u4E3A <code>store.commit</code> \u7684\u8C03\u7528\u3002\u6765\u770B\u4E00\u4E0B\u5B83\u7684\u5B9A\u4E49\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> mapMutations <span class="token operator">=</span> <span class="token function">normalizeNamespace</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">namespace<span class="token punctuation">,</span> mutations</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token function">normalizeMap</span><span class="token punctuation">(</span>mutations<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> key<span class="token punctuation">,</span> val <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    res<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">mappedMutation</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>args</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// Get the commit method from store</span>
      <span class="token keyword">let</span> commit <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$store<span class="token punctuation">.</span>commit
      <span class="token keyword">if</span> <span class="token punctuation">(</span>namespace<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> module <span class="token operator">=</span> <span class="token function">getModuleByNamespace</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$store<span class="token punctuation">,</span> <span class="token string">&#39;mapMutations&#39;</span><span class="token punctuation">,</span> namespace<span class="token punctuation">)</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>module<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">return</span>
        <span class="token punctuation">}</span>
        commit <span class="token operator">=</span> module<span class="token punctuation">.</span>context<span class="token punctuation">.</span>commit
      <span class="token punctuation">}</span>
      <span class="token keyword">return</span> <span class="token keyword">typeof</span> val <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span>
        <span class="token operator">?</span> <span class="token function">val</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>commit<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token operator">:</span> <span class="token function">commit</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$store<span class="token punctuation">,</span> <span class="token punctuation">[</span>val<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token keyword">return</span> res
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><p>\u53EF\u4EE5\u770B\u5230 <code>mappedMutation</code> \u540C\u6837\u652F\u6301\u4E86 <code>namespace</code>\uFF0C\u5E76\u4E14\u652F\u6301\u4E86\u4F20\u5165\u989D\u5916\u7684\u53C2\u6570 <code>args</code>\uFF0C\u4F5C\u4E3A\u63D0\u4EA4 <code>mutation</code> \u7684 <code>payload</code>\uFF0C\u6700\u7EC8\u5C31\u662F\u6267\u884C\u4E86 <code>store.commit</code> \u65B9\u6CD5\uFF0C\u5E76\u4E14\u8FD9\u4E2A <code>commit</code> \u4F1A\u6839\u636E\u4F20\u5165\u7684 <code>namespace</code> \u6620\u5C04\u5230\u5BF9\u5E94 <code>module</code> \u7684 <code>commit</code> \u4E0A\u3002</p><h3 id="mapactions" tabindex="-1"><a class="header-anchor" href="#mapactions" aria-hidden="true">#</a> <code>mapActions</code></h3><p>\u53EF\u4EE5\u5728\u7EC4\u4EF6\u4E2D\u4F7F\u7528 <code>this.$store.dispatch(&#39;xxx&#39;)</code> \u63D0\u4EA4 <code>action</code>\uFF0C\u6216\u8005\u4F7F\u7528 <code>mapActions</code> \u8F85\u52A9\u51FD\u6570\u5C06\u7EC4\u4EF6\u4E2D\u7684 <code>methods</code> \u6620\u5C04\u4E3A <code>store.dispatch</code> \u7684\u8C03\u7528\u3002</p><p><code>mapActions</code> \u5728\u7528\u6CD5\u4E0A\u548C <code>mapMutations</code> \u51E0\u4E4E\u4E00\u6837\uFF0C\u5B9E\u73B0\u4E5F\u5F88\u7C7B\u4F3C\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> mapActions <span class="token operator">=</span> <span class="token function">normalizeNamespace</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">namespace<span class="token punctuation">,</span> actions</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token function">normalizeMap</span><span class="token punctuation">(</span>actions<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> key<span class="token punctuation">,</span> val <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    res<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">mappedAction</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>args</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// get dispatch function from store</span>
      <span class="token keyword">let</span> dispatch <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$store<span class="token punctuation">.</span>dispatch
      <span class="token keyword">if</span> <span class="token punctuation">(</span>namespace<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> module <span class="token operator">=</span> <span class="token function">getModuleByNamespace</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$store<span class="token punctuation">,</span> <span class="token string">&#39;mapActions&#39;</span><span class="token punctuation">,</span> namespace<span class="token punctuation">)</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>module<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">return</span>
        <span class="token punctuation">}</span>
        dispatch <span class="token operator">=</span> module<span class="token punctuation">.</span>context<span class="token punctuation">.</span>dispatch
      <span class="token punctuation">}</span>
      <span class="token keyword">return</span> <span class="token keyword">typeof</span> val <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span>
        <span class="token operator">?</span> <span class="token function">val</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>dispatch<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token operator">:</span> <span class="token function">dispatch</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$store<span class="token punctuation">,</span> <span class="token punctuation">[</span>val<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token keyword">return</span> res
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><p>\u548C <code>mapMutations</code> \u7684\u5B9E\u73B0\u51E0\u4E4E\u4E00\u6837\uFF0C\u4E0D\u540C\u7684\u662F\u628A <code>commit</code> \u65B9\u6CD5\u6362\u6210\u4E86 <code>dispatch</code>\u3002</p><h2 id="\u52A8\u6001\u66F4\u65B0\u6A21\u5757" tabindex="-1"><a class="header-anchor" href="#\u52A8\u6001\u66F4\u65B0\u6A21\u5757" aria-hidden="true">#</a> \u52A8\u6001\u66F4\u65B0\u6A21\u5757</h2><p>\u5728 Vuex \u521D\u59CB\u5316\u9636\u6BB5\u6784\u9020\u4E86\u6A21\u5757\u6811\uFF0C\u521D\u59CB\u5316\u4E86\u6A21\u5757\u4E0A\u5404\u4E2A\u90E8\u5206\u3002\u5728\u6709\u4E00\u4E9B\u573A\u666F\u4E0B\uFF0C\u9700\u8981\u52A8\u6001\u53BB\u6CE8\u5165\u4E00\u4E9B\u65B0\u7684\u6A21\u5757\uFF0CVuex \u63D0\u4F9B\u4E86\u6A21\u5757\u52A8\u6001\u6CE8\u518C\u529F\u80FD\uFF0C\u5728 <code>store</code> \u4E0A\u63D0\u4F9B\u4E86\u4E00\u4E2A <code>registerModule</code> \u7684 API\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">registerModule</span> <span class="token punctuation">(</span><span class="token parameter">path<span class="token punctuation">,</span> rawModule<span class="token punctuation">,</span> options <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> path <span class="token operator">===</span> <span class="token string">&#39;string&#39;</span><span class="token punctuation">)</span> path <span class="token operator">=</span> <span class="token punctuation">[</span>path<span class="token punctuation">]</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">!==</span> <span class="token string">&#39;production&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">assert</span><span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">module path must be a string or an Array.</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
    <span class="token function">assert</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">&#39;cannot register the root module by using registerModule.&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">this</span><span class="token punctuation">.</span>_modules<span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> rawModule<span class="token punctuation">)</span>
  <span class="token function">installModule</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">,</span> path<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_modules<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">,</span> options<span class="token punctuation">.</span>preserveState<span class="token punctuation">)</span>
  <span class="token comment">// reset store to update getters...</span>
  <span class="token function">resetStoreVM</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p><code>registerModule</code> \u652F\u6301\u4F20\u5165\u4E00\u4E2A <code>path</code> \u6A21\u5757\u8DEF\u5F84 \u548C <code>rawModule</code> \u6A21\u5757\u5B9A\u4E49\uFF0C\u9996\u5148\u6267\u884C <code>register</code> \u65B9\u6CD5\u6269\u5C55\u7684\u6A21\u5757\u6811\uFF0C\u63A5\u7740\u6267\u884C <code>installModule</code> \u53BB\u5B89\u88C5\u6A21\u5757\uFF0C\u6700\u540E\u6267\u884C <code>resetStoreVM</code> \u91CD\u65B0\u5B9E\u4F8B\u5316 <code>store._vm</code>\uFF0C\u5E76\u9500\u6BC1\u65E7\u7684 <code>store._vm</code>\u3002</p><p>\u76F8\u5BF9\u7684\uFF0C\u6709\u52A8\u6001\u6CE8\u518C\u6A21\u5757\u7684\u9700\u6C42\u5C31\u6709\u52A8\u6001\u5378\u8F7D\u6A21\u5757\u7684\u9700\u6C42\uFF0CVuex \u63D0\u4F9B\u4E86\u6A21\u5757\u52A8\u6001\u5378\u8F7D\u529F\u80FD\uFF0C\u5728 <code>store</code> \u4E0A\u63D0\u4F9B\u4E86\u4E00\u4E2A <code>unregisterModule</code> \u7684 API\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">unregisterModule</span> <span class="token punctuation">(</span><span class="token parameter">path</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> path <span class="token operator">===</span> <span class="token string">&#39;string&#39;</span><span class="token punctuation">)</span> path <span class="token operator">=</span> <span class="token punctuation">[</span>path<span class="token punctuation">]</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">!==</span> <span class="token string">&#39;production&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">assert</span><span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">module path must be a string or an Array.</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">this</span><span class="token punctuation">.</span>_modules<span class="token punctuation">.</span><span class="token function">unregister</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">_withCommit</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> parentState <span class="token operator">=</span> <span class="token function">getNestedState</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">,</span> path<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    Vue<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span>parentState<span class="token punctuation">,</span> path<span class="token punctuation">[</span>path<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token function">resetStore</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p><code>unregisterModule</code> \u652F\u6301\u4F20\u5165\u4E00\u4E2A <code>path</code> \u6A21\u5757\u8DEF\u5F84\uFF0C\u9996\u5148\u6267\u884C <code>unregister</code> \u65B9\u6CD5\u53BB\u4FEE\u526A\u7684\u6A21\u5757\u6811\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">unregister</span> <span class="token punctuation">(</span><span class="token parameter">path</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> parent <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> key <span class="token operator">=</span> path<span class="token punctuation">[</span>path<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>parent<span class="token punctuation">.</span><span class="token function">getChild</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">.</span>runtime<span class="token punctuation">)</span> <span class="token keyword">return</span>

  parent<span class="token punctuation">.</span><span class="token function">removeChild</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>\u6CE8\u610F\uFF0C\u8FD9\u91CC\u53EA\u4F1A\u79FB\u9664\u8FD0\u884C\u65F6\u52A8\u6001\u521B\u5EFA\u7684\u6A21\u5757\u3002</p><p>\u63A5\u7740\u4F1A\u5220\u9664 <code>state</code> \u5728\u8BE5\u8DEF\u5F84\u4E0B\u7684\u5F15\u7528\uFF0C\u6700\u540E\u6267\u884C <code>resetStore</code> \u65B9\u6CD5\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">resetStore</span> <span class="token punctuation">(</span><span class="token parameter">store<span class="token punctuation">,</span> hot</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  store<span class="token punctuation">.</span>_actions <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span>
  store<span class="token punctuation">.</span>_mutations <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span>
  store<span class="token punctuation">.</span>_wrappedGetters <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span>
  store<span class="token punctuation">.</span>_modulesNamespaceMap <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> state <span class="token operator">=</span> store<span class="token punctuation">.</span>state
  <span class="token comment">// init all modules</span>
  <span class="token function">installModule</span><span class="token punctuation">(</span>store<span class="token punctuation">,</span> state<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> store<span class="token punctuation">.</span>_modules<span class="token punctuation">.</span>root<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
  <span class="token comment">// reset vm</span>
  <span class="token function">resetStoreVM</span><span class="token punctuation">(</span>store<span class="token punctuation">,</span> state<span class="token punctuation">,</span> hot<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>\u8BE5\u65B9\u6CD5\u5C31\u662F\u628A <code>store</code> \u4E0B\u7684\u5BF9\u5E94\u5B58\u50A8\u7684 <code>_actions</code>\u3001<code>_mutations</code>\u3001<code>_wrappedGetters</code> \u548C <code>_modulesNamespaceMap</code> \u90FD\u6E05\u7A7A\uFF0C\u7136\u540E\u91CD\u65B0\u6267\u884C <code>installModule</code> \u5B89\u88C5\u6240\u6709\u6A21\u5757\u4EE5\u53CA <code>resetStoreVM</code> \u91CD\u7F6E <code>store._vm</code>\u3002</p><h2 id="\u603B\u7ED3" tabindex="-1"><a class="header-anchor" href="#\u603B\u7ED3" aria-hidden="true">#</a> \u603B\u7ED3</h2><p>\u90A3\u4E48\u81F3\u6B64\uFF0CVuex \u63D0\u4F9B\u7684\u4E00\u4E9B\u5E38\u7528 API \u5C31\u5206\u6790\u5B8C\u4E86\uFF0C\u5305\u62EC\u6570\u636E\u7684\u5B58\u53D6\u3001\u8BED\u6CD5\u7CD6\u3001\u6A21\u5757\u7684\u52A8\u6001\u66F4\u65B0\u7B49\u3002\u8981\u7406\u89E3 Vuex \u63D0\u4F9B\u8FD9\u4E9B API \u90FD\u662F\u65B9\u4FBF\u5728\u5BF9 <code>store</code> \u505A\u5404\u79CD\u64CD\u4F5C\u6765\u5B8C\u6210\u5404\u79CD\u80FD\u529B\uFF0C\u5C24\u5176\u662F <code>mapXXX</code> \u7684\u8BBE\u8BA1\uFF0C\u8BA9\u5728\u4F7F\u7528 API \u7684\u65F6\u5019\u66F4\u52A0\u65B9\u4FBF\uFF0C\u8FD9\u4E5F\u662F\u4ECA\u540E\u5728\u8BBE\u8BA1\u4E00\u4E9B JavaScript \u5E93\u7684\u65F6\u5019\uFF0C\u4ECE API \u8BBE\u8BA1\u89D2\u5EA6\u4E2D\u5E94\u8BE5\u5B66\u4E60\u7684\u65B9\u5411\u3002</p>`,83);function t(e,o){return p}var u=s(a,[["render",t]]);export{u as default};
