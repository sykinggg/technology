import{r as o,o as l,c as r,b as n,d as e,w as i,F as u,e as s,a}from"./app.ba47fc91.js";import{_ as k}from"./plugin-vue_export-helper.21dcd24c.js";const b={},d=n("h1",{id:"react-\u7B97\u6CD5\u4E4B\u8C03\u548C\u7B97\u6CD5",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#react-\u7B97\u6CD5\u4E4B\u8C03\u548C\u7B97\u6CD5","aria-hidden":"true"},"#"),s(" React \u7B97\u6CD5\u4E4B\u8C03\u548C\u7B97\u6CD5")],-1),m=n("h2",{id:"\u6982\u5FF5",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u6982\u5FF5","aria-hidden":"true"},"#"),s(" \u6982\u5FF5")],-1),h=s("\u8C03\u548C\u51FD\u6570("),w={href:"https://github.com/facebook/react/blob/v17.0.2/packages/react-reconciler/src/ReactChildFiber.old.js#L1274-L1410",target:"_blank",rel:"noopener noreferrer"},y=s("\u6E90\u7801"),_=s(")\u7684\u4F5C\u7528:"),f=n("li",null,[s("\u7ED9\u65B0\u589E,\u79FB\u52A8,\u548C\u5220\u9664\u8282\u70B9\u8BBE\u7F6E"),n("code",null,"fiber.falgs"),s("(\u65B0\u589E, \u79FB\u52A8: "),n("code",null,"Placement"),s(", \u5220\u9664: "),n("code",null,"Deletion"),s(")")],-1),F=s("\u5982\u679C\u662F\u9700\u8981\u5220\u9664\u7684"),g=n("code",null,"fiber",-1),C=s(", "),x={href:"https://github.com/facebook/react/blob/v17.0.2/packages/react-reconciler/src/ReactChildFiber.old.js#L275-L294",target:"_blank",rel:"noopener noreferrer"},v=s("\u9664\u4E86\u81EA\u8EAB\u6253\u4E0A"),I=n("code",null,"Deletion",-1),R=s("\u4E4B\u5916, \u8FD8\u8981\u5C06\u5176\u6DFB\u52A0\u5230\u7236\u8282\u70B9\u7684"),j=n("code",null,"effects",-1),E=s("\u94FE\u8868\u4E2D"),L=s("(\u6B63\u5E38\u526F\u4F5C\u7528\u961F\u5217\u7684\u5904\u7406\u662F\u5728"),N=n("code",null,"completeWork",-1),D=s("\u51FD\u6570, \u4F46\u662F\u8BE5\u8282\u70B9(\u88AB\u5220\u9664)\u4F1A\u8131\u79BB"),A=n("code",null,"fiber",-1),P=s("\u6811, \u4E0D\u4F1A\u518D\u8FDB\u5165"),B=n("code",null,"completeWork",-1),O=s("\u9636\u6BB5, \u6240\u4EE5\u5728"),S=n("code",null,"beginWork",-1),T=s("\u9636\u6BB5\u63D0\u524D\u52A0\u5165\u526F\u4F5C\u7528\u961F\u5217)."),X=a('<h2 id="\u7279\u6027" tabindex="-1"><a class="header-anchor" href="#\u7279\u6027" aria-hidden="true">#</a> \u7279\u6027</h2><p>\u7B97\u6CD5\u590D\u6742\u5EA6\u4F4E, \u4ECE\u4E0A\u81F3\u4E0B\u6BD4\u8F83\u6574\u4E2A\u6811\u5F62\u7ED3\u6784, \u65F6\u95F4\u590D\u6742\u5EA6\u88AB\u7F29\u77ED\u5230 O(n)</p><h2 id="\u57FA\u672C\u539F\u7406" tabindex="-1"><a class="header-anchor" href="#\u57FA\u672C\u539F\u7406" aria-hidden="true">#</a> \u57FA\u672C\u539F\u7406</h2><ol><li>\u6BD4\u8F83\u5BF9\u8C61: <code>fiber</code>\u5BF9\u8C61\u4E0E<code>ReactElement</code>\u5BF9\u8C61\u76F8\u6BD4\u8F83. <ul><li>\u6CE8\u610F: \u6B64\u5904\u6709\u4E00\u4E2A\u8BEF\u533A, \u5E76\u4E0D\u662F\u4E24\u68F5 fiber \u6811\u76F8\u6BD4\u8F83, \u800C\u662F<code>\u65E7fiber</code>\u5BF9\u8C61\u4E0E<code>\u65B0ReactElement</code>\u5BF9\u8C61\u5411\u6BD4\u8F83, \u7ED3\u679C\u751F\u6210\u65B0\u7684<code>fiber\u5B50\u8282\u70B9</code>.</li><li>\u53EF\u4EE5\u7406\u89E3\u4E3A\u8F93\u5165<code>ReactElement</code>, \u7ECF\u8FC7<code>reconcilerChildren()</code>\u4E4B\u540E, \u8F93\u51FA<code>fiber</code>.</li></ul></li><li>\u6BD4\u8F83\u65B9\u6848: <ul><li>\u5355\u8282\u70B9\u6BD4\u8F83</li><li>\u53EF\u8FED\u4EE3\u8282\u70B9\u6BD4\u8F83</li></ul></li></ol><h3 id="\u5355\u8282\u70B9\u6BD4\u8F83" tabindex="-1"><a class="header-anchor" href="#\u5355\u8282\u70B9\u6BD4\u8F83" aria-hidden="true">#</a> \u5355\u8282\u70B9\u6BD4\u8F83</h3>',5),q=s("\u5355\u8282\u70B9\u7684\u903B\u8F91\u6BD4\u8F83\u7B80\u660E, \u5148\u76F4\u63A5\u770B"),V={href:"https://github.com/facebook/react/blob/v17.0.2/packages/react-reconciler/src/ReactChildFiber.old.js#L1135-L1233",target:"_blank",rel:"noopener noreferrer"},M=s("\u6E90\u7801"),W=s(":"),$=a(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u53EA\u4FDD\u7559\u4E3B\u6746\u903B\u8F91</span>
<span class="token keyword">function</span> <span class="token function">reconcileSingleElement</span><span class="token punctuation">(</span>
  <span class="token parameter"><span class="token literal-property property">returnFiber</span><span class="token operator">:</span> Fiber<span class="token punctuation">,</span>
  <span class="token literal-property property">currentFirstChild</span><span class="token operator">:</span> Fiber <span class="token operator">|</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
  <span class="token literal-property property">element</span><span class="token operator">:</span> ReactElement<span class="token punctuation">,</span>
  <span class="token literal-property property">lanes</span><span class="token operator">:</span> Lanes<span class="token punctuation">,</span></span>
<span class="token punctuation">)</span><span class="token operator">:</span> Fiber <span class="token punctuation">{</span>
  <span class="token keyword">const</span> key <span class="token operator">=</span> element<span class="token punctuation">.</span>key<span class="token punctuation">;</span>
  <span class="token keyword">let</span> child <span class="token operator">=</span> currentFirstChild<span class="token punctuation">;</span>

  <span class="token keyword">while</span> <span class="token punctuation">(</span>child <span class="token operator">!==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// currentFirstChild !== null, \u8868\u660E\u662F\u5BF9\u6BD4\u66F4\u65B0\u9636\u6BB5</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>child<span class="token punctuation">.</span>key <span class="token operator">===</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// 1. key\u76F8\u540C, \u8FDB\u4E00\u6B65\u5224\u65AD child.elementType === element.type</span>
      <span class="token keyword">switch</span> <span class="token punctuation">(</span>child<span class="token punctuation">.</span>tag<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u53EA\u770B\u6838\u5FC3\u903B\u8F91</span>
        <span class="token keyword">default</span><span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span>child<span class="token punctuation">.</span>elementType <span class="token operator">===</span> element<span class="token punctuation">.</span>type<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// 1.1 \u5DF2\u7ECF\u5339\u914D\u4E0A\u4E86, \u5982\u679C\u6709\u5144\u5F1F\u8282\u70B9, \u9700\u8981\u7ED9\u5144\u5F1F\u8282\u70B9\u6253\u4E0ADeletion\u6807\u8BB0</span>
            <span class="token function">deleteRemainingChildren</span><span class="token punctuation">(</span>returnFiber<span class="token punctuation">,</span> child<span class="token punctuation">.</span>sibling<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// 1.2 \u6784\u9020fiber\u8282\u70B9, \u65B0\u7684fiber\u5BF9\u8C61\u4F1A\u590D\u7528current.stateNode, \u5373\u53EF\u590D\u7528DOM\u5BF9\u8C61</span>
            <span class="token keyword">const</span> existing <span class="token operator">=</span> <span class="token function">useFiber</span><span class="token punctuation">(</span>child<span class="token punctuation">,</span> element<span class="token punctuation">.</span>props<span class="token punctuation">)</span><span class="token punctuation">;</span>
            existing<span class="token punctuation">.</span>ref <span class="token operator">=</span> <span class="token function">coerceRef</span><span class="token punctuation">(</span>returnFiber<span class="token punctuation">,</span> child<span class="token punctuation">,</span> element<span class="token punctuation">)</span><span class="token punctuation">;</span>
            existing<span class="token punctuation">.</span>return <span class="token operator">=</span> returnFiber<span class="token punctuation">;</span>
            <span class="token keyword">return</span> existing<span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
          <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
      <span class="token comment">// Didn&#39;t match. \u7ED9\u5F53\u524D\u8282\u70B9\u70B9\u6253\u4E0ADeletion\u6807\u8BB0</span>
      <span class="token function">deleteRemainingChildren</span><span class="token punctuation">(</span>returnFiber<span class="token punctuation">,</span> child<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token comment">// 2. key\u4E0D\u76F8\u540C, \u5339\u914D\u5931\u8D25, \u7ED9\u5F53\u524D\u8282\u70B9\u6253\u4E0ADeletion\u6807\u8BB0</span>
      <span class="token function">deleteChild</span><span class="token punctuation">(</span>returnFiber<span class="token punctuation">,</span> child<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    child <span class="token operator">=</span> child<span class="token punctuation">.</span>sibling<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token punctuation">{</span>
    <span class="token comment">// ...\u7701\u7565\u90E8\u5206\u4EE3\u7801, \u53EA\u770B\u6838\u5FC3\u903B\u8F91</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \u65B0\u5EFA\u8282\u70B9</span>
  <span class="token keyword">const</span> created <span class="token operator">=</span> <span class="token function">createFiberFromElement</span><span class="token punctuation">(</span>element<span class="token punctuation">,</span> returnFiber<span class="token punctuation">.</span>mode<span class="token punctuation">,</span> lanes<span class="token punctuation">)</span><span class="token punctuation">;</span>
  created<span class="token punctuation">.</span>ref <span class="token operator">=</span> <span class="token function">coerceRef</span><span class="token punctuation">(</span>returnFiber<span class="token punctuation">,</span> currentFirstChild<span class="token punctuation">,</span> element<span class="token punctuation">)</span><span class="token punctuation">;</span>
  created<span class="token punctuation">.</span>return <span class="token operator">=</span> returnFiber<span class="token punctuation">;</span>
  <span class="token keyword">return</span> created<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br></div></div><ol><li>\u5982\u679C\u662F\u65B0\u589E\u8282\u70B9, \u76F4\u63A5\u65B0\u5EFA fiber, \u6CA1\u6709\u591A\u4F59\u7684\u903B\u8F91</li><li>\u5982\u679C\u662F\u5BF9\u6BD4\u66F4\u65B0 <ul><li>\u5982\u679C<code>key</code>\u548C<code>type</code>\u90FD\u76F8\u540C(\u5373: <code>ReactElement.key</code> === <code>Fiber.key</code> \u4E14 <code>Fiber.elementType === ReactElement.type</code>), \u5219\u590D\u7528</li><li>\u5426\u5219\u65B0\u5EFA</li></ul></li></ol><p>\u6CE8\u610F: \u590D\u7528\u8FC7\u7A0B\u662F\u8C03\u7528<code>useFiber(child, element.props)</code>\u521B\u5EFA<code>\u65B0\u7684fiber</code>\u5BF9\u8C61, \u8FD9\u4E2A<code>\u65B0fiber\u5BF9\u8C61.stateNode = currentFirstChild.stateNode</code>, \u5373<code>stateNode</code>\u5C5E\u6027\u5F97\u5230\u4E86\u590D\u7528, \u6545 DOM \u8282\u70B9\u5F97\u5230\u4E86\u590D\u7528.</p><h3 id="\u53EF\u8FED\u4EE3\u8282\u70B9\u6BD4\u8F83-\u6570\u7EC4\u7C7B\u578B-symbol-iterator-fn-iterator-fn" tabindex="-1"><a class="header-anchor" href="#\u53EF\u8FED\u4EE3\u8282\u70B9\u6BD4\u8F83-\u6570\u7EC4\u7C7B\u578B-symbol-iterator-fn-iterator-fn" aria-hidden="true">#</a> \u53EF\u8FED\u4EE3\u8282\u70B9\u6BD4\u8F83(\u6570\u7EC4\u7C7B\u578B, [Symbol.iterator]=fn,[@@iterator]=fn)</h3>`,4),Y=s("\u53EF\u8FED\u4EE3\u8282\u70B9\u6BD4\u8F83, \u5728"),z={href:"https://github.com/facebook/react/blob/v17.0.2/packages/react-reconciler/src/ReactChildFiber.old.js#L1346-L1362",target:"_blank",rel:"noopener noreferrer"},G=s("\u6E90\u7801\u4E2D"),H=s("\u88AB\u5206\u4E3A\u4E86 2 \u4E2A\u90E8\u5206:"),J=a(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">reconcileChildFibers</span><span class="token punctuation">(</span>
  <span class="token parameter"><span class="token literal-property property">returnFiber</span><span class="token operator">:</span> Fiber<span class="token punctuation">,</span>
  <span class="token literal-property property">currentFirstChild</span><span class="token operator">:</span> Fiber <span class="token operator">|</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
  <span class="token literal-property property">newChild</span><span class="token operator">:</span> any<span class="token punctuation">,</span>
  <span class="token literal-property property">lanes</span><span class="token operator">:</span> Lanes<span class="token punctuation">,</span></span>
<span class="token punctuation">)</span><span class="token operator">:</span> Fiber <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isArray</span><span class="token punctuation">(</span>newChild<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">reconcileChildrenArray</span><span class="token punctuation">(</span>
      returnFiber<span class="token punctuation">,</span>
      currentFirstChild<span class="token punctuation">,</span>
      newChild<span class="token punctuation">,</span>
      lanes<span class="token punctuation">,</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">getIteratorFn</span><span class="token punctuation">(</span>newChild<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">reconcileChildrenIterator</span><span class="token punctuation">(</span>
      returnFiber<span class="token punctuation">,</span>
      currentFirstChild<span class="token punctuation">,</span>
      newChild<span class="token punctuation">,</span>
      lanes<span class="token punctuation">,</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div>`,1),K=s("\u5176\u4E2D"),Q=n("code",null,"reconcileChildrenArray\u51FD\u6570",-1),U=s("(\u9488\u5BF9\u6570\u7EC4\u7C7B\u578B)\u548C"),Z=n("code",null,"reconcileChildrenIterator",-1),nn=s("(\u9488\u5BF9\u53EF\u8FED\u4EE3\u7C7B\u578B)\u7684\u6838\u5FC3\u903B\u8F91\u51E0\u4E4E\u4E00\u81F4, \u4E0B\u6587\u5C06\u5206\u6790"),sn={href:"https://github.com/facebook/react/blob/v17.0.2/packages/react-reconciler/src/ReactChildFiber.old.js#L771-L924",target:"_blank",rel:"noopener noreferrer"},an=n("code",null,"reconcileChildrenArray()",-1),en=s("\u51FD\u6570"),pn=s(". \u5982\u679C\u662F\u65B0\u589E\u8282\u70B9, \u6240\u6709\u7684\u6BD4\u8F83\u903B\u8F91\u90FD\u65E0\u6CD5\u547D\u4E2D, \u53EA\u6709"),tn=n("code",null,"\u5BF9\u6BD4\u66F4\u65B0",-1),on=s("\u8FC7\u7A0B, \u624D\u6709\u5B9E\u9645\u4F5C\u7528, \u6240\u4EE5\u4E0B\u6587\u91CD\u70B9\u5206\u6790"),cn=n("code",null,"\u5BF9\u6BD4\u66F4\u65B0",-1),ln=s("\u7684\u60C5\u51B5."),rn=a(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">reconcileChildrenArray</span><span class="token punctuation">(</span>
  <span class="token parameter"><span class="token literal-property property">returnFiber</span><span class="token operator">:</span> Fiber<span class="token punctuation">,</span>
  <span class="token literal-property property">currentFirstChild</span><span class="token operator">:</span> Fiber <span class="token operator">|</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
  <span class="token literal-property property">newChildren</span><span class="token operator">:</span> Array<span class="token operator">&lt;</span><span class="token operator">*</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">lanes</span><span class="token operator">:</span> Lanes<span class="token punctuation">,</span></span>
<span class="token punctuation">)</span><span class="token operator">:</span> Fiber <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> <span class="token literal-property property">resultingFirstChild</span><span class="token operator">:</span> Fiber <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> <span class="token literal-property property">previousNewFiber</span><span class="token operator">:</span> Fiber <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>

  <span class="token keyword">let</span> oldFiber <span class="token operator">=</span> currentFirstChild<span class="token punctuation">;</span>
  <span class="token keyword">let</span> lastPlacedIndex <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> newIdx <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> nextOldFiber <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
  <span class="token comment">// 1. \u7B2C\u4E00\u6B21\u5FAA\u73AF: \u904D\u5386\u6700\u957F\u516C\u5171\u5E8F\u5217(key\u76F8\u540C), \u516C\u5171\u5E8F\u5217\u7684\u8282\u70B9\u90FD\u89C6\u4E3A\u53EF\u590D\u7528</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span> oldFiber <span class="token operator">!==</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> newIdx <span class="token operator">&lt;</span> newChildren<span class="token punctuation">.</span>length<span class="token punctuation">;</span> newIdx<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u540E\u6587\u5206\u6790</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span>newIdx <span class="token operator">===</span> newChildren<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5982\u679CnewChildren\u5E8F\u5217\u88AB\u904D\u5386\u5B8C, \u90A3\u4E48oldFiber\u5E8F\u5217\u4E2D\u5269\u4F59\u8282\u70B9\u90FD\u89C6\u4E3A\u5220\u9664(\u6253\u4E0ADeletion\u6807\u8BB0)</span>
    <span class="token function">deleteRemainingChildren</span><span class="token punctuation">(</span>returnFiber<span class="token punctuation">,</span> oldFiber<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> resultingFirstChild<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span>oldFiber <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5982\u679ColdFiber\u5E8F\u5217\u88AB\u904D\u5386\u5B8C, \u90A3\u4E48newChildren\u5E8F\u5217\u4E2D\u5269\u4F59\u8282\u70B9\u90FD\u89C6\u4E3A\u65B0\u589E(\u6253\u4E0APlacement\u6807\u8BB0)</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span> newIdx <span class="token operator">&lt;</span> newChildren<span class="token punctuation">.</span>length<span class="token punctuation">;</span> newIdx<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u540E\u6587\u5206\u6790</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> resultingFirstChild<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// ==================\u5206\u5272\u7EBF==================</span>
  <span class="token keyword">const</span> existingChildren <span class="token operator">=</span> <span class="token function">mapRemainingChildren</span><span class="token punctuation">(</span>returnFiber<span class="token punctuation">,</span> oldFiber<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// 2. \u7B2C\u4E8C\u6B21\u5FAA\u73AF: \u904D\u5386\u5269\u4F59\u975E\u516C\u5171\u5E8F\u5217, \u4F18\u5148\u590D\u7528oldFiber\u5E8F\u5217\u4E2D\u7684\u8282\u70B9</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span> newIdx <span class="token operator">&lt;</span> newChildren<span class="token punctuation">.</span>length<span class="token punctuation">;</span> newIdx<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span>shouldTrackSideEffects<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// newChildren\u5DF2\u7ECF\u904D\u5386\u5B8C, \u90A3\u4E48oldFiber\u5E8F\u5217\u4E2D\u5269\u4F59\u8282\u70B9\u90FD\u89C6\u4E3A\u5220\u9664(\u6253\u4E0ADeletion\u6807\u8BB0)</span>
    existingChildren<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">child</span> <span class="token operator">=&gt;</span> <span class="token function">deleteChild</span><span class="token punctuation">(</span>returnFiber<span class="token punctuation">,</span> child<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> resultingFirstChild<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br></div></div><p><code>reconcileChildrenArray</code>\u51FD\u6570\u6E90\u7801\u770B\u4F3C\u5F88\u957F, \u68B3\u7406\u5176\u4E3B\u6746\u4E4B\u540E, \u5176\u5B9E\u975E\u5E38\u6E05\u6670.</p><p>\u901A\u8FC7\u5F62\u53C2, \u9996\u5148\u660E\u786E\u6BD4\u8F83\u5BF9\u8C61\u662F<code>currentFirstChild: Fiber | null</code>\u548C<code>newChildren: Array&lt;*&gt;</code>:</p><ul><li><code>currentFirstChild</code>: \u662F\u4E00\u4E2A<code>fiber</code>\u8282\u70B9, \u901A\u8FC7<code>fiber.sibling</code>\u53EF\u4EE5\u5C06\u5144\u5F1F\u8282\u70B9\u5168\u90E8\u904D\u5386\u51FA\u6765. \u6240\u4EE5\u53EF\u4EE5\u5C06<code>currentFirstChild</code>\u7406\u89E3\u4E3A\u94FE\u8868\u5934\u90E8, \u5B83\u4EE3\u8868\u4E00\u4E2A\u5E8F\u5217, \u6E90\u7801\u4E2D\u88AB\u8BB0\u4E3A<code>oldFiber</code>.</li><li><code>newChildren</code>: \u662F\u4E00\u4E2A\u6570\u7EC4, \u5176\u4E2D\u5305\u542B\u4E86\u82E5\u5E72\u4E2A<code>ReactElement</code>\u5BF9\u8C61. \u6240\u4EE5<code>newChildren</code>\u4E5F\u4EE3\u8868\u4E00\u4E2A\u5E8F\u5217.</li></ul><p>\u6240\u4EE5<code>reconcileChildrenArray</code>\u5B9E\u9645\u5C31\u662F 2 \u4E2A\u5E8F\u5217\u4E4B\u95F4\u7684\u6BD4\u8F83(<code>\u94FE\u8868oldFiber</code>\u548C<code>\u6570\u7EC4newChildren</code>), \u6700\u540E\u8FD4\u56DE\u5408\u7406\u7684<code>fiber</code>\u5E8F\u5217.</p><p>\u4E0A\u8FF0\u4EE3\u7801\u4E2D, \u4EE5\u6CE8\u91CA\u5206\u5272\u7EBF\u4E3A\u754C\u9650, \u6574\u4E2A\u6838\u5FC3\u903B\u8F91\u5206\u4E3A 2 \u6B65\u9AA4:</p><ol><li>\u7B2C\u4E00\u6B21\u5FAA\u73AF: \u904D\u5386\u6700\u957F<code>\u516C\u5171</code>\u5E8F\u5217(key \u76F8\u540C), \u516C\u5171\u5E8F\u5217\u7684\u8282\u70B9\u90FD\u89C6\u4E3A\u53EF\u590D\u7528 <ol><li>\u5982\u679C<code>newChildren\u5E8F\u5217</code>\u88AB\u904D\u5386\u5B8C, \u90A3\u4E48<code>oldFiber\u5E8F\u5217</code>\u4E2D\u5269\u4F59\u8282\u70B9\u90FD\u89C6\u4E3A\u5220\u9664(\u6253\u4E0A<code>Deletion</code>\u6807\u8BB0)</li><li>\u5982\u679C<code>oldFiber\u5E8F\u5217</code>\u88AB\u904D\u5386\u5B8C, \u90A3\u4E48<code>newChildren\u5E8F\u5217</code>\u4E2D\u5269\u4F59\u8282\u70B9\u90FD\u89C6\u4E3A\u65B0\u589E(\u6253\u4E0A<code>Placement</code>\u6807\u8BB0)</li></ol></li><li>\u7B2C\u4E8C\u6B21\u5FAA\u73AF: \u904D\u5386\u5269\u4F59<code>\u975E\u516C\u5171</code>\u5E8F\u5217, \u4F18\u5148\u590D\u7528 oldFiber \u5E8F\u5217\u4E2D\u7684\u8282\u70B9</li></ol><p>\u5047\u8BBE\u6709\u5982\u4E0B\u56FE\u6240\u793A 2 \u4E2A\u521D\u59CB\u5316\u5E8F\u5217:</p>`,8),un=["src"],kn=n("p",null,[s("\u63A5\u4E0B\u6765\u7B2C\u4E00\u6B21\u5FAA\u73AF, \u4F1A\u904D\u5386\u516C\u5171\u5E8F\u5217"),n("code",null,"A,B"),s(", \u751F\u6210\u7684 fiber \u8282\u70B9"),n("code",null,"fiber(A), fiber(B)"),s("\u53EF\u4EE5\u590D\u7528.")],-1),bn=["src"],dn=a("<p>\u6700\u540E\u7B2C\u4E8C\u6B21\u5FAA\u73AF, \u4F1A\u904D\u5386\u5269\u4F59\u5E8F\u5217<code>E,C,X,Y</code>:</p><ul><li>\u751F\u6210\u7684 fiber \u8282\u70B9<code>fiber(E), fiber(C)</code>\u53EF\u4EE5\u590D\u7528. \u5176\u4E2D<code>fiber(C)</code>\u8282\u70B9\u53D1\u751F\u4E86\u4F4D\u79FB(\u6253\u4E0A<code>Placement</code>\u6807\u8BB0).</li><li><code>fiber(X), fiber(Y)</code>\u662F\u65B0\u589E(\u6253\u4E0A<code>Placement</code>\u6807\u8BB0).</li><li>\u540C\u65F6<code>oldFiber</code>\u5E8F\u5217\u4E2D\u7684<code>fiber(D)</code>\u8282\u70B9\u786E\u5B9A\u88AB\u5220\u9664(\u6253\u4E0A<code>Deletion</code>\u6807\u8BB0).</li></ul>",2),mn=["src"],hn=a(`<p>\u6574\u4E2A\u4E3B\u6746\u903B\u8F91\u5C31\u4ECB\u7ECD\u5B8C\u4E86, \u63A5\u4E0B\u6765\u8D34\u4E0A\u5B8C\u6574\u6E90\u7801</p><blockquote><p>\u7B2C\u4E00\u6B21\u5FAA\u73AF</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// 1. \u7B2C\u4E00\u6B21\u5FAA\u73AF: \u904D\u5386\u6700\u957F\u516C\u5171\u5E8F\u5217(key\u76F8\u540C), \u516C\u5171\u5E8F\u5217\u7684\u8282\u70B9\u90FD\u89C6\u4E3A\u53EF\u590D\u7528</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span> oldFiber <span class="token operator">!==</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> newIdx <span class="token operator">&lt;</span> newChildren<span class="token punctuation">.</span>length<span class="token punctuation">;</span> newIdx<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>oldFiber<span class="token punctuation">.</span>index <span class="token operator">&gt;</span> newIdx<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    nextOldFiber <span class="token operator">=</span> oldFiber<span class="token punctuation">;</span>
    oldFiber <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    nextOldFiber <span class="token operator">=</span> oldFiber<span class="token punctuation">.</span>sibling<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// new\u69FD\u4F4D\u548Cold\u69FD\u4F4D\u8FDB\u884C\u6BD4\u8F83, \u5982\u679Ckey\u4E0D\u540C, \u8FD4\u56DEnull</span>
  <span class="token comment">// key\u76F8\u540C, \u6BD4\u8F83type\u662F\u5426\u4E00\u81F4. type\u4E00\u81F4\u5219\u6267\u884CuseFiber(update\u903B\u8F91), type\u4E0D\u4E00\u81F4\u5219\u8FD0\u884CcreateXXX(insert\u903B\u8F91)</span>
  <span class="token keyword">const</span> newFiber <span class="token operator">=</span> <span class="token function">updateSlot</span><span class="token punctuation">(</span>
    returnFiber<span class="token punctuation">,</span>
    oldFiber<span class="token punctuation">,</span>
    newChildren<span class="token punctuation">[</span>newIdx<span class="token punctuation">]</span><span class="token punctuation">,</span>
    lanes<span class="token punctuation">,</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span>newFiber <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5982\u679C\u8FD4\u56DEnull, \u8868\u660Ekey\u4E0D\u540C. \u65E0\u6CD5\u6EE1\u8DB3\u516C\u5171\u5E8F\u5217\u6761\u4EF6, \u9000\u51FA\u5FAA\u73AF</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>oldFiber <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      oldFiber <span class="token operator">=</span> nextOldFiber<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">break</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>shouldTrackSideEffects<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u82E5\u662F\u65B0\u589E\u8282\u70B9, \u5219\u7ED9\u8001\u8282\u70B9\u6253\u4E0ADeletion\u6807\u8BB0</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>oldFiber <span class="token operator">&amp;&amp;</span> newFiber<span class="token punctuation">.</span>alternate <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">deleteChild</span><span class="token punctuation">(</span>returnFiber<span class="token punctuation">,</span> oldFiber<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// lastPlacedIndex \u8BB0\u5F55\u88AB\u79FB\u52A8\u7684\u8282\u70B9\u7D22\u5F15</span>
  <span class="token comment">// \u5982\u679C\u5F53\u524D\u8282\u70B9\u53EF\u590D\u7528, \u5219\u8981\u5224\u65AD\u4F4D\u7F6E\u662F\u5426\u79FB\u52A8.</span>
  lastPlacedIndex <span class="token operator">=</span> <span class="token function">placeChild</span><span class="token punctuation">(</span>newFiber<span class="token punctuation">,</span> lastPlacedIndex<span class="token punctuation">,</span> newIdx<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// \u66F4\u65B0resultingFirstChild\u7ED3\u679C\u5E8F\u5217</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>previousNewFiber <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    resultingFirstChild <span class="token operator">=</span> newFiber<span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    previousNewFiber<span class="token punctuation">.</span>sibling <span class="token operator">=</span> newFiber<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  previousNewFiber <span class="token operator">=</span> newFiber<span class="token punctuation">;</span>
  oldFiber <span class="token operator">=</span> nextOldFiber<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br></div></div><blockquote><p>\u7B2C\u4E8C\u6B21\u5FAA\u73AF</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// 1. \u5C06\u7B2C\u4E00\u6B21\u5FAA\u73AF\u540E, oldFiber\u5269\u4F59\u5E8F\u5217\u52A0\u5165\u5230\u4E00\u4E2Amap\u4E2D. \u76EE\u7684\u662F\u4E3A\u4E86\u7B2C\u4E8C\u6B21\u5FAA\u73AF\u80FD\u987A\u5229\u7684\u627E\u5230\u53EF\u590D\u7528\u8282\u70B9</span>
<span class="token keyword">const</span> existingChildren <span class="token operator">=</span> <span class="token function">mapRemainingChildren</span><span class="token punctuation">(</span>returnFiber<span class="token punctuation">,</span> oldFiber<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 2. \u7B2C\u4E8C\u6B21\u5FAA\u73AF: \u904D\u5386\u5269\u4F59\u975E\u516C\u5171\u5E8F\u5217, \u4F18\u5148\u590D\u7528oldFiber\u5E8F\u5217\u4E2D\u7684\u8282\u70B9</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span> newIdx <span class="token operator">&lt;</span> newChildren<span class="token punctuation">.</span>length<span class="token punctuation">;</span> newIdx<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> newFiber <span class="token operator">=</span> <span class="token function">updateFromMap</span><span class="token punctuation">(</span>
    existingChildren<span class="token punctuation">,</span>
    returnFiber<span class="token punctuation">,</span>
    newIdx<span class="token punctuation">,</span>
    newChildren<span class="token punctuation">[</span>newIdx<span class="token punctuation">]</span><span class="token punctuation">,</span>
    lanes<span class="token punctuation">,</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>newFiber <span class="token operator">!==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>shouldTrackSideEffects<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>newFiber<span class="token punctuation">.</span>alternate <span class="token operator">!==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5982\u679CnewFiber\u662F\u901A\u8FC7\u590D\u7528\u521B\u5EFA\u7684, \u5219\u6E05\u7406map\u4E2D\u5BF9\u5E94\u7684\u8001\u8282\u70B9</span>
        existingChildren<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span>newFiber<span class="token punctuation">.</span>key <span class="token operator">===</span> <span class="token keyword">null</span> <span class="token operator">?</span> newIdx <span class="token operator">:</span> newFiber<span class="token punctuation">.</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    lastPlacedIndex <span class="token operator">=</span> <span class="token function">placeChild</span><span class="token punctuation">(</span>newFiber<span class="token punctuation">,</span> lastPlacedIndex<span class="token punctuation">,</span> newIdx<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u66F4\u65B0resultingFirstChild\u7ED3\u679C\u5E8F\u5217</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>previousNewFiber <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      resultingFirstChild <span class="token operator">=</span> newFiber<span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      previousNewFiber<span class="token punctuation">.</span>sibling <span class="token operator">=</span> newFiber<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    previousNewFiber <span class="token operator">=</span> newFiber<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br></div></div><h3 id="\u7ED3\u679C" tabindex="-1"><a class="header-anchor" href="#\u7ED3\u679C" aria-hidden="true">#</a> \u7ED3\u679C</h3>`,6),wn=s("\u65E0\u8BBA\u662F\u5355\u8282\u70B9\u8FD8\u662F\u53EF\u8FED\u4EE3\u8282\u70B9\u7684\u6BD4\u8F83, \u6700\u7EC8\u7684\u76EE\u7684\u90FD\u662F\u751F\u6210\u4E0B\u7EA7\u5B50\u8282\u70B9. \u5E76\u5728"),yn=n("code",null,"reconcilerChildren",-1),_n=s("\u8FC7\u7A0B\u4E2D, \u7ED9\u4E00\u4E9B\u6709\u526F\u4F5C\u7528\u7684\u8282\u70B9(\u65B0\u589E, \u5220\u9664, \u79FB\u52A8\u4F4D\u7F6E\u7B49)\u6253\u4E0A\u526F\u4F5C\u7528\u6807\u8BB0, \u7B49\u5F85 commit \u9636\u6BB5(\u53C2\u8003"),fn=s("fiber \u6811\u6E32\u67D3"),Fn=s(")\u7684\u5904\u7406."),gn=a('<h2 id="\u603B\u7ED3" tabindex="-1"><a class="header-anchor" href="#\u603B\u7ED3" aria-hidden="true">#</a> \u603B\u7ED3</h2><p>\u672C\u8282\u4ECB\u7ECD\u4E86 React \u6E90\u7801\u4E2D, <code>fiber\u6784\u9020\u5FAA\u73AF</code>\u9636\u6BB5\u7528\u4E8E\u751F\u6210\u4E0B\u7EA7\u5B50\u8282\u70B9\u7684<code>reconcilerChildren</code>\u51FD\u6570(\u51FD\u6570\u4E2D\u7684\u7B97\u6CD5\u88AB\u79F0\u4E3A\u8C03\u548C\u7B97\u6CD5), \u5E76\u6F14\u793A\u4E86<code>\u53EF\u8FED\u4EE3\u8282\u70B9\u6BD4\u8F83</code>\u7684\u56FE\u89E3\u793A\u4F8B. \u8BE5\u7B97\u6CD5\u5341\u5206\u5DE7\u5999, \u5176\u6838\u5FC3\u903B\u8F91\u628A<code>newChildren\u5E8F\u5217</code>\u5206\u4E3A 2 \u6B65\u904D\u5386, \u5148\u904D\u5386\u516C\u5171\u5E8F\u5217, \u518D\u904D\u5386\u975E\u516C\u5171\u90E8\u5206, \u540C\u65F6\u590D\u7528<code>oldFiber</code>\u5E8F\u5217\u4E2D\u7684\u8282\u70B9.</p>',2);function Cn(t,xn){const p=o("ExternalLinkIcon"),c=o("RouterLink");return l(),r(u,null,[d,m,n("p",null,[h,n("a",w,[y,e(p)]),_]),n("ol",null,[f,n("li",null,[F,g,C,n("a",x,[v,I,R,j,E,e(p)]),L,N,D,A,P,B,O,S,T])]),X,n("p",null,[q,n("a",V,[M,e(p)]),W]),$,n("p",null,[Y,n("a",z,[G,e(p)]),H]),J,n("p",null,[K,Q,U,Z,nn,n("a",sn,[an,en,e(p)]),pn,tn,on,cn,ln]),rn,n("img",{src:t.$withBase("/assets/react-illustration-series/before-traverse.png"),alt:"demo"},null,8,un),kn,n("img",{src:t.$withBase("/assets/react-illustration-series/traverse1.png"),alt:"demo"},null,8,bn),dn,n("img",{src:t.$withBase("/assets/react-illustration-series/traverse2.png"),alt:"demo"},null,8,mn),hn,n("p",null,[wn,yn,_n,e(c,{to:"/react-illustration-series/main/commit.html"},{default:i(()=>[fn]),_:1}),Fn]),gn],64)}var Rn=k(b,[["render",Cn]]);export{Rn as default};
