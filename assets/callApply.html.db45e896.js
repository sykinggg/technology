import{a as n}from"./app.ba47fc91.js";import{_ as s}from"./plugin-vue_export-helper.21dcd24c.js";const a={},p=n(`<h3 id="\u3010\u8FDB\u96363-3\u671F\u3011\u6DF1\u5EA6\u5E7F\u5EA6\u89E3\u6790-call-\u548C-apply-\u539F\u7406\u3001\u4F7F\u7528\u573A\u666F\u53CA\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#\u3010\u8FDB\u96363-3\u671F\u3011\u6DF1\u5EA6\u5E7F\u5EA6\u89E3\u6790-call-\u548C-apply-\u539F\u7406\u3001\u4F7F\u7528\u573A\u666F\u53CA\u5B9E\u73B0" aria-hidden="true">#</a> \u3010\u8FDB\u96363-3\u671F\u3011\u6DF1\u5EA6\u5E7F\u5EA6\u89E3\u6790 call \u548C apply \u539F\u7406\u3001\u4F7F\u7528\u573A\u666F\u53CA\u5B9E\u73B0</h3><h2 id="call-\u548C-apply-\u57FA\u672C\u6982\u5FF5" tabindex="-1"><a class="header-anchor" href="#call-\u548C-apply-\u57FA\u672C\u6982\u5FF5" aria-hidden="true">#</a> <strong>call() \u548C apply()\u57FA\u672C\u6982\u5FF5</strong></h2><hr><blockquote><p>call() \u65B9\u6CD5\u8C03\u7528\u4E00\u4E2A\u51FD\u6570, \u5176\u5177\u6709\u4E00\u4E2A\u6307\u5B9A\u7684 <code>this</code> \u503C\u548C\u5206\u522B\u5730\u63D0\u4F9B\u7684\u53C2\u6570(<code>\u53C2\u6570\u7684\u5217\u8868</code>)\u3002</p></blockquote><p><code>call()</code> \u548C <code>apply()</code>\u7684\u533A\u522B\u5728\u4E8E\uFF0C<code>call()</code>\u65B9\u6CD5\u63A5\u53D7\u7684\u662F<strong>\u82E5\u5E72\u4E2A\u53C2\u6570\u7684\u5217\u8868</strong>\uFF0C\u800C<code>apply()</code>\u65B9\u6CD5\u63A5\u53D7\u7684\u662F<strong>\u4E00\u4E2A\u5305\u542B\u591A\u4E2A\u53C2\u6570\u7684\u6570\u7EC4</strong></p><p>\u4E3E\u4E2A\u4F8B\u5B50\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">func</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">arg1<span class="token punctuation">,</span> arg2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
     <span class="token operator">...</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token function">func</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> arg1<span class="token punctuation">,</span> arg2<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u4F7F\u7528 call\uFF0C\u53C2\u6570\u5217\u8868</span>
<span class="token function">func</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>arg1<span class="token punctuation">,</span> arg2<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">// \u4F7F\u7528 apply\uFF0C\u53C2\u6570\u6570\u7EC4</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="\u4F7F\u7528\u573A\u666F" tabindex="-1"><a class="header-anchor" href="#\u4F7F\u7528\u573A\u666F" aria-hidden="true">#</a> <strong>\u4F7F\u7528\u573A\u666F</strong></h2><hr><p>\u4E0B\u9762\u5217\u4E3E\u4E00\u4E9B\u5E38\u7528\u7528\u6CD5\uFF1A</p><h2 id="_1\u3001\u5408\u5E76\u4E24\u4E2A\u6570\u7EC4" tabindex="-1"><a class="header-anchor" href="#_1\u3001\u5408\u5E76\u4E24\u4E2A\u6570\u7EC4" aria-hidden="true">#</a> <strong>1\u3001\u5408\u5E76\u4E24\u4E2A\u6570\u7EC4</strong></h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> vegetables <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;parsnip&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;potato&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> moreVegs <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;celery&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;beetroot&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token comment">// \u5C06\u7B2C\u4E8C\u4E2A\u6570\u7EC4\u878D\u5408\u8FDB\u7B2C\u4E00\u4E2A\u6570\u7EC4</span>
<span class="token comment">// \u76F8\u5F53\u4E8E vegetables.push(&#39;celery&#39;, &#39;beetroot&#39;);</span>
<span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>vegetables<span class="token punctuation">,</span> moreVegs<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 4</span>

vegetables<span class="token punctuation">;</span>
<span class="token comment">// [&#39;parsnip&#39;, &#39;potato&#39;, &#39;celery&#39;, &#39;beetroot&#39;]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>\u5F53\u7B2C\u4E8C\u4E2A\u6570\u7EC4(\u5982\u793A\u4F8B\u4E2D\u7684 <code>moreVegs</code> )\u592A\u5927\u65F6\u4E0D\u8981\u4F7F\u7528\u8FD9\u4E2A\u65B9\u6CD5\u6765\u5408\u5E76\u6570\u7EC4\uFF0C\u56E0\u4E3A<strong>\u4E00\u4E2A\u51FD\u6570\u80FD\u591F\u63A5\u53D7\u7684\u53C2\u6570\u4E2A\u6570\u662F\u6709\u9650\u5236</strong>\u3002\u4E0D\u540C\u7684\u5F15\u64CE\u6709\u4E0D\u540C\u7684\u9650\u5236\uFF0CJS\u6838\u5FC3\u9650\u5236\u5728 65535\uFF0C\u6709\u4E9B\u5F15\u64CE\u4F1A\u629B\u51FA\u5F02\u5E38\uFF0C\u6709\u4E9B\u4E0D\u629B\u51FA\u5F02\u5E38\u4F46\u4E22\u5931\u591A\u4F59\u53C2\u6570\u3002</p><p>\u5982\u4F55\u89E3\u51B3\u5462\uFF1F\u65B9\u6CD5\u5C31\u662F<strong>\u5C06\u53C2\u6570\u6570\u7EC4\u5207\u5757\u540E\u5FAA\u73AF\u4F20\u5165\u76EE\u6807\u65B9\u6CD5</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">concatOfArray</span><span class="token punctuation">(</span><span class="token parameter">arr1<span class="token punctuation">,</span> arr2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> <span class="token constant">QUANTUM</span> <span class="token operator">=</span> <span class="token number">32768</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> len <span class="token operator">=</span> arr2<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i <span class="token operator">+=</span> <span class="token constant">QUANTUM</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>
            arr1<span class="token punctuation">,</span> 
            arr2<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> Math<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token constant">QUANTUM</span><span class="token punctuation">,</span> len<span class="token punctuation">)</span> <span class="token punctuation">)</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> arr1<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u9A8C\u8BC1\u4EE3\u7801</span>
<span class="token keyword">var</span> arr1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> arr2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">1000000</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    arr2<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>arr1<span class="token punctuation">,</span> arr2<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Uncaught RangeError: Maximum call stack size exceeded</span>

<span class="token function">concatOfArray</span><span class="token punctuation">(</span>arr1<span class="token punctuation">,</span> arr2<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// (1000003) [-3, -2, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, ...]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><h2 id="_2\u3001\u83B7\u53D6\u6570\u7EC4\u4E2D\u7684\u6700\u5927\u503C\u548C\u6700\u5C0F\u503C" tabindex="-1"><a class="header-anchor" href="#_2\u3001\u83B7\u53D6\u6570\u7EC4\u4E2D\u7684\u6700\u5927\u503C\u548C\u6700\u5C0F\u503C" aria-hidden="true">#</a> <strong>2\u3001\u83B7\u53D6\u6570\u7EC4\u4E2D\u7684\u6700\u5927\u503C\u548C\u6700\u5C0F\u503C</strong></h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> numbers <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">458</span> <span class="token punctuation">,</span> <span class="token number">120</span> <span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">215</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> 
Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>Math<span class="token punctuation">,</span> numbers<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">//458    </span>
Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>Math<span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">458</span> <span class="token punctuation">,</span> <span class="token number">120</span> <span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">215</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//458</span>

<span class="token comment">// ES6</span>
Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>Math<span class="token punctuation">,</span> <span class="token operator">...</span>numbers<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 458</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>\u4E3A\u4EC0\u4E48\u8981\u8FD9\u4E48\u7528\u5462\uFF0C\u56E0\u4E3A\u6570\u7EC4 <code>numbers</code> \u672C\u8EAB\u6CA1\u6709 <code>max</code> \u65B9\u6CD5\uFF0C\u4F46\u662F <code>Math</code> \u6709\u5440\uFF0C\u6240\u4EE5\u8FD9\u91CC\u5C31\u662F\u501F\u52A9 <code>call / apply</code> \u4F7F\u7528 <code>Math.max</code> \u65B9\u6CD5\u3002</p><h2 id="_3\u3001\u9A8C\u8BC1\u662F\u5426\u662F\u6570\u7EC4" tabindex="-1"><a class="header-anchor" href="#_3\u3001\u9A8C\u8BC1\u662F\u5426\u662F\u6570\u7EC4" aria-hidden="true">#</a> <strong>3\u3001\u9A8C\u8BC1\u662F\u5426\u662F\u6570\u7EC4</strong></h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">isArray</span><span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span><span class="token punctuation">{</span> 
    <span class="token keyword">return</span> <span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">&#39;[object Array]&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">isArray</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// true</span>

<span class="token comment">// \u76F4\u63A5\u4F7F\u7528 toString()</span>
<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 	<span class="token comment">// &quot;1,2,3&quot;</span>
<span class="token string">&quot;123&quot;</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 		<span class="token comment">// &quot;123&quot;</span>
<span class="token number">123.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 		<span class="token comment">// SyntaxError: Invalid or unexpected token</span>
<span class="token function">Number</span><span class="token punctuation">(</span><span class="token number">123</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;123&quot;</span>
<span class="token function">Object</span><span class="token punctuation">(</span><span class="token number">123</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;123&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>\u53EF\u4EE5\u901A\u8FC7<code>toString()</code> \u6765\u83B7\u53D6\u6BCF\u4E2A\u5BF9\u8C61\u7684\u7C7B\u578B\uFF0C\u4F46\u662F\u4E0D\u540C\u5BF9\u8C61\u7684 <code>toString()</code>\u6709\u4E0D\u540C\u7684\u5B9E\u73B0\uFF0C\u6240\u4EE5\u901A\u8FC7 <code>Object.prototype.toString()</code> \u6765\u68C0\u6D4B\uFF0C\u9700\u8981\u4EE5 <code>call() / apply()</code> \u7684\u5F62\u5F0F\u6765\u8C03\u7528\uFF0C\u4F20\u9012\u8981\u68C0\u67E5\u7684\u5BF9\u8C61\u4F5C\u4E3A\u7B2C\u4E00\u4E2A\u53C2\u6570\u3002</p><p>\u53E6\u4E00\u4E2A<strong>\u9A8C\u8BC1\u662F\u5426\u662F\u6570\u7EC4</strong>\u7684\u65B9\u6CD5</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> toStr <span class="token operator">=</span> <span class="token class-name">Function</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>toString<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function">isArray</span><span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span><span class="token punctuation">{</span> 
    <span class="token keyword">return</span> <span class="token function">toStr</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">&#39;[object Array]&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">isArray</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// true</span>

<span class="token comment">// \u4F7F\u7528\u6539\u9020\u540E\u7684 toStr</span>
<span class="token function">toStr</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 	<span class="token comment">// &quot;[object Array]&quot;</span>
<span class="token function">toStr</span><span class="token punctuation">(</span><span class="token string">&quot;123&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 		<span class="token comment">// &quot;[object String]&quot;</span>
<span class="token function">toStr</span><span class="token punctuation">(</span><span class="token number">123</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 		<span class="token comment">// &quot;[object Number]&quot;</span>
<span class="token function">toStr</span><span class="token punctuation">(</span><span class="token function">Object</span><span class="token punctuation">(</span><span class="token number">123</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;[object Number]&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>\u4E0A\u9762\u65B9\u6CD5\u9996\u5148\u4F7F\u7528 <code>Function.prototype.call</code>\u51FD\u6570\u6307\u5B9A\u4E00\u4E2A <code>this</code> \u503C\uFF0C\u7136\u540E <code>.bind</code> \u8FD4\u56DE\u4E00\u4E2A\u65B0\u7684\u51FD\u6570\uFF0C\u59CB\u7EC8\u5C06 <code>Object.prototype.toString</code> \u8BBE\u7F6E\u4E3A\u4F20\u5165\u53C2\u6570\u3002\u5176\u5B9E\u7B49\u4EF7\u4E8E <code>Object.prototype.toString.call() </code>\u3002</p><p>\u8FD9\u91CC\u6709\u4E00\u4E2A<strong>\u524D\u63D0</strong>\u662F<code>toString()</code>\u65B9\u6CD5<strong>\u6CA1\u6709\u88AB\u8986\u76D6</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">toString</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">isArray</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="_4\u3001\u7C7B\u6570\u7EC4\u5BF9\u8C61-array-like-object-\u4F7F\u7528\u6570\u7EC4\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#_4\u3001\u7C7B\u6570\u7EC4\u5BF9\u8C61-array-like-object-\u4F7F\u7528\u6570\u7EC4\u65B9\u6CD5" aria-hidden="true">#</a> <strong>4\u3001\u7C7B\u6570\u7EC4\u5BF9\u8C61\uFF08Array-like Object\uFF09\u4F7F\u7528\u6570\u7EC4\u65B9\u6CD5</strong></h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> domNodes <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span><span class="token string">&quot;*&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
domNodes<span class="token punctuation">.</span><span class="token function">unshift</span><span class="token punctuation">(</span><span class="token string">&quot;h1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// TypeError: domNodes.unshift is not a function</span>

<span class="token keyword">var</span> domNodeArrays <span class="token operator">=</span> <span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>domNodes<span class="token punctuation">)</span><span class="token punctuation">;</span>
domNodeArrays<span class="token punctuation">.</span><span class="token function">unshift</span><span class="token punctuation">(</span><span class="token string">&quot;h1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 505 \u4E0D\u540C\u73AF\u5883\u4E0B\u6570\u636E\u4E0D\u540C</span>
<span class="token comment">// (505) [&quot;h1&quot;, html.gr__hujiang_com, head, meta, ...] </span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>\u7C7B\u6570\u7EC4\u5BF9\u8C61\u6709\u4E0B\u9762\u4E24\u4E2A\u7279\u6027</p><ul><li><p>1\u3001\u5177\u6709\uFF1A\u6307\u5411\u5BF9\u8C61\u5143\u7D20\u7684\u6570\u5B57\u7D22\u5F15\u4E0B\u6807\u548C <code>length</code> \u5C5E\u6027</p></li><li><p>2\u3001\u4E0D\u5177\u6709\uFF1A\u6BD4\u5982 <code>push</code> \u3001<code>shift</code>\u3001 <code>forEach</code> \u4EE5\u53CA <code>indexOf</code> \u7B49\u6570\u7EC4\u5BF9\u8C61\u5177\u6709\u7684\u65B9\u6CD5</p></li></ul><p>\u8981\u8BF4\u660E\u7684\u662F\uFF0C\u7C7B\u6570\u7EC4\u5BF9\u8C61\u662F\u4E00\u4E2A<strong>\u5BF9\u8C61</strong>\u3002JS\u4E2D\u5B58\u5728\u4E00\u79CD\u540D\u4E3A<strong>\u7C7B\u6570\u7EC4</strong>\u7684\u5BF9\u8C61\u7ED3\u6784\uFF0C\u6BD4\u5982 <code>arguments</code> \u5BF9\u8C61\uFF0C\u8FD8\u6709DOM API \u8FD4\u56DE\u7684 <code>NodeList</code> \u5BF9\u8C61\u90FD\u5C5E\u4E8E\u7C7B\u6570\u7EC4\u5BF9\u8C61\uFF0C\u7C7B\u6570\u7EC4\u5BF9\u8C61\u4E0D\u80FD\u4F7F\u7528 <code>push/pop/shift/unshift</code> \u7B49\u6570\u7EC4\u65B9\u6CD5\uFF0C\u901A\u8FC7 <code>Array.prototype.slice.call</code> \u8F6C\u6362\u6210\u771F\u6B63\u7684\u6570\u7EC4\uFF0C\u5C31\u53EF\u4EE5\u4F7F\u7528 <code>Array</code>\u4E0B\u6240\u6709\u65B9\u6CD5\u3002</p><p><strong>\u7C7B\u6570\u7EC4\u5BF9\u8C61\u8F6C\u6570\u7EC4</strong>\u7684\u5176\u4ED6\u65B9\u6CD5\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u4E0A\u9762\u4EE3\u7801\u7B49\u540C\u4E8E</span>
<span class="token keyword">var</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>arguments<span class="token punctuation">)</span>\uFF1B

<span class="token constant">ES6</span><span class="token operator">:</span>
<span class="token keyword">let</span> arr <span class="token operator">=</span> Array<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>arguments<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>arguments<span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p><code>Array.from()</code> \u53EF\u4EE5\u5C06\u4E24\u7C7B\u5BF9\u8C61\u8F6C\u4E3A\u771F\u6B63\u7684\u6570\u7EC4\uFF1A<strong>\u7C7B\u6570\u7EC4</strong>\u5BF9\u8C61\u548C<strong>\u53EF\u904D\u5386</strong>\uFF08iterable\uFF09\u5BF9\u8C61\uFF08\u5305\u62ECES6\u65B0\u589E\u7684\u6570\u636E\u7ED3\u6784 Set \u548C Map\uFF09\u3002</p><p><strong>PS\u6269\u5C55\u4E00</strong>\uFF1A\u4E3A\u4EC0\u4E48\u901A\u8FC7 <code>Array.prototype.slice.call()</code> \u5C31\u53EF\u4EE5\u628A\u7C7B\u6570\u7EC4\u5BF9\u8C61\u8F6C\u6362\u6210\u6570\u7EC4\uFF1F</p><p>\u5176\u5B9E\u5F88\u7B80\u5355\uFF0C<code>slice</code> \u5C06 <code>Array-like</code> \u5BF9\u8C61\u901A\u8FC7\u4E0B\u6807\u64CD\u4F5C\u653E\u8FDB\u4E86\u65B0\u7684 Array \u91CC\u9762\u3002</p><p>\u4E0B\u9762\u4EE3\u7801\u662F MDN \u5173\u4E8E <code>slice</code> \u7684Polyfill</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">slice</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">begin<span class="token punctuation">,</span> end</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    end <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> end <span class="token operator">!==</span> <span class="token string">&#39;undefined&#39;</span><span class="token punctuation">)</span> <span class="token operator">?</span> end <span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span>

        <span class="token comment">// For array like object we handle it ourselves.</span>
        <span class="token keyword">var</span> i<span class="token punctuation">,</span> cloned <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
            size<span class="token punctuation">,</span> len <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span>

        <span class="token comment">// Handle negative value for &quot;begin&quot;</span>
        <span class="token keyword">var</span> start <span class="token operator">=</span> begin <span class="token operator">||</span> <span class="token number">0</span><span class="token punctuation">;</span>
        start <span class="token operator">=</span> <span class="token punctuation">(</span>start <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">?</span> start <span class="token operator">:</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> len <span class="token operator">+</span> start<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// Handle negative value for &quot;end&quot;</span>
        <span class="token keyword">var</span> upTo <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> end <span class="token operator">==</span> <span class="token string">&#39;number&#39;</span><span class="token punctuation">)</span> <span class="token operator">?</span> Math<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>end<span class="token punctuation">,</span> len<span class="token punctuation">)</span> <span class="token operator">:</span> len<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>end <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            upTo <span class="token operator">=</span> len <span class="token operator">+</span> end<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// Actual expected size of the slice</span>
        size <span class="token operator">=</span> upTo <span class="token operator">-</span> start<span class="token punctuation">;</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>size <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            cloned <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span>size<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>charAt<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> size<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    cloned<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>start <span class="token operator">+</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> size<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    cloned<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">[</span>start <span class="token operator">+</span> i<span class="token punctuation">]</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">return</span> cloned<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br></div></div><p><strong>PS\u6269\u5C55\u4E8C</strong>\uFF1A\u901A\u8FC7 <code>Array.prototype.slice.call()</code> \u5C31\u8DB3\u591F\u4E86\u5417\uFF1F\u5B58\u5728\u4EC0\u4E48\u95EE\u9898\uFF1F</p><p>\u5728<strong>\u4F4E\u7248\u672CIE\u4E0B\u4E0D\u652F\u6301</strong>\u901A\u8FC7<code>Array.prototype.slice.call(args)</code>\u5C06\u7C7B\u6570\u7EC4\u5BF9\u8C61\u8F6C\u6362\u6210\u6570\u7EC4\uFF0C\u56E0\u4E3A\u4F4E\u7248\u672CIE\uFF08IE &lt; 9\uFF09\u4E0B\u7684DOM\u5BF9\u8C61\u662F\u4EE5 <code>com</code> \u5BF9\u8C61\u7684\u5F62\u5F0F\u5B9E\u73B0\u7684\uFF0Cjs\u5BF9\u8C61\u4E0E <code>com</code> \u5BF9\u8C61\u4E0D\u80FD\u8FDB\u884C\u8F6C\u6362\u3002</p><p>\u517C\u5BB9\u5199\u6CD5\u5982\u4E0B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">toArray</span><span class="token punctuation">(</span><span class="token parameter">nodes</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token comment">// works in every browser except IE</span>
        <span class="token keyword">return</span> <span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>nodes<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// Fails in IE &lt; 9</span>
        <span class="token keyword">var</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
            length <span class="token operator">=</span> nodes<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token comment">// arr.push(nodes[i]); // \u4E24\u79CD\u90FD\u53EF\u4EE5</span>
            arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> nodes<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> arr<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p><strong>PS \u6269\u5C55\u4E09</strong>\uFF1A\u4E3A\u4EC0\u4E48\u8981\u6709\u7C7B\u6570\u7EC4\u5BF9\u8C61\u5462\uFF1F\u6216\u8005\u8BF4\u7C7B\u6570\u7EC4\u5BF9\u8C61\u662F\u4E3A\u4EC0\u4E48\u89E3\u51B3\u4EC0\u4E48\u95EE\u9898\u624D\u51FA\u73B0\u7684\uFF1F</p><blockquote><p>JavaScript\u7C7B\u578B\u5316\u6570\u7EC4\u662F\u4E00\u79CD\u7C7B\u4F3C\u6570\u7EC4\u7684\u5BF9\u8C61\uFF0C\u5E76\u63D0\u4F9B\u4E86\u4E00\u79CD\u7528\u4E8E\u8BBF\u95EE\u539F\u59CB\u4E8C\u8FDB\u5236\u6570\u636E\u7684\u673A\u5236\u3002 Array\u5B58\u50A8\u7684\u5BF9\u8C61\u80FD\u52A8\u6001\u589E\u591A\u548C\u51CF\u5C11\uFF0C\u5E76\u4E14\u53EF\u4EE5\u5B58\u50A8\u4EFB\u4F55JavaScript\u503C\u3002JavaScript\u5F15\u64CE\u4F1A\u505A\u4E00\u4E9B\u5185\u90E8\u4F18\u5316\uFF0C\u4EE5\u4FBF\u5BF9\u6570\u7EC4\u7684\u64CD\u4F5C\u53EF\u4EE5\u5F88\u5FEB\u3002\u7136\u800C\uFF0C\u968F\u7740Web\u5E94\u7528\u7A0B\u5E8F\u53D8\u5F97\u8D8A\u6765\u8D8A\u5F3A\u5927\uFF0C\u5C24\u5176\u4E00\u4E9B\u65B0\u589E\u52A0\u7684\u529F\u80FD\u4F8B\u5982\uFF1A\u97F3\u9891\u89C6\u9891\u7F16\u8F91\uFF0C\u8BBF\u95EEWebSockets\u7684\u539F\u59CB\u6570\u636E\u7B49\uFF0C\u5F88\u660E\u663E\u6709\u4E9B\u65F6\u5019\u5982\u679C\u4F7F\u7528JavaScript\u4EE3\u7801\u53EF\u4EE5\u5FEB\u901F\u65B9\u4FBF\u5730\u901A\u8FC7\u7C7B\u578B\u5316\u6570\u7EC4\u6765\u64CD\u4F5C\u539F\u59CB\u7684\u4E8C\u8FDB\u5236\u6570\u636E\uFF0C\u8FD9\u5C06\u4F1A\u975E\u5E38\u6709\u5E2E\u52A9\u3002</p></blockquote><p><strong>\u4E00\u53E5\u8BDD\u5C31\u662F\uFF0C\u53EF\u4EE5\u66F4\u5FEB\u7684\u64CD\u4F5C\u590D\u6742\u6570\u636E\u3002</strong></p><h2 id="_5\u3001\u8C03\u7528\u7236\u6784\u9020\u51FD\u6570\u5B9E\u73B0\u7EE7\u627F" tabindex="-1"><a class="header-anchor" href="#_5\u3001\u8C03\u7528\u7236\u6784\u9020\u51FD\u6570\u5B9E\u73B0\u7EE7\u627F" aria-hidden="true">#</a> <strong>5\u3001\u8C03\u7528\u7236\u6784\u9020\u51FD\u6570\u5B9E\u73B0\u7EE7\u627F</strong></h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span>  <span class="token function">SuperType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>color<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&quot;red&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;green&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;blue&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span>  <span class="token function">SubType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token comment">// \u6838\u5FC3\u4EE3\u7801\uFF0C\u7EE7\u627F\u81EASuperType</span>
    <span class="token function">SuperType</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">var</span> instance1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SubType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
instance1<span class="token punctuation">.</span>color<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">&quot;black&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>instance1<span class="token punctuation">.</span>color<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// [&quot;red&quot;, &quot;green&quot;, &quot;blue&quot;, &quot;black&quot;]</span>

<span class="token keyword">var</span> instance2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SubType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>instance2<span class="token punctuation">.</span>color<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// [&quot;red&quot;, &quot;green&quot;, &quot;blue&quot;]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><p>\u5728\u5B50\u6784\u9020\u51FD\u6570\u4E2D\uFF0C\u901A\u8FC7\u8C03\u7528\u7236\u6784\u9020\u51FD\u6570\u7684<code>call</code>\u65B9\u6CD5\u6765\u5B9E\u73B0\u7EE7\u627F\uFF0C\u4E8E\u662F<code>SubType</code>\u7684\u6BCF\u4E2A\u5B9E\u4F8B\u90FD\u4F1A\u5C06<code>SuperType</code> \u4E2D\u7684\u5C5E\u6027\u590D\u5236\u4E00\u4EFD\u3002</p><p>\u7F3A\u70B9\uFF1A</p><ul><li><p>\u53EA\u80FD\u7EE7\u627F\u7236\u7C7B\u7684<strong>\u5B9E\u4F8B</strong>\u5C5E\u6027\u548C\u65B9\u6CD5\uFF0C\u4E0D\u80FD\u7EE7\u627F\u539F\u578B\u5C5E\u6027/\u65B9\u6CD5</p></li><li><p>\u65E0\u6CD5\u5B9E\u73B0\u590D\u7528\uFF0C\u6BCF\u4E2A\u5B50\u7C7B\u90FD\u6709\u7236\u7C7B\u5B9E\u4F8B\u51FD\u6570\u7684\u526F\u672C\uFF0C\u5F71\u54CD\u6027\u80FD</p></li></ul><h2 id="call\u7684\u6A21\u62DF\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#call\u7684\u6A21\u62DF\u5B9E\u73B0" aria-hidden="true">#</a> <strong>call\u7684\u6A21\u62DF\u5B9E\u73B0</strong></h2><blockquote><p>\u4EE5\u4E0B\u5185\u5BB9\u53C2\u8003\u81EA JavaScript\u6DF1\u5165\u4E4Bcall\u548Capply\u7684\u6A21\u62DF\u5B9E\u73B0</p></blockquote><p>\u5148\u770B\u4E0B\u9762\u4E00\u4E2A\u7B80\u5355\u7684\u4F8B\u5B50</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> value <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> foo <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token number">1</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">bar</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">bar</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>foo<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>\u901A\u8FC7\u4E0A\u9762\u7684\u4ECB\u7ECD\u77E5\u9053\uFF0C<code>call()</code>\u4E3B\u8981\u6709\u4EE5\u4E0B\u4E24\u70B9</p><ul><li><p>1\u3001<code>call()</code>\u6539\u53D8\u4E86this\u7684\u6307\u5411</p></li><li><p>2\u3001\u51FD\u6570 <code>bar</code> \u6267\u884C\u4E86</p></li></ul><h2 id="\u6A21\u62DF\u5B9E\u73B0\u7B2C\u4E00\u6B65" tabindex="-1"><a class="header-anchor" href="#\u6A21\u62DF\u5B9E\u73B0\u7B2C\u4E00\u6B65" aria-hidden="true">#</a> <strong>\u6A21\u62DF\u5B9E\u73B0\u7B2C\u4E00\u6B65</strong></h2><p>\u5982\u679C\u5728\u8C03\u7528<code>call()</code>\u7684\u65F6\u5019\u628A\u51FD\u6570 <code>bar()</code>\u6DFB\u52A0\u5230<code>foo()</code>\u5BF9\u8C61\u4E2D\uFF0C\u5373\u5982\u4E0B</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> foo <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
    <span class="token function-variable function">bar</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

foo<span class="token punctuation">.</span><span class="token function">bar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>\u8FD9\u4E2A\u6539\u52A8\u5C31\u53EF\u4EE5\u5B9E\u73B0\uFF1A\u6539\u53D8\u4E86this\u7684\u6307\u5411\u5E76\u4E14\u6267\u884C\u4E86\u51FD\u6570<code>bar</code>\u3002</p><p>\u4F46\u662F\u8FD9\u6837\u5199\u662F\u6709\u526F\u4F5C\u7528\u7684\uFF0C\u5373\u7ED9<code>foo</code>\u989D\u5916\u6DFB\u52A0\u4E86\u4E00\u4E2A\u5C5E\u6027\uFF0C\u600E\u4E48\u89E3\u51B3\u5462\uFF1F</p><p>\u89E3\u51B3\u65B9\u6CD5\u5F88\u7B80\u5355\uFF0C\u7528 <code>delete</code> \u5220\u6389\u5C31\u597D\u4E86\u3002</p><p>\u6240\u4EE5\u53EA\u8981\u5B9E\u73B0\u4E0B\u97623\u6B65\u5C31\u53EF\u4EE5\u6A21\u62DF\u5B9E\u73B0\u4E86\u3002</p><ul><li><p>1\u3001\u5C06\u51FD\u6570\u8BBE\u7F6E\u4E3A\u5BF9\u8C61\u7684\u5C5E\u6027\uFF1A<code>foo.fn = bar</code></p></li><li><p>2\u3001\u6267\u884C\u51FD\u6570\uFF1A<code>foo.fn()</code></p></li><li><p>3\u3001\u5220\u9664\u51FD\u6570\uFF1A<code>delete foo.fn</code></p></li></ul><p>\u4EE3\u7801\u5B9E\u73B0\u5982\u4E0B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u7B2C\u4E00\u7248</span>
<span class="token class-name">Function</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">call2</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">context</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u9996\u5148\u8981\u83B7\u53D6\u8C03\u7528call\u7684\u51FD\u6570\uFF0C\u7528this\u53EF\u4EE5\u83B7\u53D6</span>
    context<span class="token punctuation">.</span>fn <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span> 		<span class="token comment">// foo.fn = bar</span>
    context<span class="token punctuation">.</span><span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>			<span class="token comment">// foo.fn()</span>
    <span class="token keyword">delete</span> context<span class="token punctuation">.</span>fn<span class="token punctuation">;</span>		<span class="token comment">// delete foo.fn</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u6D4B\u8BD5\u4E00\u4E0B</span>
<span class="token keyword">var</span> foo <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token number">1</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">bar</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

bar<span class="token punctuation">.</span><span class="token function">call2</span><span class="token punctuation">(</span>foo<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><h2 id="\u6A21\u62DF\u5B9E\u73B0\u7B2C\u4E8C\u6B65" tabindex="-1"><a class="header-anchor" href="#\u6A21\u62DF\u5B9E\u73B0\u7B2C\u4E8C\u6B65" aria-hidden="true">#</a> <strong>\u6A21\u62DF\u5B9E\u73B0\u7B2C\u4E8C\u6B65</strong></h2><p>\u7B2C\u4E00\u7248\u6709\u4E00\u4E2A\u95EE\u9898\uFF0C\u90A3\u5C31\u662F\u51FD\u6570 <code>bar</code> \u4E0D\u80FD\u63A5\u6536\u53C2\u6570\uFF0C\u6240\u4EE5\u53EF\u4EE5\u4ECE <code>arguments</code>\u4E2D\u83B7\u53D6\u53C2\u6570\uFF0C\u53D6\u51FA\u7B2C\u4E8C\u4E2A\u5230\u6700\u540E\u4E00\u4E2A\u53C2\u6570\u653E\u5230\u6570\u7EC4\u4E2D\uFF0C\u4E3A\u4EC0\u4E48\u8981\u629B\u5F03\u7B2C\u4E00\u4E2A\u53C2\u6570\u5462\uFF0C\u56E0\u4E3A\u7B2C\u4E00\u4E2A\u53C2\u6570\u662F <code>this</code>\u3002</p><p>\u7C7B\u6570\u7EC4\u5BF9\u8C61\u8F6C\u6210\u6570\u7EC4\u7684\u65B9\u6CD5\u4E0A\u9762\u5DF2\u7ECF\u4ECB\u7ECD\u8FC7\u4E86\uFF0C\u4F46\u662F\u8FD9\u8FB9\u4F7F\u7528ES3\u7684\u65B9\u6848\u6765\u505A\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> args <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> len <span class="token operator">=</span> arguments<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    args<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">&#39;arguments[&#39;</span> <span class="token operator">+</span> i <span class="token operator">+</span> <span class="token string">&#39;]&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>\u53C2\u6570\u6570\u7EC4\u641E\u5B9A\u4E86\uFF0C\u63A5\u4E0B\u6765\u8981\u505A\u7684\u5C31\u662F\u6267\u884C\u51FD\u6570 <code>context.fn()</code>\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>context<span class="token punctuation">.</span><span class="token function">fn</span><span class="token punctuation">(</span> args<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;,&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u8FD9\u6837\u4E0D\u884C</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>\u4E0A\u9762\u76F4\u63A5\u8C03\u7528\u80AF\u5B9A\u4E0D\u884C\uFF0C<code>args.join(&#39;,&#39;)</code>\u4F1A\u8FD4\u56DE\u4E00\u4E2A\u5B57\u7B26\u4E32\uFF0C\u5E76\u4E0D\u4F1A\u6267\u884C\u3002</p><p>\u8FD9\u8FB9\u91C7\u7528 <code>eval</code>\u65B9\u6CD5\u6765\u5B9E\u73B0\uFF0C\u62FC\u6210\u4E00\u4E2A\u51FD\u6570\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">eval</span><span class="token punctuation">(</span><span class="token string">&#39;context.fn(&#39;</span> <span class="token operator">+</span> args <span class="token operator">+</span><span class="token string">&#39;)&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D<code>args</code> \u4F1A\u81EA\u52A8\u8C03\u7528 <code>args.toString()</code> \u65B9\u6CD5\uFF0C\u56E0\u4E3A<code>&#39;context.fn(&#39; + args +&#39;)&#39;</code>\u672C\u8D28\u4E0A\u662F\u5B57\u7B26\u4E32\u62FC\u63A5\uFF0C\u4F1A\u81EA\u52A8\u8C03\u7528<code>toString()</code>\u65B9\u6CD5\uFF0C\u5982\u4E0B\u4EE3\u7801\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> args <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;a1&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;b2&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;c3&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// [&quot;a1&quot;, &quot;b2&quot;, &quot;c3&quot;]</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>args<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// a1,b2,c3</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span> <span class="token operator">+</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// a1,b2,c3</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>\u6240\u4EE5\u8BF4\u7B2C\u4E8C\u4E2A\u7248\u672C\u5C31\u5B9E\u73B0\u4E86\uFF0C\u4EE3\u7801\u5982\u4E0B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u7B2C\u4E8C\u7248</span>
<span class="token class-name">Function</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">call2</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">context</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    context<span class="token punctuation">.</span>fn <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> args <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> len <span class="token operator">=</span> arguments<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        args<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">&#39;arguments[&#39;</span> <span class="token operator">+</span> i <span class="token operator">+</span> <span class="token string">&#39;]&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token function">eval</span><span class="token punctuation">(</span><span class="token string">&#39;context.fn(&#39;</span> <span class="token operator">+</span> args <span class="token operator">+</span><span class="token string">&#39;)&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">delete</span> context<span class="token punctuation">.</span>fn<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u6D4B\u8BD5\u4E00\u4E0B</span>
<span class="token keyword">var</span> foo <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token number">1</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">bar</span><span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span> age</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>age<span class="token punctuation">)</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

bar<span class="token punctuation">.</span><span class="token function">call2</span><span class="token punctuation">(</span>foo<span class="token punctuation">,</span> <span class="token string">&#39;kevin&#39;</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token comment">// kevin</span>
<span class="token comment">// 18</span>
<span class="token comment">// 1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div><h2 id="\u6A21\u62DF\u5B9E\u73B0\u7B2C\u4E09\u6B65" tabindex="-1"><a class="header-anchor" href="#\u6A21\u62DF\u5B9E\u73B0\u7B2C\u4E09\u6B65" aria-hidden="true">#</a> <strong>\u6A21\u62DF\u5B9E\u73B0\u7B2C\u4E09\u6B65</strong></h2><p>\u8FD8\u67092\u4E2A\u7EC6\u8282\u9700\u8981\u6CE8\u610F\uFF1A</p><ul><li><p>1\u3001this \u53C2\u6570\u53EF\u4EE5\u4F20 <code>null</code> \u6216\u8005 <code>undefined</code>\uFF0C\u6B64\u65F6 this \u6307\u5411 window</p></li><li><p>2\u3001this \u53C2\u6570\u53EF\u4EE5\u4F20\u57FA\u672C\u7C7B\u578B\u6570\u636E\uFF0C\u539F\u751F\u7684 call \u4F1A\u81EA\u52A8\u7528 Object() \u8F6C\u6362</p></li><li><p>3\u3001\u51FD\u6570\u662F\u53EF\u4EE5\u6709\u8FD4\u56DE\u503C\u7684</p></li></ul><p>\u5B9E\u73B0\u4E0A\u9762\u7684\u4E09\u70B9\u5F88\u7B80\u5355\uFF0C\u4EE3\u7801\u5982\u4E0B</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u7B2C\u4E09\u7248</span>
<span class="token class-name">Function</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">call2</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">context</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    context <span class="token operator">=</span> context <span class="token operator">?</span> <span class="token function">Object</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span> <span class="token operator">:</span> window<span class="token punctuation">;</span> <span class="token comment">// \u5B9E\u73B0\u7EC6\u8282 1 \u548C 2</span>
    context<span class="token punctuation">.</span>fn <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>

    <span class="token keyword">var</span> args <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> len <span class="token operator">=</span> arguments<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        args<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">&#39;arguments[&#39;</span> <span class="token operator">+</span> i <span class="token operator">+</span> <span class="token string">&#39;]&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">var</span> result <span class="token operator">=</span> <span class="token function">eval</span><span class="token punctuation">(</span><span class="token string">&#39;context.fn(&#39;</span> <span class="token operator">+</span> args <span class="token operator">+</span><span class="token string">&#39;)&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">delete</span> context<span class="token punctuation">.</span>fn
    <span class="token keyword">return</span> result<span class="token punctuation">;</span> <span class="token comment">// \u5B9E\u73B0\u7EC6\u8282 2</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u6D4B\u8BD5\u4E00\u4E0B</span>
<span class="token keyword">var</span> value <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token number">1</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">bar</span><span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span> age</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>value<span class="token punctuation">,</span>
        <span class="token literal-property property">name</span><span class="token operator">:</span> name<span class="token punctuation">,</span>
        <span class="token literal-property property">age</span><span class="token operator">:</span> age
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

bar<span class="token punctuation">.</span><span class="token function">call2</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 2</span>
foo<span class="token punctuation">.</span><span class="token function">call2</span><span class="token punctuation">(</span><span class="token number">123</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Number {123, fn: \u0192}</span>

bar<span class="token punctuation">.</span><span class="token function">call2</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> <span class="token string">&#39;kevin&#39;</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 1</span>
<span class="token comment">// {</span>
<span class="token comment">//    value: 1,</span>
<span class="token comment">//    name: &#39;kevin&#39;,</span>
<span class="token comment">//    age: 18</span>
<span class="token comment">// }</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br></div></div><h2 id="call\u548Capply\u6A21\u62DF\u5B9E\u73B0\u6C47\u603B" tabindex="-1"><a class="header-anchor" href="#call\u548Capply\u6A21\u62DF\u5B9E\u73B0\u6C47\u603B" aria-hidden="true">#</a> <strong>call\u548Capply\u6A21\u62DF\u5B9E\u73B0\u6C47\u603B</strong></h2><p><strong>call\u7684\u6A21\u62DF\u5B9E\u73B0</strong></p><p>ES3\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token class-name">Function</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">call</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">context</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    context <span class="token operator">=</span> context <span class="token operator">?</span> <span class="token function">Object</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span> <span class="token operator">:</span> window<span class="token punctuation">;</span> 
    context<span class="token punctuation">.</span>fn <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>

    <span class="token keyword">var</span> args <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> len <span class="token operator">=</span> arguments<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        args<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">&#39;arguments[&#39;</span> <span class="token operator">+</span> i <span class="token operator">+</span> <span class="token string">&#39;]&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">var</span> result <span class="token operator">=</span> <span class="token function">eval</span><span class="token punctuation">(</span><span class="token string">&#39;context.fn(&#39;</span> <span class="token operator">+</span> args <span class="token operator">+</span><span class="token string">&#39;)&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">delete</span> context<span class="token punctuation">.</span>fn
    <span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>ES6\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token class-name">Function</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">call</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">context</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    context <span class="token operator">=</span> context <span class="token operator">?</span> <span class="token function">Object</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span> <span class="token operator">:</span> window<span class="token punctuation">;</span> 
    context<span class="token punctuation">.</span>fn <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>

    <span class="token keyword">let</span> args <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>arguments<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> result <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token function">fn</span><span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">delete</span> context<span class="token punctuation">.</span>fn
    <span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p><strong>apply\u7684\u6A21\u62DF\u5B9E\u73B0</strong></p><p>ES3\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token class-name">Function</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">apply</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">context<span class="token punctuation">,</span> arr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    context <span class="token operator">=</span> context <span class="token operator">?</span> <span class="token function">Object</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span> <span class="token operator">:</span> window<span class="token punctuation">;</span> 
    context<span class="token punctuation">.</span>fn <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>

    <span class="token keyword">var</span> result<span class="token punctuation">;</span>
    <span class="token comment">// \u5224\u65AD\u662F\u5426\u5B58\u5728\u7B2C\u4E8C\u4E2A\u53C2\u6570</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>arr<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        result <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">var</span> args <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> len <span class="token operator">=</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            args<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">&#39;arr[&#39;</span> <span class="token operator">+</span> i <span class="token operator">+</span> <span class="token string">&#39;]&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        result <span class="token operator">=</span> <span class="token function">eval</span><span class="token punctuation">(</span><span class="token string">&#39;context.fn(&#39;</span> <span class="token operator">+</span> args <span class="token operator">+</span> <span class="token string">&#39;)&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">delete</span> context<span class="token punctuation">.</span>fn
    <span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><p>ES6\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token class-name">Function</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">apply</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">context<span class="token punctuation">,</span> arr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    context <span class="token operator">=</span> context <span class="token operator">?</span> <span class="token function">Object</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span> <span class="token operator">:</span> window<span class="token punctuation">;</span> 
    context<span class="token punctuation">.</span>fn <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
  
    <span class="token keyword">let</span> result<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>arr<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        result <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        result <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token function">fn</span><span class="token punctuation">(</span><span class="token operator">...</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
      
    <span class="token keyword">delete</span> context<span class="token punctuation">.</span>fn
    <span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h2 id="\u601D\u8003\u9898" tabindex="-1"><a class="header-anchor" href="#\u601D\u8003\u9898" aria-hidden="true">#</a> <strong>\u601D\u8003\u9898</strong></h2><p><code>call</code> \u548C <code>apply</code> \u7684\u6A21\u62DF\u5B9E\u73B0\u6709\u6CA1\u6709\u95EE\u9898\uFF1F\u6B22\u8FCE\u601D\u8003\u8BC4\u8BBA\u3002</p>`,97);function t(e,o){return p}var u=s(a,[["render",t]]);export{u as default};
