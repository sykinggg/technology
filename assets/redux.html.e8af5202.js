import{a as n}from"./app.b05da4ec.js";import{_ as s}from"./plugin-vue_export-helper.21dcd24c.js";const a={},t=n(`<h1 id="redux-\u6E90\u7801\u89E3\u8BFB" tabindex="-1"><a class="header-anchor" href="#redux-\u6E90\u7801\u89E3\u8BFB" aria-hidden="true">#</a> redux \u6E90\u7801\u89E3\u8BFB</h1><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u9996\u5148\u628A\u591A\u4E2A reducer \u901A\u8FC7 combineReducers \u7EC4\u5408\u5728\u4E00\u8D77</span>
<span class="token keyword">const</span> appReducer <span class="token operator">=</span> <span class="token function">combineReducers</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
	<span class="token literal-property property">user</span><span class="token operator">:</span> UserReducer<span class="token punctuation">,</span>
	<span class="token literal-property property">goods</span><span class="token operator">:</span> GoodsReducer<span class="token punctuation">,</span>
	<span class="token literal-property property">order</span><span class="token operator">:</span> OrdersReducer<span class="token punctuation">,</span>
	<span class="token literal-property property">chat</span><span class="token operator">:</span> ChatReducer
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u7136\u540E\u5C06 appReducer \u4F20\u5165 createStore\uFF0C\u5E76\u4E14\u901A\u8FC7 applyMiddleware \u4F7F\u7528\u4E86\u4E2D\u95F4\u4EF6 thunkMiddleware</span>
<span class="token comment">// replaceReducer \u5B9E\u73B0\u70ED\u66F4\u65B0\u66FF\u6362</span>
<span class="token comment">// \u7136\u540E\u5728\u9700\u8981\u7684\u5730\u65B9\u53D1\u8D77 dispatch(action) \u5F15\u8D77 state \u6539\u53D8</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">configureStore</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token function">createStore</span><span class="token punctuation">(</span>
		rootReducer<span class="token punctuation">,</span>
		<span class="token function">compose</span><span class="token punctuation">(</span>
			<span class="token function">applyMiddleware</span><span class="token punctuation">(</span>thunkMiddleware<span class="token punctuation">)</span><span class="token punctuation">,</span>
			window<span class="token punctuation">.</span>devToolsExtension <span class="token operator">?</span> window<span class="token punctuation">.</span><span class="token function">devToolsExtension</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token parameter">f</span> <span class="token operator">=&gt;</span> f
		<span class="token punctuation">)</span>
	<span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token keyword">if</span> <span class="token punctuation">(</span>module<span class="token punctuation">.</span>hot<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		module<span class="token punctuation">.</span>hot<span class="token punctuation">.</span><span class="token function">accept</span><span class="token punctuation">(</span><span class="token string">&quot;../reducers&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
			<span class="token keyword">const</span> nextRootReducer <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;../reducers/index&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			store<span class="token punctuation">.</span><span class="token function">replaceReducer</span><span class="token punctuation">(</span>nextRootReducer<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">return</span> store<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br></div></div><p>\u4ECB\u7ECD\u5B8C\u4E86\u4F7F\u7528\u6B65\u9AA4\uFF0C\u63A5\u4E0B\u6765\u8FDB\u5165\u6B63\u9898\u3002</p><h2 id="\u6E90\u7801\u89E3\u6790" tabindex="-1"><a class="header-anchor" href="#\u6E90\u7801\u89E3\u6790" aria-hidden="true">#</a> \u6E90\u7801\u89E3\u6790</h2><p>\u9996\u5148\u8BA9\u6765\u770B\u4E0B <code>combineReducers</code> \u51FD\u6570</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u4F20\u5165\u4E00\u4E2A object</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">combineReducers</span><span class="token punctuation">(</span><span class="token parameter">reducers</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
 <span class="token comment">// \u83B7\u53D6\u8BE5 Object \u7684 key \u503C</span>
	<span class="token keyword">const</span> reducerKeys <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>reducers<span class="token punctuation">)</span>
	<span class="token comment">// \u8FC7\u6EE4\u540E\u7684 reducers</span>
	<span class="token keyword">const</span> finalReducers <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
	<span class="token comment">// \u83B7\u53D6\u6BCF\u4E00\u4E2A key \u5BF9\u5E94\u7684 value</span>
	<span class="token comment">// \u5728\u5F00\u53D1\u73AF\u5883\u4E0B\u5224\u65AD\u503C\u662F\u5426\u4E3A undefined</span>
	<span class="token comment">// \u7136\u540E\u5C06\u503C\u7C7B\u578B\u662F\u51FD\u6570\u7684\u503C\u653E\u5165 finalReducers</span>
	<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> reducerKeys<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">const</span> key <span class="token operator">=</span> reducerKeys<span class="token punctuation">[</span>i<span class="token punctuation">]</span>

		<span class="token keyword">if</span> <span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">!==</span> <span class="token string">&#39;production&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> reducers<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token string">&#39;undefined&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token function">warning</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">No reducer provided for key &quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>key<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>

		<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> reducers<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			finalReducers<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> reducers<span class="token punctuation">[</span>key<span class="token punctuation">]</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
	<span class="token comment">// \u62FF\u5230\u8FC7\u6EE4\u540E\u7684 reducers \u7684 key \u503C</span>
	<span class="token keyword">const</span> finalReducerKeys <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>finalReducers<span class="token punctuation">)</span>
	
	<span class="token comment">// \u5728\u5F00\u53D1\u73AF\u5883\u4E0B\u5224\u65AD\uFF0C\u4FDD\u5B58\u4E0D\u671F\u671B key \u7684\u7F13\u5B58\u7528\u4EE5\u4E0B\u9762\u505A\u8B66\u544A  </span>
	<span class="token keyword">let</span> unexpectedKeyCache
	<span class="token keyword">if</span> <span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">!==</span> <span class="token string">&#39;production&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		unexpectedKeyCache <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
		
	<span class="token keyword">let</span> shapeAssertionError
	<span class="token keyword">try</span> <span class="token punctuation">{</span>
	<span class="token comment">// \u8BE5\u51FD\u6570\u89E3\u6790\u5728\u4E0B\u9762</span>
		<span class="token function">assertReducerShape</span><span class="token punctuation">(</span>finalReducers<span class="token punctuation">)</span>
	<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		shapeAssertionError <span class="token operator">=</span> e
	<span class="token punctuation">}</span>
<span class="token comment">// combineReducers \u51FD\u6570\u8FD4\u56DE\u4E00\u4E2A\u51FD\u6570\uFF0C\u4E5F\u5C31\u662F\u5408\u5E76\u540E\u7684 reducer \u51FD\u6570</span>
<span class="token comment">// \u8BE5\u51FD\u6570\u8FD4\u56DE\u603B\u7684 state</span>
<span class="token comment">// \u5E76\u4E14\u4F60\u4E5F\u53EF\u4EE5\u53D1\u73B0\u8FD9\u91CC\u4F7F\u7528\u4E86\u95ED\u5305\uFF0C\u51FD\u6570\u91CC\u9762\u4F7F\u7528\u5230\u4E86\u5916\u9762\u7684\u4E00\u4E9B\u5C5E\u6027</span>
	<span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token function">combination</span><span class="token punctuation">(</span><span class="token parameter">state <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> action</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>shapeAssertionError<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">throw</span> shapeAssertionError
		<span class="token punctuation">}</span>
		<span class="token comment">// \u8BE5\u51FD\u6570\u89E3\u6790\u5728\u4E0B\u9762</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">!==</span> <span class="token string">&#39;production&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">const</span> warningMessage <span class="token operator">=</span> <span class="token function">getUnexpectedStateShapeWarningMessage</span><span class="token punctuation">(</span>
				state<span class="token punctuation">,</span>
				finalReducers<span class="token punctuation">,</span>
				action<span class="token punctuation">,</span>
				unexpectedKeyCache
			<span class="token punctuation">)</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>warningMessage<span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token function">warning</span><span class="token punctuation">(</span>warningMessage<span class="token punctuation">)</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
		<span class="token comment">// state \u662F\u5426\u6539\u53D8</span>
		<span class="token keyword">let</span> hasChanged <span class="token operator">=</span> <span class="token boolean">false</span>
		<span class="token comment">// \u6539\u53D8\u540E\u7684 state</span>
		<span class="token keyword">const</span> nextState <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
		<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> finalReducerKeys<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token comment">// \u62FF\u5230\u76F8\u5E94\u7684 key</span>
			<span class="token keyword">const</span> key <span class="token operator">=</span> finalReducerKeys<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
			<span class="token comment">// \u83B7\u5F97 key \u5BF9\u5E94\u7684 reducer \u51FD\u6570</span>
			<span class="token keyword">const</span> reducer <span class="token operator">=</span> finalReducers<span class="token punctuation">[</span>key<span class="token punctuation">]</span>
			<span class="token comment">// state \u6811\u4E0B\u7684 key \u662F\u4E0E finalReducers \u4E0B\u7684 key \u76F8\u540C\u7684</span>
			<span class="token comment">// \u6240\u4EE5\u4F60\u5728 combineReducers \u4E2D\u4F20\u5165\u7684\u53C2\u6570\u7684 key \u5373\u4EE3\u8868\u4E86 \u5404\u4E2A reducer \u4E5F\u4EE3\u8868\u4E86\u5404\u4E2A state</span>
			<span class="token keyword">const</span> previousStateForKey <span class="token operator">=</span> state<span class="token punctuation">[</span>key<span class="token punctuation">]</span>
			<span class="token comment">// \u7136\u540E\u6267\u884C reducer \u51FD\u6570\u83B7\u5F97\u8BE5 key \u503C\u5BF9\u5E94\u7684 state</span>
			<span class="token keyword">const</span> nextStateForKey <span class="token operator">=</span> <span class="token function">reducer</span><span class="token punctuation">(</span>previousStateForKey<span class="token punctuation">,</span> action<span class="token punctuation">)</span>
			<span class="token comment">// \u5224\u65AD state \u7684\u503C\uFF0Cundefined \u7684\u8BDD\u5C31\u62A5\u9519</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> nextStateForKey <span class="token operator">===</span> <span class="token string">&#39;undefined&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token keyword">const</span> errorMessage <span class="token operator">=</span> <span class="token function">getUndefinedStateErrorMessage</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> action<span class="token punctuation">)</span>
				<span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span>errorMessage<span class="token punctuation">)</span>
			<span class="token punctuation">}</span>
			<span class="token comment">// \u7136\u540E\u5C06 value \u585E\u8FDB\u53BB</span>
			nextState<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> nextStateForKey
			<span class="token comment">// \u5982\u679C state \u6539\u53D8</span>
			hasChanged <span class="token operator">=</span> hasChanged <span class="token operator">||</span> nextStateForKey <span class="token operator">!==</span> previousStateForKey
		<span class="token punctuation">}</span>
		<span class="token comment">// state \u53EA\u8981\u6539\u53D8\u8FC7\uFF0C\u5C31\u8FD4\u56DE\u65B0\u7684 state</span>
		<span class="token keyword">return</span> hasChanged <span class="token operator">?</span> nextState <span class="token operator">:</span> state
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br></div></div><p><code>combineReducers</code> \u51FD\u6570\u603B\u7684\u6765\u8BF4\u5F88\u7B80\u5355\uFF0C\u603B\u7ED3\u6765\u8BF4\u5C31\u662F\u63A5\u6536\u4E00\u4E2A\u5BF9\u8C61\uFF0C\u5C06\u53C2\u6570\u8FC7\u6EE4\u540E\u8FD4\u56DE\u4E00\u4E2A\u51FD\u6570\u3002\u8BE5\u51FD\u6570\u91CC\u6709\u4E00\u4E2A\u8FC7\u6EE4\u53C2\u6570\u540E\u7684\u5BF9\u8C61 finalReducers\uFF0C\u904D\u5386\u8BE5\u5BF9\u8C61\uFF0C\u7136\u540E\u6267\u884C\u5BF9\u8C61\u4E2D\u7684\u6BCF\u4E00\u4E2A reducer \u51FD\u6570\uFF0C\u6700\u540E\u5C06\u65B0\u7684 state \u8FD4\u56DE\u3002</p><p>\u63A5\u4E0B\u6765\u8BA9\u6765\u770B\u770B combinrReducers \u4E2D\u7528\u5230\u7684\u4E24\u4E2A\u51FD\u6570</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u8FD9\u662F\u6267\u884C\u7684\u7B2C\u4E00\u4E2A\u7528\u4E8E\u629B\u9519\u7684\u51FD\u6570</span>
<span class="token keyword">function</span> <span class="token function">assertReducerShape</span><span class="token punctuation">(</span><span class="token parameter">reducers</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token comment">// \u5C06 combineReducers \u4E2D\u7684\u53C2\u6570\u904D\u5386</span>
	Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>reducers<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">key</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
		<span class="token keyword">const</span> reducer <span class="token operator">=</span> reducers<span class="token punctuation">[</span>key<span class="token punctuation">]</span>
		<span class="token comment">// \u7ED9\u4ED6\u4F20\u5165\u4E00\u4E2A action</span>
		<span class="token keyword">const</span> initialState <span class="token operator">=</span> <span class="token function">reducer</span><span class="token punctuation">(</span><span class="token keyword">undefined</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">type</span><span class="token operator">:</span> ActionTypes<span class="token punctuation">.</span><span class="token constant">INIT</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
		<span class="token comment">// \u5982\u679C\u5F97\u5230\u7684 state \u4E3A undefined \u5C31\u629B\u9519</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> initialState <span class="token operator">===</span> <span class="token string">&#39;undefined&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span>
				<span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Reducer &quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>key<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot; returned undefined during initialization. </span><span class="token template-punctuation string">\`</span></span> <span class="token operator">+</span>
					<span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">If the state passed to the reducer is undefined, you must </span><span class="token template-punctuation string">\`</span></span> <span class="token operator">+</span>
					<span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">explicitly return the initial state. The initial state may </span><span class="token template-punctuation string">\`</span></span> <span class="token operator">+</span>
					<span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">not be undefined. If you don&#39;t want to set a value for this reducer, </span><span class="token template-punctuation string">\`</span></span> <span class="token operator">+</span>
					<span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">you can use null instead of undefined.</span><span class="token template-punctuation string">\`</span></span>
			<span class="token punctuation">)</span>
		<span class="token punctuation">}</span>
		<span class="token comment">// \u518D\u8FC7\u6EE4\u4E00\u6B21\uFF0C\u8003\u8651\u5230\u4E07\u4E00\u4F60\u5728 reducer \u4E2D\u7ED9 ActionTypes.INIT \u8FD4\u56DE\u4E86\u503C</span>
		<span class="token comment">// \u4F20\u5165\u4E00\u4E2A\u968F\u673A\u7684 action \u5224\u65AD\u503C\u662F\u5426\u4E3A undefined</span>
		<span class="token keyword">const</span> type <span class="token operator">=</span>
			<span class="token string">&#39;@@redux/PROBE_UNKNOWN_ACTION_&#39;</span> <span class="token operator">+</span>
			Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
				<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token number">36</span><span class="token punctuation">)</span>
				<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span>
				<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
				<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;.&#39;</span><span class="token punctuation">)</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> <span class="token function">reducer</span><span class="token punctuation">(</span><span class="token keyword">undefined</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> type <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">&#39;undefined&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span>
				<span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Reducer &quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>key<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot; returned undefined when probed with a random type. </span><span class="token template-punctuation string">\`</span></span> <span class="token operator">+</span>
					<span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Don&#39;t try to handle </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>
						ActionTypes<span class="token punctuation">.</span><span class="token constant">INIT</span>
					<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> or other actions in &quot;redux/*&quot; </span><span class="token template-punctuation string">\`</span></span> <span class="token operator">+</span>
					<span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">namespace. They are considered private. Instead, you must return the </span><span class="token template-punctuation string">\`</span></span> <span class="token operator">+</span>
					<span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">current state for any unknown actions, unless it is undefined, </span><span class="token template-punctuation string">\`</span></span> <span class="token operator">+</span>
					<span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">in which case you must return the initial state, regardless of the </span><span class="token template-punctuation string">\`</span></span> <span class="token operator">+</span>
					<span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">action type. The initial state may not be undefined, but can be null.</span><span class="token template-punctuation string">\`</span></span>
			<span class="token punctuation">)</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">getUnexpectedStateShapeWarningMessage</span><span class="token punctuation">(</span>
	<span class="token parameter">inputState<span class="token punctuation">,</span>
	reducers<span class="token punctuation">,</span>
	action<span class="token punctuation">,</span>
	unexpectedKeyCache</span>
<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token comment">// \u8FD9\u91CC\u7684 reducers \u5DF2\u7ECF\u662F finalReducers</span>
	<span class="token keyword">const</span> reducerKeys <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>reducers<span class="token punctuation">)</span>
	<span class="token keyword">const</span> argumentName <span class="token operator">=</span>
		action <span class="token operator">&amp;&amp;</span> action<span class="token punctuation">.</span>type <span class="token operator">===</span> ActionTypes<span class="token punctuation">.</span><span class="token constant">INIT</span>
			<span class="token operator">?</span> <span class="token string">&#39;preloadedState argument passed to createStore&#39;</span>
			<span class="token operator">:</span> <span class="token string">&#39;previous state received by the reducer&#39;</span>
	
	<span class="token comment">// \u5982\u679C finalReducers \u4E3A\u7A7A</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>reducerKeys<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> <span class="token punctuation">(</span>
			<span class="token string">&#39;Store does not have a valid reducer. Make sure the argument passed &#39;</span> <span class="token operator">+</span>
			<span class="token string">&#39;to combineReducers is an object whose values are reducers.&#39;</span>
		<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
		<span class="token comment">// \u5982\u679C\u4F60\u4F20\u5165\u7684 state \u4E0D\u662F\u5BF9\u8C61</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isPlainObject</span><span class="token punctuation">(</span>inputState<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> <span class="token punctuation">(</span>
			<span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">The </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>argumentName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> has unexpected type of &quot;</span><span class="token template-punctuation string">\`</span></span> <span class="token operator">+</span>
			<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>inputState<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\s([a-z|A-Z]+)</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span>
			<span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&quot;. Expected argument to be an object with the following </span><span class="token template-punctuation string">\`</span></span> <span class="token operator">+</span>
			<span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">keys: &quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>reducerKeys<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;&quot;, &quot;&#39;</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;</span><span class="token template-punctuation string">\`</span></span>
		<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
		<span class="token comment">// \u5C06\u53C2\u5165\u7684 state \u4E8E finalReducers \u4E0B\u7684 key \u505A\u6BD4\u8F83\uFF0C\u8FC7\u6EE4\u51FA\u591A\u4F59\u7684 key</span>
	<span class="token keyword">const</span> unexpectedKeys <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>inputState<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>
		<span class="token parameter">key</span> <span class="token operator">=&gt;</span> <span class="token operator">!</span>reducers<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>unexpectedKeyCache<span class="token punctuation">[</span>key<span class="token punctuation">]</span>
	<span class="token punctuation">)</span>

	unexpectedKeys<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">key</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
		unexpectedKeyCache<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span>

	<span class="token keyword">if</span> <span class="token punctuation">(</span>action <span class="token operator">&amp;&amp;</span> action<span class="token punctuation">.</span>type <span class="token operator">===</span> ActionTypes<span class="token punctuation">.</span><span class="token constant">REPLACE</span><span class="token punctuation">)</span> <span class="token keyword">return</span>

<span class="token comment">// \u5982\u679C unexpectedKeys \u6709\u503C\u7684\u8BDD</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>unexpectedKeys<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> <span class="token punctuation">(</span>
			<span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Unexpected </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>unexpectedKeys<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">1</span> <span class="token operator">?</span> <span class="token string">&#39;keys&#39;</span> <span class="token operator">:</span> <span class="token string">&#39;key&#39;</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> </span><span class="token template-punctuation string">\`</span></span> <span class="token operator">+</span>
			<span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>unexpectedKeys<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;&quot;, &quot;&#39;</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot; found in </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>argumentName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">. </span><span class="token template-punctuation string">\`</span></span> <span class="token operator">+</span>
			<span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Expected to find one of the known reducer keys instead: </span><span class="token template-punctuation string">\`</span></span> <span class="token operator">+</span>
			<span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>reducerKeys<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;&quot;, &quot;&#39;</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;. Unexpected keys will be ignored.</span><span class="token template-punctuation string">\`</span></span>
		<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br></div></div><p>\u63A5\u4E0B\u6765\u8BA9\u5148\u6765\u770B\u770B <code>compose</code> \u51FD\u6570</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u8FD9\u4E2A\u51FD\u6570\u8BBE\u8BA1\u7684\u5F88\u5DE7\u5999\uFF0C\u901A\u8FC7\u4F20\u5165\u51FD\u6570\u5F15\u7528\u7684\u65B9\u5F0F\u8BA9\u5B8C\u6210\u591A\u4E2A\u51FD\u6570\u7684\u5D4C\u5957\u4F7F\u7528\uFF0C\u672F\u8BED\u53EB\u505A\u9AD8\u9636\u51FD\u6570</span>
<span class="token comment">// \u901A\u8FC7\u4F7F\u7528 reduce \u51FD\u6570\u505A\u5230\u4ECE\u53F3\u81F3\u5DE6\u8C03\u7528\u51FD\u6570</span>
<span class="token comment">// \u5BF9\u4E8E\u4E0A\u9762\u9879\u76EE\u4E2D\u7684\u4F8B\u5B50</span>
<span class="token function">compose</span><span class="token punctuation">(</span>
		<span class="token function">applyMiddleware</span><span class="token punctuation">(</span>thunkMiddleware<span class="token punctuation">)</span><span class="token punctuation">,</span>
		window<span class="token punctuation">.</span>devToolsExtension <span class="token operator">?</span> window<span class="token punctuation">.</span><span class="token function">devToolsExtension</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token parameter">f</span> <span class="token operator">=&gt;</span> f
<span class="token punctuation">)</span> 
<span class="token comment">// \u7ECF\u8FC7 compose \u51FD\u6570\u53D8\u6210\u4E86 applyMiddleware(thunkMiddleware)(window.devToolsExtension()())</span>
<span class="token comment">// \u6240\u4EE5\u5728\u627E\u4E0D\u5230 window.devToolsExtension \u65F6\u4F60\u5E94\u8BE5\u8FD4\u56DE\u4E00\u4E2A\u51FD\u6570</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">compose</span><span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>funcs</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>funcs<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> <span class="token parameter">arg</span> <span class="token operator">=&gt;</span> arg
	<span class="token punctuation">}</span>

	<span class="token keyword">if</span> <span class="token punctuation">(</span>funcs<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> funcs<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">return</span> funcs<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>args</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">a</span><span class="token punctuation">(</span><span class="token function">b</span><span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><p>\u7136\u540E\u6765\u89E3\u6790 <code>createStore</code> \u51FD\u6570\u7684\u90E8\u5206\u4EE3\u7801</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">createStore</span><span class="token punctuation">(</span><span class="token parameter">reducer<span class="token punctuation">,</span> preloadedState<span class="token punctuation">,</span> enhancer</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token comment">// \u4E00\u822C preloadedState \u7528\u7684\u5C11\uFF0C\u5224\u65AD\u7C7B\u578B\uFF0C\u5982\u679C\u7B2C\u4E8C\u4E2A\u53C2\u6570\u662F\u51FD\u6570\u4E14\u6CA1\u6709\u7B2C\u4E09\u4E2A\u53C2\u6570\uFF0C\u5C31\u8C03\u6362\u4F4D\u7F6E</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> preloadedState <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">typeof</span> enhancer <span class="token operator">===</span> <span class="token string">&#39;undefined&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		enhancer <span class="token operator">=</span> preloadedState
		preloadedState <span class="token operator">=</span> <span class="token keyword">undefined</span>
	<span class="token punctuation">}</span>
	<span class="token comment">// \u5224\u65AD enhancer \u662F\u5426\u662F\u51FD\u6570</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> enhancer <span class="token operator">!==</span> <span class="token string">&#39;undefined&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> enhancer <span class="token operator">!==</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&#39;Expected the enhancer to be a function.&#39;</span><span class="token punctuation">)</span>
		<span class="token punctuation">}</span>
		<span class="token comment">// \u7C7B\u578B\u6CA1\u9519\u7684\u8BDD\uFF0C\u5148\u6267\u884C enhancer\uFF0C\u7136\u540E\u518D\u6267\u884C createStore \u51FD\u6570</span>
		<span class="token keyword">return</span> <span class="token function">enhancer</span><span class="token punctuation">(</span>createStore<span class="token punctuation">)</span><span class="token punctuation">(</span>reducer<span class="token punctuation">,</span> preloadedState<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
	<span class="token comment">// \u5224\u65AD reducer \u662F\u5426\u662F\u51FD\u6570</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> reducer <span class="token operator">!==</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&#39;Expected the reducer to be a function.&#39;</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
	<span class="token comment">// \u5F53\u524D reducer</span>
	<span class="token keyword">let</span> currentReducer <span class="token operator">=</span> reducer
	<span class="token comment">// \u5F53\u524D\u72B6\u6001</span>
	<span class="token keyword">let</span> currentState <span class="token operator">=</span> preloadedState
	<span class="token comment">// \u5F53\u524D\u76D1\u542C\u51FD\u6570\u6570\u7EC4</span>
	<span class="token keyword">let</span> currentListeners <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
	<span class="token comment">// \u8FD9\u662F\u4E00\u4E2A\u5F88\u91CD\u8981\u7684\u8BBE\u8BA1\uFF0C\u4E3A\u7684\u5C31\u662F\u6BCF\u6B21\u5728\u904D\u5386\u76D1\u542C\u5668\u7684\u65F6\u5019\u4FDD\u8BC1 currentListeners \u6570\u7EC4\u4E0D\u53D8</span>
	<span class="token comment">// \u53EF\u4EE5\u8003\u8651\u4E0B\u53EA\u5B58\u5728 currentListeners \u7684\u60C5\u51B5\uFF0C\u5982\u679C\u6211\u5728\u67D0\u4E2A subscribe \u4E2D\u518D\u6B21\u6267\u884C subscribe</span>
	<span class="token comment">// \u6216\u8005 unsubscribe\uFF0C\u8FD9\u6837\u4F1A\u5BFC\u81F4\u5F53\u524D\u7684 currentListeners \u6570\u7EC4\u5927\u5C0F\u53D1\u751F\u6539\u53D8\uFF0C\u4ECE\u800C\u53EF\u80FD\u5BFC\u81F4</span>
	<span class="token comment">// \u7D22\u5F15\u51FA\u9519</span>
	<span class="token keyword">let</span> nextListeners <span class="token operator">=</span> currentListeners
	<span class="token comment">// reducer \u662F\u5426\u6B63\u5728\u6267\u884C</span>
	<span class="token keyword">let</span> isDispatching <span class="token operator">=</span> <span class="token boolean">false</span>
	<span class="token comment">// \u5982\u679C currentListeners \u548C nextListeners \u76F8\u540C\uFF0C\u5C31\u8D4B\u503C\u56DE\u53BB</span>
	<span class="token keyword">function</span> <span class="token function">ensureCanMutateNextListeners</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>nextListeners <span class="token operator">===</span> currentListeners<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			nextListeners <span class="token operator">=</span> currentListeners<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
	<span class="token comment">// ......</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br></div></div><p>\u63A5\u4E0B\u6765\u5148\u6765\u4ECB\u7ECD <code>applyMiddleware</code> \u51FD\u6570</p><p>\u5728\u8FD9\u4E4B\u524D\u6211\u9700\u8981\u5148\u6765\u4ECB\u7ECD\u4E00\u4E0B\u51FD\u6570\u67EF\u91CC\u5316\uFF0C\u67EF\u91CC\u5316\u662F\u4E00\u79CD\u5C06\u4F7F\u7528\u591A\u4E2A\u53C2\u6570\u7684\u4E00\u4E2A\u51FD\u6570\u8F6C\u6362\u6210\u4E00\u7CFB\u5217\u4F7F\u7528\u4E00\u4E2A\u53C2\u6570\u7684\u51FD\u6570\u7684\u6280\u672F\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span>b</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> a <span class="token operator">+</span> b <span class="token punctuation">}</span>   
<span class="token function">add</span><span class="token punctuation">(</span><span class="token parameter"><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token number">3</span>
<span class="token comment">// \u5BF9\u4E8E\u4EE5\u4E0A\u51FD\u6570\u5982\u679C\u4F7F\u7528\u67EF\u91CC\u5316\u53EF\u4EE5\u8FD9\u6837\u6539\u9020</span>
<span class="token keyword">function</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token parameter">a</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> <span class="token parameter">b</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
				<span class="token keyword">return</span> a <span class="token operator">+</span> b
		<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token function">add</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token parameter"><span class="token number">2</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token number">3</span>
<span class="token comment">// \u4F60\u53EF\u4EE5\u8FD9\u6837\u7406\u89E3\u51FD\u6570\u67EF\u91CC\u5316\uFF0C\u901A\u8FC7\u95ED\u5305\u4FDD\u5B58\u4E86\u5916\u90E8\u7684\u4E00\u4E2A\u53D8\u91CF\uFF0C\u7136\u540E\u8FD4\u56DE\u4E00\u4E2A\u63A5\u6536\u53C2\u6570\u7684\u51FD\u6570\uFF0C\u5728\u8BE5\u51FD\u6570\u4E2D\u4F7F\u7528\u4E86\u4FDD\u5B58\u7684\u53D8\u91CF\uFF0C\u7136\u540E\u518D\u8FD4\u56DE\u503C\u3002</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u8FD9\u4E2A\u51FD\u6570\u5E94\u8BE5\u662F\u6574\u4E2A\u6E90\u7801\u4E2D\u6700\u96BE\u7406\u89E3\u7684\u4E00\u5757\u4E86</span>
<span class="token comment">// \u8BE5\u51FD\u6570\u8FD4\u56DE\u4E00\u4E2A\u67EF\u91CC\u5316\u7684\u51FD\u6570</span>
<span class="token comment">// \u6240\u4EE5\u8C03\u7528\u8FD9\u4E2A\u51FD\u6570\u5E94\u8BE5\u8FD9\u6837\u5199 applyMiddleware(...middlewares)(createStore)(...args)</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">applyMiddleware</span><span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>middlewares</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">return</span> <span class="token parameter">createStore</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>args</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
	 <span class="token comment">// \u8FD9\u91CC\u6267\u884C createStore \u51FD\u6570\uFF0C\u628A applyMiddleware \u51FD\u6570\u6700\u540E\u6B21\u8C03\u7528\u7684\u53C2\u6570\u4F20\u8FDB\u6765</span>
		<span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token function">createStore</span><span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token punctuation">)</span>
		<span class="token keyword">let</span> <span class="token function-variable function">dispatch</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
			<span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span>
				<span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Dispatching while constructing your middleware is not allowed. </span><span class="token template-punctuation string">\`</span></span> <span class="token operator">+</span>
					<span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Other middleware would not be applied to this dispatch.</span><span class="token template-punctuation string">\`</span></span>
			<span class="token punctuation">)</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">let</span> chain <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
		<span class="token comment">// \u6BCF\u4E2A\u4E2D\u95F4\u4EF6\u90FD\u5E94\u8BE5\u6709\u8FD9\u4E24\u4E2A\u51FD\u6570</span>
		<span class="token keyword">const</span> middlewareAPI <span class="token operator">=</span> <span class="token punctuation">{</span>
			<span class="token literal-property property">getState</span><span class="token operator">:</span> store<span class="token punctuation">.</span>getState<span class="token punctuation">,</span>
			<span class="token function-variable function">dispatch</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>args</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token punctuation">)</span>
		<span class="token punctuation">}</span>
		<span class="token comment">// \u628A middlewares \u4E2D\u7684\u6BCF\u4E2A\u4E2D\u95F4\u4EF6\u90FD\u4F20\u5165 middlewareAPI</span>
		chain <span class="token operator">=</span> middlewares<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">middleware</span> <span class="token operator">=&gt;</span> <span class="token function">middleware</span><span class="token punctuation">(</span>middlewareAPI<span class="token punctuation">)</span><span class="token punctuation">)</span>
		<span class="token comment">// \u548C\u4E4B\u524D\u4E00\u6837\uFF0C\u4ECE\u53F3\u81F3\u5DE6\u8C03\u7528\u6BCF\u4E2A\u4E2D\u95F4\u4EF6\uFF0C\u7136\u540E\u4F20\u5165 store.dispatch</span>
		dispatch <span class="token operator">=</span> <span class="token function">compose</span><span class="token punctuation">(</span><span class="token operator">...</span>chain<span class="token punctuation">)</span><span class="token punctuation">(</span>store<span class="token punctuation">.</span>dispatch<span class="token punctuation">)</span>
		<span class="token comment">// \u8FD9\u91CC\u53EA\u770B\u8FD9\u90E8\u5206\u4EE3\u7801\u6709\u70B9\u62BD\u8C61\uFF0C\u6211\u8FD9\u91CC\u653E\u5165 redux-thunk \u7684\u4EE3\u7801\u6765\u7ED3\u5408\u5206\u6790</span>
		<span class="token comment">// createThunkMiddleware\u8FD4\u56DE\u4E863\u5C42\u51FD\u6570\uFF0C\u7B2C\u4E00\u5C42\u51FD\u6570\u63A5\u6536 middlewareAPI \u53C2\u6570</span>
		<span class="token comment">// \u7B2C\u4E8C\u6B21\u51FD\u6570\u63A5\u6536 store.dispatch</span>
		<span class="token comment">// \u7B2C\u4E09\u5C42\u51FD\u6570\u63A5\u6536 dispatch \u4E2D\u7684\u53C2\u6570</span>
<span class="token punctuation">{</span><span class="token keyword">function</span> <span class="token function">createThunkMiddleware</span><span class="token punctuation">(</span><span class="token parameter">extraArgument</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> dispatch<span class="token punctuation">,</span> getState <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token parameter">next</span> <span class="token operator">=&gt;</span> <span class="token parameter">action</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
	<span class="token comment">// \u5224\u65AD dispatch \u4E2D\u7684\u53C2\u6570\u662F\u5426\u4E3A\u51FD\u6570</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> action <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token comment">// \u662F\u51FD\u6570\u7684\u8BDD\u518D\u628A\u8FD9\u4E9B\u53C2\u6570\u4F20\u8FDB\u53BB\uFF0C\u76F4\u5230 action \u4E0D\u4E3A\u51FD\u6570\uFF0C\u6267\u884C dispatch({tyep: &#39;XXX&#39;})</span>
			<span class="token keyword">return</span> <span class="token function">action</span><span class="token punctuation">(</span>dispatch<span class="token punctuation">,</span> getState<span class="token punctuation">,</span> extraArgument<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>

		<span class="token keyword">return</span> <span class="token function">next</span><span class="token punctuation">(</span>action<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> thunk <span class="token operator">=</span> <span class="token function">createThunkMiddleware</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> thunk<span class="token punctuation">;</span><span class="token punctuation">}</span>
<span class="token comment">// \u6700\u540E\u628A\u7ECF\u8FC7\u4E2D\u95F4\u4EF6\u52A0\u5F3A\u540E\u7684 dispatch \u4E8E\u5269\u4F59 store \u4E2D\u7684\u5C5E\u6027\u8FD4\u56DE\uFF0C\u8FD9\u6837\u4F60\u7684 dispatch</span>
		<span class="token keyword">return</span> <span class="token punctuation">{</span>
			<span class="token operator">...</span>store<span class="token punctuation">,</span>
			dispatch
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br></div></div><p>\u597D\u4E86\uFF0C\u73B0\u5728\u5C06\u56F0\u96BE\u7684\u90E8\u5206\u90FD\u653B\u514B\u4E86\uFF0C\u6765\u770B\u4E00\u4E9B\u7B80\u5355\u7684\u4EE3\u7801</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u8FD9\u4E2A\u6CA1\u5565\u597D\u8BF4\u7684\uFF0C\u5C31\u662F\u628A\u5F53\u524D\u7684 state \u8FD4\u56DE\uFF0C\u4F46\u662F\u5F53\u6B63\u5728\u6267\u884C reducer \u65F6\u4E0D\u80FD\u6267\u884C\u8BE5\u65B9\u6CD5</span>
<span class="token keyword">function</span> <span class="token function">getState</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>isDispatching<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span>
				<span class="token string">&#39;You may not call store.getState() while the reducer is executing. &#39;</span> <span class="token operator">+</span>
					<span class="token string">&#39;The reducer has already received the state as an argument. &#39;</span> <span class="token operator">+</span>
					<span class="token string">&#39;Pass it down from the top reducer instead of reading it from the store.&#39;</span>
			<span class="token punctuation">)</span>
		<span class="token punctuation">}</span>

		<span class="token keyword">return</span> currentState
<span class="token punctuation">}</span>
<span class="token comment">// \u63A5\u6536\u4E00\u4E2A\u51FD\u6570\u53C2\u6570</span>
<span class="token keyword">function</span> <span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token parameter">listener</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> listener <span class="token operator">!==</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&#39;Expected listener to be a function.&#39;</span><span class="token punctuation">)</span>
		<span class="token punctuation">}</span>
<span class="token comment">// \u8FD9\u90E8\u5206\u6700\u4E3B\u8981\u7684\u8BBE\u8BA1 nextListeners \u5DF2\u7ECF\u8BB2\u8FC7\uFF0C\u5176\u4ED6\u57FA\u672C\u6CA1\u4EC0\u4E48\u597D\u8BF4\u7684</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>isDispatching<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span>
				<span class="token string">&#39;You may not call store.subscribe() while the reducer is executing. &#39;</span> <span class="token operator">+</span>
					<span class="token string">&#39;If you would like to be notified after the store has been updated, subscribe from a &#39;</span> <span class="token operator">+</span>
					<span class="token string">&#39;component and invoke store.getState() in the callback to access the latest state. &#39;</span> <span class="token operator">+</span>
					<span class="token string">&#39;See http://redux.js.org/docs/api/Store.html#subscribe for more details.&#39;</span>
			<span class="token punctuation">)</span>
		<span class="token punctuation">}</span>

		<span class="token keyword">let</span> isSubscribed <span class="token operator">=</span> <span class="token boolean">true</span>

		<span class="token function">ensureCanMutateNextListeners</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
		nextListeners<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>listener<span class="token punctuation">)</span>

<span class="token comment">// \u8FD4\u56DE\u4E00\u4E2A\u53D6\u6D88\u8BA2\u9605\u51FD\u6570</span>
		<span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token function">unsubscribe</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isSubscribed<span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token keyword">return</span>
			<span class="token punctuation">}</span>

			<span class="token keyword">if</span> <span class="token punctuation">(</span>isDispatching<span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span>
					<span class="token string">&#39;You may not unsubscribe from a store listener while the reducer is executing. &#39;</span> <span class="token operator">+</span>
						<span class="token string">&#39;See http://redux.js.org/docs/api/Store.html#subscribe for more details.&#39;</span>
				<span class="token punctuation">)</span>
			<span class="token punctuation">}</span>

			isSubscribed <span class="token operator">=</span> <span class="token boolean">false</span>

			<span class="token function">ensureCanMutateNextListeners</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
			<span class="token keyword">const</span> index <span class="token operator">=</span> nextListeners<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>listener<span class="token punctuation">)</span>
			nextListeners<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
 
<span class="token keyword">function</span> <span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token parameter">action</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token comment">// \u539F\u751F\u7684 dispatch \u4F1A\u5224\u65AD action \u662F\u5426\u4E3A\u5BF9\u8C61</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isPlainObject</span><span class="token punctuation">(</span>action<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span>
				<span class="token string">&#39;Actions must be plain objects. &#39;</span> <span class="token operator">+</span>
					<span class="token string">&#39;Use custom middleware for async actions.&#39;</span>
			<span class="token punctuation">)</span>
		<span class="token punctuation">}</span>

		<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> action<span class="token punctuation">.</span>type <span class="token operator">===</span> <span class="token string">&#39;undefined&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span>
				<span class="token string">&#39;Actions may not have an undefined &quot;type&quot; property. &#39;</span> <span class="token operator">+</span>
					<span class="token string">&#39;Have you misspelled a constant?&#39;</span>
			<span class="token punctuation">)</span>
		<span class="token punctuation">}</span>
<span class="token comment">// \u6CE8\u610F\u5728 Reducers \u4E2D\u662F\u4E0D\u80FD\u6267\u884C dispatch \u51FD\u6570\u7684</span>
<span class="token comment">// \u56E0\u4E3A\u4F60\u4E00\u65E6\u5728 reducer \u51FD\u6570\u4E2D\u6267\u884C dispatch\uFF0C\u4F1A\u5F15\u53D1\u6B7B\u5FAA\u73AF</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>isDispatching<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&#39;Reducers may not dispatch actions.&#39;</span><span class="token punctuation">)</span>
		<span class="token punctuation">}</span>
<span class="token comment">// \u6267\u884C combineReducers \u7EC4\u5408\u540E\u7684\u51FD\u6570</span>
		<span class="token keyword">try</span> <span class="token punctuation">{</span>
			isDispatching <span class="token operator">=</span> <span class="token boolean">true</span>
			currentState <span class="token operator">=</span> <span class="token function">currentReducer</span><span class="token punctuation">(</span>currentState<span class="token punctuation">,</span> action<span class="token punctuation">)</span>
		<span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
			isDispatching <span class="token operator">=</span> <span class="token boolean">false</span>
		<span class="token punctuation">}</span>
<span class="token comment">// \u7136\u540E\u904D\u5386 currentListeners\uFF0C\u6267\u884C\u6570\u7EC4\u4E2D\u4FDD\u5B58\u7684\u51FD\u6570</span>
		<span class="token keyword">const</span> listeners <span class="token operator">=</span> <span class="token punctuation">(</span>currentListeners <span class="token operator">=</span> nextListeners<span class="token punctuation">)</span>
		<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> listeners<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">const</span> listener <span class="token operator">=</span> listeners<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
			<span class="token function">listener</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
		<span class="token punctuation">}</span>

		<span class="token keyword">return</span> action
	<span class="token punctuation">}</span>
 <span class="token comment">// \u7136\u540E\u5728 createStore \u672B\u5C3E\u4F1A\u53D1\u8D77\u4E00\u4E2A action dispatch({ type: ActionTypes.INIT });</span>
 <span class="token comment">// \u7528\u4EE5\u521D\u59CB\u5316 state</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br></div></div>`,19);function p(e,o){return t}var r=s(a,[["render",p]]);export{r as default};
