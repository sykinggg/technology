import{a as n}from"./app.ba47fc91.js";import{_ as s}from"./plugin-vue_export-helper.21dcd24c.js";const a={},p=n(`<h3 id="\u3010\u8FDB\u96364-2\u671F\u3011object-assign-\u539F\u7406\u53CA\u5176\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#\u3010\u8FDB\u96364-2\u671F\u3011object-assign-\u539F\u7406\u53CA\u5176\u5B9E\u73B0" aria-hidden="true">#</a> \u3010\u8FDB\u96364-2\u671F\u3011Object.assign \u539F\u7406\u53CA\u5176\u5B9E\u73B0</h3><h2 id="\u6D45\u62F7\u8D1D-object-assign" tabindex="-1"><a class="header-anchor" href="#\u6D45\u62F7\u8D1D-object-assign" aria-hidden="true">#</a> <strong>\u6D45\u62F7\u8D1D Object.assign</strong></h2><hr><p>\u4E0A\u7BC7\u6587\u7AE0\u4ECB\u7ECD\u4E86\u5176\u5B9A\u4E49\u548C\u4F7F\u7528\uFF0C\u4E3B\u8981\u662F\u5C06\u6240\u6709<strong>\u53EF\u679A\u4E3E\u5C5E\u6027</strong>\u7684\u503C\u4ECE\u4E00\u4E2A\u6216\u591A\u4E2A\u6E90\u5BF9\u8C61\u590D\u5236\u5230\u76EE\u6807\u5BF9\u8C61\uFF0C\u540C\u65F6\u8FD4\u56DE\u76EE\u6807\u5BF9\u8C61\u3002\uFF08\u6765\u81EA MDN\uFF09</p><p>\u8BED\u6CD5\u5982\u4E0B\u6240\u793A\uFF1A</p><blockquote><p><code>Object.assign(target, ...sources)</code></p></blockquote><p>\u5176\u4E2D <code>target</code> \u662F\u76EE\u6807\u5BF9\u8C61\uFF0C<code>sources</code> \u662F\u6E90\u5BF9\u8C61\uFF0C\u53EF\u4EE5\u6709\u591A\u4E2A\uFF0C\u8FD4\u56DE\u4FEE\u6539\u540E\u7684\u76EE\u6807\u5BF9\u8C61 <code>target</code>\u3002</p><p>\u5982\u679C\u76EE\u6807\u5BF9\u8C61\u4E2D\u7684\u5C5E\u6027\u5177\u6709\u76F8\u540C\u7684\u952E\uFF0C\u5219\u5C5E\u6027\u5C06\u88AB\u6E90\u5BF9\u8C61\u4E2D\u7684\u5C5E\u6027\u8986\u76D6\u3002\u540E\u6765\u7684\u6E90\u5BF9\u8C61\u7684\u5C5E\u6027\u5C06\u7C7B\u4F3C\u5730\u8986\u76D6\u65E9\u5148\u7684\u5C5E\u6027\u3002</p><p><strong>\u793A\u4F8B1</strong></p><p>\u6D45\u62F7\u8D1D\u5C31\u662F\u62F7\u8D1D\u7B2C\u4E00\u5C42\u7684<strong>\u57FA\u672C\u7C7B\u578B\u503C</strong>\uFF0C\u4EE5\u53CA\u7B2C\u4E00\u5C42\u7684<strong>\u5F15\u7528\u7C7B\u578B\u5730\u5740</strong>\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u7B2C\u4E00\u6B65</span>
<span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;advanced&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">18</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> b <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;aaaaaa&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">book</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&quot;You Don&#39;t Know JS&quot;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">price</span><span class="token operator">:</span> <span class="token string">&quot;45&quot;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> c <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// {</span>
<span class="token comment">// 	name: &quot;aaaaaa&quot;,</span>
<span class="token comment">//  age: 18,</span>
<span class="token comment">// 	book: {title: &quot;You Don&#39;t Know JS&quot;, price: &quot;45&quot;}</span>
<span class="token comment">// } </span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a <span class="token operator">===</span> c<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// true</span>

<span class="token comment">// \u7B2C\u4E8C\u6B65</span>
b<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&quot;change&quot;</span><span class="token punctuation">;</span>
b<span class="token punctuation">.</span>book<span class="token punctuation">.</span>price <span class="token operator">=</span> <span class="token string">&quot;55&quot;</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// {</span>
<span class="token comment">// 	name: &quot;change&quot;,</span>
<span class="token comment">// 	book: {title: &quot;You Don&#39;t Know JS&quot;, price: &quot;55&quot;}</span>
<span class="token comment">// } </span>

<span class="token comment">// \u7B2C\u4E09\u6B65</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// {</span>
<span class="token comment">// 	name: &quot;aaaaaa&quot;,</span>
<span class="token comment">//  age: 18,</span>
<span class="token comment">// 	book: {title: &quot;You Don&#39;t Know JS&quot;, price: &quot;55&quot;}</span>
<span class="token comment">// } </span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br></div></div><ul><li><p>1\u3001\u5728\u7B2C\u4E00\u6B65\u4E2D\uFF0C\u4F7F\u7528 <code>Object.assign</code> \u628A\u6E90\u5BF9\u8C61 b \u7684\u503C\u590D\u5236\u5230\u76EE\u6807\u5BF9\u8C61 a \u4E2D\uFF0C\u8FD9\u91CC\u628A\u8FD4\u56DE\u503C\u5B9A\u4E49\u4E3A\u5BF9\u8C61 c\uFF0C\u53EF\u4EE5\u770B\u51FA b \u4F1A\u66FF\u6362\u6389 a \u4E2D\u5177\u6709\u76F8\u540C\u952E\u7684\u503C\uFF0C\u5373\u5982\u679C\u76EE\u6807\u5BF9\u8C61\uFF08a\uFF09\u4E2D\u7684\u5C5E\u6027\u5177\u6709\u76F8\u540C\u7684\u952E\uFF0C\u5219\u5C5E\u6027\u5C06\u88AB\u6E90\u5BF9\u8C61\uFF08b\uFF09\u4E2D\u7684\u5C5E\u6027\u8986\u76D6\u3002\u8FD9\u91CC\u9700\u8981\u6CE8\u610F\u4E0B\uFF0C\u8FD4\u56DE\u5BF9\u8C61 c \u5C31\u662F \u76EE\u6807\u5BF9\u8C61 a\u3002</p></li><li><p>2\u3001\u5728\u7B2C\u4E8C\u6B65\u4E2D\uFF0C\u4FEE\u6539\u6E90\u5BF9\u8C61 b \u7684\u57FA\u672C\u7C7B\u578B\u503C\uFF08name\uFF09\u548C\u5F15\u7528\u7C7B\u578B\u503C\uFF08book\uFF09\u3002</p></li><li><p>3\u3001\u5728\u7B2C\u4E09\u6B65\u4E2D\uFF0C\u6D45\u62F7\u8D1D\u4E4B\u540E\u76EE\u6807\u5BF9\u8C61 a \u7684\u57FA\u672C\u7C7B\u578B\u503C\u6CA1\u6709\u6539\u53D8\uFF0C\u4F46\u662F\u5F15\u7528\u7C7B\u578B\u503C\u53D1\u751F\u4E86\u6539\u53D8\uFF0C\u56E0\u4E3A Object.assign() \u62F7\u8D1D\u7684\u662F\u5C5E\u6027\u503C\u3002\u5047\u5982\u6E90\u5BF9\u8C61\u7684\u5C5E\u6027\u503C\u662F\u4E00\u4E2A\u6307\u5411\u5BF9\u8C61\u7684\u5F15\u7528\uFF0C\u5B83\u4E5F<strong>\u53EA\u62F7\u8D1D\u90A3\u4E2A\u5F15\u7528\u5730\u5740</strong>\u3002</p></li></ul><p><strong>\u793A\u4F8B2</strong></p><p><code>String</code> \u7C7B\u578B\u548C <code>Symbol</code> \u7C7B\u578B\u7684\u5C5E\u6027\u90FD\u4F1A\u88AB\u62F7\u8D1D\uFF0C\u800C\u4E14\u4E0D\u4F1A\u8DF3\u8FC7\u90A3\u4E9B\u503C\u4E3A <code>null</code> \u6216 <code>undefined</code> \u7684\u6E90\u5BF9\u8C61\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u7B2C\u4E00\u6B65</span>
<span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;aaaaaa&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">18</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> b <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">b1</span><span class="token operator">:</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&quot;aaaaaa&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token literal-property property">b2</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
    <span class="token literal-property property">b3</span><span class="token operator">:</span> <span class="token keyword">undefined</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> c <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// {</span>
<span class="token comment">// 	name: &quot;aaaaaa&quot;,</span>
<span class="token comment">//  age: 18,</span>
<span class="token comment">// 	b1: Symbol(aaaaaa),</span>
<span class="token comment">// 	b2: null,</span>
<span class="token comment">// 	b3: undefined</span>
<span class="token comment">// } </span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a <span class="token operator">===</span> c<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><p><strong><code>Object.assign</code> \u6A21\u62DF\u5B9E\u73B0</strong></p><p>\u5B9E\u73B0\u4E00\u4E2A <code>Object.assign</code> \u5927\u81F4\u601D\u8DEF\u5982\u4E0B\uFF1A</p><p>1\u3001\u5224\u65AD\u539F\u751F <code>Object</code> \u662F\u5426\u652F\u6301\u8BE5\u51FD\u6570\uFF0C\u5982\u679C\u4E0D\u5B58\u5728\u7684\u8BDD\u521B\u5EFA\u4E00\u4E2A\u51FD\u6570 <code>assign</code>\uFF0C\u5E76\u4F7F\u7528 <code>Object.defineProperty</code> \u5C06\u8BE5\u51FD\u6570\u7ED1\u5B9A\u5230 <code>Object</code> \u4E0A\u3002</p><p>2\u3001\u5224\u65AD\u53C2\u6570\u662F\u5426\u6B63\u786E\uFF08\u76EE\u6807\u5BF9\u8C61\u4E0D\u80FD\u4E3A\u7A7A\uFF0C\u53EF\u4EE5\u76F4\u63A5\u8BBE\u7F6E{}\u4F20\u9012\u8FDB\u53BB,\u4F46\u5FC5\u987B\u8BBE\u7F6E\u503C\uFF09\u3002</p><p>3\u3001\u4F7F\u7528 <code>Object()</code> \u8F6C\u6210\u5BF9\u8C61\uFF0C\u5E76\u4FDD\u5B58\u4E3A to\uFF0C\u6700\u540E\u8FD4\u56DE\u8FD9\u4E2A\u5BF9\u8C61 to\u3002</p><p>4\u3001\u4F7F\u7528 <code>for..in</code> \u5FAA\u73AF\u904D\u5386\u51FA\u6240\u6709\u53EF\u679A\u4E3E\u7684\u81EA\u6709\u5C5E\u6027\u3002\u5E76\u590D\u5236\u7ED9\u65B0\u7684\u76EE\u6807\u5BF9\u8C61\uFF08\u4F7F\u7528 <code>hasOwnProperty</code> \u83B7\u53D6\u81EA\u6709\u5C5E\u6027\uFF0C\u5373\u975E\u539F\u578B\u94FE\u4E0A\u7684\u5C5E\u6027\uFF09\u3002</p><p>\u5B9E\u73B0\u4EE3\u7801\u5982\u4E0B\uFF0C\u8FD9\u91CC\u4E3A\u4E86\u9A8C\u8BC1\u65B9\u4FBF\uFF0C\u4F7F\u7528 <code>assign2</code> \u4EE3\u66FF <code>assign</code>\u3002\u6CE8\u610F\u6B64\u6A21\u62DF\u5B9E\u73B0\u4E0D\u652F\u6301 <code>symbol</code> \u5C5E\u6027\uFF0C\u56E0\u4E3A<code>ES5</code> \u4E2D\u6839\u672C\u6CA1\u6709 <code>symbol</code> \u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> Object<span class="token punctuation">.</span>assign2 <span class="token operator">!=</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// Attention 1</span>
  Object<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span>Object<span class="token punctuation">,</span> <span class="token string">&quot;assign2&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token function-variable function">value</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">target</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token string">&#39;use strict&#39;</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>target <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// Attention 2</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">TypeError</span><span class="token punctuation">(</span><span class="token string">&#39;Cannot convert undefined or null to object&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// Attention 3</span>
        <span class="token keyword">var</span> to <span class="token operator">=</span> <span class="token function">Object</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">;</span>
            
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> index <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> index <span class="token operator">&lt;</span> arguments<span class="token punctuation">.</span>length<span class="token punctuation">;</span> index<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">var</span> nextSource <span class="token operator">=</span> arguments<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">;</span>

            <span class="token keyword">if</span> <span class="token punctuation">(</span>nextSource <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment">// Attention 2</span>
            <span class="token comment">// Attention 4</span>
                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> nextKey <span class="token keyword">in</span> nextSource<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>nextSource<span class="token punctuation">,</span> nextKey<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    to<span class="token punctuation">[</span>nextKey<span class="token punctuation">]</span> <span class="token operator">=</span> nextSource<span class="token punctuation">[</span>nextKey<span class="token punctuation">]</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> to<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">writable</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token literal-property property">configurable</span><span class="token operator">:</span> <span class="token boolean">true</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br></div></div><p>\u6D4B\u8BD5\u4E00\u4E0B</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u6D4B\u8BD5\u7528\u4F8B</span>
<span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;advanced&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">18</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> b <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;aaaaaa&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">book</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&quot;You Don&#39;t Know JS&quot;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">price</span><span class="token operator">:</span> <span class="token string">&quot;45&quot;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> c <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">assign2</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// {</span>
<span class="token comment">// 	name: &quot;aaaaaa&quot;,</span>
<span class="token comment">//  age: 18,</span>
<span class="token comment">// 	book: {title: &quot;You Don&#39;t Know JS&quot;, price: &quot;45&quot;}</span>
<span class="token comment">// } </span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a <span class="token operator">===</span> c<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><p>\u9488\u5BF9\u4E0A\u9762\u7684\u4EE3\u7801\u505A\u5982\u4E0B\u6269\u5C55\u3002</p><h2 id="\u6CE8\u610F1-\u53EF\u679A\u4E3E\u6027" tabindex="-1"><a class="header-anchor" href="#\u6CE8\u610F1-\u53EF\u679A\u4E3E\u6027" aria-hidden="true">#</a> <strong>\u6CE8\u610F1\uFF1A\u53EF\u679A\u4E3E\u6027</strong></h2><p>\u539F\u751F\u60C5\u51B5\u4E0B\u6302\u8F7D\u5728 <code>Object</code> \u4E0A\u7684\u5C5E\u6027\u662F\u4E0D\u53EF\u679A\u4E3E\u7684\uFF0C\u4F46\u662F\u76F4\u63A5\u5728 <code>Object</code> \u4E0A\u6302\u8F7D\u5C5E\u6027 <code>a</code> \u4E4B\u540E\u662F\u53EF\u679A\u4E3E\u7684\uFF0C\u6240\u4EE5\u8FD9\u91CC\u5FC5\u987B\u4F7F\u7528 <code>Object.defineProperty</code>\uFF0C\u5E76\u8BBE\u7F6E <code>enumerable: false</code> \u4EE5\u53CA <code>writable: true</code>, <code>configurable: true</code>\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token keyword">in</span> Object<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Object<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u65E0\u8F93\u51FA</span>

Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span> Object <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// []</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>\u4E0A\u9762\u4EE3\u7801\u8BF4\u660E\u539F\u751F <code>Object</code> \u4E0A\u7684\u5C5E\u6027\u4E0D\u53EF\u679A\u4E3E\u3002</p><p>\u53EF\u4EE5\u4F7F\u7528 2 \u79CD\u65B9\u6CD5\u67E5\u770B <code>Object.assign</code> \u662F\u5426\u53EF\u679A\u4E3E\uFF0C\u4F7F\u7528 <code>Object.getOwnPropertyDescriptor</code> \u6216\u8005 <code>Object.propertyIsEnumerable</code> \u90FD\u53EF\u4EE5\uFF0C\u5176\u4E2D<code>propertyIsEnumerable(..)</code> \u4F1A\u68C0\u67E5\u7ED9\u5B9A\u7684\u5C5E\u6027\u540D\u662F\u5426\u76F4\u63A5\u5B58\u5728\u4E8E\u5BF9\u8C61\u4E2D\uFF08\u800C\u4E0D\u662F\u5728\u539F\u578B\u94FE\u4E0A\uFF09\u5E76\u4E14\u6EE1\u8DB3 <code>enumerable: true</code>\u3002\u5177\u4F53\u7528\u6CD5\u5982\u4E0B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u65B9\u6CD51</span>
Object<span class="token punctuation">.</span><span class="token function">getOwnPropertyDescriptor</span><span class="token punctuation">(</span>Object<span class="token punctuation">,</span> <span class="token string">&quot;assign&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// {</span>
<span class="token comment">// 	value: \u0192, </span>
<span class="token comment">//  writable: true, 	// \u53EF\u5199</span>
<span class="token comment">//  enumerable: false,  // \u4E0D\u53EF\u679A\u4E3E\uFF0C\u6CE8\u610F\u8FD9\u91CC\u662F false</span>
<span class="token comment">//  configurable: true	// \u53EF\u914D\u7F6E</span>
<span class="token comment">// }</span>

<span class="token comment">// \u65B9\u6CD52</span>
Object<span class="token punctuation">.</span><span class="token function">propertyIsEnumerable</span><span class="token punctuation">(</span><span class="token string">&quot;assign&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>\u4E0A\u9762\u4EE3\u7801\u8BF4\u660E <code>Object.assign</code> \u662F\u4E0D\u53EF\u679A\u4E3E\u7684\u3002</p><p>\u4ECB\u7ECD\u8FD9\u4E48\u591A\u662F\u56E0\u4E3A\u76F4\u63A5\u5728 <code>Object</code> \u4E0A\u6302\u8F7D\u5C5E\u6027 <code>a</code> \u4E4B\u540E\u662F\u53EF\u679A\u4E3E\u7684\uFF0C\u6765\u770B\u5982\u4E0B\u4EE3\u7801\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Object<span class="token punctuation">.</span><span class="token function-variable function">a</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;log a&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

Object<span class="token punctuation">.</span><span class="token function">getOwnPropertyDescriptor</span><span class="token punctuation">(</span>Object<span class="token punctuation">,</span> <span class="token string">&quot;a&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// {</span>
<span class="token comment">// 	value: \u0192, </span>
<span class="token comment">//  writable: true, </span>
<span class="token comment">//  enumerable: true,  // \u6CE8\u610F\u8FD9\u91CC\u662F true</span>
<span class="token comment">//  configurable: true</span>
<span class="token comment">// }</span>

Object<span class="token punctuation">.</span><span class="token function">propertyIsEnumerable</span><span class="token punctuation">(</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p>\u6240\u4EE5\u8981\u5B9E\u73B0 <code>Object.assign</code> \u5FC5\u987B\u4F7F\u7528 <code>Object.defineProperty</code>\uFF0C\u5E76\u8BBE\u7F6E <code>writable: true</code>, <code>enumerable: false</code>, <code>configurable: true</code>\uFF0C\u5F53\u7136\u9ED8\u8BA4\u60C5\u51B5\u4E0B\u4E0D\u8BBE\u7F6E\u5C31\u662F <code>false</code>\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Object<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span>Object<span class="token punctuation">,</span> <span class="token string">&quot;b&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token function-variable function">value</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;log b&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

Object<span class="token punctuation">.</span><span class="token function">getOwnPropertyDescriptor</span><span class="token punctuation">(</span>Object<span class="token punctuation">,</span> <span class="token string">&quot;b&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// {</span>
<span class="token comment">// 	value: \u0192, </span>
<span class="token comment">//  writable: false, 	// \u6CE8\u610F\u8FD9\u91CC\u662F false</span>
<span class="token comment">//  enumerable: false,  // \u6CE8\u610F\u8FD9\u91CC\u662F false</span>
<span class="token comment">//  configurable: false	// \u6CE8\u610F\u8FD9\u91CC\u662F false</span>
<span class="token comment">// }</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>\u6240\u4EE5\u5177\u4F53\u5230\u672C\u6B21\u6A21\u62DF\u5B9E\u73B0\u4E2D\uFF0C\u76F8\u5173\u4EE3\u7801\u5982\u4E0B\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u5224\u65AD\u539F\u751F Object \u4E2D\u662F\u5426\u5B58\u5728\u51FD\u6570 assign2</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> Object<span class="token punctuation">.</span>assign2 <span class="token operator">!=</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u4F7F\u7528\u5C5E\u6027\u63CF\u8FF0\u7B26\u5B9A\u4E49\u65B0\u5C5E\u6027 assign2</span>
    Object<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span>Object<span class="token punctuation">,</span> <span class="token string">&quot;assign2&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
        <span class="token function-variable function">value</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">target</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> 
            <span class="token operator">...</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token comment">// \u9ED8\u8BA4\u503C\u662F false\uFF0C\u5373 enumerable: false</span>
        <span class="token literal-property property">writable</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
        <span class="token literal-property property">configurable</span><span class="token operator">:</span> <span class="token boolean">true</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h2 id="\u6CE8\u610F2-\u5224\u65AD\u53C2\u6570\u662F\u5426\u6B63\u786E" tabindex="-1"><a class="header-anchor" href="#\u6CE8\u610F2-\u5224\u65AD\u53C2\u6570\u662F\u5426\u6B63\u786E" aria-hidden="true">#</a> <strong>\u6CE8\u610F2\uFF1A\u5224\u65AD\u53C2\u6570\u662F\u5426\u6B63\u786E</strong></h2><p>\u6709\u4E9B\u6587\u7AE0\u5224\u65AD\u53C2\u6570\u662F\u5426\u6B63\u786E\u662F\u8FD9\u6837\u7684\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">if</span> <span class="token punctuation">(</span>target <span class="token operator">===</span> <span class="token keyword">undefined</span> <span class="token operator">||</span> target <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">TypeError</span><span class="token punctuation">(</span><span class="token string">&#39;Cannot convert undefined or null to object&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u8FD9\u6837\u80AF\u5B9A\u6CA1\u95EE\u9898\uFF0C\u4F46\u662F\u8FD9\u6837\u5199\u6CA1\u6709\u5FC5\u8981\uFF0C\u56E0\u4E3A <code>undefined</code> \u548C <code>null</code> \u662F\u76F8\u7B49\u7684\uFF08\u9AD8\u7A0B 3 P52 \uFF09\uFF0C\u5373 <code>undefined == null</code> \u8FD4\u56DE <code>true</code>\uFF0C\u53EA\u9700\u8981\u6309\u7167\u5982\u4E0B\u65B9\u5F0F\u5224\u65AD\u5C31\u597D\u4E86\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">if</span> <span class="token punctuation">(</span>target <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// TypeError if undefined or null</span>
	<span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">TypeError</span><span class="token punctuation">(</span><span class="token string">&#39;Cannot convert undefined or null to object&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="\u6CE8\u610F3-\u539F\u59CB\u7C7B\u578B\u88AB\u5305\u88C5\u4E3A\u5BF9\u8C61" tabindex="-1"><a class="header-anchor" href="#\u6CE8\u610F3-\u539F\u59CB\u7C7B\u578B\u88AB\u5305\u88C5\u4E3A\u5BF9\u8C61" aria-hidden="true">#</a> <strong>\u6CE8\u610F3\uFF1A\u539F\u59CB\u7C7B\u578B\u88AB\u5305\u88C5\u4E3A\u5BF9\u8C61</strong></h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> v1 <span class="token operator">=</span> <span class="token string">&quot;abc&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> v2 <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> v3 <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> v4 <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&quot;foo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> obj <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> v1<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> v2<span class="token punctuation">,</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span> v3<span class="token punctuation">,</span> v4<span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token comment">// \u539F\u59CB\u7C7B\u578B\u4F1A\u88AB\u5305\u88C5\uFF0Cnull \u548C undefined \u4F1A\u88AB\u5FFD\u7565\u3002</span>
<span class="token comment">// \u6CE8\u610F\uFF0C\u53EA\u6709\u5B57\u7B26\u4E32\u7684\u5305\u88C5\u5BF9\u8C61\u624D\u53EF\u80FD\u6709\u81EA\u8EAB\u53EF\u679A\u4E3E\u5C5E\u6027\u3002</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token comment">// { &quot;0&quot;: &quot;a&quot;, &quot;1&quot;: &quot;b&quot;, &quot;2&quot;: &quot;c&quot; }</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\u7684\u6E90\u5BF9\u8C61 v2\u3001v3\u3001v4 \u5B9E\u9645\u4E0A\u88AB\u5FFD\u7565\u4E86\uFF0C\u539F\u56E0\u5728\u4E8E\u4ED6\u4EEC\u81EA\u8EAB<strong>\u6CA1\u6709\u53EF\u679A\u4E3E\u5C5E\u6027</strong>\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> v1 <span class="token operator">=</span> <span class="token string">&quot;abc&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> v2 <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> v3 <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> v4 <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&quot;foo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> v5 <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>

<span class="token comment">// Object.keys(..) \u8FD4\u56DE\u4E00\u4E2A\u6570\u7EC4\uFF0C\u5305\u542B\u6240\u6709\u53EF\u679A\u4E3E\u5C5E\u6027</span>
<span class="token comment">// \u53EA\u4F1A\u67E5\u627E\u5BF9\u8C61\u76F4\u63A5\u5305\u542B\u7684\u5C5E\u6027\uFF0C\u4E0D\u67E5\u627E[[Prototype]]\u94FE</span>
Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span> v1 <span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [ &#39;0&#39;, &#39;1&#39;, &#39;2&#39; ]</span>
Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span> v2 <span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// []</span>
Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span> v3 <span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// []</span>
Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span> v4 <span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// []</span>
Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span> v5 <span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token comment">// TypeError: Cannot convert undefined or null to object</span>

<span class="token comment">// Object.getOwnPropertyNames(..) \u8FD4\u56DE\u4E00\u4E2A\u6570\u7EC4\uFF0C\u5305\u542B\u6240\u6709\u5C5E\u6027\uFF0C\u65E0\u8BBA\u5B83\u4EEC\u662F\u5426\u53EF\u679A\u4E3E</span>
<span class="token comment">// \u53EA\u4F1A\u67E5\u627E\u5BF9\u8C61\u76F4\u63A5\u5305\u542B\u7684\u5C5E\u6027\uFF0C\u4E0D\u67E5\u627E[[Prototype]]\u94FE</span>
Object<span class="token punctuation">.</span><span class="token function">getOwnPropertyNames</span><span class="token punctuation">(</span> v1 <span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [ &#39;0&#39;, &#39;1&#39;, &#39;2&#39;, &#39;length&#39; ]</span>
Object<span class="token punctuation">.</span><span class="token function">getOwnPropertyNames</span><span class="token punctuation">(</span> v2 <span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// []</span>
Object<span class="token punctuation">.</span><span class="token function">getOwnPropertyNames</span><span class="token punctuation">(</span> v3 <span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// []</span>
Object<span class="token punctuation">.</span><span class="token function">getOwnPropertyNames</span><span class="token punctuation">(</span> v4 <span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// []</span>
Object<span class="token punctuation">.</span><span class="token function">getOwnPropertyNames</span><span class="token punctuation">(</span> v5 <span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token comment">// TypeError: Cannot convert undefined or null to object</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><p>\u4F46\u662F\u4E0B\u9762\u7684\u4EE3\u7801\u662F\u53EF\u4EE5\u6267\u884C\u7684\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token string">&quot;abc&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> b <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">v1</span><span class="token operator">:</span> <span class="token string">&quot;def&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">v2</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token literal-property property">v3</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>
    <span class="token literal-property property">v4</span><span class="token operator">:</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&quot;foo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token literal-property property">v5</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
    <span class="token literal-property property">v6</span><span class="token operator">:</span> <span class="token keyword">undefined</span>
<span class="token punctuation">}</span>

<span class="token keyword">var</span> obj <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span> 
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// { </span>
<span class="token comment">//   [String: &#39;abc&#39;]</span>
<span class="token comment">//   v1: &#39;def&#39;,</span>
<span class="token comment">//   v2: true,</span>
<span class="token comment">//   v3: 10,</span>
<span class="token comment">//   v4: Symbol(foo),</span>
<span class="token comment">//   v5: null,</span>
<span class="token comment">//   v6: undefined </span>
<span class="token comment">// }</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><p>\u539F\u56E0\u5F88\u7B80\u5355\uFF0C\u56E0\u4E3A\u6B64\u65F6 <code>undefined</code>\u3001<code>true</code> \u7B49\u4E0D\u662F\u4F5C\u4E3A\u5BF9\u8C61\uFF0C\u800C\u662F\u4F5C\u4E3A\u5BF9\u8C61 b \u7684\u5C5E\u6027\u503C\uFF0C\u5BF9\u8C61 b \u662F\u53EF\u679A\u4E3E\u7684\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u63A5\u4E0A\u9762\u7684\u4EE3\u7801</span>
Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span> b <span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [ &#39;v1&#39;, &#39;v2&#39;, &#39;v3&#39;, &#39;v4&#39;, &#39;v5&#39;, &#39;v6&#39; ]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>\u8FD9\u91CC\u5176\u5B9E\u53C8\u53EF\u4EE5\u770B\u51FA\u4E00\u4E2A\u95EE\u9898\u6765\uFF0C\u90A3\u5C31\u662F\u76EE\u6807\u5BF9\u8C61\u662F\u539F\u59CB\u7C7B\u578B\uFF0C\u4F1A\u5305\u88C5\u6210\u5BF9\u8C61\uFF0C\u5BF9\u5E94\u4E0A\u9762\u7684\u4EE3\u7801\u5C31\u662F\u76EE\u6807\u5BF9\u8C61 a \u4F1A\u88AB\u5305\u88C5\u6210 <code>[String: &#39;abc&#39;]</code>\uFF0C\u90A3\u6A21\u62DF\u5B9E\u73B0\u65F6\u5E94\u8BE5\u5982\u4F55\u5904\u7406\u5462\uFF1F\u5F88\u7B80\u5355\uFF0C\u4F7F\u7528 <code>Object(..)</code> \u5C31\u53EF\u4EE5\u4E86\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token string">&quot;abc&quot;</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span> <span class="token function">Object</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// [String: &#39;abc&#39;]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u770B\u770B\u4E0B\u9762\u7684\u4EE3\u7801\u80FD\u4E0D\u80FD\u6267\u884C\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token string">&quot;abc&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> b <span class="token operator">=</span> <span class="token string">&quot;def&quot;</span><span class="token punctuation">;</span>
Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u7B54\u6848\u662F\u5426\u5B9A\u7684\uFF0C\u4F1A\u63D0\u793A\u4EE5\u4E0B\u9519\u8BEF\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token literal-property property">TypeError</span><span class="token operator">:</span> Cannot assign to read only property <span class="token string">&#39;0&#39;</span> <span class="token keyword">of</span> object <span class="token string">&#39;[object String]&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>\u539F\u56E0\u5728\u4E8E <code>Object(&quot;abc&quot;)</code> \u65F6\uFF0C\u5176\u5C5E\u6027\u63CF\u8FF0\u7B26\u4E3A\u4E0D\u53EF\u5199\uFF0C\u5373 <code>writable: false</code>\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> myObject <span class="token operator">=</span> <span class="token function">Object</span><span class="token punctuation">(</span> <span class="token string">&quot;abc&quot;</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>

Object<span class="token punctuation">.</span><span class="token function">getOwnPropertyNames</span><span class="token punctuation">(</span> myObject <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// [ &#39;0&#39;, &#39;1&#39;, &#39;2&#39;, &#39;length&#39; ]</span>

Object<span class="token punctuation">.</span><span class="token function">getOwnPropertyDescriptor</span><span class="token punctuation">(</span>myObject<span class="token punctuation">,</span> <span class="token string">&quot;0&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// { </span>
<span class="token comment">//   value: &#39;a&#39;,</span>
<span class="token comment">//   writable: false, // \u6CE8\u610F\u8FD9\u91CC</span>
<span class="token comment">//   enumerable: true,</span>
<span class="token comment">//   configurable: false </span>
<span class="token comment">// }</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>\u540C\u7406\uFF0C\u4E0B\u9762\u7684\u4EE3\u7801\u4E5F\u4F1A\u62A5\u9519\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token string">&quot;abc&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> b <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token number">0</span><span class="token operator">:</span> <span class="token string">&quot;d&quot;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token comment">// TypeError: Cannot assign to read only property &#39;0&#39; of object &#39;[object String]&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>\u4F46\u662F\u5E76\u4E0D\u662F\u8BF4\u53EA\u8981 <code>writable: false</code> \u5C31\u4F1A\u62A5\u9519\uFF0C\u770B\u4E0B\u9762\u7684\u4EE3\u7801\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> myObject <span class="token operator">=</span> <span class="token function">Object</span><span class="token punctuation">(</span><span class="token string">&#39;abc&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 

Object<span class="token punctuation">.</span><span class="token function">getOwnPropertyDescriptor</span><span class="token punctuation">(</span>myObject<span class="token punctuation">,</span> <span class="token string">&#39;0&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// { </span>
<span class="token comment">//   value: &#39;a&#39;,</span>
<span class="token comment">//   writable: false, // \u6CE8\u610F\u8FD9\u91CC</span>
<span class="token comment">//   enumerable: true,</span>
<span class="token comment">//   configurable: false </span>
<span class="token comment">// }</span>

myObject<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;d&#39;</span><span class="token punctuation">;</span>
<span class="token comment">// &#39;d&#39;</span>

myObject<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token comment">// &#39;a&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p>\u8FD9\u91CC\u5E76\u6CA1\u6709\u62A5\u9519\uFF0C\u539F\u56E0\u5728\u4E8E JS \u5BF9\u4E8E\u4E0D\u53EF\u5199\u7684\u5C5E\u6027\u503C\u7684\u4FEE\u6539\u9759\u9ED8\u5931\u8D25\uFF08silently failed\uFF09,\u5728\u4E25\u683C\u6A21\u5F0F\u4E0B\u624D\u4F1A\u63D0\u793A\u9519\u8BEF\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token string">&#39;use strict&#39;</span>
<span class="token keyword">var</span> myObject <span class="token operator">=</span> <span class="token function">Object</span><span class="token punctuation">(</span><span class="token string">&#39;abc&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 

myObject<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;d&#39;</span><span class="token punctuation">;</span>
<span class="token comment">// TypeError: Cannot assign to read only property &#39;0&#39; of object &#39;[object String]&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>\u6240\u4EE5\u5728\u6A21\u62DF\u5B9E\u73B0 <code>Object.assign</code> \u65F6\u9700\u8981\u4F7F\u7528\u4E25\u683C\u6A21\u5F0F\u3002</p><h2 id="\u6CE8\u610F4-\u5B58\u5728\u6027" tabindex="-1"><a class="header-anchor" href="#\u6CE8\u610F4-\u5B58\u5728\u6027" aria-hidden="true">#</a> <strong>\u6CE8\u610F4\uFF1A\u5B58\u5728\u6027</strong></h2><p>\u5982\u4F55\u5728\u4E0D\u8BBF\u95EE\u5C5E\u6027\u503C\u7684\u60C5\u51B5\u4E0B\u5224\u65AD\u5BF9\u8C61\u4E2D\u662F\u5426\u5B58\u5728\u67D0\u4E2A\u5C5E\u6027\u5462\uFF0C\u770B\u4E0B\u9762\u7684\u4EE3\u7801\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> anotherObject <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">1</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// \u521B\u5EFA\u4E00\u4E2A\u5173\u8054\u5230 anotherObject \u7684\u5BF9\u8C61</span>
<span class="token keyword">var</span> myObject <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span> anotherObject <span class="token punctuation">)</span><span class="token punctuation">;</span>
myObject<span class="token punctuation">.</span>b <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>

<span class="token punctuation">(</span><span class="token string">&quot;a&quot;</span> <span class="token keyword">in</span> myObject<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
<span class="token punctuation">(</span><span class="token string">&quot;b&quot;</span> <span class="token keyword">in</span> myObject<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>

myObject<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span> <span class="token string">&quot;a&quot;</span> <span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span>
myObject<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span> <span class="token string">&quot;b&quot;</span> <span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>\u8FD9\u8FB9\u4F7F\u7528\u4E86 <code>in</code> \u64CD\u4F5C\u7B26\u548C <code>hasOwnProperty</code> \u65B9\u6CD5\uFF0C\u533A\u522B\u5982\u4E0B\uFF08\u4E0D\u77E5\u9053\u7684JS\u4E0A\u5377 P119\uFF09\uFF1A</p><p>1\u3001<code>in</code> \u64CD\u4F5C\u7B26\u4F1A\u68C0\u67E5\u5C5E\u6027\u662F\u5426\u5728\u5BF9\u8C61\u53CA\u5176 <code>[[Prototype]]</code> \u539F\u578B\u94FE\u4E2D\u3002</p><p>2\u3001<code>hasOwnProperty(..)</code> \u53EA\u4F1A\u68C0\u67E5\u5C5E\u6027\u662F\u5426\u5728 myObject \u5BF9\u8C61\u4E2D\uFF0C\u4E0D\u4F1A\u68C0\u67E5 <code>[[Prototype]]</code> \u539F\u578B\u94FE\u3002</p><p><code>Object.assign</code> \u65B9\u6CD5\u80AF\u5B9A\u4E0D\u4F1A\u62F7\u8D1D\u539F\u578B\u94FE\u4E0A\u7684\u5C5E\u6027\uFF0C\u6240\u4EE5\u6A21\u62DF\u5B9E\u73B0\u65F6\u9700\u8981\u7528 <code>hasOwnProperty(..)</code> \u5224\u65AD\u5904\u7406\u4E0B\uFF0C\u4F46\u662F\u76F4\u63A5\u4F7F\u7528 <code>myObject.hasOwnProperty(..)</code> \u662F\u6709\u95EE\u9898\u7684\uFF0C\u56E0\u4E3A\u6709\u7684\u5BF9\u8C61\u53EF\u80FD\u6CA1\u6709\u8FDE\u63A5\u5230 <code>Object.prototype</code> \u4E0A\uFF08\u6BD4\u5982\u901A\u8FC7 <code>Object.create(null)</code> \u6765\u521B\u5EFA\uFF09\uFF0C\u8FD9\u79CD\u60C5\u51B5\u4E0B\uFF0C\u4F7F\u7528 <code>myObject.hasOwnProperty(..)</code> \u5C31\u4F1A\u5931\u8D25\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> myObject <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span> <span class="token keyword">null</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>
myObject<span class="token punctuation">.</span>b <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>

<span class="token punctuation">(</span><span class="token string">&quot;b&quot;</span> <span class="token keyword">in</span> myObject<span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token comment">// true</span>

myObject<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span> <span class="token string">&quot;b&quot;</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// TypeError: myObject.hasOwnProperty is not a function</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>\u89E3\u51B3\u65B9\u6CD5\u4E5F\u5F88\u7B80\u5355\uFF0C\u4F7F\u7528\u5728\u3010\u8FDB\u96363-3\u671F\u3011\u4E2D\u4ECB\u7ECD\u7684 call \u5C31\u53EF\u4EE5\u4E86\uFF0C\u4F7F\u7528\u5982\u4E0B\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> myObject <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span> <span class="token keyword">null</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>
myObject<span class="token punctuation">.</span>b <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>

<span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>myObject<span class="token punctuation">,</span> <span class="token string">&quot;b&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>\u6240\u4EE5\u5177\u4F53\u5230\u672C\u6B21\u6A21\u62DF\u5B9E\u73B0\u4E2D\uFF0C\u76F8\u5173\u4EE3\u7801\u5982\u4E0B\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u4F7F\u7528 for..in \u904D\u5386\u5BF9\u8C61 nextSource \u83B7\u53D6\u5C5E\u6027\u503C</span>
<span class="token comment">// \u6B64\u5904\u4F1A\u540C\u65F6\u68C0\u67E5\u5176\u539F\u578B\u94FE\u4E0A\u7684\u5C5E\u6027</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> nextKey <span class="token keyword">in</span> nextSource<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u4F7F\u7528 hasOwnProperty \u5224\u65AD\u5BF9\u8C61 nextSource \u4E2D\u662F\u5426\u5B58\u5728\u5C5E\u6027 nextKey</span>
    <span class="token comment">// \u8FC7\u6EE4\u5176\u539F\u578B\u94FE\u4E0A\u7684\u5C5E\u6027</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>nextSource<span class="token punctuation">,</span> nextKey<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u8D4B\u503C\u7ED9\u5BF9\u8C61 to,\u5E76\u5728\u904D\u5386\u7ED3\u675F\u540E\u8FD4\u56DE\u5BF9\u8C61 to</span>
        to<span class="token punctuation">[</span>nextKey<span class="token punctuation">]</span> <span class="token operator">=</span> nextSource<span class="token punctuation">[</span>nextKey<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h2 id="\u601D\u8003\u9898" tabindex="-1"><a class="header-anchor" href="#\u601D\u8003\u9898" aria-hidden="true">#</a> <strong>\u601D\u8003\u9898</strong></h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>\u5982\u4F55\u5B9E\u73B0\u4E00\u4E2A\u6DF1\u62F7\u8D1D\uFF1F
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div>`,81);function e(t,o){return p}var r=s(a,[["render",e]]);export{r as default};
