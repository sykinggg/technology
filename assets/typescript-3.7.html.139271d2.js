import{r as t,o,c,b as n,d as p,F as l,e as s,a as e}from"./app.b05da4ec.js";import{_ as r}from"./plugin-vue_export-helper.21dcd24c.js";const u={},i=n("h1",{id:"typescript-3-7",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#typescript-3-7","aria-hidden":"true"},"#"),s(" TypeScript 3.7")],-1),k=n("h2",{id:"\u53EF\u9009\u94FE-optional-chaining",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u53EF\u9009\u94FE-optional-chaining","aria-hidden":"true"},"#"),s(" \u53EF\u9009\u94FE\uFF08Optional Chaining\uFF09")],-1),d=s("\u5728\u7684 issue \u8FFD\u8E2A\u5668\u4E2D\uFF0C\u53EF\u9009\u94FE\u5728 "),b={href:"https://github.com/microsoft/TypeScript/issues/16",target:"_blank",rel:"noopener noreferrer"},m=s("issue #16"),y=s(" \u4E2D\uFF0C\u81EA\u90A3\u4EE5\u540E\uFF0C\u6709\u8D85\u8FC7 23000 \u6761 issues \u88AB\u8BB0\u5F55\u5728 issue \u4E2D\u3002"),g=e(`<p>\u53EF\u9009\u94FE\u7684\u6838\u5FC3\u662F\u5141\u8BB8\u5199\u4E0B\u5982\u679C\u78B0\u5230 <code>null</code> \u6216\u8005 <code>undefined</code>\uFF0CTypeScript \u80FD\u7ACB\u5373\u505C\u6B62\u8FD0\u884C\u7684\u4EE3\u7801\u3002\u53EF\u9009\u94FE\u8000\u773C\u7684\u90E8\u5206\u662F\u4F7F\u7528 <code>?.</code> \u8FD0\u7B97\u7B26\u6765\u8BBF\u95EE\u4E00\u4E2A\u53EF\u9009\u5C5E\u6027\u7684\u8FD0\u7B97\u7B26\u3002</p><p>\u4E0B\u9762\u4EE3\u7801\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">let</span> x <span class="token operator">=</span> foo<span class="token operator">?.</span>bar<span class="token punctuation">.</span><span class="token function">baz</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>\u544A\u8BC9\uFF0C\u5F53 <code>foo</code> \u88AB\u5B9A\u4E49\u4E86\uFF0C<code>foo.bar.baz()</code> \u5C06\u4F1A\u6267\u884C\u5B8C\u6210\uFF1B\u4F46\u662F\u5F53 <code>foo</code> \u662F <code>null</code> \u6216\u8005 <code>undefined</code> \u65F6\uFF0CTypeScript \u4F1A\u7ACB\u5373\u505C\u6B62\u8FD0\u884C\uFF0C\u5E76\u4E14\u4EC5\u4EC5\u662F\u8FD4\u56DE <code>undefined</code>\u3002</p><p>\u4E5F\u5C31\u662F\u8BF4\uFF0C\u4E0A\u6587\u7684\u4EE3\u7801\u7B49\u6548\u4E8E\u5982\u4E0B\u4EE3\u7801\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">let</span> x <span class="token operator">=</span> foo <span class="token operator">===</span> <span class="token keyword">null</span> <span class="token operator">||</span> foo <span class="token operator">===</span> <span class="token keyword">undefined</span> <span class="token operator">?</span> <span class="token keyword">undefined</span> <span class="token operator">:</span> foo<span class="token punctuation">.</span>bar<span class="token punctuation">.</span><span class="token function">baz</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>\u6CE8\u610F\uFF0C\u5982\u679C <code>bar</code> \u662F <code>null</code> \u6216\u8005 <code>undefined</code>\uFF0C\u5728\u8BBF\u95EE <code>bar</code> \u65F6\uFF0C\u7684\u4EE3\u7801\u4ECD\u7136\u4F1A\u629B\u51FA\u4E00\u4E2A\u9519\u8BEF\u3002</p><p>\u4E0E\u6B64\u76F8\u4F3C\uFF0C\u5982\u679C <code>baz</code> \u662F <code>null</code> \u6216\u8005 <code>undefined</code>\uFF0C\u5728\u8C03\u7528\u65F6\uFF0C\u5B83\u4E5F\u4F1A\u629B\u51FA\u4E00\u4E2A\u9519\u8BEF\u3002<code>?.</code> \u53EA\u4F1A\u68C0\u67E5\u5B83\u5DE6\u8FB9\u7684\u503C\u662F <code>undefined</code> \u8FD8\u662F <code>null</code> - \u5E76\u4E0D\u4F1A\u68C0\u67E5\u540E\u9762\u7684\u4EFB\u4F55\u5C5E\u6027\u3002</p><p>\u4F60\u53EF\u80FD\u5DF2\u7ECF\u53D1\u73B0\u4F60\u53EF\u4EE5\u4F7F\u7528 <code>?.</code> \u6765\u66FF\u4EE3\u5F88\u591A\u4F7F\u7528 <code>&amp;&amp;</code> \u6267\u884C\u7A7A\u68C0\u67E5\u7684\u4EE3\u7801\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// Before</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>foo <span class="token operator">&amp;&amp;</span> foo<span class="token punctuation">.</span>bar <span class="token operator">&amp;&amp;</span> foo<span class="token punctuation">.</span>bar<span class="token punctuation">.</span>baz<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
<span class="token punctuation">}</span>

<span class="token comment">// After-ish</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>foo<span class="token operator">?.</span>bar<span class="token operator">?.</span>baz<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>\u6CE8\u610F\uFF1A<code>?.</code> \u4E0E <code>&amp;&amp;</code> \u8FD0\u7B97\u7B26\u884C\u4E3A\u7565\u6709\u4E0D\u540C\uFF0C\u56E0\u4E3A <code>&amp;&amp;</code> \u4E13\u7528\u4E8E &quot;falsy&quot; \u7684\u503C\uFF08\u5982\uFF1A\u7A7A\u5B57\u7B26\u4E32\u3001<code>0</code>\u3001<code>NaN</code>\u3001\u548C <code>false</code>\uFF09\uFF0C\u4F46\u662F <code>?.</code> \u662F\u4E00\u4E2A\u4EC5\u4F5C\u7528\u4E8E\u7ED3\u6784\u4E0A\u7684\u64CD\u4F5C\u7B26\uFF0C<code>?.</code> \u5728\u9A8C\u8BC1\u6709\u6548\u6570\u636E\u5982 <code>0</code> \u6216\u8005\u7A7A\u5B57\u7B26\u4E32\u65F6\uFF0C\u5B83\u5E76\u6CA1\u6709\u4F7F\u7528\u77ED\u8DEF\u9A8C\u8BC1\u7684\u65B9\u5F0F\u3002</p><p>\u53EF\u9009\u94FE\u8FD8\u5305\u542B\u53E6\u5916\u4E24\u4E2A\u8FD0\u7B97\u7B26\uFF0C\u9996\u5148\u662F\u53EF\u9009\u5143\u7D20\u7684\u8BBF\u95EE\uFF0C\u5B83\u7684\u884C\u4E3A\u7C7B\u4F3C\u4E8E\u53EF\u9009\u5C5E\u6027\u7684\u8BBF\u95EE\uFF0C\u4F46\u662F\u5B83\u5141\u8BB8\u8BBF\u95EE\u975E\u6807\u5FD7\u7B26\u5C5E\u6027\uFF08\u4F8B\u5982\uFF1A\u4EFB\u610F\u7684\u5B57\u7B26\u4E32\u3001\u6570\u5B57\u548C symbols\uFF09\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token doc-comment comment">/**
 * Get the first element of the array if we have an array.
 * Otherwise return undefined.
 */</span>
<span class="token keyword">function</span> <span class="token generic-function"><span class="token function">tryGetFirstElement</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>arr<span class="token operator">?</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> arr<span class="token operator">?.</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token comment">// equivalent to</span>
    <span class="token comment">//   return (arr === null || arr === undefined) ?</span>
    <span class="token comment">//       undefined :</span>
    <span class="token comment">//       arr[0];</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>\u53E6\u5916\u4E00\u4E2A\u662F\u53EF\u9009\u8C03\u7528\uFF0C\u5B83\u80FD\u8BA9\u6709\u6761\u4EF6\u7684\u8C03\u7528\u8868\u8FBE\u5F0F\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">makeRequest</span><span class="token punctuation">(</span>url<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> log<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">(</span>msg<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    log<span class="token operator">?.</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Request started at </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toISOString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// roughly equivalent to</span>
    <span class="token comment">//   if (log != null) {</span>
    <span class="token comment">//       log(\`Request started at \${new Date().toISOString()}\`);</span>
    <span class="token comment">//   }</span>

    <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">await</span> <span class="token function">fetch</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    log<span class="token operator">?.</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Request finished at at </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toISOString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>\u53EF\u9009\u94FE\u7684\u300C\u77ED\u8DEF\u8FD0\u7B97\u300D\u884C\u4E3A\u88AB\u5C40\u9650\u5728\u5C5E\u6027\u7684\u8BBF\u95EE\u3001\u8C03\u7528\u4EE5\u53CA\u5143\u7D20\u7684\u8BBF\u95EE --- \u5B83\u4E0D\u4F1A\u6CBF\u4F38\u5230\u540E\u7EED\u7684\u8868\u8FBE\u5F0F\u4E2D\uFF0C\u4E5F\u5C31\u662F\u8BF4\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">let</span> result <span class="token operator">=</span> foo<span class="token operator">?.</span>bar <span class="token operator">/</span> <span class="token function">someComputation</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>\u53EF\u9009\u94FE\u4E0D\u4F1A\u963B\u6B62\u9664\u6CD5\u8FD0\u7B97\u6216\u8005 <code>someComputation()</code> \u8C03\u7528\uFF0C\u5B83\u7B49\u4EF7\u4E8E\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">let</span> temp <span class="token operator">=</span> foo <span class="token operator">===</span> <span class="token keyword">null</span> <span class="token operator">||</span> foo <span class="token operator">===</span> <span class="token keyword">undefined</span> <span class="token operator">?</span> <span class="token keyword">undefined</span> <span class="token operator">:</span> foo<span class="token punctuation">.</span>bar<span class="token punctuation">;</span>

<span class="token keyword">let</span> result <span class="token operator">=</span> temp <span class="token operator">/</span> <span class="token function">someComputation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u5B83\u53EF\u80FD\u4F1A\u5BFC\u81F4\u9664\u6CD5\u8FD0\u7B97\u7684\u7ED3\u679C\u662F <code>undefined</code>\uFF0C\u8FD9\u5C31\u662F\u4E3A\u4EC0\u4E48\u5728 <code>strictNullChecks</code> \u9009\u9879\u4E0B\uFF0C\u4F1A\u629B\u51FA\u4E00\u4E2A\u9519\u8BEF\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">barPercentage</span><span class="token punctuation">(</span>foo<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">{</span> bar<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> foo<span class="token operator">?.</span>bar <span class="token operator">/</span> <span class="token number">100</span><span class="token punctuation">;</span>
    <span class="token comment">//     ~~~~~~~~</span>
    <span class="token comment">// Error: Object is possibly undefined.</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div>`,21),f=s("\u66F4\u591A\u7684\u4FE1\u606F\uFF0C\u4F60\u53EF\u4EE5\u9605\u8BFB "),h={href:"https://github.com/tc39/proposal-optional-chaining/",target:"_blank",rel:"noopener noreferrer"},w=s("proposal"),v=s(" \u4EE5\u53CA\u8BE5\u539F\u59CB\u7684 "),_={href:"https://github.com/microsoft/TypeScript/pull/33294",target:"_blank",rel:"noopener noreferrer"},x=s("PR"),S=e(`<h2 id="nullish-coalescing" tabindex="-1"><a class="header-anchor" href="#nullish-coalescing" aria-hidden="true">#</a> Nullish Coalescing</h2><p>nullish coalescing \u8FD0\u7B97\u7B26\u662F\u53E6\u4E00\u4E2A\u5373\u5C06\u63A8\u51FA\u7684 ECMAScript \u529F\u80FD\uFF0C\u5B83\u4E0E Optional chaining \u4E00\u540C\u88AB\u63A8\u51FA\uFF0C\u5E76\u4E14\u56E2\u961F\u4E00\u76F4\u53C2\u4E0E\u4E86 TC39 \u7684\u6709\u5173\u8BA8\u8BBA\u3002</p><p>\u4F60\u53EF\u4EE5\u8FD9\u4E48\u60F3\u5B83\u7684\u529F\u80FD - <code>??</code> \u8FD0\u7B97\u7B26 - \u5F53\u5904\u7406 <code>null</code> \u6216\u8005 <code>undefined</code> \u65F6\uFF0C\u5B83\u53EF\u4EE5\u4F5C\u4E3A\u4E00\u79CD\u300C\u5012\u9000\u300D\u5230\u9ED8\u8BA4\u503C\u7684\u65B9\u5F0F\uFF0C\u5F53\u5199\u4E0B\u5982\u4E0B\u4EE3\u7801\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">let</span> x <span class="token operator">=</span> foo <span class="token operator">??</span> <span class="token function">bar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>\u8FD9\u79CD\u65B9\u5F0F\u6765\u8868\u793A\u5F53 <code>foo</code> \u503C\u5B58\u5728\u65F6\uFF0C<code>foo</code> \u4F1A\u88AB\u4F7F\u7528\uFF0C\u4F46\u662F\u5F53\u5B83\u662F <code>null</code> \u6216 <code>undefined</code>\uFF0C\u5B83\u4F1A\u8BA1\u7B97 <code>bar()</code>\u3002</p><p>\u5B83\u7B49\u4EF7\u4E8E\u5982\u4E0B\u4EE3\u7801\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">let</span> x <span class="token operator">=</span> foo <span class="token operator">!==</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> foo <span class="token operator">!==</span> <span class="token keyword">undefined</span> <span class="token operator">?</span> foo <span class="token operator">:</span> <span class="token function">bar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>\u5F53\u5C1D\u8BD5\u4F7F\u7528\u4E00\u4E2A\u9ED8\u8BA4\u503C\u65F6\uFF0C<code>??</code> \u8FD0\u7B97\u7B26\u53EF\u4EE5\u88AB <code>||</code> \u66FF\u4EE3\u3002\u4F8B\u5982\uFF0C\u5728\u4E0B\u9762\u7684\u4EE3\u7801\u7247\u6BB5\u4E2D\uFF0C\u5F53\u5C1D\u8BD5\u83B7\u53D6\u6700\u540E\u4E00\u6B21\u50A8\u5B58\u5728 localStorage \u4E2D\u7684 <code>volume</code> \u65F6\uFF08\u5982\u679C\u5B83\u5B58\u5728\uFF09\uFF1B\u4F46\u662F\u5F53\u4F7F\u7528 <code>||</code>\uFF0C\u8FD9\u4F1A\u6709\u4E2A bug\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">initializeAudio</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> volume <span class="token operator">=</span> localStorage<span class="token punctuation">.</span>volume <span class="token operator">||</span> <span class="token number">0.5</span><span class="token punctuation">;</span>

  <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>\u5F53 <code>localStore.volume</code> \u7684\u503C\u662F <code>0</code> \u65F6\uFF0C\u5728\u8FD9\u6BB5\u4EE3\u7801\u91CC\uFF0C\u5C06\u4F1A\u628A <code>volume</code> \u7684\u503C\u8BBE\u7F6E\u4E3A <code>0.5</code>\u3002<code>??</code> \u8FD0\u7B97\u7B26\u80FD\u907F\u514D\u4E00\u4E9B\u4ECE <code>0</code>\u3001<code>NaN</code> \u4EE5\u53CA<code>&#39;&#39;</code> \u8FD9\u4E9B\u88AB\u8BA4\u4E3A\u662F <code>falsy</code> \u503C\u7684\u610F\u5916\u884C\u4E3A\u3002</p><h2 id="\u65AD\u8A00\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#\u65AD\u8A00\u51FD\u6570" aria-hidden="true">#</a> \u65AD\u8A00\u51FD\u6570</h2><p>\u6709\u4E00\u7C7B\u7279\u5B9A\u7684\u51FD\u6570\uFF0C\u5728\u975E\u9884\u671F\u7ED3\u679C\u51FA\u73B0\u65F6\u4F1A\u629B\u51FA\u4E00\u4E2A\u9519\u8BEF\u3002\u8FD9\u7C7B\u51FD\u6570\u5C31\u53EB\u505A\u65AD\u8A00\u51FD\u6570\u3002\u4F8B\u5982\uFF0CNode.js \u6709\u4E00\u4E2A\u4E13\u7528\u7684\u65AD\u8A00\u51FD\u6570\u53EB <code>assert</code>\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">assert</span><span class="token punctuation">(</span>someValue <span class="token operator">===</span> <span class="token number">42</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>\u5728\u8FD9\u4E2A\u793A\u4F8B\u4E2D\uFF0C\u5982\u679C <code>someValue</code> \u4E0D\u7B49\u4E8E <code>42</code>\uFF0C\u90A3\u4E48 <code>assert</code> \u5C31\u4F1A\u629B\u51FA\u4E00\u4E2A <code>AssertionError</code>\u3002</p><p>JavaScript \u4E2D\u7684\u65AD\u8A00\u7ECF\u5E38\u7528\u4E8E\u786E\u4FDD\u4F20\u5165\u7684\u662F\u6B63\u786E\u7684\u7C7B\u578B\u3002 \u6BD4\u5982\uFF0C</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">multiply</span><span class="token punctuation">(</span><span class="token parameter">x<span class="token punctuation">,</span> y</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">assert</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> x <span class="token operator">===</span> <span class="token string">&#39;number&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">assert</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> y <span class="token operator">===</span> <span class="token string">&#39;number&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> x <span class="token operator">*</span> y<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>\u4E0D\u5E78\u7684\u662F\uFF0C\u5728 TypeScript \u4E2D,\u8FD9\u4E9B\u68C0\u67E5\u53EF\u80FD\u4ECE\u6765\u4E0D\u4F1A\u88AB\u6B63\u786E\u7684\u7F16\u5199\u3002\u5BF9\u4E8E\u677E\u6563\u7C7B\u578B\u4EE3\u7801\uFF0C\u610F\u5473\u7740 TypeScript \u68C0\u67E5\u8F83\u5C11\uFF0C\u800C\u5BF9\u4E8E\u7A0D\u5FAE\u89C4\u8303\u4E00\u4E9B\u7684\u5199\u6CD5\uFF0C\u4E00\u822C\u8981\u6C42\u4F7F\u7528\u8005\u6DFB\u52A0\u7C7B\u578B\u65AD\u8A00\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">yell</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">assert</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> str <span class="token operator">===</span> <span class="token string">&#39;string&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> str<span class="token punctuation">.</span><span class="token function">toUppercase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// Oops! We misspelled &#39;toUpperCase&#39;.</span>
  <span class="token comment">// Would be great if TypeScript still caught this!</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>\u8FD9\u91CC\u6709\u53EF\u4F9B\u9009\u62E9\u7684\u66FF\u4EE3\u5199\u6CD5\uFF0C\u53EF\u4EE5\u8BA9 TypeScript \u5206\u6790\u51FA\u95EE\u9898\uFF0C\u4E0D\u8FC7\u5E76\u4E0D\u65B9\u4FBF\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">yell</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> str <span class="token operator">!==</span> <span class="token string">&#39;string&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">TypeError</span><span class="token punctuation">(</span><span class="token string">&#39;str should have been a string.&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// Error caught!</span>
  <span class="token keyword">return</span> str<span class="token punctuation">.</span><span class="token function">toUppercase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>TypeScript \u7684\u76EE\u6807\u662F\u4EE5\u6700\u5C0F\u7684\u6539\u52A8\u4E3A\u73B0\u5B58\u7684 JavaScript \u7ED3\u6784\u6DFB\u52A0\u7C7B\u578B\u58F0\u660E\u3002\u56E0\u6B64\uFF0CTypeScript 3.7 \u5F15\u5165\u4E86\u4E00\u4E2A\u300C\u65AD\u8A00\u7B7E\u540D\uFF08assertion signatures\uFF09\u300D\u7684\u65B0\u6982\u5FF5\uFF0C\u7528\u6765\u6A21\u62DF\u8FD9\u4E9B\u65AD\u8A00\u51FD\u6570\u3002</p><p>\u7B2C\u4E00\u79CD\u65AD\u8A00\u7B7E\u540D\uFF0C\u6A21\u62DF Node \u4E2D\u7684 <code>assert</code> \u51FD\u6570\u7684\u529F\u80FD\u3002\u5B83\u786E\u4FDD\u5728\u65AD\u8A00\u7684\u8303\u56F4\u5185\uFF0C\u65AD\u8A00\u6761\u4EF6\u5FC5\u987B\u4E3A\u8FD9\u4E2A\u771F\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">assert</span><span class="token punctuation">(</span>condition<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">,</span> msg<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">asserts</span> condition <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>condition<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">AssertionError</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p><code>asserts condition</code> \u7684\u610F\u601D\u662F\uFF0C\u5982\u679C <code>assert</code> \u51FD\u6570\u6709\u8FD4\u56DE\uFF0C\u4F20\u5165 <code>condition</code> \u7684\u53C2\u6570\u5FC5\u987B\u4E3A\u771F\uFF0C\u56E0\u4E3A\u5982\u679C\u4E0D\u662F\u8FD9\u6837\uFF0C\u5B83\u80AF\u5B9A\u4F1A\u629B\u51FA\u4E00\u4E2A\u9519\u8BEF\u3002\u8FD9\u610F\u5473\u7740\uFF0C\u5728\u5269\u4E0B\u7684\u4F5C\u7528\u57DF\u4E2D\uFF08if \u6761\u4EF6\u540E\uFF09<code>condition</code> \u5FC5\u987B\u4E3A <code>truthy</code>\u3002</p><p>\u4E3E\u4E00\u4E2A\u4F8B\u5B50\uFF0C\u7528\u8FD9\u4E2A\u65AD\u8A00\u51FD\u6570\u610F\u5473\u7740\u53EF\u4EE5\u5B9E\u73B0\u6355\u83B7\u4E4B\u524D\u7684 <code>yell</code> \u793A\u4F8B\u7684\u9519\u8BEF\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">yell</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">assert</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> str <span class="token operator">===</span> <span class="token string">&quot;string&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> str<span class="token punctuation">.</span><span class="token function">toUppercase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//         ~~~~~~~~~~~</span>
    <span class="token comment">// error: Property &#39;toUppercase&#39; does not exist on type &#39;string&#39;.</span>
    <span class="token comment">//        Did you mean &#39;toUpperCase&#39;?</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">assert</span><span class="token punctuation">(</span>condition<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">,</span> msg<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">asserts</span> condition <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>condition<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">AssertionError</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p>\u53E6\u5916\u4E00\u79CD\u65AD\u8A00\u7B7E\u540D\u4E0D\u662F\u7528\u6765\u6821\u9A8C\u4E00\u4E2A\u6761\u4EF6\uFF0C\u800C\u662F\u544A\u8BC9 TypeScript \u67D0\u4E2A\u53D8\u91CF\u6216\u5C5E\u6027\u6709\u4E0D\u540C\u7684\u7C7B\u578B\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">assertIsString</span><span class="token punctuation">(</span>val<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">asserts</span> val <span class="token keyword">is</span> <span class="token builtin">string</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> val <span class="token operator">!==</span> <span class="token string">&quot;string&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">AssertionError</span><span class="token punctuation">(</span><span class="token string">&quot;Not a string!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>\u8FD9\u91CC <code>asserts val is string</code> \u786E\u4FDD\u5728 <code>assertIsString</code> \u5728\u88AB\u8C03\u7528\u4E4B\u540E, \u4EFB\u4F55\u4F20\u5165\u7684\u53D8\u91CF\u5C06\u88AB\u8BA4\u4E3A\u662F\u4E00\u4E2A <code>string</code>.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">yell</span><span class="token punctuation">(</span>str<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">assertIsString</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// Now TypeScript knows that &#39;str&#39; is a &#39;string&#39;.</span>

  <span class="token keyword">return</span> str<span class="token punctuation">.</span><span class="token function">toUppercase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">//         ~~~~~~~~~~~</span>
  <span class="token comment">// error: Property &#39;toUppercase&#39; does not exist on type &#39;string&#39;.</span>
  <span class="token comment">//        Did you mean &#39;toUpperCase&#39;?</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>\u8FD9\u91CC\u7684\u65AD\u8A00\u7B7E\u540D\u975E\u5E38\u7C7B\u4F3C\u4E8E\u7C7B\u578B\u8C13\u8BCD\uFF08predicate\uFF09\u7B7E\u540D\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">isString</span><span class="token punctuation">(</span>val<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span><span class="token operator">:</span> val <span class="token keyword">is</span> <span class="token builtin">string</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">typeof</span> val <span class="token operator">===</span> <span class="token string">&#39;string&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">yell</span><span class="token punctuation">(</span>str<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isString</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> str<span class="token punctuation">.</span><span class="token function">toUppercase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">throw</span> <span class="token string">&#39;Oops!&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>\u5C31\u50CF\u7C7B\u578B\u8C13\u8BCD\u7B7E\u540D\u4E00\u6837\uFF0C\u8FD9\u4E9B\u65AD\u8A00\u7B7E\u540D\u975E\u5E38\u5F3A\u5927\u7684\u3002\u53EF\u4EE5\u7528\u5B83\u4EEC\u5B9E\u73B0\u4E00\u4E9B\u975E\u5E38\u590D\u6742\u7684\u60F3\u6CD5\u548C\u8BBE\u8BA1\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token generic-function"><span class="token function">assertIsDefined</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>val<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">asserts</span> val <span class="token keyword">is</span> NonNullable<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>val <span class="token operator">===</span> <span class="token keyword">undefined</span> <span class="token operator">||</span> val <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">AssertionError</span><span class="token punctuation">(</span>
            <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Expected &#39;val&#39; to be defined, but received </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>val<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div>`,34),T=s("\u60F3\u9605\u8BFB\u66F4\u591A\u65AD\u8A00\u7B7E\u540D\u76F8\u5173\u5185\u5BB9\uFF0C "),A={href:"https://github.com/microsoft/TypeScript/pull/32695",target:"_blank",rel:"noopener noreferrer"},q=s("\u7B7E\u51FA\u539F\u59CB\u7684 pull request"),D=s("."),J=n("h2",{id:"\u66F4\u597D\u7684\u652F\u6301\u8FD4\u56DE\u51FD\u6570\u7684-never",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u66F4\u597D\u7684\u652F\u6301\u8FD4\u56DE\u51FD\u6570\u7684-never","aria-hidden":"true"},"#"),s(" \u66F4\u597D\u7684\u652F\u6301\u8FD4\u56DE\u51FD\u6570\u7684 "),n("code",null,"never")],-1),O=n("p",null,[s("\u4E3A\u4E86\u80FD\u4F7F\u65AD\u8A00\u7B7E\u540D\u5DE5\u4F5C\uFF0C\u5176\u4E2D\u7684\u4E00\u4E2A\u5DE5\u4F5C\u662F\uFF0CTypeScript \u9700\u8981\u5BF9\u8C03\u7528\u65F6\u7684\u51FD\u6570\uFF0C\u4EE5\u53CA\u4F4D\u7F6E\u4FE1\u606F\u7F16\u7801\u66F4\u591A\u7684\u4FE1\u606F\u3002\u8FD9\u7ED9\u4E86\u6269\u5C55\u53E6\u4E00\u7C7B\u51FD\u6570\u7684\u673A\u4F1A\uFF1A\u8FD4\u56DE "),n("code",null,"never"),s(" \u7684\u51FD\u6570\u3002")],-1),N=s("\u8FD4\u56DE\u4E3A "),j=n("code",null,"never",-1),C=s(" \u7684\u51FD\u6570\uFF0C\u5373\u662F\u6C38\u8FDC\u6CA1\u6709\u8FD4\u56DE\u7684\u51FD\u6570\u3002\u5B83\u8868\u660E\u629B\u51FA\u4E86\u5F02\u5E38\u3001\u7531\u4E8E\u9519\u8BEF\u53D1\u751F\u6682\u505C\u3001\u6216\u8005\u7A0B\u5E8F\u9000\u51FA\u7684\u60C5\u51B5\u3002\u4F8B\u5982\uFF1A"),E={href:"https://github.com/DefinitelyTyped/DefinitelyTyped/blob/5299d372a220584e75a031c13b3d555607af13f8/types/node/globals.d.ts#l874",target:"_blank",rel:"noopener noreferrer"},F=n("code",null,"process.exit(...)",-1),U=s(" \u4E2D\u7684 "),P=n("code",null,"@types/node",-1),V=s(" \u6307\u5B9A\u8FD4\u56DE\u4E3A "),I=n("code",null,"never",-1),R=s("\u3002"),B=e(`<p>\u4E3A\u4E86\u786E\u4FDD\u51FD\u6570\u6C38\u8FDC\u4E0D\u4F1A\u8FD4\u56DE\u6F5C\u5728\u7684 <code>undefined</code>\uFF0C\u6216\u8005\u4ECE\u6240\u6709\u7684\u4EE3\u7801\u8DEF\u5F84\u4E2D\u6709\u6548\u8FD4\u56DE\uFF0CTypeScript \u9700\u8981\u4E00\u4E9B\u53E5\u6CD5\uFF08syntactic\uFF09\u4FE1\u53F7 - \u53EF\u4EE5\u662F\u51FD\u6570\u672B\u5C3E\u7684 <code>return</code> \u6216\u8005 <code>thorw</code>\u3002\u56E0\u6B64\u4F7F\u7528\u8005\u5C31\u4F1A\u53D1\u73B0\u81EA\u5DF1\u6B63\u5728\u8FD4\u56DE\u5B83\u4EEC\u7684\u6545\u969C\u51FD\u6570\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">dispatch</span><span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> SomeType <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> x <span class="token operator">===</span> <span class="token string">&#39;string&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">doThingWithString</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> x <span class="token operator">===</span> <span class="token string">&#39;number&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">doThingWithNumber</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> process<span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>\u73B0\u5728\uFF0C\u5F53\u51FD\u6570\u88AB\u8C03\u7528\u65F6\uFF0CTypeScript \u80FD\u8BC6\u522B\u51FA\u5B83\u4EEC\u4F1A\u5F71\u54CD\u7684\u6D41\u7A0B\u5E76\u8BF4\u660E\u539F\u56E0\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">dispatch</span><span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> SomeType <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> x <span class="token operator">===</span> <span class="token string">&#39;string&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">doThingWithString</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> x <span class="token operator">===</span> <span class="token string">&#39;number&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">doThingWithNumber</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  process<span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div>`,4),z=s("\u4E0E\u65AD\u8A00\u51FD\u6570\u4E00\u6837\uFF0C\u5177\u4F53\u8BE6\u60C5\uFF0C\u4F60\u53EF\u4EE5\u67E5\u770B\u6B64 "),W={href:"https://github.com/microsoft/TypeScript/pull/32695",target:"_blank",rel:"noopener noreferrer"},H=s("PR"),L=e(`<h2 id="\u9012\u5F52\u7684\u7C7B\u578B\u522B\u540D" tabindex="-1"><a class="header-anchor" href="#\u9012\u5F52\u7684\u7C7B\u578B\u522B\u540D" aria-hidden="true">#</a> \u9012\u5F52\u7684\u7C7B\u578B\u522B\u540D</h2><p>\u7C7B\u578B\u522B\u540D\u5728\u5982\u4F55\u201C\u9012\u5F52\u201D\u5F15\u7528\u65B9\u9762\u4E00\u76F4\u5B58\u5728\u5C40\u9650\u6027\uFF0C\u539F\u56E0\u5728\u4E8E\u5BF9\u7C7B\u578B\u522B\u540D\u7684\u4EFB\u4F55\u4F7F\u7528\u90FD\u5FC5\u987B\u80FD\u591F\u7528\u8FD9\u4E2A\u6765\u4EE3\u66FF\u81EA\u5DF1\u3002\u5728\u67D0\u4E9B\u60C5\u51B5\u4E0B\uFF0C\u8FD9\u662F\u4E0D\u53EF\u80FD\u7684\uFF0C\u56E0\u6B64\u7F16\u8BD1\u5668\uFF0C\u4F1A\u62D2\u7EDD\u67D0\u4E9B\u522B\u540D\u7684\u9012\u5F52\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">Foo</span> <span class="token operator">=</span> Foo<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>\u8FD9\u662F\u4E00\u4E2A\u5408\u7406\u7684\u9650\u5236\uFF0C\u56E0\u4E3A <code>Foo</code> \u7684\u4EFB\u4F55\u4F7F\u7528\u90FD\u53EF\u4EE5\u88AB <code>Foo</code> \u66FF\u4EE3\uFF0C<code>Foo</code> \u7684\u4EFB\u4F55\u4F7F\u7528\u90FD\u53EF\u4EE5\u88AB <code>Foo</code> \u66FF\u4EE3\uFF08\u65E0\u9650\u5FAA\u73AF\uFF09\uFF0C\u5230\u6700\u540E\uFF0C\u6CA1\u6709\u7C7B\u578B\u53EF\u4EE5\u66FF\u4EE3 <code>Foo</code></p><p>\u8FD9\u4E0E\u5176\u4ED6\u8BED\u8A00\u5904\u7406\u7C7B\u578B\u522B\u540D\u65F6\u662F\u4E00\u81F4\u7684\u3002\u4F46\u662F\u5728\u7528\u6237\u5982\u4F55\u5229\u7528\u8BE5\u529F\u80FD\u65B9\u9762\uFF0C\u5B83\u786E\u5B9E\u9020\u6210\u4E86\u4E00\u4E9B\u4EE4\u4EBA\u7591\u60D1\u7684\u60C5\u666F\uFF0C\u4F8B\u5982\uFF0C\u5728 TypeScript 3.6 \u53CA\u5176\u4EE5\u4E0B\u7248\u672C\u65F6\uFF0C\u4E0B\u9762\u7684\u4EE3\u7801\u4F1A\u629B\u51FA\u9519\u8BEF\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">ValueOrArray<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token constant">T</span> <span class="token operator">|</span> <span class="token builtin">Array</span><span class="token operator">&lt;</span>ValueOrArray<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;&gt;</span><span class="token punctuation">;</span>
<span class="token comment">//   ~~~~~~~~~~~~</span>
<span class="token comment">// error: Type alias &#39;ValueOrArray&#39; circularly references itself.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u8FD9\u5F88\u4EE4\u4EBA\u7591\u60D1\uFF0C\u56E0\u4E3A\u4ECE\u6280\u672F\u4E0A\u8BB2\uFF0C\u8FD9\u6CA1\u6709\u9519\u8BEF\u3002\u4F7F\u7528\u8005\u4E5F\u53EF\u4EE5\u901A\u8FC7\u5F15\u5165\u63A5\u53E3\u7684\u65B9\u5F0F\u6765\u5B9E\u73B0\u4E0A\u8FF0\u4E2D\u76F8\u540C\u4F5C\u7528\u7684\u4EE3\u7801\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">ValueOrArray<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token constant">T</span> <span class="token operator">|</span> ArrayOfValueOrArray<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>

<span class="token keyword">interface</span> <span class="token class-name">ArrayOfValueOrArray<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token builtin">Array</span><span class="token operator">&lt;</span>ValueOrArray<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;&gt;</span></span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u56E0\u4E3A\u63A5\u53E3\uFF08\u548C\u5176\u4ED6\u5BF9\u8C61\u7C7B\u578B\uFF09\u5F15\u5165\u4E86\u4E00\u4E2A\u4E2D\u95F4\u7C7B\u578B\uFF0C\u5E76\u4E14\u4E0D\u9700\u8981\u7ACB\u9A6C\u6784\u5EFA\u5B83\u4EEC\u7684\u5B8C\u6574\u7ED3\u6784\uFF0C\u56E0\u6B64 TypeScript \u5728\u4F7F\u7528\u8FD9\u79CD\u7ED3\u6784\u65F6\u6CA1\u6709\u95EE\u9898\u3002\u4F46\u662F\u5BF9\u4E8E\u4F7F\u7528\u8005\u6765\u8BF4\uFF0C\u5F15\u5165\u4E00\u4E2A\u4E2D\u95F4\u7C7B\u578B\u6765\u8BF4\uFF0C\u5E76\u4E0D\u662F\u5F88\u76F4\u89C2\u3002\u539F\u5219\u4E0A\uFF0C\u76F4\u63A5\u4F7F\u7528 <code>Array</code> \u7684 <code>ValueOrArray</code> \u7684\u539F\u59CB\u7248\u672C\u786E\u5B9E\u6CA1\u6709\u4EFB\u4F55\u95EE\u9898\u3002\u5047\u5982\u7F16\u8BD1\u5668\u6709\u4E00\u70B9\u201C\u5077\u61D2\u201D\uFF0C\u5E76\u4E14\u53EA\u5728\u5FC5\u8981\u65F6\u624D\u8BA1\u7B97 <code>Array</code> \u7684\u7C7B\u578B\u53C2\u6570\uFF0C\u5219 TypeScript \u53EF\u4EE5\u6B63\u786E\u8868\u793A\u51FA\u8FD9\u4E9B\u3002</p><p>\u8FD9\u6B63\u662F TypeScript 3.7 \u6240\u5F15\u5165\u7684\u5185\u5BB9\uFF0C\u5728\u6700\u9876\u7EA7\u7684\u7C7B\u578B\u522B\u540D\u4E2D\uFF0CTypeScript \u5C06\u4F1A\u63A8\u8FDF\u89E3\u6790\u7C7B\u578B\u53C2\u6570\uFF0C\u5DF2\u5141\u8BB8\u8FD9\u79CD\u60C5\u51B5\u7684\u53D1\u751F\u3002</p><p>\u8FD9\u610F\u5473\u7740\uFF0C\u4EE5\u4E0B\u4EE3\u7801\u80FD\u6210\u7ACB\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">Json</span> <span class="token operator">=</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span> <span class="token operator">|</span> <span class="token builtin">boolean</span> <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token operator">|</span> JsonObject <span class="token operator">|</span> JsonArray<span class="token punctuation">;</span>

<span class="token keyword">interface</span> <span class="token class-name">JsonObject</span> <span class="token punctuation">{</span>
  <span class="token punctuation">[</span>property<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">]</span><span class="token operator">:</span> Json<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">interface</span> <span class="token class-name">JsonArray</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token builtin">Array</span><span class="token operator">&lt;</span>Json<span class="token operator">&gt;</span></span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>\u5728\u6CA1\u6709\u4E2D\u95F4 interface \u65F6\uFF0C\u80FD\u91CD\u5199\u4E3A\u4EE5\u4E0B\u5F62\u5F0F\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">Json</span> <span class="token operator">=</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span> <span class="token operator">|</span> <span class="token builtin">boolean</span> <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token operator">|</span> <span class="token punctuation">{</span> <span class="token punctuation">[</span>property<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">]</span><span class="token operator">:</span> Json <span class="token punctuation">}</span> <span class="token operator">|</span> Json<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>\u8FD9\u79CD\u65B0\u7684\u884C\u4E3A\uFF0C\u53EF\u4EE5\u8BA9\u5728\u5143\u7EC4\u4E2D\u9012\u5F52\u4F7F\u7528\u7C7B\u578B\u522B\u540D\uFF0C\u4E0B\u9762\u7684\u4EE3\u7801\uFF0C\u5728\u4EE5\u524D\u4F1A\u629B\u51FA\u9519\u8BEF\uFF0C\u4F46\u662F\u73B0\u5728\u662F\u6709\u6548\u7684\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">VirtualNode</span> <span class="token operator">=</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token punctuation">[</span>key<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token builtin">any</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token operator">...</span>VirtualNode<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> myNode<span class="token operator">:</span> VirtualNode <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token string">&#39;div&#39;</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> id<span class="token operator">:</span> <span class="token string">&#39;parent&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">[</span><span class="token string">&#39;div&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> id<span class="token operator">:</span> <span class="token string">&#39;first-child&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&quot;I&#39;m the first child&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">[</span><span class="token string">&#39;div&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> id<span class="token operator">:</span> <span class="token string">&#39;second-child&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&quot;I&#39;m the second child&quot;</span><span class="token punctuation">]</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div>`,16),$=s("\u66F4\u591A\u4FE1\u606F\uFF0C\u4F60\u53EF\u4EE5\u67E5\u770B "),Q={href:"https://github.com/microsoft/TypeScript/pull/33050",target:"_blank",rel:"noopener noreferrer"},G=s("PR"),K=s("\u3002"),M=e(`<h2 id="declaration-and-allowjs" tabindex="-1"><a class="header-anchor" href="#declaration-and-allowjs" aria-hidden="true">#</a> <code>--declaration</code> and <code>--allowJs</code></h2><p><code>--declaration</code> \u9009\u9879\u53EF\u4EE5\u8BA9\u4ECE TypeScript \u6E90\u6587\u4EF6\uFF08\u5982 <code>.ts</code>\u3001<code>.tsx</code> \u6587\u4EF6\uFF09\u4E2D\u751F\u6210 <code>.d.ts</code>\uFF08\u58F0\u660E\u6587\u4EF6\uFF09\u3002\u8FD9\u4E9B <code>.d.ts</code> \u6587\u4EF6\u4E3A\u4EC0\u4E48\u5F88\u91CD\u8981\uFF0C\u6709\u4EE5\u4E0B\u539F\u56E0\uFF1A</p><p>\u9996\u5148\uFF0C\u5B83\u4EEC\u5141\u8BB8 TypeScript \u5728\u4E0D\u9700\u8981\u91CD\u65B0\u68C0\u67E5\u6E90\u4EE3\u7801\u7684\u60C5\u51B5\u4E0B\uFF0C\u80FD\u5BF9\u5176\u4ED6\u9879\u76EE\u8FDB\u884C\u7C7B\u578B\u68C0\u67E5\u3002\u5176\u6B21\uFF0C\u5B83\u4EEC\u5141\u8BB8 TypeScript \u4E0E\u6CA1\u6709\u4F7F\u7528 TypeScript \u6784\u5EFA\u7684 JavaScript \u5E93\u4E4B\u95F4\u66F4\u597D\u7684\u534F\u4F5C\u3002\u6700\u540E\uFF0C\u4E00\u4E2A\u88AB\u7ECF\u5E38\u5FFD\u7565\u5C0F\u7EC6\u8282\uFF1A\u5F53\u4F7F\u7528\u7531 TypeScript \u9A71\u52A8\u7684\u7F16\u8F91\u5668\u6765\u83B7\u5F97\u4E00\u4E9B\u66F4\u597D\u529F\u80FD\uFF08\u6BD4\u5982\u81EA\u52A8\u5B8C\u6210\uFF09\u65F6\uFF0CTypeScript \u548C JavaScript \u7528\u6237\u90FD\u53EF\u4EE5\u4ECE\u8FD9\u4E9B\u6587\u4EF6\u4E2D\u53D7\u76CA\u3002</p><p>\u4E0D\u5E78\u7684\u662F\uFF0C<code>--declaration</code> \u4E0E <code>--allowJs</code> \u5E76\u4E0D\u80FD\u4E00\u8D77\u4F7F\u7528\uFF0C<code>--declaration</code> \u9009\u9879\u4F1A\u6DF7\u5408 TypeScript \u548C JavaScript \u8F93\u5165\u6587\u4EF6\u3002\u8FD9\u662F\u4E00\u4E2A\u4EE4\u4EBA\u6CAE\u4E27\u7684\u9650\u5236\uFF0C\u56E0\u4E3A\u5B83\u610F\u5473\u7740\u7528\u6237\u5728\u8FC1\u79FB\u4EE3\u7801\u5E93\u65F6\uFF0C\u4E0D\u80FD\u4F7F\u7528 <code>--declaration</code> \u9009\u9879\uFF0C\u5373\u4F7F\u662F\u4F7F\u7528\u4E86 JSDoc \u5F62\u5F0F\u7684\u6CE8\u91CA\u3002TypeScript 3.7 \u6539\u53D8\u4E86\u6B64\u884C\u4E3A\uFF0C\u5B83\u80FD\u8BA9\u4E24\u4E2A\u9009\u9879\u540C\u65F6\u4F7F\u7528\u3002</p><p>\u6B64\u529F\u80FD\u5E26\u6765\u6700\u6709\u5F71\u54CD\u529B\u7684\u7ED3\u679C\uFF0C\u53EF\u80FD\u5E76\u4E0D\u5BB9\u6613\u88AB\u53D1\u73B0\uFF1A\u5728 TypeScript 3.7 \u4E2D\uFF0C\u7528\u6237\u5728 JavaScript \u5E93\u4E2D\u5199\u7684 JSDoc \u6CE8\u91CA\uFF0C\u80FD\u5E2E\u52A9 TypeScript \u7528\u6237\u3002</p><p>\u5B83\u4E4B\u6240\u4EE5\u80FD\u5B9E\u73B0\uFF0C\u662F\u56E0\u4E3A\uFF1A\u5F53\u4F7F\u7528 <code>allowJs</code> \u65F6\uFF0CTypeScript \u4F1A\u5C3D\u53EF\u80FD\u7684\u5206\u6790\u4EE3\u7801\u6765\u4E86\u89E3\u5E38\u89C1\u7684 JavaScript \u6A21\u5F0F\u3002\u7136\u800C\uFF0C\u4E00\u4E9B\u5728 JavaScript \u80FD\u8868\u793A\u7684\u6A21\u5F0F\uFF0C\u5E76\u4E0D\u4E00\u5B9A\u80FD\u5728 TypeScript \u7B49\u6548\u8868\u793A\u51FA\u6765\u3002\u5F53 <code>declaration</code> \u9009\u9879\u6253\u5F00\u65F6\uFF0CTypeScript \u4F1A\u627E\u51FA\u5C06 JSDoc \u6CE8\u91CA\u548C CommonJS \u8F93\u51FA\u5230 <code>.d.ts</code> \u6587\u4EF6\u4E2D\u7684\u7C7B\u578B\u58F0\u660E\u7684\u6700\u4F73\u65B9\u5F0F\u3002</p><p>\u8BF7\u770B\u5982\u4E0B\u4F8B\u5B50\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> assert <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;assert&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

module<span class="token punctuation">.</span>exports<span class="token punctuation">.</span>blurImage <span class="token operator">=</span> blurImage<span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * Produces a blurred image from an input buffer.
 *
 * <span class="token keyword">@param</span> <span class="token parameter">input</span> <span class="token punctuation">{</span>Uint8Array<span class="token punctuation">}</span>
 * <span class="token keyword">@param</span> <span class="token parameter">width</span> <span class="token punctuation">{</span>number<span class="token punctuation">}</span>
 * <span class="token keyword">@param</span> <span class="token parameter">height</span> <span class="token punctuation">{</span>number<span class="token punctuation">}</span>
 */</span>
<span class="token keyword">function</span> <span class="token function">blurImage</span><span class="token punctuation">(</span><span class="token parameter">input<span class="token punctuation">,</span> width<span class="token punctuation">,</span> height</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> numPixels <span class="token operator">=</span> width <span class="token operator">*</span> height <span class="token operator">*</span> <span class="token number">4</span><span class="token punctuation">;</span>
  <span class="token function">assert</span><span class="token punctuation">(</span>input<span class="token punctuation">.</span>length <span class="token operator">===</span> numPixels<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Uint8Array</span><span class="token punctuation">(</span>numPixels<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// TODO</span>

  <span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><p>\u5C06\u4F1A\u4EA7\u751F\u5982\u4E0B\u7684 <code>.d.ts</code></p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token doc-comment comment">/**
 * Produces a blurred image from an input buffer.
 *
 * <span class="token keyword">@param</span> <span class="token parameter">input</span> <span class="token punctuation">{</span>Uint8Array<span class="token punctuation">}</span>
 * <span class="token keyword">@param</span> <span class="token parameter">width</span> <span class="token punctuation">{</span>number<span class="token punctuation">}</span>
 * <span class="token keyword">@param</span> <span class="token parameter">height</span> <span class="token punctuation">{</span>number<span class="token punctuation">}</span>
 */</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">blurImage</span><span class="token punctuation">(</span>input<span class="token operator">:</span> Uint8Array<span class="token punctuation">,</span> width<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> height<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> Uint8Array<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>\u4F7F\u7528 <code>@param</code> \u6CE8\u89E3\u4E5F\u6709\u76CA\u5904\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@callback</span> Job
 * <span class="token keyword">@returns</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token keyword">void</span><span class="token punctuation">}</span></span>
 */</span>

<span class="token doc-comment comment">/** Queues work */</span>
<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">Worker</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">maxDepth <span class="token operator">=</span> <span class="token number">10</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>started <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>depthLimit <span class="token operator">=</span> maxDepth<span class="token punctuation">;</span>
    <span class="token doc-comment comment">/**
     * NOTE: queued jobs may add more items to queue
     * <span class="token keyword">@type</span> <span class="token class-name"><span class="token punctuation">{</span>Job<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span>
     */</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>queue <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token doc-comment comment">/**
   * Adds a work item to the queue
   * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>Job<span class="token punctuation">}</span></span> <span class="token parameter">work</span>
   */</span>
  <span class="token function">push</span><span class="token punctuation">(</span><span class="token parameter">work</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>queue<span class="token punctuation">.</span>length <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">&gt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>depthLimit<span class="token punctuation">)</span> <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&#39;Queue full!&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>queue<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>work<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token doc-comment comment">/**
   * Starts the queue if it has not yet started
   */</span>
  <span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>started<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>started <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>queue<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token doc-comment comment">/** <span class="token keyword">@type</span> <span class="token class-name"><span class="token punctuation">{</span>Job<span class="token punctuation">}</span></span> */</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>queue<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br></div></div><p>\u5C06\u4F1A\u751F\u6210\u5982\u4E0B <code>.d.ts</code></p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@callback</span> Job
 * <span class="token keyword">@returns</span> <span class="token punctuation">{</span>void<span class="token punctuation">}</span>
 */</span>
<span class="token doc-comment comment">/** Queues work */</span>
<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">Worker</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span>maxDepth<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  started<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
  depthLimit<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
  <span class="token doc-comment comment">/**
   * NOTE: queued jobs may add more items to queue
   * <span class="token keyword">@type</span> <span class="token punctuation">{</span>Job[]<span class="token punctuation">}</span>
   */</span>
  queue<span class="token operator">:</span> Job<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token doc-comment comment">/**
   * Adds a work item to the queue
   * <span class="token keyword">@param</span> <span class="token punctuation">{</span>Job<span class="token punctuation">}</span> work
   */</span>
  <span class="token function">push</span><span class="token punctuation">(</span>work<span class="token operator">:</span> Job<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>
  <span class="token doc-comment comment">/**
   * Starts the queue if it has not yet started
   */</span>
  <span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">export</span> <span class="token keyword">type</span> <span class="token class-name">Job</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><p>\u6CE8\u610F\uFF0C\u5982\u679C\u4F60\u60F3\u4E00\u8D77\u4F7F\u7528\u8FD9\u4E9B\u9009\u9879\uFF0CTypeScript \u4E0D\u9700\u8981\u542B\u6709\u5BF9\u5E94\u7684 <code>.js</code> \u6587\u4EF6\uFF0C\u5982\u679C\u53EA\u662F\u9700\u8981 TypeScript \u751F\u6210\u7B80\u5355\u7684 <code>.d.ts</code> \u6587\u4EF6\uFF0C\u4F7F\u7528 <code>--emitDeclarationOnly</code> \u9009\u9879\u5373\u53EF\u3002</p>`,15),X=s("\u66F4\u591A\u8BE6\u60C5\uFF0C\u8BF7\u53C2\u8003 "),Y={href:"https://github.com/microsoft/TypeScript/pull/32372",target:"_blank",rel:"noopener noreferrer"},Z=s("PR"),nn=s("For more details, you can "),sn={href:"https://github.com/microsoft/TypeScript/pull/32372",target:"_blank",rel:"noopener noreferrer"},an=s("check out the original pull request"),pn=s("."),en=e(`<h2 id="usedefineforclassfields-\u6807\u8BB0\u4E0E-declare-\u5C5E\u6027\u4FEE\u9970\u7B26" tabindex="-1"><a class="header-anchor" href="#usedefineforclassfields-\u6807\u8BB0\u4E0E-declare-\u5C5E\u6027\u4FEE\u9970\u7B26" aria-hidden="true">#</a> <code>useDefineForClassFields</code> \u6807\u8BB0\u4E0E <code>declare</code> \u5C5E\u6027\u4FEE\u9970\u7B26</h2><p>\u5F53\u5728 TypeScript \u4E2D\u5B9E\u73B0 class \u4E2D\u7684\u516C\u6709\u5B57\u6BB5\u65F6\uFF0C\u5C3D\u53EF\u80FD\u7684\u5B9E\u73B0\u4E86\u4EE5\u4E0B\u4EE3\u7801\u529F\u80FD\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name"><span class="token constant">C</span></span> <span class="token punctuation">{</span>
  foo <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span>
  bar<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>\u5B83\u7B49\u540C\u4E8E\u6784\u9020\u51FD\u6570\u5185\u7684\u76F8\u4F3C\u8BED\u53E5\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name"><span class="token constant">C</span></span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>foo <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>\u4E0D\u5E78\u7684\u662F\uFF0C\u867D\u7136\u8FD9\u662F TC39 \u65E9\u671F\u63D0\u6848\u7684\u53D1\u5C55\u65B9\u5411\uFF0C\u4F46\u662F\u6781\u6709\u53EF\u80FD\u5BF9\u4E8E\u516C\u5171 class \u5B57\u6BB5\u6709\u4E0D\u540C\u7684\u6807\u51C6\u5316\u65B9\u5411\u3002\u56E0\u6B64\uFF0C\u539F\u59CB\u7684\u4EE3\u7801\u53EF\u80FD\u4F1A\u88AB\u7F16\u8BD1\u6210\u5982\u4E0B\u4EE3\u7801\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name"><span class="token constant">C</span></span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    Object<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token string">&#39;foo&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
      enumerable<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
      configurable<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
      writable<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
      value<span class="token operator">:</span> <span class="token number">100</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    Object<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token string">&#39;bar&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
      enumerable<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
      configurable<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
      writable<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
      value<span class="token operator">:</span> <span class="token keyword">void</span> <span class="token number">0</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><p>\u5F53\u7136 TypeScript 3.7 \u7248\u672C\u5728\u9ED8\u8BA4\u60C5\u51B5\u4E0B\u7F16\u8BD1\u51FA\u7684\u4EE3\u7801\u4E0D\u4F1A\u6709\u4EFB\u4F55\u6539\u53D8\uFF08\u4E0E\u4EE5\u524D\u7248\u672C\u76F8\u540C\uFF09\uFF0C\u4E00\u76F4\u5728\u9010\u6B65\u66F4\u6539\uFF0C\u6765\u5E2E\u52A9\u7528\u6237\u51CF\u5C11\u53EF\u80FD\u53D1\u751F\u7684\u7834\u574F\u6027\u66F4\u6539\u3002\u63D0\u4F9B\u6765\u4E00\u4E2A\u65B0\u7684\u6807\u5FD7 <code>useDefineForClassFields</code> \u6765\u4F7F\u7528\u6B64\u79CD\u6A21\u5F0F\uFF0C\u5E76\u5E26\u6709\u4E00\u4E9B\u65B0\u7684\u903B\u8F91\u68C0\u67E5\u3002</p><p>\u6700\u5927\u7684\u4E24\u4E2A\u6539\u53D8\u5982\u4E0B\uFF1A</p><ul><li>\u4F7F\u7528 <code>Object.defineProperty</code> \u6765\u521D\u59CB\u5316\u58F0\u660E\u3002</li><li>\u521D\u59CB\u5316\u7684\u503C\u90FD\u662F undefined\uFF0C\u5373\u4F7F\u662F\u5B83\u4EEC\u6CA1\u6709\u88AB\u521D\u59CB\u5316\u3002</li></ul><p>\u5BF9\u4E8E\u4F7F\u7528\u7EE7\u627F\u7684\u4EE3\u7801\u6765\u8BF4\uFF0C\u8FD9\u53EF\u80FD\u4F1A\u9020\u6210\u5F88\u591A\u95EE\u9898\u3002\u9996\u5148\uFF0C\u6765\u81EA\u4E8E\u57FA\u7C7B\u7684 set \u8BBF\u95EE\u5668\uFF0C\u4E0D\u518D\u4F1A\u88AB\u89E6\u53D1 -- \u5B83\u53EF\u80FD\u4F1A\u88AB\u5B8C\u5168\u91CD\u5199\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name">Base</span> <span class="token punctuation">{</span>
  <span class="token keyword">set</span> <span class="token function">data</span><span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;data changed to &#39;</span> <span class="token operator">+</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">Derived</span> <span class="token keyword">extends</span> <span class="token class-name">Base</span> <span class="token punctuation">{</span>
  <span class="token comment">// No longer triggers a &#39;console.log&#39;</span>
  <span class="token comment">// when using &#39;useDefineForClassFields&#39;.</span>
  data <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>\u5176\u6B21\uFF0C\u5728\u57FA\u7C7B\u4E2D\u4F7F\u7528\u4E00\u4E2A\u7C7B\u5B57\u6BB5\u6765\u4E13\u95E8\u6307\u5B9A\u4E00\u4E2A\u5C5E\u6027\uFF0C\u5B83\u4E5F\u4E0D\u4F1A\u6B63\u5E38\u5DE5\u4F5C\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">Animal</span> <span class="token punctuation">{</span>
  animalStuff<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">interface</span> <span class="token class-name">Dog</span> <span class="token keyword">extends</span> <span class="token class-name">Animal</span> <span class="token punctuation">{</span>
  dogStuff<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">AnimalHouse</span> <span class="token punctuation">{</span>
  resident<span class="token operator">:</span> Animal<span class="token punctuation">;</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span>animal<span class="token operator">:</span> Animal<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>resident <span class="token operator">=</span> animal<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">DogHouse</span> <span class="token keyword">extends</span> <span class="token class-name">AnimalHouse</span> <span class="token punctuation">{</span>
  <span class="token comment">// Initializes &#39;resident&#39; to &#39;undefined&#39;</span>
  <span class="token comment">// after the call to &#39;super()&#39; when</span>
  <span class="token comment">// using &#39;useDefineForClassFields&#39;!</span>
  resident<span class="token operator">:</span> Dog<span class="token punctuation">;</span>

  <span class="token function">constructor</span><span class="token punctuation">(</span>dog<span class="token operator">:</span> Dog<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">super</span><span class="token punctuation">(</span>dog<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><p>\u8FD9\u4E24\u4E2A\u95EE\u9898\uFF0C\u53EF\u4EE5\u5F52\u7ED3\u4E3A\u5728\u6CA1\u6709\u521D\u59CB\u5316\u7684\u60C5\u51B5\u4E0B\uFF0C\u6DF7\u5408\u5C5E\u6027\u4E0E\u8BBF\u95EE\u5668\u65F6\uFF0C\u5C06\u4F1A\u6709\u91CD\u590D\u58F0\u660E\u51FA\u73B0\u3002</p><p>\u4E3A\u4E86\u68C0\u67E5\u8BBF\u95EE\u5668\u662F\u5426\u6709\u4E0A\u8FF0\u95EE\u9898\uFF0CTypeScript 3.7 \u5C06\u4F1A\u5728 .d.ts \u4E2D\u7F16\u8BD1\u51FA <code>get</code>/<code>set</code>\uFF0C\u4E8E\u662F TypeScript \u80FD\u591F\u68C0\u67E5\u51FA\u662F\u5426\u6709\u91CD\u5199\u8BBF\u95EE\u5668\u7684\u95EE\u9898\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name">Base</span> <span class="token punctuation">{</span>
  <span class="token keyword">set</span> <span class="token function">data</span><span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;data changed to &#39;</span> <span class="token operator">+</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">Derived</span> <span class="token keyword">extends</span> <span class="token class-name">Base</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    data <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>\u4E3A\u4E86\u89E3\u51B3\u7B2C\u4E8C\u4E2A\u95EE\u9898\uFF0C\u4F60\u53EF\u4EE5\u6DFB\u52A0\u4E00\u4E2A\u663E\u793A\u7684\u521D\u59CB\u5316\u503C\uFF0C\u6216\u8005\u6DFB\u52A0\u4E00\u4E2A <code>declare</code> \u4FEE\u9970\u7B26\u6765\u8868\u660E\u8BE5\u5C5E\u6027\u4E0D\u4F1A\u88AB\u7F16\u8BD1\u51FA\u4EFB\u4F55\u503C\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">Animal</span> <span class="token punctuation">{</span>
  animalStuff<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">interface</span> <span class="token class-name">Dog</span> <span class="token keyword">extends</span> <span class="token class-name">Animal</span> <span class="token punctuation">{</span>
  dogStuff<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">AnimalHouse</span> <span class="token punctuation">{</span>
  resident<span class="token operator">:</span> Animal<span class="token punctuation">;</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span>animal<span class="token operator">:</span> Animal<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>resident <span class="token operator">=</span> animal<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">DogHouse</span> <span class="token keyword">extends</span> <span class="token class-name">AnimalHouse</span> <span class="token punctuation">{</span>
  <span class="token keyword">declare</span> resident<span class="token operator">:</span> Dog<span class="token punctuation">;</span>
  <span class="token comment">//      ^^^^^^^^</span>
  <span class="token comment">// &#39;resident&#39; now has a &#39;declare&#39; modifier,</span>
  <span class="token comment">// and won&#39;t produce any output code.</span>

  <span class="token function">constructor</span><span class="token punctuation">(</span>dog<span class="token operator">:</span> Dog<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">super</span><span class="token punctuation">(</span>dog<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><p>\u73B0\u5728\uFF0C\u53EA\u6709\u5F53\u7F16\u8BD1\u76EE\u6807\u662F ES5 \u53CA\u5176\u4EE5\u4E0A\u65F6\uFF0C<code>useDefineForClassFields</code> \u7F16\u8BD1\u9009\u9879\u624D\u53EF\u7528\uFF0C\u56E0\u4E3A ES3 \u5E76\u6CA1\u6709 <code>Object.defineProperty</code>\u3002\u8981\u5B9E\u73B0\u7C7B\u4F3C\u7684\u95EE\u9898\u68C0\u67E5\uFF0C\u4F60\u53EF\u4EE5\u521B\u5EFA\u4E00\u4E2A\u7F16\u8BD1\u76EE\u6807\u4E3A ES5 \u5E76\u4E14\u4F7F\u7528 <code>--noEmit</code> \u6765\u907F\u514D\u5B8C\u5168\u6784\u5EFA\u7684\u5355\u72EC\u9879\u76EE\u3002</p>`,20),tn=s("\u66F4\u591A\u7684\u4FE1\u606F\uFF0C\u4F60\u53EF\u4EE5\u67E5\u770B\u6B64 "),on={href:"https://github.com/microsoft/TypeScript/pull/33509",target:"_blank",rel:"noopener noreferrer"},cn=s("PR"),ln=s("\u3002"),rn=n("h2",{id:"\u7F16\u8F91\u6709\u9879\u76EE\u5F15\u7528\u7684\u9879\u76EE-\u65E0\u9700\u6784\u5EFA",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u7F16\u8F91\u6709\u9879\u76EE\u5F15\u7528\u7684\u9879\u76EE-\u65E0\u9700\u6784\u5EFA","aria-hidden":"true"},"#"),s(" \u7F16\u8F91\u6709\u9879\u76EE\u5F15\u7528\u7684\u9879\u76EE\uFF0C\u65E0\u9700\u6784\u5EFA")],-1),un=n("p",null,"TypeScript \u7684\u9879\u76EE\u5F15\u7528\u529F\u80FD\u7ED9\u63D0\u4F9B\u4E86\u4E00\u4E2A\u65B9\u4FBF\u7684\u65B9\u5F0F\u6765\u62C6\u5206\u4EE3\u7801\u5E93\uFF0C\u4ECE\u800C\u80FD\u8BA9\u80FD\u5B9E\u73B0\u66F4\u5FEB\u5730\u7F16\u8BD1\u3002 \u9057\u61BE\u7684\u662F\uFF0C\u5F53\u7F16\u8F91\u4E00\u4E2A\u4F9D\u8D56\u672A\u88AB\u6784\u5EFA\uFF08\u6216\u8005\u6784\u5EFA\u7ED3\u679C\u5DF2\u8FC7\u671F\uFF09\u7684\u9879\u76EE\u65F6\uFF0C\u4F1A\u5F97\u5230\u4E0D\u597D\u7684\u7F16\u8F91\u4F53\u9A8C\u3002",-1),kn=n("p",null,[s("\u5728 TypeScript 3.7 \u4E2D\uFF0C\u5F53\u6253\u5F00\u4E00\u4E2A\u6709\u4F9D\u8D56\u7684\u9879\u76EE\u65F6\uFF0CTypeScript \u5C06\u4F1A\u81EA\u52A8\u5730\u4F7F\u7528\u539F\u59CB "),n("code",null,".ts"),s("/"),n("code",null,".tsx"),s(" \u6587\u4EF6\u6765\u4EE3\u66FF\u3002 \u8FD9\u610F\u5473\u7740\u5728\u6709\u4F9D\u8D56\u5F15\u7528\u7684\u9879\u76EE\u4E2D\uFF0C\u4EE3\u7801\u7684\u4FEE\u6539\u4F1A\u9A6C\u4E0A\u540C\u6B65\u548C\u751F\u6548\uFF0C\u4ECE\u800C\u7F16\u8F91\u4F53\u9A8C\u4F1A\u6709\u6240\u63D0\u5347\uFF0C")],-1),dn=n("p",null,[s("\u4F60\u53EF\u4EE5\u6253\u5F00\u7F16\u8BD1\u5668\u9009\u9879 "),n("code",null,"disableSourceOfProjectReferenceRedirect"),s(" \u6765\u7981\u7528\u8FD9\u4E2A\u5F15\u7528\u7684\u529F\u80FD\uFF0C\u56E0\u4E3A\u5728\u8D85\u5927\u578B\u9879\u76EE\u4E2D\u8FD9\u4E2A\u529F\u80FD\u53EF\u80FD\u4F1A\u5F71\u54CD\u6027\u80FD\u3002")],-1),bn=s("\u4F60\u53EF\u4EE5 "),mn={href:"https://github.com/microsoft/TypeScript/pull/32028",target:"_blank",rel:"noopener noreferrer"},yn=s("\u9605\u8BFB\u5B83\u7684 pull request\uFF0C\u83B7\u53D6\u66F4\u591A\u76F8\u5173\u4FE1\u606F"),gn=s("."),fn=e(`<h2 id="\u6CA1\u6709\u8C03\u7528\u7684\u51FD\u6570\u68C0\u67E5" tabindex="-1"><a class="header-anchor" href="#\u6CA1\u6709\u8C03\u7528\u7684\u51FD\u6570\u68C0\u67E5" aria-hidden="true">#</a> \u6CA1\u6709\u8C03\u7528\u7684\u51FD\u6570\u68C0\u67E5</h2><p>\u4E00\u4E2A\u5E38\u89C1\u4E14\u5371\u9669\u7684\u9519\u8BEF\u662F\u5FD8\u8BB0\u8C03\u7528\u4E00\u4E2A\u51FD\u6570\uFF0C\u7279\u522B\u662F\u5F53\u51FD\u6570\u5177\u6709\u96F6\u53C2\u6570\u6216\u7528\u6697\u793A\u5B83\u53EF\u80FD\u662F\u5C5E\u6027\u800C\u4E0D\u662F\u51FD\u6570\u7684\u65B9\u5F0F\u540D\u79F0\u65F6\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">User</span> <span class="token punctuation">{</span>
  <span class="token function">isAdministrator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
  <span class="token function">notify</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>
  doNotDisturb<span class="token operator">?</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// later...</span>

<span class="token comment">// Broken code, do not use!</span>
<span class="token keyword">function</span> <span class="token function">doAdminThing</span><span class="token punctuation">(</span>user<span class="token operator">:</span> User<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// oops!</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>user<span class="token punctuation">.</span>isAdministrator<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">sudo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">editTheConfiguration</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">AccessDeniedError</span><span class="token punctuation">(</span><span class="token string">&#39;User is not an admin&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><p>\u5728\u8FD9\u91CC\uFF0C\u5FD8\u8BB0\u8C03\u7528 <code>isAdministrator</code>\uFF0C\u8BE5\u4EE3\u7801\u9519\u8BEF\u7684\u5141\u8BB8\u975E\u7BA1\u7406\u5458\u7528\u6237\u7F16\u8F91\u914D\u7F6E\u3002</p><p>\u5728 TypeScript 3.7 \u4E2D\uFF0C\u5B83\u5C31\u4F1A\u629B\u51FA\u9519\u8BEF\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">doAdminThing</span><span class="token punctuation">(</span>user<span class="token operator">:</span> User<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>user<span class="token punctuation">.</span>isAdministrator<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">//  ~~~~~~~~~~~~~~~~~~~~</span>
    <span class="token comment">// error! This condition will always return true since the function is always defined.</span>
    <span class="token comment">//        Did you mean to call it instead?</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>\u8FD9\u4E2A\u68C0\u67E5\u662F\u4E00\u4E2A\u7834\u574F\u6027\u7684\u66F4\u6539\uFF0C\u56E0\u6B64\u8FD9\u4E2A\u9519\u8BEF\u4EC5\u4EC5\u662F\u53D1\u751F\u5728 <code>if</code> \u6761\u4EF6\u8BED\u53E5\u4E2D\uFF0C\u5E76\u4E14\u5982\u679C <code>strictNullChecks</code> \u5173\u95ED\u6216\u8005\u5728 if \u5757\u4E2D\uFF0C\u51FD\u6570\u6709\u88AB\u8C03\u7528\uFF0C\u4E0D\u4F1A\u53D1\u51FA\u6B64\u9519\u8BEF\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">User</span> <span class="token punctuation">{</span>
  <span class="token function">isAdministrator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
  <span class="token function">notify</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>
  doNotDisturb<span class="token operator">?</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">issueNotification</span><span class="token punctuation">(</span>user<span class="token operator">:</span> User<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>user<span class="token punctuation">.</span>doNotDisturb<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// OK, property is optional</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>user<span class="token punctuation">.</span>notify<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// OK, called the function</span>
    user<span class="token punctuation">.</span><span class="token function">notify</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p>\u5982\u679C\u4F60\u60F3\u5728\u6CA1\u6709\u8C03\u7528\u51FD\u6570\u7684\u524D\u63D0\u4E0B\uFF0C\u5BF9\u5B83\u8FDB\u884C\u6D4B\u8BD5\u3002\u4F60\u53EF\u4EE5\u4FEE\u6539\u5B83\u7684\u58F0\u660E\uFF0C\u8BA9\u5B83\u53EF\u80FD\u662F <code>undefined/null</code>\uFF0C\u6216\u8005\u4F7F\u7528 <code>!!</code> \u6765\u5199\u4E0B\u4E00\u4E9B <code>if(!!user.isAdministrator)</code> \u6765\u8868\u660E\u8FD9\u79CD\u884C\u4E3A\u662F\u6545\u610F\u7684\u3002</p>`,9);function hn(wn,vn){const a=t("ExternalLinkIcon");return o(),c(l,null,[i,k,n("p",null,[d,n("a",b,[m,p(a)]),y]),g,n("p",null,[f,n("a",h,[w,p(a)]),v,n("a",_,[x,p(a)])]),S,n("p",null,[T,n("a",A,[q,p(a)]),D]),J,O,n("p",null,[N,j,C,n("a",E,[F,U,P,p(a)]),V,I,R]),B,n("p",null,[z,n("a",W,[H,p(a)])]),L,n("p",null,[$,n("a",Q,[G,p(a)]),K]),M,n("p",null,[X,n("a",Y,[Z,p(a)])]),n("p",null,[nn,n("a",sn,[an,p(a)]),pn]),en,n("p",null,[tn,n("a",on,[cn,p(a)]),ln]),rn,un,kn,dn,n("p",null,[bn,n("a",mn,[yn,p(a)]),gn]),fn],64)}var Sn=r(u,[["render",hn]]);export{Sn as default};
