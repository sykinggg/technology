import{o as e,c as p,b as s,F as o,a}from"./app.ee3fc36b.js";import{_ as t}from"./plugin-vue_export-helper.21dcd24c.js";const c={},r=a('<h1 id="" tabindex="-1"><a class="header-anchor" href="#" aria-hidden="true">#</a></h1><h1 id="react-hooks\u539F\u7406" tabindex="-1"><a class="header-anchor" href="#react-hooks\u539F\u7406" aria-hidden="true">#</a> react-hooks\u539F\u7406</h1><h2 id="\u6982\u8FF0" tabindex="-1"><a class="header-anchor" href="#\u6982\u8FF0" aria-hidden="true">#</a> \u6982\u8FF0</h2><hr><ol><li><p>\u5728\u65E0\u72B6\u6001\u7EC4\u4EF6\u6BCF\u4E00\u6B21\u51FD\u6570\u4E0A\u4E0B\u6587\u6267\u884C\u7684\u65F6\u5019\uFF0C<code>react</code>\u7528\u4EC0\u4E48\u65B9\u5F0F\u8BB0\u5F55\u4E86<code>hooks</code>\u7684\u72B6\u6001\uFF1F</p></li><li><p>\u591A\u4E2A<code>react-hooks</code>\u7528\u4EC0\u4E48\u6765\u8BB0\u5F55\u6BCF\u4E00\u4E2A<code>hooks</code>\u7684\u987A\u5E8F\u7684 \uFF1F \u6362\u4E2A\u95EE\u6CD5\uFF01\u4E3A\u4EC0\u4E48\u4E0D\u80FD\u6761\u4EF6\u8BED\u53E5\u4E2D\uFF0C\u58F0\u660E<code>hooks</code>? <code>hooks</code>\u58F0\u660E\u4E3A\u4EC0\u4E48\u5728\u7EC4\u4EF6\u7684\u6700\u9876\u90E8\uFF1F</p></li><li><p><code>function</code>\u51FD\u6570\u7EC4\u4EF6\u4E2D\u7684<code>useState</code>\uFF0C\u548C <code>class</code>\u7C7B\u7EC4\u4EF6 <code>setState</code>\u6709\u4EC0\u4E48\u533A\u522B\uFF1F</p></li><li><p><code>react</code> \u662F\u600E\u4E48\u6355\u83B7\u5230<code>hooks</code>\u7684\u6267\u884C\u4E0A\u4E0B\u6587\uFF0C\u662F\u5728\u51FD\u6570\u7EC4\u4EF6\u5185\u90E8\u7684\uFF1F</p></li><li><p><code>useEffect</code>,<code>useMemo</code> \u4E2D\uFF0C\u4E3A\u4EC0\u4E48<code>useRef</code>\u4E0D\u9700\u8981\u4F9D\u8D56\u6CE8\u5165\uFF0C\u5C31\u80FD\u8BBF\u95EE\u5230\u6700\u65B0\u7684\u6539\u53D8\u503C\uFF1F</p></li><li><p><code>useMemo</code>\u662F\u600E\u4E48\u5BF9\u503C\u505A\u7F13\u5B58\u7684\uFF1F\u5982\u4F55\u5E94\u7528\u5B83\u4F18\u5316\u6027\u80FD\uFF1F</p></li><li><p>\u4E3A\u4EC0\u4E48\u4E24\u6B21\u4F20\u5165<code>useState</code>\u7684\u503C\u76F8\u540C\uFF0C\u51FD\u6570\u7EC4\u4EF6\u4E0D\u66F4\u65B0?</p></li></ol>',5),l=["src"],u=a(`<h2 id="function\u7EC4\u4EF6\u548Cclass\u7EC4\u4EF6\u672C\u8D28\u7684\u533A\u522B" tabindex="-1"><a class="header-anchor" href="#function\u7EC4\u4EF6\u548Cclass\u7EC4\u4EF6\u672C\u8D28\u7684\u533A\u522B" aria-hidden="true">#</a> function\u7EC4\u4EF6\u548Cclass\u7EC4\u4EF6\u672C\u8D28\u7684\u533A\u522B</h2><hr><p>\u5728\u89E3\u91CA<code>react-hooks</code>\u539F\u7406\u7684\u4E4B\u524D\uFF0C\u8981\u52A0\u6DF1\u7406\u89E3\u4E00\u4E0B\uFF0C <strong>\u51FD\u6570\u7EC4\u4EF6\u548C\u7C7B\u7EC4\u4EF6\u5230\u5E95\u6709\u4EC0\u4E48\u533A\u522B</strong>\uFF0C\u5E9F\u8BDD\u4E0D\u591A\u8BF4\uFF0C\u5148\u770B \u4E24\u4E2A\u4EE3\u7801\u7247\u6BB5\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">Index</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span><span class="token operator">&lt;</span>any<span class="token punctuation">,</span>any<span class="token operator">&gt;</span><span class="token punctuation">{</span>
    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token operator">=</span><span class="token punctuation">{</span>
            <span class="token literal-property property">number</span><span class="token operator">:</span><span class="token number">0</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token function-variable function">handerClick</span><span class="token operator">=</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
       <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span> <span class="token punctuation">;</span>i<span class="token operator">&lt;</span><span class="token number">5</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
           <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
               <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">number</span><span class="token operator">:</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>number<span class="token operator">+</span><span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
               console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>number<span class="token punctuation">)</span>
           <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token number">1000</span><span class="token punctuation">)</span>
       <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span>button onClick<span class="token operator">=</span><span class="token punctuation">{</span> <span class="token keyword">this</span><span class="token punctuation">.</span>handerClick <span class="token punctuation">}</span> <span class="token operator">&gt;</span>num<span class="token operator">++</span><span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><p>\u51FD\u6570\u7EC4\u4EF6\u4E2D\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">Index</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">[</span> num <span class="token punctuation">,</span>setNumber <span class="token punctuation">]</span> <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">useState</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
    <span class="token keyword">const</span> <span class="token function-variable function">handerClick</span><span class="token operator">=</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span><span class="token number">5</span><span class="token punctuation">;</span>i<span class="token operator">++</span> <span class="token punctuation">)</span><span class="token punctuation">{</span>
           <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                <span class="token function">setNumber</span><span class="token punctuation">(</span>num<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span>
                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span>
           <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token operator">&lt;</span>button onClick<span class="token operator">=</span><span class="token punctuation">{</span> handerClick <span class="token punctuation">}</span> <span class="token operator">&gt;</span><span class="token punctuation">{</span> num <span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>------------\u516C\u5E03\u7B54\u6848-------------</p><p>\u5728\u7B2C\u4E00\u4E2A\u4F8B\u5B50\u{1F330}\u6253\u5370\u7ED3\u679C\uFF1A 1 2 3 4 5</p><p>\u5728\u7B2C\u4E8C\u4E2A\u4F8B\u5B50\u{1F330}\u6253\u5370\u7ED3\u679C\uFF1A 0 0 0 0 0</p><p><strong>\u5206\u6790</strong></p><p>\u7B2C\u4E00\u4E2A\u7C7B\u7EC4\u4EF6\u4E2D\uFF0C\u7531\u4E8E\u6267\u884C\u4E0A<code>setState</code>\u6CA1\u6709\u5728<code>react</code>\u6B63\u5E38\u7684\u51FD\u6570\u6267\u884C\u4E0A\u4E0B\u6587\u4E0A\u6267\u884C\uFF0C\u800C\u662F<code>setTimeout</code>\u4E2D\u6267\u884C\u7684\uFF0C<strong>\u6279\u91CF\u66F4\u65B0</strong>\u6761\u4EF6\u88AB\u7834\u574F\u3002\u539F\u7406\u8FD9\u91CC\u5C31\u4E0D\u8BB2\u4E86,\u6240\u4EE5\u53EF\u4EE5\u76F4\u63A5\u83B7\u53D6\u5230\u53D8\u5316\u540E\u7684<code>state</code>\u3002</p><p>\u7B2C\u4E8C\u4E2A\u51FD\u6570\u7EC4\u4EF6\u79CD\uFF0C\u4F46\u662F\u5728\u65E0\u72B6\u6001\u7EC4\u4EF6\u4E2D\uFF0C\u4F3C\u4E4E\u6CA1\u6709\u751F\u6548\u3002\u539F\u56E0\u5F88\u7B80\u5355\uFF0C\u5728<code>class</code>\u72B6\u6001\u4E2D\uFF0C\u901A\u8FC7\u4E00\u4E2A\u5B9E\u4F8B\u5316\u7684<code>class</code>\uFF0C\u53BB\u7EF4\u62A4\u7EC4\u4EF6\u4E2D\u7684\u5404\u79CD\u72B6\u6001\uFF1B\u4F46\u662F\u5728<code>function</code>\u7EC4\u4EF6\u4E2D\uFF0C\u6CA1\u6709\u4E00\u4E2A\u72B6\u6001\u53BB\u4FDD\u5B58\u8FD9\u4E9B\u4FE1\u606F\uFF0C\u6BCF\u4E00\u6B21\u51FD\u6570\u4E0A\u4E0B\u6587\u6267\u884C\uFF0C\u6240\u6709\u53D8\u91CF\uFF0C\u5E38\u91CF\u90FD\u91CD\u65B0\u58F0\u660E\uFF0C\u6267\u884C\u5B8C\u6BD5\uFF0C\u518D\u88AB\u5783\u573E\u673A\u5236\u56DE\u6536\u3002\u6240\u4EE5\u5982\u4E0A\uFF0C\u65E0\u8BBA<code>setTimeout</code>\u6267\u884C\u591A\u5C11\u6B21\uFF0C\u90FD\u662F\u5728\u5F53\u524D\u51FD\u6570\u4E0A\u4E0B\u6587\u6267\u884C,\u6B64\u65F6<code>num = 0</code>\u4E0D\u4F1A\u53D8\uFF0C\u4E4B\u540E<code>setNumber</code>\u6267\u884C\uFF0C\u51FD\u6570\u7EC4\u4EF6\u91CD\u65B0\u6267\u884C\u4E4B\u540E\uFF0C<code>num</code>\u624D\u53D8\u5316\u3002</p><p>\u6240\u4EE5\uFF0C \u5BF9\u4E8E<code>class</code>\u7EC4\u4EF6\uFF0C\u53EA\u9700\u8981\u5B9E\u4F8B\u5316\u4E00\u6B21\uFF0C\u5B9E\u4F8B\u4E2D\u4FDD\u5B58\u4E86\u7EC4\u4EF6\u7684<code>state</code>\u7B49\u72B6\u6001\u3002\u5BF9\u4E8E\u6BCF\u4E00\u6B21\u66F4\u65B0\u53EA\u9700\u8981\u8C03\u7528<code>render</code>\u65B9\u6CD5\u5C31\u53EF\u4EE5\u3002\u4F46\u662F\u5728<code>function</code>\u7EC4\u4EF6\u4E2D\uFF0C\u6BCF\u4E00\u6B21\u66F4\u65B0\u90FD\u662F\u4E00\u6B21\u65B0\u7684\u51FD\u6570\u6267\u884C,\u4E3A\u4E86\u4FDD\u5B58\u4E00\u4E9B\u72B6\u6001,\u6267\u884C\u4E00\u4E9B\u526F\u4F5C\u7528\u94A9\u5B50,<code>react-hooks</code>\u5E94\u8FD0\u800C\u751F\uFF0C\u53BB\u5E2E\u52A9\u8BB0\u5F55\u7EC4\u4EF6\u7684\u72B6\u6001\uFF0C\u5904\u7406\u4E00\u4E9B\u989D\u5916\u7684\u526F\u4F5C\u7528\u3002</p><h2 id="\u5F15\u5165hooks" tabindex="-1"><a class="header-anchor" href="#\u5F15\u5165hooks" aria-hidden="true">#</a> \u5F15\u5165hooks</h2><p>\u4ECE\u5F15\u5165 <code>hooks</code>\u5F00\u59CB\uFF0C\u4EE5<code>useState</code>\u4E3A\u4F8B\u5B50\uFF0C\u5F53\u4ECE\u9879\u76EE\u4E2D\u8FD9\u4E48\u5199\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><blockquote><p>react/src/ReactHooks.js</p></blockquote><p><strong>useState</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token parameter">initialState</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">const</span> dispatcher <span class="token operator">=</span> <span class="token function">resolveDispatcher</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> dispatcher<span class="token punctuation">.</span><span class="token function">useState</span><span class="token punctuation">(</span>initialState<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p><code>useState()</code> \u7684\u6267\u884C\u7B49\u4E8E <code>dispatcher.useState(initialState)</code> \u8FD9\u91CC\u9762\u5F15\u5165\u4E86\u4E00\u4E2A<code>dispatcher</code>\uFF0C\u770B\u4E00\u4E0B<code>resolveDispatcher</code>\u505A\u4E86\u4E9B\u4EC0\u4E48\uFF1F</p><p><strong>resolveDispatcher</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">resolveDispatcher</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> dispatcher <span class="token operator">=</span> ReactCurrentDispatcher<span class="token punctuation">.</span>current
    <span class="token keyword">return</span> dispatcher
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p><strong>ReactCurrentDispatcher</strong></p><blockquote><p>react/src/ReactCurrentDispatcher.js</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> ReactCurrentDispatcher <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">current</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u770B\u5230<code>ReactCurrentDispatcher.current</code>\u521D\u59CB\u5316\u7684\u65F6\u5019\u4E3A<code>null</code>\uFF0C\u7136\u540E\u5C31\u6CA1\u4EFB\u4F55\u4E0B\u6587\u4E86\u3002\u6682\u4E14\u53EA\u80FD\u628A<code>**ReactCurrentDispatcher**</code>\u8BB0\u4E0B\u6765\u3002\u770B\u770B<code>ReactCurrentDispatcher</code>\u4EC0\u4E48\u65F6\u5019\u7528\u5230\u7684 \uFF1F</p><h2 id="renderwithhooks-\u6267\u884C\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#renderwithhooks-\u6267\u884C\u51FD\u6570" aria-hidden="true">#</a> renderWithHooks \u6267\u884C\u51FD\u6570</h2><p>\u5BF9\u4E8E<code>function</code>\u7EC4\u4EF6\u6267\u884C</p><blockquote><p>react-reconciler/src/ReactFiberBeginWork.js</p></blockquote><p><code>function</code>\u7EC4\u4EF6\u521D\u59CB\u5316\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">renderWithHooks</span><span class="token punctuation">(</span>
    <span class="token keyword">null</span><span class="token punctuation">,</span>                <span class="token comment">// current Fiber</span>
    workInProgress<span class="token punctuation">,</span>      <span class="token comment">// workInProgress Fiber</span>
    Component<span class="token punctuation">,</span>           <span class="token comment">// \u51FD\u6570\u7EC4\u4EF6\u672C\u8EAB</span>
    props<span class="token punctuation">,</span>               <span class="token comment">// props</span>
    context<span class="token punctuation">,</span>             <span class="token comment">// \u4E0A\u4E0B\u6587</span>
    renderExpirationTime<span class="token punctuation">,</span><span class="token comment">// \u6E32\u67D3 ExpirationTime</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>\u5BF9\u4E8E\u521D\u59CB\u5316\u662F\u6CA1\u6709<code>current</code>\u6811\u7684\uFF0C\u4E4B\u540E\u5B8C\u6210\u4E00\u6B21\u7EC4\u4EF6\u66F4\u65B0\u540E\uFF0C\u4F1A\u628A\u5F53\u524D<code>workInProgress</code>\u6811\u8D4B\u503C\u7ED9<code>current</code>\u6811\u3002</p><p><code>function</code>\u7EC4\u4EF6\u66F4\u65B0\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">renderWithHooks</span><span class="token punctuation">(</span>
    current<span class="token punctuation">,</span>
    workInProgress<span class="token punctuation">,</span>
    render<span class="token punctuation">,</span>
    nextProps<span class="token punctuation">,</span>
    context<span class="token punctuation">,</span>
    renderExpirationTime<span class="token punctuation">,</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>\u4ECE\u4E0A\u8FB9\u53EF\u4EE5\u770B\u51FA\u6765\uFF0C<code>renderWithHooks</code>\u51FD\u6570\u4F5C\u7528\u662F<strong>\u8C03\u7528</strong><code>function</code><strong>\u7EC4\u4EF6\u51FD\u6570</strong>\u7684\u4E3B\u8981\u51FD\u6570\u3002</p><p><strong>renderWithHooks</strong></p><blockquote><p>react-reconciler/src/ReactFiberHooks.js</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">renderWithHooks</span><span class="token punctuation">(</span>
    <span class="token parameter">current<span class="token punctuation">,</span>
    workInProgress<span class="token punctuation">,</span>
    Component<span class="token punctuation">,</span>
    props<span class="token punctuation">,</span>
    secondArg<span class="token punctuation">,</span>
    nextRenderExpirationTime<span class="token punctuation">,</span></span>
<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    renderExpirationTime <span class="token operator">=</span> nextRenderExpirationTime<span class="token punctuation">;</span>
    currentlyRenderingFiber <span class="token operator">=</span> workInProgress<span class="token punctuation">;</span>

    workInProgress<span class="token punctuation">.</span>memoizedState <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    workInProgress<span class="token punctuation">.</span>updateQueue <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    workInProgress<span class="token punctuation">.</span>expirationTime <span class="token operator">=</span> NoWork<span class="token punctuation">;</span>

    ReactCurrentDispatcher<span class="token punctuation">.</span>current <span class="token operator">=</span>
        current <span class="token operator">===</span> <span class="token keyword">null</span> <span class="token operator">||</span> current<span class="token punctuation">.</span>memoizedState <span class="token operator">===</span> <span class="token keyword">null</span>
            <span class="token operator">?</span> HooksDispatcherOnMount
            <span class="token operator">:</span> HooksDispatcherOnUpdate<span class="token punctuation">;</span>

    <span class="token keyword">let</span> children <span class="token operator">=</span> <span class="token function">Component</span><span class="token punctuation">(</span>props<span class="token punctuation">,</span> secondArg<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>workInProgress<span class="token punctuation">.</span>expirationTime <span class="token operator">===</span> renderExpirationTime<span class="token punctuation">)</span> <span class="token punctuation">{</span> 
        <span class="token comment">// ....\u8FD9\u91CC\u7684\u903B\u8F91\u5148\u653E\u4E00\u653E</span>
    <span class="token punctuation">}</span>

    ReactCurrentDispatcher<span class="token punctuation">.</span>current <span class="token operator">=</span> ContextOnlyDispatcher<span class="token punctuation">;</span>

    renderExpirationTime <span class="token operator">=</span> NoWork<span class="token punctuation">;</span>
    currentlyRenderingFiber <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>

    currentHook <span class="token operator">=</span> <span class="token keyword">null</span>
    workInProgressHook <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>

    didScheduleRenderPhaseUpdate <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> children<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br></div></div><p><strong>\u6240\u6709\u7684\u51FD\u6570\u7EC4\u4EF6\u6267\u884C\uFF0C\u90FD\u662F\u5728\u8FD9\u91CC\u65B9\u6CD5\u4E2D</strong>,\u9996\u5148\u5E94\u8BE5\u660E\u767D\u51E0\u4E2A\u611F\u5FF5\uFF0C\u8FD9\u5BF9\u4E8E\u540E\u7EED\u7406\u89E3<code>useState</code>\u662F\u5F88\u6709\u5E2E\u52A9\u7684\u3002</p><p><code>current fiber\u6811</code>: \u5F53\u5B8C\u6210\u4E00\u6B21\u6E32\u67D3\u4E4B\u540E\uFF0C\u4F1A\u4EA7\u751F\u4E00\u4E2A<code>current</code>\u6811,<code>current</code>\u4F1A\u5728<code>commit</code>\u9636\u6BB5\u66FF\u6362\u6210\u771F\u5B9E\u7684<code>Dom</code>\u6811\u3002</p><p><code>workInProgress fiber\u6811</code>: \u5373\u5C06\u8C03\u548C\u6E32\u67D3\u7684 <code>fiber</code> \u6811\u3002\u518D\u4E00\u6B21\u65B0\u7684\u7EC4\u4EF6\u66F4\u65B0\u8FC7\u7A0B\u4E2D\uFF0C\u4F1A\u4ECE<code>current</code>\u590D\u5236\u4E00\u4EFD\u4F5C\u4E3A<code>workInProgress</code>,\u66F4\u65B0\u5B8C\u6BD5\u540E\uFF0C\u5C06\u5F53\u524D\u7684<code>workInProgress</code>\u6811\u8D4B\u503C\u7ED9<code>current</code>\u6811\u3002</p><p><code>workInProgress.memoizedState</code>: \u5728<code>class</code>\u7EC4\u4EF6\u4E2D\uFF0C<code>memoizedState</code>\u5B58\u653E<code>state</code>\u4FE1\u606F\uFF0C\u5728<code>function</code>\u7EC4\u4EF6\u4E2D\uFF0C<strong>\u8FD9\u91CC\u53EF\u4EE5\u63D0\u524D\u900F\u6F0F\u4E00\u4E0B\uFF0C<code>memoizedState</code>\u5728\u4E00\u6B21\u8C03\u548C\u6E32\u67D3\u8FC7\u7A0B\u4E2D\uFF0C\u4EE5\u94FE\u8868\u7684\u5F62\u5F0F\u5B58\u653E<code>hooks</code>\u4FE1\u606F\u3002</strong></p><p><code>workInProgress.expirationTime</code>: <code>react</code>\u7528\u4E0D\u540C\u7684<code>expirationTime</code>,\u6765\u786E\u5B9A\u66F4\u65B0\u7684\u4F18\u5148\u7EA7\u3002</p><p><code>currentHook</code> : \u53EF\u4EE5\u7406\u89E3 <code>current</code>\u6811\u4E0A\u7684\u6307\u5411\u7684\u5F53\u524D\u8C03\u5EA6\u7684 <code>hooks</code>\u8282\u70B9\u3002</p><p><code>workInProgressHook</code> : \u53EF\u4EE5\u7406\u89E3 <code>workInProgress</code>\u6811\u4E0A\u6307\u5411\u7684\u5F53\u524D\u8C03\u5EA6\u7684 <code>hooks</code>\u8282\u70B9\u3002</p><p><code>renderWithHooks</code><strong>\u51FD\u6570\u4E3B\u8981\u4F5C\u7528:</strong></p><p>\u9996\u5148\u5148\u7F6E\u7A7A\u5373\u5C06\u8C03\u548C\u6E32\u67D3\u7684<code>workInProgress</code>\u6811\u7684<code>memoizedState</code>\u548C<code>updateQueue</code>\uFF0C\u4E3A\u4EC0\u4E48\u8FD9\u4E48\u505A\uFF0C\u56E0\u4E3A\u5728\u63A5\u4E0B\u6765\u7684\u51FD\u6570\u7EC4\u4EF6\u6267\u884C\u8FC7\u7A0B\u4E2D\uFF0C\u8981\u628A\u65B0\u7684<code>hooks</code>\u4FE1\u606F\u6302\u8F7D\u5230\u8FD9\u4E24\u4E2A\u5C5E\u6027\u4E0A\uFF0C\u7136\u540E\u5728\u7EC4\u4EF6<code>commit</code>\u9636\u6BB5\uFF0C\u5C06<code>workInProgress</code>\u6811\u66FF\u6362\u6210<code>current</code>\u6811\uFF0C\u66FF\u6362\u771F\u5B9E\u7684<code>DOM</code>\u5143\u7D20\u8282\u70B9\u3002\u5E76\u5728<code>current</code>\u6811\u4FDD\u5B58<code>hooks</code>\u4FE1\u606F\u3002</p><p>\u7136\u540E\u6839\u636E\u5F53\u524D\u51FD\u6570\u7EC4\u4EF6\u662F\u5426\u662F\u7B2C\u4E00\u6B21\u6E32\u67D3\uFF0C\u8D4B\u4E88<code>ReactCurrentDispatcher.current</code>\u4E0D\u540C\u7684<code>hooks</code>,\u7EC8\u4E8E\u548C\u4E0A\u9762\u8BB2\u5230\u7684<code>ReactCurrentDispatcher</code>\u8054\u7CFB\u5230\u4E00\u8D77\u3002\u5BF9\u4E8E\u7B2C\u4E00\u6B21\u6E32\u67D3\u7EC4\u4EF6\uFF0C\u90A3\u4E48\u7528\u7684\u662F<code>HooksDispatcherOnMount</code> <strong>hooks</strong>\u5BF9\u8C61\u3002</p><p>\u5BF9\u4E8E\u6E32\u67D3\u540E\uFF0C\u9700\u8981\u66F4\u65B0\u7684\u51FD\u6570\u7EC4\u4EF6\uFF0C\u5219\u662F<code>HooksDispatcherOnUpdate</code>\u5BF9\u8C61\uFF0C\u90A3\u4E48\u4E24\u4E2A\u4E0D\u540C\u5C31\u662F\u901A\u8FC7<code>current</code>\u6811\u4E0A\u662F\u5426<code>memoizedState</code>\uFF08<code>hook</code>\u4FE1\u606F\uFF09\u6765\u5224\u65AD\u7684\u3002\u5982\u679C<code>current</code>\u4E0D\u5B58\u5728\uFF0C\u8BC1\u660E\u662F\u7B2C\u4E00\u6B21\u6E32\u67D3\u51FD\u6570\u7EC4\u4EF6\u3002</p><p>\u63A5\u4E0B\u6765\uFF0C<strong>\u8C03\u7528<code>Component(props, secondArg);</code>\u6267\u884C\u7684\u51FD\u6570\u7EC4\u4EF6\uFF0C\u7684\u51FD\u6570\u7EC4\u4EF6\u5728\u8FD9\u91CC\u771F\u6B63\u7684\u88AB\u6267\u884C\u4E86\uFF0C\u7136\u540E\uFF0C\u5199\u7684<code>hooks</code>\u88AB\u4F9D\u6B21\u6267\u884C\uFF0C\u628A<code>hooks</code>\u4FE1\u606F\u4F9D\u6B21\u4FDD\u5B58\u5230<code>workInProgress</code>\u6811\u4E0A\u3002</strong> \u81F3\u4E8E\u5B83\u662F\u600E\u4E48\u4FDD\u5B58\u7684\uFF0C\u9A6C\u4E0A\u4F1A\u8BB2\u5230\u3002</p><p>\u63A5\u4E0B\u6765\uFF0C\u4E5F\u5F88\u91CD\u8981\uFF0C\u5C06<code>ContextOnlyDispatcher</code>\u8D4B\u503C\u7ED9 <code>ReactCurrentDispatcher.current</code>\uFF0C\u7531\u4E8E<code>js</code>\u662F\u5355\u7EBF\u7A0B\u7684\uFF0C\u4E5F\u5C31\u662F\u8BF4\u6CA1\u6709\u5728\u51FD\u6570\u7EC4\u4EF6\u4E2D\uFF0C\u8C03\u7528\u7684<code>hooks</code>\uFF0C\u90FD\u662F<code>ContextOnlyDispatcher</code>\u5BF9\u8C61\u4E0A<code>hooks</code>,\u770B\u770B<code>ContextOnlyDispatcherhooks</code>\uFF0C\u5230\u5E95\u662F\u4EC0\u4E48\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> ContextOnlyDispatcher <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">useState</span><span class="token operator">:</span>throwInvalidHookError
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">throwInvalidHookError</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">invariant</span><span class="token punctuation">(</span>
        <span class="token boolean">false</span><span class="token punctuation">,</span>
        <span class="token string">&#39;Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for&#39;</span> <span class="token operator">+</span>
        <span class="token string">&#39; one of the following reasons:\\n&#39;</span> <span class="token operator">+</span>
        <span class="token string">&#39;1. You might have mismatching versions of React and the renderer (such as React DOM)\\n&#39;</span> <span class="token operator">+</span>
        <span class="token string">&#39;2. You might be breaking the Rules of Hooks\\n&#39;</span> <span class="token operator">+</span>
        <span class="token string">&#39;3. You might have more than one copy of React in the same app\\n&#39;</span> <span class="token operator">+</span>
        <span class="token string">&#39;See https://fb.me/react-invalid-hook-call for tips about how to debug and fix this problem.&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p>\u539F\u6765\u5982\u6B64\uFF0C<code>react-hooks</code>\u5C31\u662F\u901A\u8FC7\u8FD9\u79CD\u51FD\u6570\u7EC4\u4EF6\u6267\u884C\u8D4B\u503C\u4E0D\u540C\u7684<code>hooks</code>\u5BF9\u8C61\u65B9\u5F0F\uFF0C\u5224\u65AD\u5728<code>hooks</code>\u6267\u884C\u662F\u5426\u5728\u51FD\u6570\u7EC4\u4EF6\u5185\u90E8\uFF0C\u6355\u83B7\u5E76\u629B\u51FA\u5F02\u5E38\u7684\u3002</p><p>\u6700\u540E\uFF0C\u91CD\u65B0\u7F6E\u7A7A\u4E00\u4E9B\u53D8\u91CF\u6BD4\u5982<code>currentHook</code>\uFF0C<code>currentlyRenderingFiber</code>, <code>workInProgressHook</code>\u7B49\u3002</p><h2 id="\u4E0D\u540C\u7684hooks\u5BF9\u8C61" tabindex="-1"><a class="header-anchor" href="#\u4E0D\u540C\u7684hooks\u5BF9\u8C61" aria-hidden="true">#</a> \u4E0D\u540C\u7684hooks\u5BF9\u8C61</h2><p>\u4E0A\u8FF0\u8BB2\u5230\u5728\u51FD\u6570\u7B2C\u4E00\u6B21\u6E32\u67D3\u7EC4\u4EF6\u548C\u66F4\u65B0\u7EC4\u4EF6\u5206\u522B\u8C03\u7528\u4E0D\u540C\u7684<code>hooks</code>\u5BF9\u8C61\uFF0C\u73B0\u5728\u5C31\u6765\u770B\u770B<code>HooksDispatcherOnMount</code> \u548C <code>HooksDispatcherOnUpdate</code>\u3002</p><p><strong>\u7B2C\u4E00\u6B21\u6E32\u67D3(\u8FD9\u91CC\u53EA\u5C55\u793A\u4E86\u5E38\u7528\u7684<code>hooks</code>)\uFF1A</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> HooksDispatcherOnMount <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">useCallback</span><span class="token operator">:</span> mountCallback<span class="token punctuation">,</span>
    <span class="token literal-property property">useEffect</span><span class="token operator">:</span> mountEffect<span class="token punctuation">,</span>
    <span class="token literal-property property">useLayoutEffect</span><span class="token operator">:</span> mountLayoutEffect<span class="token punctuation">,</span>
    <span class="token literal-property property">useMemo</span><span class="token operator">:</span> mountMemo<span class="token punctuation">,</span>
    <span class="token literal-property property">useReducer</span><span class="token operator">:</span> mountReducer<span class="token punctuation">,</span>
    <span class="token literal-property property">useRef</span><span class="token operator">:</span> mountRef<span class="token punctuation">,</span>
    <span class="token literal-property property">useState</span><span class="token operator">:</span> mountState<span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p><strong>\u66F4\u65B0\u7EC4\u4EF6\uFF1A</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> HooksDispatcherOnUpdate <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">useCallback</span><span class="token operator">:</span> updateCallback<span class="token punctuation">,</span>
    <span class="token literal-property property">useEffect</span><span class="token operator">:</span> updateEffect<span class="token punctuation">,</span>
    <span class="token literal-property property">useLayoutEffect</span><span class="token operator">:</span> updateLayoutEffect<span class="token punctuation">,</span>
    <span class="token literal-property property">useMemo</span><span class="token operator">:</span> updateMemo<span class="token punctuation">,</span>
    <span class="token literal-property property">useReducer</span><span class="token operator">:</span> updateReducer<span class="token punctuation">,</span>
    <span class="token literal-property property">useRef</span><span class="token operator">:</span> updateRef<span class="token punctuation">,</span>
    <span class="token literal-property property">useState</span><span class="token operator">:</span> updateState
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>\u770B\u6765\u5BF9\u4E8E\u7B2C\u4E00\u6B21\u6E32\u67D3\u7EC4\u4EF6\uFF0C\u548C\u66F4\u65B0\u7EC4\u4EF6\uFF0C<code>react-hooks</code>\u91C7\u7528\u4E86\u4E24\u5957<code>Api</code>\uFF0C\u672C\u6587\u7684\u7B2C\u4E8C\u90E8\u5206\u548C\u7B2C\u4E09\u90E8\u5206\uFF0C\u5C06\u91CD\u70B9\u4E24\u8005\u7684\u8054\u7CFB\u3002</p><p>\u7528\u6D41\u7A0B\u56FE\u6765\u63CF\u8FF0\u6574\u4E2A\u8FC7\u7A0B\uFF1A</p>`,62),i=["src"],k=a(`<h1 id="hooks\u521D\u59CB\u5316" tabindex="-1"><a class="header-anchor" href="#hooks\u521D\u59CB\u5316" aria-hidden="true">#</a> hooks\u521D\u59CB\u5316</h1><p>\u56DB\u4E2A\u4E2D\u91CD\u70B9<code>hooks</code>\u5C55\u5F00\uFF0C\u5206\u522B\u662F\u8D1F\u8D23\u7EC4\u4EF6\u66F4\u65B0\u7684<code>useState</code>\uFF0C\u8D1F\u8D23\u6267\u884C\u526F\u4F5C\u7528<code>useEffect</code> ,\u8D1F\u8D23\u4FDD\u5B58\u6570\u636E\u7684<code>useRef</code>,\u8D1F\u8D23\u7F13\u5B58\u4F18\u5316\u7684<code>useMemo</code>\uFF0C \u81F3\u4E8E<code>useCallback</code>,<code>useReducer</code>,<code>useLayoutEffect</code>\u539F\u7406\u548C\u90A3\u56DB\u4E2A\u91CD\u70B9<code>hooks</code>\u6BD4\u8F83\u76F8\u8FD1\uFF0C\u5C31\u4E0D\u4E00\u4E00\u89E3\u91CA\u4E86\u3002</p><p>\u5148\u5199\u4E00\u4E2A\u7EC4\u4EF6\uFF0C\u5E76\u4E14\u7528\u5230\u4E0A\u8FF0\u56DB\u4E2A\u4E3B\u8981<code>hooks</code>\uFF1A</p><p><strong>\u8BF7\u8BB0\u4F4F\u5982\u4E0B\u4EE3\u7801\u7247\u6BB5\uFF0C\u540E\u9762\u8BB2\u89E3\u5C06\u4EE5\u5982\u4E0B\u4EE3\u7801\u6BB5\u5C55\u5F00</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> React <span class="token punctuation">,</span> <span class="token punctuation">{</span> useEffect <span class="token punctuation">,</span> useState <span class="token punctuation">,</span> useRef <span class="token punctuation">,</span> useMemo  <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span>
<span class="token keyword">function</span> <span class="token function">Index</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">[</span> number <span class="token punctuation">,</span> setNumber <span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
    <span class="token keyword">const</span> DivDemo <span class="token operator">=</span> <span class="token function">useMemo</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span> hello <span class="token punctuation">,</span> i am useMemo <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token keyword">const</span> curRef  <span class="token operator">=</span> <span class="token function">useRef</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span>
    <span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
       console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>curRef<span class="token punctuation">.</span>current<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token operator">&lt;</span>div ref<span class="token operator">=</span><span class="token punctuation">{</span> curRef <span class="token punctuation">}</span> <span class="token operator">&gt;</span>
        hello<span class="token punctuation">,</span>world <span class="token punctuation">{</span> number <span class="token punctuation">}</span> 
        <span class="token punctuation">{</span> DivDemo <span class="token punctuation">}</span>
        <span class="token operator">&lt;</span>button onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">setNumber</span><span class="token punctuation">(</span>number<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">}</span> <span class="token operator">&gt;</span>number<span class="token operator">++</span><span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span>
     <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h2 id="mountworkinprogresshook" tabindex="-1"><a class="header-anchor" href="#mountworkinprogresshook" aria-hidden="true">#</a> mountWorkInProgressHook</h2><p>\u5728\u7EC4\u4EF6\u521D\u59CB\u5316\u7684\u65F6\u5019,\u6BCF\u4E00\u6B21<code>hooks</code>\u6267\u884C\uFF0C\u5982<code>useState()</code>,<code>useRef()</code>,\u90FD\u4F1A\u8C03\u7528<code>mountWorkInProgressHook</code>,<code>mountWorkInProgressHook</code>\u5230\u5E95\u505A\u4E86\u5199\u4EC0\u4E48\uFF0C\u8BA9\u4E00\u8D77\u6765\u5206\u6790\u4E00\u4E0B\uFF1A</p><blockquote><p>react-reconciler/src/ReactFiberHooks.js -&gt; <code>mountWorkInProgressHook</code></p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">mountWorkInProgressHook</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token literal-property property">hook</span><span class="token operator">:</span> Hook <span class="token operator">=</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">memoizedState</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>  <span class="token comment">// useState\u4E2D \u4FDD\u5B58 state\u4FE1\u606F \uFF5C useEffect \u4E2D \u4FDD\u5B58\u7740 effect \u5BF9\u8C61 \uFF5C useMemo \u4E2D \u4FDD\u5B58\u7684\u662F\u7F13\u5B58\u7684\u503C\u548Cdeps \uFF5C useRef\u4E2D\u4FDD\u5B58\u7684\u662Fref \u5BF9\u8C61</span>
        <span class="token literal-property property">baseState</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
        <span class="token literal-property property">baseQueue</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
        <span class="token literal-property property">queue</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
        <span class="token literal-property property">next</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>workInProgressHook <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u4F8B\u5B50\u4E2D\u7684\u7B2C\u4E00\u4E2A\`hooks\`-&gt; useState(0) \u8D70\u7684\u5C31\u662F\u8FD9\u6837\u3002</span>
        currentlyRenderingFiber<span class="token punctuation">.</span>memoizedState <span class="token operator">=</span> workInProgressHook <span class="token operator">=</span> hook<span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        workInProgressHook <span class="token operator">=</span> workInProgressHook<span class="token punctuation">.</span>next <span class="token operator">=</span> hook<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> workInProgressHook<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p><code>mountWorkInProgressHook</code>\u8FD9\u4E2A\u51FD\u6570\u505A\u7684\u4E8B\u60C5\u5F88\u7B80\u5355\uFF0C\u9996\u5148\u6BCF\u6B21\u6267\u884C\u4E00\u4E2A<code>hooks</code>\u51FD\u6570\uFF0C\u90FD\u4EA7\u751F\u4E00\u4E2A<code>hook</code>\u5BF9\u8C61\uFF0C\u91CC\u9762\u4FDD\u5B58\u4E86\u5F53\u524D<code>hook</code>\u4FE1\u606F,\u7136\u540E\u5C06\u6BCF\u4E2A<code>hooks</code>\u4EE5\u94FE\u8868\u5F62\u5F0F\u4E32\u8054\u8D77\u6765\uFF0C\u5E76\u8D4B\u503C\u7ED9<code>workInProgress</code>\u7684<code>memoizedState</code>\u3002\u4E5F\u5C31\u8BC1\u5B9E\u4E86\u4E0A\u8FF0\u6240\u8BF4\u7684\uFF0C\u51FD\u6570\u7EC4\u4EF6\u7528<code>memoizedState</code>\u5B58\u653E<code>hooks</code>\u94FE\u8868\u3002</p><p>\u81F3\u4E8E<code>hook</code>\u5BF9\u8C61\u4E2D\u90FD\u4FDD\u7559\u4E86\u90A3\u4E9B\u4FE1\u606F\uFF1F\u8FD9\u91CC\u5148\u5206\u522B\u4ECB\u7ECD\u4E00\u4E0B:</p><ul><li><p><code>memoizedState</code>\uFF1A <code>useState</code>\u4E2D \u4FDD\u5B58 <code>state</code> \u4FE1\u606F \uFF5C <code>useEffect</code> \u4E2D \u4FDD\u5B58\u7740 <code>effect</code> \u5BF9\u8C61 \uFF5C <code>useMemo</code> \u4E2D \u4FDD\u5B58\u7684\u662F\u7F13\u5B58\u7684\u503C\u548C <code>deps</code> \uFF5C <code>useRef</code> \u4E2D\u4FDD\u5B58\u7684\u662F <code>ref</code> \u5BF9\u8C61\u3002</p></li><li><p><code>baseQueue</code> : <code>usestate</code>\u548C<code>useReducer</code>\u4E2D \u4FDD\u5B58\u6700\u65B0\u7684\u66F4\u65B0\u961F\u5217\u3002</p></li><li><p><code>baseState</code> \uFF1A <code>usestate</code>\u548C<code>useReducer</code>\u4E2D,\u4E00\u6B21\u66F4\u65B0\u4E2D \uFF0C\u4EA7\u751F\u7684\u6700\u65B0<code>state</code>\u503C\u3002</p></li><li><p><code>queue</code> \uFF1A \u4FDD\u5B58\u5F85\u66F4\u65B0\u961F\u5217 <code>pendingQueue</code> \uFF0C\u66F4\u65B0\u51FD\u6570 <code>dispatch</code> \u7B49\u4FE1\u606F\u3002</p></li><li><p><code>next</code>: \u6307\u5411\u4E0B\u4E00\u4E2A <code>hooks</code>\u5BF9\u8C61\u3002</p></li></ul><p>\u90A3\u4E48\u5F53\u51FD\u6570\u7EC4\u4EF6\u6267\u884C\u4E4B\u540E\uFF0C\u56DB\u4E2A<code>hooks</code>\u548C<code>workInProgress</code>\u5C06\u662F\u5982\u56FE\u7684\u5173\u7CFB\u3002</p>`,13),d=["src"],b=a(`<p>\u77E5\u9053\u6BCF\u4E2A<code>hooks</code>\u5173\u7CFB\u4E4B\u540E\uFF0C\u5E94\u8BE5\u7406\u89E3\u4E86\uFF0C\u4E3A\u4EC0\u4E48\u4E0D\u80FD\u6761\u4EF6\u8BED\u53E5\u4E2D\uFF0C\u58F0\u660E<code>hooks</code>\u3002</p><p>\u7528\u4E00\u5E45\u56FE\u8868\u793A\u5982\u679C\u5728\u6761\u4EF6\u8BED\u53E5\u4E2D\u58F0\u660E\u4F1A\u51FA\u73B0\u4EC0\u4E48\u60C5\u51B5\u53D1\u751F\u3002</p><p>\u5982\u679C\u5C06\u4E0A\u8FF0<code>demo</code>\u5176\u4E2D\u7684\u4E00\u4E2A <code>useRef</code> \u653E\u5165\u6761\u4EF6\u8BED\u53E5\u4E2D\uFF0C</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> curRef  <span class="token operator">=</span> <span class="token keyword">null</span>
<span class="token keyword">if</span><span class="token punctuation">(</span>isFisrt<span class="token punctuation">)</span><span class="token punctuation">{</span>
    curRef <span class="token operator">=</span> <span class="token function">useRef</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div>`,4),m=["src"],f=a(`<p><strong>\u56E0\u4E3A\u4E00\u65E6\u5728\u6761\u4EF6\u8BED\u53E5\u4E2D\u58F0\u660E<code>hooks</code>\uFF0C\u5728\u4E0B\u4E00\u6B21\u51FD\u6570\u7EC4\u4EF6\u66F4\u65B0\uFF0C<code>hooks</code>\u94FE\u8868\u7ED3\u6784\uFF0C\u5C06\u4F1A\u88AB\u7834\u574F\uFF0C<code>current</code>\u6811\u7684<code>memoizedState</code>\u7F13\u5B58<code>hooks</code>\u4FE1\u606F\uFF0C\u548C\u5F53\u524D<code>workInProgress</code>\u4E0D\u4E00\u81F4\uFF0C\u5982\u679C\u6D89\u53CA\u5230\u8BFB\u53D6<code>state</code>\u7B49\u64CD\u4F5C\uFF0C\u5C31\u4F1A\u53D1\u751F\u5F02\u5E38\u3002</strong></p><p>\u4E0A\u8FF0\u4ECB\u7ECD\u4E86 <code>hooks</code>\u901A\u8FC7\u4EC0\u4E48\u6765\u8BC1\u660E\u552F\u4E00\u6027\u7684\uFF0C\u7B54\u6848 \uFF0C\u901A\u8FC7<code>hooks</code>\u94FE\u8868\u987A\u5E8F\u3002\u548C\u4E3A\u4EC0\u4E48\u4E0D\u80FD\u5728\u6761\u4EF6\u8BED\u53E5\u4E2D\uFF0C\u58F0\u660E<code>hooks</code>\uFF0C\u63A5\u4E0B\u6765\u6309\u7167\u56DB\u4E2A\u65B9\u5411\uFF0C\u5206\u522B\u4ECB\u7ECD\u521D\u59CB\u5316\u7684\u65F6\u5019\u53D1\u751F\u4E86\u4EC0\u4E48\uFF1F</p><h2 id="\u521D\u59CB\u5316usestate-mountstate" tabindex="-1"><a class="header-anchor" href="#\u521D\u59CB\u5316usestate-mountstate" aria-hidden="true">#</a> \u521D\u59CB\u5316useState -&gt; mountState</h2><hr><h2 id="mountstate" tabindex="-1"><a class="header-anchor" href="#mountstate" aria-hidden="true">#</a> mountState</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">mountState</span><span class="token punctuation">(</span>
    <span class="token parameter">initialState</span>
<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">const</span> hook <span class="token operator">=</span> <span class="token function">mountWorkInProgressHook</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> initialState <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5982\u679C useState \u7B2C\u4E00\u4E2A\u53C2\u6570\u4E3A\u51FD\u6570\uFF0C\u6267\u884C\u51FD\u6570\u5F97\u5230state</span>
        initialState <span class="token operator">=</span> <span class="token function">initialState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    hook<span class="token punctuation">.</span>memoizedState <span class="token operator">=</span> hook<span class="token punctuation">.</span>baseState <span class="token operator">=</span> initialState<span class="token punctuation">;</span>
    <span class="token keyword">const</span> queue <span class="token operator">=</span> <span class="token punctuation">(</span>hook<span class="token punctuation">.</span>queue <span class="token operator">=</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">pending</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>  <span class="token comment">// \u5E26\u66F4\u65B0\u7684</span>
        <span class="token literal-property property">dispatch</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token comment">// \u8D1F\u8D23\u66F4\u65B0\u51FD\u6570</span>
        <span class="token literal-property property">lastRenderedReducer</span><span class="token operator">:</span> basicStateReducer<span class="token punctuation">,</span> <span class="token comment">//\u7528\u4E8E\u5F97\u5230\u6700\u65B0\u7684 state ,</span>
        <span class="token literal-property property">lastRenderedState</span><span class="token operator">:</span> initialState<span class="token punctuation">,</span> <span class="token comment">// \u6700\u540E\u4E00\u6B21\u5F97\u5230\u7684 state</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">const</span> dispatch <span class="token operator">=</span> <span class="token punctuation">(</span>queue<span class="token punctuation">.</span>dispatch <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token function">dispatchAction</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span> <span class="token comment">// \u8D1F\u8D23\u66F4\u65B0\u7684\u51FD\u6570</span>
        <span class="token keyword">null</span><span class="token punctuation">,</span>
        currentlyRenderingFiber<span class="token punctuation">,</span>
        queue<span class="token punctuation">,</span>
    <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token punctuation">[</span>hook<span class="token punctuation">.</span>memoizedState<span class="token punctuation">,</span> dispatch<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><p><code>mountState</code>\u5230\u5E95\u505A\u4E86\u4E9B\u4EC0\u4E48\uFF0C\u9996\u5148\u4F1A\u5F97\u5230\u521D\u59CB\u5316\u7684<code>state</code>\uFF0C\u5C06\u5B83\u8D4B\u503C\u7ED9<code>mountWorkInProgressHook</code>\u4EA7\u751F\u7684<code>hook</code>\u5BF9\u8C61\u7684<code>memoizedState</code>\u548C<code>baseState</code>\u5C5E\u6027\uFF0C\u7136\u540E\u521B\u5EFA\u4E00\u4E2A<code>queue</code>\u5BF9\u8C61\uFF0C\u91CC\u9762\u4FDD\u5B58\u4E86\u8D1F\u8D23\u66F4\u65B0\u7684\u4FE1\u606F\u3002</p><p>\u8FD9\u91CC\u5148\u8BF4\u4E00\u4E0B\uFF0C\u5728\u65E0\u72B6\u6001\u7EC4\u4EF6\u4E2D\uFF0C<code>useState</code>\u548C<code>useReducer</code>\u89E6\u53D1\u51FD\u6570\u66F4\u65B0\u7684\u65B9\u6CD5\u90FD\u662F<code>dispatchAction</code>,<code>useState</code>\uFF0C\u53EF\u4EE5\u770B\u6210\u4E00\u4E2A\u7B80\u5316\u7248\u7684<code>useReducer</code>,\u81F3\u4E8E<code>dispatchAction</code>\u600E\u4E48\u66F4\u65B0<code>state</code>\uFF0C\u66F4\u65B0\u7EC4\u4EF6\u7684\uFF0C\u63A5\u7740\u5F80\u4E0B\u7814\u7A76<code>dispatchAction</code>\u3002</p><p>\u5728\u7814\u7A76\u4E4B\u524D <strong>\u5148\u8981\u5F04\u660E\u767D<code>dispatchAction</code>\u662F\u4EC0\u4E48?</strong></p><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token keyword">function</span> <span class="token generic-function"><span class="token function">dispatchAction</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">S</span><span class="token punctuation">,</span> <span class="token constant">A</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>
  fiber<span class="token operator">:</span> Fiber<span class="token punctuation">,</span>
  queue<span class="token operator">:</span> UpdateQueue<span class="token operator">&lt;</span><span class="token constant">S</span><span class="token punctuation">,</span> <span class="token constant">A</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
  action<span class="token operator">:</span> <span class="token constant">A</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">[</span> number <span class="token punctuation">,</span> setNumber <span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><code>dispatchAction</code> \u5C31\u662F <code>setNumber</code> , <code>dispatchAction</code> \u7B2C\u4E00\u4E2A\u53C2\u6570\u548C\u7B2C\u4E8C\u4E2A\u53C2\u6570\uFF0C\u5DF2\u7ECF\u88AB<code>bind</code>\u7ED9\u6539\u6210<code>currentlyRenderingFiber</code>\u548C <code>queue</code>,\u4F20\u5165\u7684\u53C2\u6570\u662F\u7B2C\u4E09\u4E2A\u53C2\u6570<code>action</code></p><h2 id="dispatchaction-\u65E0\u72B6\u6001\u7EC4\u4EF6\u66F4\u65B0\u673A\u5236" tabindex="-1"><a class="header-anchor" href="#dispatchaction-\u65E0\u72B6\u6001\u7EC4\u4EF6\u66F4\u65B0\u673A\u5236" aria-hidden="true">#</a> dispatchAction \u65E0\u72B6\u6001\u7EC4\u4EF6\u66F4\u65B0\u673A\u5236</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">dispatchAction</span><span class="token punctuation">(</span><span class="token parameter">fiber<span class="token punctuation">,</span> queue<span class="token punctuation">,</span> action</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token comment">// \u8BA1\u7B97 expirationTime \u8FC7\u7A0B\u7565\u8FC7\u3002</span>
    <span class="token comment">/* \u521B\u5EFA\u4E00\u4E2Aupdate */</span>
    <span class="token keyword">const</span> update<span class="token operator">=</span> <span class="token punctuation">{</span>
        expirationTime<span class="token punctuation">,</span>
        suspenseConfig<span class="token punctuation">,</span>
        action<span class="token punctuation">,</span>
        <span class="token literal-property property">eagerReducer</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
        <span class="token literal-property property">eagerState</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
        <span class="token literal-property property">next</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
    <span class="token comment">/* \u628A\u521B\u5EFA\u7684update */</span>
    <span class="token keyword">const</span> pending <span class="token operator">=</span> queue<span class="token punctuation">.</span>pending<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>pending <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment">// \u8BC1\u660E\u7B2C\u4E00\u6B21\u66F4\u65B0</span>
        update<span class="token punctuation">.</span>next <span class="token operator">=</span> update<span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token comment">// \u4E0D\u662F\u7B2C\u4E00\u6B21\u66F4\u65B0</span>
        update<span class="token punctuation">.</span>next <span class="token operator">=</span> pending<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
        pending<span class="token punctuation">.</span>next <span class="token operator">=</span> update<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    queue<span class="token punctuation">.</span>pending <span class="token operator">=</span> update<span class="token punctuation">;</span>
    <span class="token keyword">const</span> alternate <span class="token operator">=</span> fiber<span class="token punctuation">.</span>alternate<span class="token punctuation">;</span>
    <span class="token comment">/* \u5224\u65AD\u5F53\u524D\u662F\u5426\u5728\u6E32\u67D3\u9636\u6BB5 */</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span> fiber <span class="token operator">===</span> currentlyRenderingFiber <span class="token operator">||</span> <span class="token punctuation">(</span>alternate <span class="token operator">!==</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> alternate <span class="token operator">===</span> currentlyRenderingFiber<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        didScheduleRenderPhaseUpdate <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        update<span class="token punctuation">.</span>expirationTime <span class="token operator">=</span> renderExpirationTime<span class="token punctuation">;</span>
        currentlyRenderingFiber<span class="token punctuation">.</span>expirationTime <span class="token operator">=</span> renderExpirationTime<span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token comment">/* \u5F53\u524D\u51FD\u6570\u7EC4\u4EF6\u5BF9\u5E94fiber\u6CA1\u6709\u5904\u4E8E\u8C03\u548C\u6E32\u67D3\u9636\u6BB5 \uFF0C\u90A3\u4E48\u83B7\u53D6\u6700\u65B0state , \u6267\u884C\u66F4\u65B0 */</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>fiber<span class="token punctuation">.</span>expirationTime <span class="token operator">===</span> NoWork <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>alternate <span class="token operator">===</span> <span class="token keyword">null</span> <span class="token operator">||</span> alternate<span class="token punctuation">.</span>expirationTime <span class="token operator">===</span> NoWork<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">const</span> lastRenderedReducer <span class="token operator">=</span> queue<span class="token punctuation">.</span>lastRenderedReducer<span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>lastRenderedReducer <span class="token operator">!==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">let</span> prevDispatcher<span class="token punctuation">;</span>
                <span class="token keyword">try</span> <span class="token punctuation">{</span>
                    <span class="token keyword">const</span> currentState <span class="token operator">=</span> queue<span class="token punctuation">.</span>lastRenderedState<span class="token punctuation">;</span> <span class="token comment">/* \u4E0A\u4E00\u6B21\u7684state */</span>
                    <span class="token keyword">const</span> eagerState <span class="token operator">=</span> <span class="token function">lastRenderedReducer</span><span class="token punctuation">(</span>currentState<span class="token punctuation">,</span> action<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">/**/</span>
                    update<span class="token punctuation">.</span>eagerReducer <span class="token operator">=</span> lastRenderedReducer<span class="token punctuation">;</span>
                    update<span class="token punctuation">.</span>eagerState <span class="token operator">=</span> eagerState<span class="token punctuation">;</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">is</span><span class="token punctuation">(</span>eagerState<span class="token punctuation">,</span> currentState<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> 
                        <span class="token keyword">return</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span> 
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token function">scheduleUpdateOnFiber</span><span class="token punctuation">(</span>fiber<span class="token punctuation">,</span> expirationTime<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br></div></div><p>\u65E0\u8BBA\u662F\u7C7B\u7EC4\u4EF6\u8C03\u7528<code>setState</code>,\u8FD8\u662F\u51FD\u6570\u7EC4\u4EF6\u7684<code>dispatchAction</code> \uFF0C\u90FD\u4F1A\u4EA7\u751F\u4E00\u4E2A <code>update</code>\u5BF9\u8C61\uFF0C\u91CC\u9762\u8BB0\u5F55\u4E86\u6B64\u6B21\u66F4\u65B0\u7684\u4FE1\u606F\uFF0C\u7136\u540E\u5C06\u6B64<code>update</code>\u653E\u5165\u5F85\u66F4\u65B0\u7684<code>pending</code>\u961F\u5217\u4E2D\uFF0C<code>dispatchAction</code>\u7B2C\u4E8C\u6B65\u5C31\u662F\u5224\u65AD\u5F53\u524D\u51FD\u6570\u7EC4\u4EF6\u7684<code>fiber</code>\u5BF9\u8C61\u662F\u5426\u5904\u4E8E\u6E32\u67D3\u9636\u6BB5\uFF0C\u5982\u679C\u5904\u4E8E\u6E32\u67D3\u9636\u6BB5\uFF0C\u90A3\u4E48\u4E0D\u9700\u8981\u5728\u66F4\u65B0\u5F53\u524D\u51FD\u6570\u7EC4\u4EF6\uFF0C\u53EA\u9700\u8981\u66F4\u65B0\u4E00\u4E0B\u5F53\u524D<code>update</code>\u7684<code>expirationTime</code>\u5373\u53EF\u3002</p><p>\u5982\u679C\u5F53\u524D<code>fiber</code>\u6CA1\u6709\u5904\u4E8E\u66F4\u65B0\u9636\u6BB5\u3002\u90A3\u4E48\u901A\u8FC7\u8C03\u7528<code>lastRenderedReducer</code>\u83B7\u53D6\u6700\u65B0\u7684<code>state</code>,\u548C\u4E0A\u4E00\u6B21\u7684<code>currentState</code>\uFF0C\u8FDB\u884C\u6D45\u6BD4\u8F83\uFF0C\u5982\u679C\u76F8\u7B49\uFF0C\u90A3\u4E48\u5C31\u9000\u51FA\uFF0C\u8FD9\u5C31\u8BC1\u5B9E\u4E86\u4E3A\u4EC0\u4E48<code>useState</code>\uFF0C\u4E24\u6B21\u503C\u76F8\u7B49\u7684\u65F6\u5019\uFF0C\u7EC4\u4EF6\u4E0D\u6E32\u67D3\u7684\u539F\u56E0\u4E86\uFF0C\u8FD9\u4E2A\u673A\u5236\u548C<code>Component</code>\u6A21\u5F0F\u4E0B\u7684<code>setState</code>\u6709\u4E00\u5B9A\u7684\u533A\u522B\u3002</p><p>\u5982\u679C\u4E24\u6B21<code>state</code>\u4E0D\u76F8\u7B49\uFF0C\u90A3\u4E48\u8C03\u7528<code>scheduleUpdateOnFiber</code>\u8C03\u5EA6\u6E32\u67D3\u5F53\u524Dfiber\uFF0C<code>scheduleUpdateOnFiber</code>\u662F<code>react</code>\u6E32\u67D3\u66F4\u65B0\u7684\u4E3B\u8981\u51FD\u6570\u3002</p><p>\u628A<strong>\u521D\u59CB\u5316<code>mountState</code>\u548C\u65E0\u72B6\u6001\u7EC4\u4EF6\u66F4\u65B0\u673A\u5236</strong>\u8BB2\u660E\u767D\u4E86\uFF0C\u63A5\u4E0B\u6765\u770B\u4E00\u4E0B\u5176\u4ED6\u7684<strong>hooks</strong>\u521D\u59CB\u5316\u505A\u4E86\u4E9B\u4EC0\u4E48\u64CD\u4F5C\uFF1F</p><h2 id="\u521D\u59CB\u5316useeffect-mounteffect" tabindex="-1"><a class="header-anchor" href="#\u521D\u59CB\u5316useeffect-mounteffect" aria-hidden="true">#</a> \u521D\u59CB\u5316useEffect -&gt; mountEffect</h2><hr><p>\u4E0A\u8FF0\u8BB2\u5230\u4E86\u65E0\u72B6\u6001\u7EC4\u4EF6\u4E2D<code>fiber</code>\u5BF9\u8C61<code>memoizedState</code>\u4FDD\u5B58\u5F53\u524D\u7684<code>hooks</code>\u5F62\u6210\u7684\u94FE\u8868\u3002\u90A3\u4E48<code>updateQueue</code>\u4FDD\u5B58\u4E86\u4EC0\u4E48\u4FE1\u606F\u5462\uFF0C\u4F1A\u5728\u63A5\u4E0B\u6765\u63A2\u7D22<code>useEffect</code>\u8FC7\u7A0B\u4E2D\u627E\u5230\u7B54\u6848\u3002\u5F53\u8C03\u7528<code>useEffect</code>\u7684\u65F6\u5019\uFF0C\u5728\u7EC4\u4EF6\u7B2C\u4E00\u6B21\u6E32\u67D3\u7684\u65F6\u5019\u4F1A\u8C03\u7528<code>mountEffect</code>\u65B9\u6CD5\uFF0C\u8FD9\u4E2A\u65B9\u6CD5\u5230\u5E95\u505A\u4E86\u4E9B\u4EC0\u4E48\uFF1F</p><p><strong>mountEffect</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">mountEffect</span><span class="token punctuation">(</span>
    <span class="token parameter">create<span class="token punctuation">,</span>
    deps<span class="token punctuation">,</span></span>
<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> hook <span class="token operator">=</span> <span class="token function">mountWorkInProgressHook</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> nextDeps <span class="token operator">=</span> deps <span class="token operator">===</span> <span class="token keyword">undefined</span> <span class="token operator">?</span> <span class="token keyword">null</span> <span class="token operator">:</span> deps<span class="token punctuation">;</span>
    hook<span class="token punctuation">.</span>memoizedState <span class="token operator">=</span> <span class="token function">pushEffect</span><span class="token punctuation">(</span>
        HookHasEffect <span class="token operator">|</span> hookEffectTag<span class="token punctuation">,</span> 
        create<span class="token punctuation">,</span> <span class="token comment">// useEffect \u7B2C\u4E00\u6B21\u53C2\u6570\uFF0C\u5C31\u662F\u526F\u4F5C\u7528\u51FD\u6570</span>
        <span class="token keyword">undefined</span><span class="token punctuation">,</span>
        nextDeps<span class="token punctuation">,</span> <span class="token comment">// useEffect \u7B2C\u4E8C\u6B21\u53C2\u6570\uFF0Cdeps</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>\u6BCF\u4E2A<code>hooks</code>\u521D\u59CB\u5316\u90FD\u4F1A\u521B\u5EFA\u4E00\u4E2A<code>hook</code>\u5BF9\u8C61\uFF0C\u7136\u540E\u5C06<code>hook</code>\u7684<code>memoizedState</code>\u4FDD\u5B58\u5F53\u524D<code>effect hook</code>\u4FE1\u606F\u3002</p><p><strong>\u6709\u4E24\u4E2A<code>memoizedState</code>\u5927\u5BB6\u5343\u4E07\u522B\u6DF7\u6DC6\u4E86\uFF0C\u8FD9\u91CC\u518D\u53CB\u60C5\u63D0\u793A\u4E00\u904D</strong></p><ul><li><p><code>workInProgress / current</code> \u6811\u4E0A\u7684 <code>memoizedState</code> \u4FDD\u5B58\u7684\u662F\u5F53\u524D\u51FD\u6570\u7EC4\u4EF6\u6BCF\u4E2A<code>hooks</code>\u5F62\u6210\u7684\u94FE\u8868\u3002</p></li><li><p>\u6BCF\u4E2A<code>hooks</code>\u4E0A\u7684<code>memoizedState</code> \u4FDD\u5B58\u4E86\u5F53\u524D<code>hooks</code>\u4FE1\u606F\uFF0C\u4E0D\u540C\u79CD\u7C7B\u7684<code>hooks</code>\u7684<code>memoizedState</code>\u5185\u5BB9\u4E0D\u540C\u3002\u4E0A\u8FF0\u7684\u65B9\u6CD5\u6700\u540E\u6267\u884C\u4E86\u4E00\u4E2A<code>pushEffect</code>\uFF0C\u4E00\u8D77\u770B\u770B<code>pushEffect</code>\u505A\u4E86\u4E9B\u4EC0\u4E48\uFF1F</p></li></ul><p><strong><code>pushEffect</code> \u521B\u5EFA<code>effect</code>\u5BF9\u8C61\uFF0C\u6302\u8F7D<code>updateQueue</code></strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">pushEffect</span><span class="token punctuation">(</span><span class="token parameter">tag<span class="token punctuation">,</span> create<span class="token punctuation">,</span> destroy<span class="token punctuation">,</span> deps</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> effect <span class="token operator">=</span> <span class="token punctuation">{</span>
        tag<span class="token punctuation">,</span>
        create<span class="token punctuation">,</span>
        destroy<span class="token punctuation">,</span>
        deps<span class="token punctuation">,</span>
        <span class="token literal-property property">next</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> componentUpdateQueue <span class="token operator">=</span> currentlyRenderingFiber<span class="token punctuation">.</span>updateQueue
    <span class="token keyword">if</span> <span class="token punctuation">(</span>componentUpdateQueue <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u5982\u679C\u662F\u7B2C\u4E00\u4E2A useEffect</span>
        componentUpdateQueue <span class="token operator">=</span> <span class="token punctuation">{</span>  <span class="token literal-property property">lastEffect</span><span class="token operator">:</span> <span class="token keyword">null</span>  <span class="token punctuation">}</span>
        currentlyRenderingFiber<span class="token punctuation">.</span>updateQueue <span class="token operator">=</span> componentUpdateQueue
        componentUpdateQueue<span class="token punctuation">.</span>lastEffect <span class="token operator">=</span> effect<span class="token punctuation">.</span>next <span class="token operator">=</span> effect<span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>  <span class="token comment">// \u5B58\u5728\u591A\u4E2Aeffect</span>
        <span class="token keyword">const</span> lastEffect <span class="token operator">=</span> componentUpdateQueue<span class="token punctuation">.</span>lastEffect<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>lastEffect <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            componentUpdateQueue<span class="token punctuation">.</span>lastEffect <span class="token operator">=</span> effect<span class="token punctuation">.</span>next <span class="token operator">=</span> effect<span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token keyword">const</span> firstEffect <span class="token operator">=</span> lastEffect<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
            lastEffect<span class="token punctuation">.</span>next <span class="token operator">=</span> effect<span class="token punctuation">;</span>
            effect<span class="token punctuation">.</span>next <span class="token operator">=</span> firstEffect<span class="token punctuation">;</span>
            componentUpdateQueue<span class="token punctuation">.</span>lastEffect <span class="token operator">=</span> effect<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> effect<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div><p>\u8FD9\u4E00\u6BB5\u5B9E\u9645\u5F88\u7B80\u5355\uFF0C\u9996\u5148\u521B\u5EFA\u4E00\u4E2A <code>effect</code> \uFF0C\u5224\u65AD\u7EC4\u4EF6\u5982\u679C\u7B2C\u4E00\u6B21\u6E32\u67D3\uFF0C\u90A3\u4E48\u521B\u5EFA <code>componentUpdateQueue</code> \uFF0C\u5C31\u662F<code>workInProgress</code>\u7684<code>updateQueue</code>\u3002\u7136\u540E\u5C06<code>effect</code>\u653E\u5165<code>updateQueue</code>\u4E2D\u3002</p><p>\u5047\u8BBE\u5728\u4E00\u4E2A\u51FD\u6570\u7EC4\u4EF6\u4E2D\u8FD9\u4E48\u5199\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">[</span> props<span class="token punctuation">.</span>a <span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>\u6700\u540E<code>workInProgress.updateQueue</code>\u4F1A\u4EE5\u8FD9\u6837\u7684\u5F62\u5F0F\u4FDD\u5B58\uFF1A</p>`,32),h=["src"],g=a(`<p><strong>\u62D3\u5C55:<code>effectList</code></strong></p><ul><li><p><code>effect list</code> \u53EF\u4EE5\u7406\u89E3\u4E3A\u662F\u4E00\u4E2A\u5B58\u50A8 <code>effectTag</code> \u526F\u4F5C\u7528\u5217\u8868\u5BB9\u5668\u3002\u5B83\u662F\u7531 <code>fiber</code> \u8282\u70B9\u548C\u6307\u9488 <code>nextEffect</code> \u6784\u6210\u7684\u5355\u94FE\u8868\u7ED3\u6784\uFF0C\u8FD9\u5176\u4E2D\u8FD8\u5305\u62EC\u7B2C\u4E00\u4E2A\u8282\u70B9 <code>firstEffect</code> \uFF0C\u548C\u6700\u540E\u4E00\u4E2A\u8282\u70B9 <code>lastEffect</code>\u3002</p></li><li><p><code>React</code> \u91C7\u7528\u6DF1\u5EA6\u4F18\u5148\u641C\u7D22\u7B97\u6CD5\uFF0C\u5728 <code>render</code> \u9636\u6BB5\u904D\u5386 <code>fiber</code> \u6811\u65F6\uFF0C\u628A\u6BCF\u4E00\u4E2A\u6709\u526F\u4F5C\u7528\u7684 <code>fiber</code> \u7B5B\u9009\u51FA\u6765\uFF0C\u6700\u540E\u6784\u5EFA\u751F\u6210\u4E00\u4E2A\u53EA\u5E26\u526F\u4F5C\u7528\u7684 <code>effect list</code> \u94FE\u8868\u3002</p></li><li><p>\u5728 <code>commit</code> \u9636\u6BB5\uFF0C<code>React</code> \u62FF\u5230 <code>effect list</code> \u6570\u636E\u540E\uFF0C\u901A\u8FC7\u904D\u5386 <code>effect list</code>\uFF0C\u5E76\u6839\u636E\u6BCF\u4E00\u4E2A <code>effect</code> \u8282\u70B9\u7684 <code>effectTag</code> \u7C7B\u578B\uFF0C\u6267\u884C\u6BCF\u4E2A<code>effect</code>\uFF0C\u4ECE\u800C\u5BF9\u76F8\u5E94\u7684 <code>DOM</code> \u6811\u6267\u884C\u66F4\u6539\u3002</p></li></ul><h2 id="\u521D\u59CB\u5316usememo-mountmemo" tabindex="-1"><a class="header-anchor" href="#\u521D\u59CB\u5316usememo-mountmemo" aria-hidden="true">#</a> \u521D\u59CB\u5316useMemo -&gt; mountMemo</h2><hr><p>\u4E0D\u77E5\u9053\u5927\u5BB6\u662F\u5426\u628A <code>useMemo</code> \u60F3\u8C61\u7684\u8FC7\u4E8E\u590D\u6742\u4E86\uFF0C\u5B9E\u9645\u76F8\u6BD4\u5176\u4ED6 <code>useState</code> , <code>useEffect</code>\u7B49\uFF0C\u5B83\u7684\u903B\u8F91\u5B9E\u9645\u7B80\u5355\u7684\u5F88\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">mountMemo</span><span class="token punctuation">(</span><span class="token parameter">nextCreate<span class="token punctuation">,</span>deps</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">const</span> hook <span class="token operator">=</span> <span class="token function">mountWorkInProgressHook</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> nextDeps <span class="token operator">=</span> deps <span class="token operator">===</span> <span class="token keyword">undefined</span> <span class="token operator">?</span> <span class="token keyword">null</span> <span class="token operator">:</span> deps<span class="token punctuation">;</span>
    <span class="token keyword">const</span> nextValue <span class="token operator">=</span> <span class="token function">nextCreate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    hook<span class="token punctuation">.</span>memoizedState <span class="token operator">=</span> <span class="token punctuation">[</span>nextValue<span class="token punctuation">,</span> nextDeps<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> nextValue<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>\u521D\u59CB\u5316<code>useMemo</code>\uFF0C\u5C31\u662F\u521B\u5EFA\u4E00\u4E2A<code>hook</code>\uFF0C\u7136\u540E\u6267\u884C<code>useMemo</code>\u7684\u7B2C\u4E00\u4E2A\u53C2\u6570,\u5F97\u5230\u9700\u8981\u7F13\u5B58\u7684\u503C\uFF0C\u7136\u540E\u5C06\u503C\u548C<code>deps</code>\u8BB0\u5F55\u4E0B\u6765\uFF0C\u8D4B\u503C\u7ED9\u5F53\u524D<code>hook</code>\u7684<code>memoizedState</code>\u3002\u6574\u4F53\u4E0A\u5E76\u6CA1\u6709\u590D\u6742\u7684\u903B\u8F91\u3002</p><h2 id="\u521D\u59CB\u5316useref-mountref" tabindex="-1"><a class="header-anchor" href="#\u521D\u59CB\u5316useref-mountref" aria-hidden="true">#</a> \u521D\u59CB\u5316useRef -&gt; mountRef</h2><hr><p>\u5BF9\u4E8E<code>useRef</code>\u521D\u59CB\u5316\u5904\u7406\uFF0C\u4F3C\u4E4E\u66F4\u662F\u7B80\u5355\uFF0C\u4E00\u8D77\u6765\u770B\u4E00\u4E0B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">mountRef</span><span class="token punctuation">(</span><span class="token parameter">initialValue</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> hook <span class="token operator">=</span> <span class="token function">mountWorkInProgressHook</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> ref <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token literal-property property">current</span><span class="token operator">:</span> initialValue<span class="token punctuation">}</span><span class="token punctuation">;</span>
    hook<span class="token punctuation">.</span>memoizedState <span class="token operator">=</span> ref<span class="token punctuation">;</span>
    <span class="token keyword">return</span> ref<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p><code>mountRef</code>\u521D\u59CB\u5316\u5F88\u7B80\u5355, \u521B\u5EFA\u4E00\u4E2A<code>ref</code>\u5BF9\u8C61\uFF0C \u5BF9\u8C61\u7684<code>current</code> \u5C5E\u6027\u6765\u4FDD\u5B58\u521D\u59CB\u5316\u7684\u503C\uFF0C\u6700\u540E\u7528<code>memoizedState</code>\u4FDD\u5B58<code>ref</code>\uFF0C\u5B8C\u6210\u6574\u4E2A\u64CD\u4F5C\u3002</p><h2 id="mounted-\u9636\u6BB5-hooks-\u603B\u7ED3" tabindex="-1"><a class="header-anchor" href="#mounted-\u9636\u6BB5-hooks-\u603B\u7ED3" aria-hidden="true">#</a> mounted \u9636\u6BB5 hooks \u603B\u7ED3</h2><p>\u6765\u603B\u7ED3\u4E00\u4E0B\u521D\u59CB\u5316\u9636\u6BB5,<code>react-hooks</code>\u505A\u7684\u4E8B\u60C5\uFF0C\u5728\u4E00\u4E2A\u51FD\u6570\u7EC4\u4EF6\u7B2C\u4E00\u6B21\u6E32\u67D3\u6267\u884C\u4E0A\u4E0B\u6587\u8FC7\u7A0B\u4E2D\uFF0C\u6BCF\u4E2A<code>react-hooks</code>\u6267\u884C\uFF0C\u90FD\u4F1A\u4EA7\u751F\u4E00\u4E2A<code>hook</code>\u5BF9\u8C61\uFF0C\u5E76\u5F62\u6210\u94FE\u8868\u7ED3\u6784\uFF0C\u7ED1\u5B9A\u5728<code>workInProgress</code>\u7684<code>memoizedState</code>\u5C5E\u6027\u4E0A\uFF0C\u7136\u540E<code>react-hooks</code>\u4E0A\u7684\u72B6\u6001\uFF0C\u7ED1\u5B9A\u5728\u5F53\u524D<code>hooks</code>\u5BF9\u8C61\u7684<code>memoizedState</code>\u5C5E\u6027\u4E0A\u3002\u5BF9\u4E8E<code>effect</code>\u526F\u4F5C\u7528\u94A9\u5B50\uFF0C\u4F1A\u7ED1\u5B9A\u5728<code>workInProgress.updateQueue</code>\u4E0A\uFF0C\u7B49\u5230<code>commit</code>\u9636\u6BB5\uFF0C<code>dom</code>\u6811\u6784\u5EFA\u5B8C\u6210\uFF0C\u5728\u6267\u884C\u6BCF\u4E2A <code>effect</code> \u526F\u4F5C\u7528\u94A9\u5B50\u3002</p><h1 id="hooks\u66F4\u65B0\u9636\u6BB5" tabindex="-1"><a class="header-anchor" href="#hooks\u66F4\u65B0\u9636\u6BB5" aria-hidden="true">#</a> hooks\u66F4\u65B0\u9636\u6BB5</h1><p>\u4E0A\u8FF0\u4ECB\u7ECD\u4E86\u7B2C\u4E00\u6B21\u6E32\u67D3\u51FD\u6570\u7EC4\u4EF6\uFF0C<code>react-hooks</code>\u521D\u59CB\u5316\u90FD\u505A\u4E9B\u4EC0\u4E48\uFF0C\u63A5\u4E0B\u6765\uFF0C\u5206\u6790\u4E00\u4E0B\uFF0C</p><p>\u5BF9\u4E8E\u66F4\u65B0\u9636\u6BB5\uFF0C\u8BF4\u660E\u4E0A\u4E00\u6B21 <code>workInProgress</code> \u6811\u5DF2\u7ECF\u8D4B\u503C\u7ED9\u4E86 <code>current</code> \u6811\u3002\u5B58\u653E<code>hooks</code>\u4FE1\u606F\u7684<code>memoizedState</code>\uFF0C\u6B64\u65F6\u5DF2\u7ECF\u5B58\u5728<code>current</code>\u6811\u4E0A\uFF0C<code>react</code>\u5BF9\u4E8E<code>hooks</code>\u7684\u5904\u7406\u903B\u8F91\u548C<code>fiber</code>\u6811\u903B\u8F91\u7C7B\u4F3C\u3002</p><p>\u5BF9\u4E8E\u4E00\u6B21\u51FD\u6570\u7EC4\u4EF6\u66F4\u65B0\uFF0C\u5F53\u518D\u6B21\u6267\u884C<code>hooks</code>\u51FD\u6570\u7684\u65F6\u5019\uFF0C\u6BD4\u5982 <code>useState(0)</code> \uFF0C\u9996\u5148\u8981\u4ECE<code>current</code>\u7684<code>hooks</code>\u4E2D\u627E\u5230\u4E0E\u5F53\u524D<code>workInProgressHook</code>\uFF0C\u5BF9\u5E94\u7684<code>currentHooks</code>\uFF0C\u7136\u540E\u590D\u5236\u4E00\u4EFD<code>currentHooks</code>\u7ED9<code>workInProgressHook</code>,\u63A5\u4E0B\u6765<code>hooks</code>\u51FD\u6570\u6267\u884C\u7684\u65F6\u5019,\u628A\u6700\u65B0\u7684\u72B6\u6001\u66F4\u65B0\u5230<code>workInProgressHook</code>\uFF0C\u4FDD\u8BC1<code>hooks</code>\u72B6\u6001\u4E0D\u4E22\u5931\u3002</p><p>\u6240\u4EE5\u51FD\u6570\u7EC4\u4EF6\u6BCF\u6B21\u66F4\u65B0\uFF0C\u6BCF\u4E00\u6B21<code>react-hooks</code>\u51FD\u6570\u6267\u884C\uFF0C\u90FD\u9700\u8981\u6709\u4E00\u4E2A\u51FD\u6570\u53BB\u505A\u4E0A\u9762\u7684\u64CD\u4F5C\uFF0C\u8FD9\u4E2A\u51FD\u6570\u5C31\u662F<code>updateWorkInProgressHook</code>,\u63A5\u4E0B\u6765\u4E00\u8D77\u770B\u8FD9\u4E2A<code>updateWorkInProgressHook</code>\u3002</p><h2 id="_1-updateworkinprogresshook" tabindex="-1"><a class="header-anchor" href="#_1-updateworkinprogresshook" aria-hidden="true">#</a> 1. updateWorkInProgressHook</h2><hr><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">updateWorkInProgressHook</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> nextCurrentHook<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>currentHook <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment">/* \u5982\u679C currentHook = null \u8BC1\u660E\u5B83\u662F\u7B2C\u4E00\u4E2Ahooks */</span>
        <span class="token keyword">const</span> current <span class="token operator">=</span> currentlyRenderingFiber<span class="token punctuation">.</span>alternate<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>current <span class="token operator">!==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            nextCurrentHook <span class="token operator">=</span> current<span class="token punctuation">.</span>memoizedState<span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            nextCurrentHook <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token comment">/* \u4E0D\u662F\u7B2C\u4E00\u4E2Ahooks\uFF0C\u90A3\u4E48\u6307\u5411\u4E0B\u4E00\u4E2A hooks */</span>
        nextCurrentHook <span class="token operator">=</span> currentHook<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">let</span> nextWorkInProgressHook
    <span class="token keyword">if</span> <span class="token punctuation">(</span>workInProgressHook <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment">//\u7B2C\u4E00\u6B21\u6267\u884Chooks</span>
        <span class="token comment">// \u8FD9\u91CC\u5E94\u8BE5\u6CE8\u610F\u4E00\u4E0B\uFF0C\u5F53\u51FD\u6570\u7EC4\u4EF6\u66F4\u65B0\u4E5F\u662F\u8C03\u7528 renderWithHooks ,memoizedState\u5C5E\u6027\u662F\u7F6E\u7A7A\u7684</span>
        nextWorkInProgressHook <span class="token operator">=</span> currentlyRenderingFiber<span class="token punctuation">.</span>memoizedState<span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span> 
        nextWorkInProgressHook <span class="token operator">=</span> workInProgressHook<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>nextWorkInProgressHook <span class="token operator">!==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> 
        <span class="token comment">/* \u8FD9\u4E2A\u60C5\u51B5\u8BF4\u660E renderWithHooks \u6267\u884C \u8FC7\u7A0B\u53D1\u751F\u591A\u6B21\u51FD\u6570\u7EC4\u4EF6\u7684\u6267\u884C \uFF0C\u6682\u65F6\u5148\u4E0D\u8003\u8651 */</span>
        workInProgressHook <span class="token operator">=</span> nextWorkInProgressHook<span class="token punctuation">;</span>
        nextWorkInProgressHook <span class="token operator">=</span> workInProgressHook<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
        currentHook <span class="token operator">=</span> nextCurrentHook<span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token function">invariant</span><span class="token punctuation">(</span>
            nextCurrentHook <span class="token operator">!==</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
            <span class="token string">&#39;Rendered more hooks than during the previous render.&#39;</span><span class="token punctuation">,</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
        currentHook <span class="token operator">=</span> nextCurrentHook<span class="token punctuation">;</span>
        <span class="token keyword">const</span> newHook <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token comment">//\u521B\u5EFA\u4E00\u4E2A\u65B0\u7684hook</span>
            <span class="token literal-property property">memoizedState</span><span class="token operator">:</span> currentHook<span class="token punctuation">.</span>memoizedState<span class="token punctuation">,</span>
            <span class="token literal-property property">baseState</span><span class="token operator">:</span> currentHook<span class="token punctuation">.</span>baseState<span class="token punctuation">,</span>
            <span class="token literal-property property">baseQueue</span><span class="token operator">:</span> currentHook<span class="token punctuation">.</span>baseQueue<span class="token punctuation">,</span>
            <span class="token literal-property property">queue</span><span class="token operator">:</span> currentHook<span class="token punctuation">.</span>queue<span class="token punctuation">,</span>
            <span class="token literal-property property">next</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>workInProgressHook <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u5982\u679C\u662F\u7B2C\u4E00\u4E2Ahooks</span>
            currentlyRenderingFiber<span class="token punctuation">.</span>memoizedState <span class="token operator">=</span> workInProgressHook <span class="token operator">=</span> newHook<span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token comment">// \u91CD\u65B0\u66F4\u65B0 hook</span>
            workInProgressHook <span class="token operator">=</span> workInProgressHook<span class="token punctuation">.</span>next <span class="token operator">=</span> newHook<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> workInProgressHook<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br></div></div><p>\u8FD9\u4E00\u6BB5\u7684\u903B\u8F91\u5927\u81F4\u662F\u8FD9\u6837\u7684\uFF1A</p><ul><li><p>\u9996\u5148\u5982\u679C\u662F\u7B2C\u4E00\u6B21\u6267\u884C<code>hooks</code>\u51FD\u6570\uFF0C\u90A3\u4E48\u4ECE<code>current</code>\u6811\u4E0A\u53D6\u51FA<code>memoizedState</code> \uFF0C\u4E5F\u5C31\u662F\u65E7\u7684<code>hooks</code>\u3002</p></li><li><p>\u7136\u540E\u58F0\u660E\u53D8\u91CF<code>nextWorkInProgressHook</code>\uFF0C\u8FD9\u91CC\u5E94\u8BE5\u503C\u5F97\u6CE8\u610F\uFF0C\u6B63\u5E38\u60C5\u51B5\u4E0B\uFF0C\u4E00\u6B21<code>renderWithHooks</code>\u6267\u884C\uFF0C<code>workInProgress</code>\u4E0A\u7684<code>memoizedState</code>\u4F1A\u88AB\u7F6E\u7A7A\uFF0C<code>hooks</code>\u51FD\u6570\u987A\u5E8F\u6267\u884C\uFF0C<code>nextWorkInProgressHook</code>\u5E94\u8BE5\u4E00\u76F4\u4E3A<code>null</code>\uFF0C\u90A3\u4E48\u4EC0\u4E48\u60C5\u51B5\u4E0B<code>nextWorkInProgressHook</code>\u4E0D\u4E3A<code>null</code>,\u4E5F\u5C31\u662F\u5F53\u4E00\u6B21<code>renderWithHooks</code>\u6267\u884C\u8FC7\u7A0B\u4E2D\uFF0C\u6267\u884C\u4E86\u591A\u6B21\u51FD\u6570\u7EC4\u4EF6\uFF0C\u4E5F\u5C31\u662F\u5728<code>renderWithHooks</code>\u4E2D\u8FD9\u6BB5\u903B\u8F91\u3002</p></li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">if</span> <span class="token punctuation">(</span>workInProgress<span class="token punctuation">.</span>expirationTime <span class="token operator">===</span> renderExpirationTime<span class="token punctuation">)</span> <span class="token punctuation">{</span> 
    <span class="token comment">// ....\u8FD9\u91CC\u7684\u903B\u8F91\u5148\u653E\u4E00\u653E</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u8FD9\u91CC\u9762\u7684\u903B\u8F91\uFF0C\u5B9E\u9645\u5C31\u662F\u5224\u5B9A\uFF0C\u5982\u679C\u5F53\u524D\u51FD\u6570\u7EC4\u4EF6\u6267\u884C\u540E\uFF0C\u5F53\u524D\u51FD\u6570\u7EC4\u4EF6\u7684\u8FD8\u662F\u5904\u4E8E\u6E32\u67D3\u4F18\u5148\u7EA7\uFF0C\u8BF4\u660E\u51FD\u6570\u7EC4\u4EF6\u53C8\u6709\u4E86\u65B0\u7684\u66F4\u65B0\u4EFB\u52A1\uFF0C\u90A3\u4E48\u5FAA\u574F\u6267\u884C\u51FD\u6570\u7EC4\u4EF6\u3002\u8FD9\u5C31\u9020\u6210\u4E86\u4E0A\u8FF0\u7684\uFF0C<code>nextWorkInProgressHook</code>\u4E0D\u4E3A <code>null</code> \u7684\u60C5\u51B5\u3002</p><ul><li>\u6700\u540E\u590D\u5236<code>current</code>\u7684<code>hooks</code>\uFF0C\u628A\u5B83\u8D4B\u503C\u7ED9<code>workInProgressHook</code>,\u7528\u4E8E\u66F4\u65B0\u65B0\u7684\u4E00\u8F6E<code>hooks</code>\u72B6\u6001\u3002</li></ul><h2 id="_2-updatestate" tabindex="-1"><a class="header-anchor" href="#_2-updatestate" aria-hidden="true">#</a> 2. updateState</h2><hr><p><strong>useState</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">updateReducer</span><span class="token punctuation">(</span>
    <span class="token parameter">reducer<span class="token punctuation">,</span>
    initialArg<span class="token punctuation">,</span>
    init<span class="token punctuation">,</span></span>
<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">const</span> hook <span class="token operator">=</span> <span class="token function">updateWorkInProgressHook</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> queue <span class="token operator">=</span> hook<span class="token punctuation">.</span>queue<span class="token punctuation">;</span>
    queue<span class="token punctuation">.</span>lastRenderedReducer <span class="token operator">=</span> reducer<span class="token punctuation">;</span>
    <span class="token keyword">const</span> current <span class="token operator">=</span> currentHook<span class="token punctuation">;</span>
    <span class="token keyword">let</span> baseQueue <span class="token operator">=</span> current<span class="token punctuation">.</span>baseQueue<span class="token punctuation">;</span>
    <span class="token keyword">const</span> pendingQueue <span class="token operator">=</span> queue<span class="token punctuation">.</span>pending<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>pendingQueue <span class="token operator">!==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u8FD9\u91CC\u7701\u7565... \u7B2C\u4E00\u6B65\uFF1A\u5C06 pending  queue \u5408\u5E76\u5230 basequeue</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>baseQueue <span class="token operator">!==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> first <span class="token operator">=</span> baseQueue<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
        <span class="token keyword">let</span> newState <span class="token operator">=</span> current<span class="token punctuation">.</span>baseState<span class="token punctuation">;</span>
        <span class="token keyword">let</span> newBaseState <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> newBaseQueueFirst <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> newBaseQueueLast <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> update <span class="token operator">=</span> first<span class="token punctuation">;</span>
        <span class="token keyword">do</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> updateExpirationTime <span class="token operator">=</span> update<span class="token punctuation">.</span>expirationTime<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>updateExpirationTime <span class="token operator">&lt;</span> renderExpirationTime<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">//\u4F18\u5148\u7EA7\u4E0D\u8DB3</span>
            <span class="token keyword">const</span> clone  <span class="token operator">=</span> <span class="token punctuation">{</span>
                <span class="token literal-property property">expirationTime</span><span class="token operator">:</span> update<span class="token punctuation">.</span>expirationTime<span class="token punctuation">,</span>
                <span class="token operator">...</span>
            <span class="token punctuation">}</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>newBaseQueueLast <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                newBaseQueueFirst <span class="token operator">=</span> newBaseQueueLast <span class="token operator">=</span> clone<span class="token punctuation">;</span>
                newBaseState <span class="token operator">=</span> newState<span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                newBaseQueueLast <span class="token operator">=</span> newBaseQueueLast<span class="token punctuation">.</span>next <span class="token operator">=</span> clone<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>  <span class="token comment">//\u6B64\u66F4\u65B0\u786E\u5B9E\u5177\u6709\u8DB3\u591F\u7684\u4F18\u5148\u7EA7\u3002</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>newBaseQueueLast <span class="token operator">!==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">const</span> clone<span class="token operator">=</span> <span class="token punctuation">{</span>
                    <span class="token literal-property property">expirationTime</span><span class="token operator">:</span> Sync<span class="token punctuation">,</span> 
                    <span class="token operator">...</span>
                <span class="token punctuation">}</span><span class="token punctuation">;</span>
                newBaseQueueLast <span class="token operator">=</span> newBaseQueueLast<span class="token punctuation">.</span>next <span class="token operator">=</span> clone<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token comment">/* \u5F97\u5230\u65B0\u7684 state */</span>
            newState <span class="token operator">=</span> <span class="token function">reducer</span><span class="token punctuation">(</span>newState<span class="token punctuation">,</span> action<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        update <span class="token operator">=</span> update<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">while</span> <span class="token punctuation">(</span>update <span class="token operator">!==</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> update <span class="token operator">!==</span> first<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>newBaseQueueLast <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            newBaseState <span class="token operator">=</span> newState<span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            newBaseQueueLast<span class="token punctuation">.</span>next <span class="token operator">=</span> newBaseQueueFirst<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        hook<span class="token punctuation">.</span>memoizedState <span class="token operator">=</span> newState<span class="token punctuation">;</span>
        hook<span class="token punctuation">.</span>baseState <span class="token operator">=</span> newBaseState<span class="token punctuation">;</span>
        hook<span class="token punctuation">.</span>baseQueue <span class="token operator">=</span> newBaseQueueLast<span class="token punctuation">;</span>
        queue<span class="token punctuation">.</span>lastRenderedState <span class="token operator">=</span> newState<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">const</span> dispatch <span class="token operator">=</span> queue<span class="token punctuation">.</span>dispatch
    <span class="token keyword">return</span> <span class="token punctuation">[</span>hook<span class="token punctuation">.</span>memoizedState<span class="token punctuation">,</span> dispatch<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br></div></div><p>\u8FD9\u4E00\u6BB5\u770B\u8D77\u6765\u5F88\u590D\u6742\uFF0C\u8BA9\u6162\u6162\u5403\u900F\uFF0C\u9996\u5148\u5C06\u4E0A\u4E00\u6B21\u66F4\u65B0\u7684<code>pending queue</code> \u5408\u5E76\u5230 <code>basequeue</code>\uFF0C\u4E3A\u4EC0\u4E48\u8981\u8FD9\u4E48\u505A\uFF0C\u6BD4\u5982\u518D\u4E00\u6B21\u70B9\u51FB\u4E8B\u4EF6\u4E2D\u8FD9\u4E48\u5199\uFF0C</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">Index</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
   <span class="token keyword">const</span> <span class="token punctuation">[</span> number <span class="token punctuation">,</span>setNumber <span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
   <span class="token keyword">const</span> <span class="token function-variable function">handerClick</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
    <span class="token comment">//    setNumber(1)</span>
    <span class="token comment">//    setNumber(2)</span>
    <span class="token comment">//    setNumber(3)</span>
       <span class="token function">setNumber</span><span class="token punctuation">(</span><span class="token parameter">state</span><span class="token operator">=&gt;</span>state<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span>
       <span class="token comment">// \u83B7\u53D6\u4E0A\u6B21 state = 1 </span>
       <span class="token function">setNumber</span><span class="token punctuation">(</span><span class="token parameter">state</span><span class="token operator">=&gt;</span>state<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span>
       <span class="token comment">// \u83B7\u53D6\u4E0A\u6B21 state = 2</span>
       <span class="token function">setNumber</span><span class="token punctuation">(</span><span class="token parameter">state</span><span class="token operator">=&gt;</span>state<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span>
   <span class="token punctuation">}</span>
   console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>number<span class="token punctuation">)</span> <span class="token comment">// 3 </span>
   <span class="token keyword">return</span> <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span>
       <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span><span class="token punctuation">{</span> number <span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
       <span class="token operator">&lt;</span>button onClick<span class="token operator">=</span><span class="token punctuation">{</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span> <span class="token function">handerClick</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">}</span> <span class="token operator">&gt;</span>\u70B9\u51FB<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span>
   <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><p><strong>\u70B9\u51FB\u6309\u94AE\uFF0C \u6253\u5370 3</strong></p><p>\u4E09\u6B21<code>setNumber</code>\u4EA7\u751F\u7684<code>update</code>\u4F1A\u6682\u4E14\u653E\u5165<code>pending queue</code>\uFF0C\u5728\u4E0B\u4E00\u6B21\u51FD\u6570\u7EC4\u4EF6\u6267\u884C\u65F6\u5019\uFF0C\u4E09\u6B21 <code>update</code>\u88AB\u5408\u5E76\u5230 <code>baseQueue</code>\u3002\u7ED3\u6784\u5982\u4E0B\u56FE\uFF1A</p>`,35),y=["src"],w=a("<p>\u63A5\u4E0B\u6765\u4F1A\u628A\u5F53\u524D<code>useState</code>\u6216\u662F<code>useReduer</code>\u5BF9\u5E94\u7684<code>hooks</code>\u4E0A\u7684<code>baseState</code>\u548C<code>baseQueue</code>\u66F4\u65B0\u5230\u6700\u65B0\u7684\u72B6\u6001\u3002\u4F1A\u5FAA\u73AF<code>baseQueue</code>\u7684<code>update</code>\uFF0C\u590D\u5236\u4E00\u4EFD<code>update</code>,\u66F4\u65B0<code>expirationTime</code>\uFF0C\u5BF9\u4E8E\u6709\u8DB3\u591F\u4F18\u5148\u7EA7\u7684<code>update</code>\uFF08\u4E0A\u8FF0\u4E09\u4E2A<code>setNumber</code>\u4EA7\u751F\u7684<code>update</code>\u90FD\u5177\u6709\u8DB3\u591F\u7684\u4F18\u5148\u7EA7\uFF09\uFF0C\u8981\u83B7\u53D6\u6700\u65B0\u7684<code>state</code>\u72B6\u6001\u3002\uFF0C\u4F1A\u4E00\u6B21\u6267\u884C<code>useState</code>\u4E0A\u7684\u6BCF\u4E00\u4E2A<code>action</code>\u3002\u5F97\u5230\u6700\u65B0\u7684<code>state</code>\u3002</p><p><strong>\u66F4\u65B0state</strong></p>",2),v=["src"],x=a(`<p>\u8FD9\u91CC\u6709\u4F1A\u6709\u4E24\u4E2A\u7591\u95EE\u{1F914}\uFE0F:</p><ul><li>\u95EE\u9898\u4E00\uFF1A\u8FD9\u91CC\u4E0D\u662F\u6267\u884C\u6700\u540E\u4E00\u4E2A<code>action</code>\u4E0D\u5C31\u53EF\u4EE5\u4E86\u561B?</li></ul><p>\u7B54\u6848\uFF1A \u539F\u56E0\u5F88\u7B80\u5355\uFF0C\u4E0A\u9762\u8BF4\u4E86 <code>useState</code>\u903B\u8F91\u548C<code>useReducer</code>\u5DEE\u4E0D\u591A\u3002\u5982\u679C\u7B2C\u4E00\u4E2A\u53C2\u6570\u662F\u4E00\u4E2A\u51FD\u6570\uFF0C\u4F1A\u5F15\u7528\u4E0A\u4E00\u6B21 <code>update</code>\u4EA7\u751F\u7684 <code>state</code>, \u6240\u4EE5\u9700\u8981<strong>\u5FAA\u73AF\u8C03\u7528\uFF0C\u6BCF\u4E00\u4E2A<code>update</code>\u7684<code>reducer</code></strong>\uFF0C\u5982\u679C<code>setNumber(2)</code>\u662F\u8FD9\u79CD\u60C5\u51B5\uFF0C\u90A3\u4E48\u53EA\u7528\u66F4\u65B0\u503C\uFF0C\u5982\u679C\u662F<code>setNumber(state=&gt;state+1)</code>,\u90A3\u4E48\u4F20\u5165\u4E0A\u4E00\u6B21\u7684 <code>state</code> \u5F97\u5230\u6700\u65B0<code>state</code>\u3002</p><ul><li>\u95EE\u9898\u4E8C\uFF1A\u4EC0\u4E48\u60C5\u51B5\u4E0B\u4F1A\u6709\u4F18\u5148\u7EA7\u4E0D\u8DB3\u7684\u60C5\u51B5(<code>updateExpirationTime &lt; renderExpirationTime</code>)\uFF1F</li></ul><p>\u7B54\u6848\uFF1A \u8FD9\u79CD\u60C5\u51B5\uFF0C\u4E00\u822C\u4F1A\u53D1\u751F\u5728\uFF0C\u5F53\u8C03\u7528<code>setNumber</code>\u65F6\u5019\uFF0C\u8C03\u7528<code>scheduleUpdateOnFiber</code>\u6E32\u67D3\u5F53\u524D\u7EC4\u4EF6\u65F6\uFF0C\u53C8\u4EA7\u751F\u4E86\u4E00\u6B21\u65B0\u7684\u66F4\u65B0\uFF0C\u6240\u4EE5\u628A\u6700\u7EC8\u6267\u884C<code>reducer</code>\u66F4\u65B0<code>state</code>\u4EFB\u52A1\u4EA4\u7ED9\u4E0B\u4E00\u6B21\u66F4\u65B0\u3002</p><h2 id="_3-updateeffect" tabindex="-1"><a class="header-anchor" href="#_3-updateeffect" aria-hidden="true">#</a> 3 updateEffect</h2><hr><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">updateEffect</span><span class="token punctuation">(</span><span class="token parameter">create<span class="token punctuation">,</span> deps</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> hook <span class="token operator">=</span> <span class="token function">updateWorkInProgressHook</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> nextDeps <span class="token operator">=</span> deps <span class="token operator">===</span> <span class="token keyword">undefined</span> <span class="token operator">?</span> <span class="token keyword">null</span> <span class="token operator">:</span> deps<span class="token punctuation">;</span>
    <span class="token keyword">let</span> destroy <span class="token operator">=</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>currentHook <span class="token operator">!==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> prevEffect <span class="token operator">=</span> currentHook<span class="token punctuation">.</span>memoizedState<span class="token punctuation">;</span>
        destroy <span class="token operator">=</span> prevEffect<span class="token punctuation">.</span>destroy<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>nextDeps <span class="token operator">!==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">const</span> prevDeps <span class="token operator">=</span> prevEffect<span class="token punctuation">.</span>deps<span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">areHookInputsEqual</span><span class="token punctuation">(</span>nextDeps<span class="token punctuation">,</span> prevDeps<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token function">pushEffect</span><span class="token punctuation">(</span>hookEffectTag<span class="token punctuation">,</span> create<span class="token punctuation">,</span> destroy<span class="token punctuation">,</span> nextDeps<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    currentlyRenderingFiber<span class="token punctuation">.</span>effectTag <span class="token operator">|=</span> fiberEffectTag
    hook<span class="token punctuation">.</span>memoizedState <span class="token operator">=</span> <span class="token function">pushEffect</span><span class="token punctuation">(</span>
        HookHasEffect <span class="token operator">|</span> hookEffectTag<span class="token punctuation">,</span>
        create<span class="token punctuation">,</span>
        destroy<span class="token punctuation">,</span>
        nextDeps<span class="token punctuation">,</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><p><code>useEffect</code> \u505A\u7684\u4E8B\u5F88\u7B80\u5355\uFF0C\u5224\u65AD\u4E24\u6B21<code>deps</code> \u76F8\u7B49\uFF0C\u5982\u679C\u76F8\u7B49\u8BF4\u660E\u6B64\u6B21\u66F4\u65B0\u4E0D\u9700\u8981\u6267\u884C\uFF0C\u5219\u76F4\u63A5\u8C03\u7528 <code>pushEffect</code>,\u8FD9\u91CC\u6CE8\u610F <code>effect</code>\u7684\u6807\u7B7E\uFF0C<code>hookEffectTag</code>,\u5982\u679C\u4E0D\u76F8\u7B49\uFF0C\u90A3\u4E48\u66F4\u65B0 <code>effect</code> ,\u5E76\u4E14\u8D4B\u503C\u7ED9<code>hook.memoizedState</code>\uFF0C\u8FD9\u91CC\u6807\u7B7E\u662F <code>HookHasEffect | hookEffectTag</code>,\u7136\u540E\u5728<code>commit</code>\u9636\u6BB5\uFF0C<code>react</code>\u4F1A\u901A\u8FC7\u6807\u7B7E\u6765\u5224\u65AD\uFF0C\u662F\u5426\u6267\u884C\u5F53\u524D\u7684 <code>effect</code> \u51FD\u6570\u3002</p><h2 id="_4-updatememo" tabindex="-1"><a class="header-anchor" href="#_4-updatememo" aria-hidden="true">#</a> 4 updateMemo</h2><hr><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">updateMemo</span><span class="token punctuation">(</span>
    <span class="token parameter">nextCreate<span class="token punctuation">,</span>
    deps<span class="token punctuation">,</span></span>
<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> hook <span class="token operator">=</span> <span class="token function">updateWorkInProgressHook</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> nextDeps <span class="token operator">=</span> deps <span class="token operator">===</span> <span class="token keyword">undefined</span> <span class="token operator">?</span> <span class="token keyword">null</span> <span class="token operator">:</span> deps<span class="token punctuation">;</span> <span class="token comment">// \u65B0\u7684 deps \u503C</span>
    <span class="token keyword">const</span> prevState <span class="token operator">=</span> hook<span class="token punctuation">.</span>memoizedState<span class="token punctuation">;</span> 
    <span class="token keyword">if</span> <span class="token punctuation">(</span>prevState <span class="token operator">!==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>nextDeps <span class="token operator">!==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> prevDeps <span class="token operator">=</span> prevState<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// \u4E4B\u524D\u4FDD\u5B58\u7684 deps \u503C</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">areHookInputsEqual</span><span class="token punctuation">(</span>nextDeps<span class="token punctuation">,</span> prevDeps<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">//\u5224\u65AD\u4E24\u6B21 deps \u503C</span>
            <span class="token keyword">return</span> prevState<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">const</span> nextValue <span class="token operator">=</span> <span class="token function">nextCreate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    hook<span class="token punctuation">.</span>memoizedState <span class="token operator">=</span> <span class="token punctuation">[</span>nextValue<span class="token punctuation">,</span> nextDeps<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> nextValue<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><p>\u5728\u7EC4\u4EF6\u66F4\u65B0\u8FC7\u7A0B\u4E2D\uFF0C\u6267\u884C<code>useMemo</code>\u51FD\u6570\uFF0C\u505A\u7684\u4E8B\u60C5\u5B9E\u9645\u5F88\u7B80\u5355\uFF0C\u5C31\u662F\u5224\u65AD\u4E24\u6B21 <code>deps</code>\u662F\u5426\u76F8\u7B49\uFF0C\u5982\u679C\u4E0D\u60F3\u7B49\uFF0C\u8BC1\u660E\u4F9D\u8D56\u9879\u53D1\u751F\u6539\u53D8\uFF0C\u90A3\u4E48\u6267\u884C <code>useMemo</code>\u7684\u7B2C\u4E00\u4E2A\u51FD\u6570\uFF0C\u5F97\u5230\u65B0\u7684\u503C\uFF0C\u7136\u540E\u91CD\u65B0\u8D4B\u503C\u7ED9<code>hook.memoizedState</code>,\u5982\u679C\u76F8\u7B49 \u8BC1\u660E\u6CA1\u6709\u4F9D\u8D56\u9879\u6539\u53D8\uFF0C\u90A3\u4E48\u76F4\u63A5\u83B7\u53D6\u7F13\u5B58\u7684\u503C\u3002</p><p>\u4E0D\u8FC7\u8FD9\u91CC\u6709\u4E00\u70B9\uFF0C\u503C\u5F97\u6CE8\u610F\uFF0C<code>nextCreate()</code>\u6267\u884C\uFF0C\u5982\u679C\u91CC\u9762\u5F15\u7528\u4E86<code>usestate</code>\u7B49\u4FE1\u606F\uFF0C\u53D8\u91CF\u4F1A\u88AB\u5F15\u7528\uFF0C\u65E0\u6CD5\u88AB\u5783\u573E\u56DE\u6536\u673A\u5236\u56DE\u6536\uFF0C\u5C31\u662F\u95ED\u5305\u539F\u7406\uFF0C\u90A3\u4E48\u8BBF\u95EE\u7684\u5C5E\u6027\u6709\u53EF\u80FD\u4E0D\u662F\u6700\u65B0\u7684\u503C\uFF0C\u6240\u4EE5\u9700\u8981\u628A\u5F15\u7528\u7684\u503C\uFF0C\u6DFB\u52A0\u5230\u4F9D\u8D56\u9879 <code>dep</code> \u6570\u7EC4\u4E2D\u3002\u6BCF\u4E00\u6B21<code>dep</code>\u6539\u53D8\uFF0C\u91CD\u65B0\u6267\u884C\uFF0C\u5C31\u4E0D\u4F1A\u51FA\u73B0\u95EE\u9898\u4E86\u3002</p><p><strong>\u6E29\u99A8\u5C0F\u63D0\u793A\uFF1A \u6709\u5F88\u591A\u540C\u5B66\u8BF4 <code>useMemo</code>\u600E\u4E48\u7528\uFF0C\u5230\u5E95\u4EC0\u4E48\u573A\u666F\u7528\uFF0C\u7528\u4E86\u4F1A\u4E0D\u4F1A\u8D77\u5230\u53CD\u4F5C\u7528\uFF0C\u901A\u8FC7\u5BF9\u6E90\u7801\u539F\u7406\u89E3\u6790\uFF0C\u53EF\u4EE5\u660E\u786E\u7684\u8BF4\uFF0C\u57FA\u672C\u4E0A\u53EF\u4EE5\u653E\u5FC3\u4F7F\u7528\uFF0C\u8BF4\u767D\u4E86\u5C31\u662F\u53EF\u4EE5\u5B9A\u5236\u5316\u7F13\u5B58\uFF0C\u5B58\u503C\u53D6\u503C\u800C\u5DF2\u3002</strong></p><h2 id="_5-updateref" tabindex="-1"><a class="header-anchor" href="#_5-updateref" aria-hidden="true">#</a> 5 updateRef</h2><hr><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">updateRef</span><span class="token punctuation">(</span><span class="token parameter">initialValue</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">const</span> hook <span class="token operator">=</span> <span class="token function">updateWorkInProgressHook</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> hook<span class="token punctuation">.</span>memoizedState
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>\u51FD\u6570\u7EC4\u4EF6\u66F4\u65B0<code>useRef</code>\u505A\u7684\u4E8B\u60C5\u66F4\u7B80\u5355\uFF0C\u5C31\u662F\u8FD4\u56DE\u4E86\u7F13\u5B58\u4E0B\u6765\u7684\u503C\uFF0C\u4E5F\u5C31\u662F\u65E0\u8BBA\u51FD\u6570\u7EC4\u4EF6\u600E\u4E48\u6267\u884C\uFF0C\u6267\u884C\u591A\u5C11\u6B21\uFF0C<code>hook.memoizedState</code>\u5185\u5B58\u4E2D\u90FD\u6307\u5411\u4E86\u4E00\u4E2A\u5BF9\u8C61\uFF0C\u6240\u4EE5\u89E3\u91CA\u4E86<code>useEffect</code>,<code>useMemo</code> \u4E2D\uFF0C\u4E3A\u4EC0\u4E48<code>useRef</code>\u4E0D\u9700\u8981\u4F9D\u8D56\u6CE8\u5165\uFF0C\u5C31\u80FD\u8BBF\u95EE\u5230\u6700\u65B0\u7684\u6539\u53D8\u503C\u3002</p><p><strong>\u4E00\u6B21\u70B9\u51FB\u4E8B\u4EF6\u66F4\u65B0</strong></p>`,20),S=["src"];function H(n,R){return e(),p(o,null,[r,s("img",{src:n.$withBase("/assets/react/d99a12ad708647d4bfd075a59d518c8b_tplv-k3u1fbpfcp-watermark.image"),alt:"demo"},null,8,l),u,s("img",{src:n.$withBase("/assets/react/adcbd09984f84d0d97a15df124e83c09_tplv-k3u1fbpfcp-watermark.image"),alt:"demo"},null,8,i),k,s("img",{src:n.$withBase("/assets/react/5660f1be680140239a8cf4e34cfccc90_tplv-k3u1fbpfcp-watermark.image"),alt:"demo"},null,8,d),b,s("img",{src:n.$withBase("/assets/react/54a38675154a483885a3c5c9a80f360e_tplv-k3u1fbpfcp-watermark.image"),alt:"demo"},null,8,m),f,s("img",{src:n.$withBase("/assets/react/14ac9e04c10e45e5b93fc76d47a5fdd5_tplv-k3u1fbpfcp-watermark.image"),alt:"demo"},null,8,h),g,s("img",{src:n.$withBase("/assets/react/52ed6118238d412aa20044ad33f25827_tplv-k3u1fbpfcp-watermark.image"),alt:"demo"},null,8,y),w,s("img",{src:n.$withBase("/assets/react/6d78fac49ce648ea89bce06a25e1128d_tplv-k3u1fbpfcp-watermark.image"),alt:"demo"},null,8,v),x,s("img",{src:n.$withBase("/assets/react/a02c58be8c6f455f96c2e691b2ac6f7b_tplv-k3u1fbpfcp-watermark.image"),alt:"demo"},null,8,S)],64)}var E=t(c,[["render",H]]);export{E as default};
