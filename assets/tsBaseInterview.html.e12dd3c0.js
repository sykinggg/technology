import{a as n}from"./app.ee3fc36b.js";import{_ as s}from"./plugin-vue_export-helper.21dcd24c.js";const a={},p=n(`<h1 id="typescript-\u7EFC\u5408\u9762\u8BD5" tabindex="-1"><a class="header-anchor" href="#typescript-\u7EFC\u5408\u9762\u8BD5" aria-hidden="true">#</a> typescript \u7EFC\u5408\u9762\u8BD5</h1><h2 id="\u4E00\u3001\u9AD8\u7EA7\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#\u4E00\u3001\u9AD8\u7EA7\u7C7B\u578B" aria-hidden="true">#</a> \u4E00\u3001\u9AD8\u7EA7\u7C7B\u578B</h2><h3 id="\u4EA4\u53C9\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#\u4EA4\u53C9\u7C7B\u578B" aria-hidden="true">#</a> \u4EA4\u53C9\u7C7B\u578B(&amp;)</h3><p>\u4EA4\u53C9\u7C7B\u578B\u662F\u5C06\u591A\u4E2A\u7C7B\u578B\u5408\u5E76\u4E3A\u4E00\u4E2A\u7C7B\u578B\u3002 \u8FD9\u8BA9\u53EF\u4EE5\u628A\u73B0\u6709\u7684\u591A\u79CD\u7C7B\u578B\u53E0\u52A0\u5230\u4E00\u8D77\u6210\u4E3A\u4E00\u79CD\u7C7B\u578B\uFF0C\u5B83\u5305\u542B\u4E86\u6240\u9700\u7684\u6240\u6709\u7C7B\u578B\u7684\u7279\u6027\u3002</p><ul><li>\u8BED\u6CD5\uFF1A <code>T &amp; U</code></li></ul><blockquote><p>\u5176\u8FD4\u56DE\u7C7B\u578B\u65E2\u8981\u7B26\u5408 <code>T</code> \u7C7B\u578B\u4E5F\u8981\u7B26\u5408 <code>U</code> \u7C7B\u578B</p></blockquote><ul><li>\u7528\u6CD5\uFF1A\u5047\u8BBE\u6709\u4E24\u4E2A\u63A5\u53E3\uFF1A\u4E00\u4E2A\u662F <code>Ant</code> \u8682\u8681\u63A5\u53E3\uFF0C\u4E00\u4E2A\u662F <code>Fly</code> \u98DE\u7FD4\u63A5\u53E3\uFF0C\u73B0\u5728\u6709\u4E00\u53EA\u4F1A\u98DE\u7684\u8682\u8681\uFF1A</li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">Ant</span> <span class="token punctuation">{</span>
    name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
    weight<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">interface</span> <span class="token class-name">Fly</span> <span class="token punctuation">{</span>
    flyHeight<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
    speed<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u5C11\u4E86\u4EFB\u4F55\u4E00\u4E2A\u5C5E\u6027\u90FD\u4F1A\u62A5\u9519</span>
<span class="token keyword">const</span> flyAnt<span class="token operator">:</span> Ant <span class="token operator">&amp;</span> Fly <span class="token operator">=</span> <span class="token punctuation">{</span>
    name<span class="token operator">:</span> <span class="token string">&#39;\u8682\u8681\u5440\u563F&#39;</span><span class="token punctuation">,</span>
    weight<span class="token operator">:</span> <span class="token number">0.2</span><span class="token punctuation">,</span>
    flyHeight<span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">,</span>
    speed<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><h3 id="\u8054\u5408\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#\u8054\u5408\u7C7B\u578B" aria-hidden="true">#</a> \u8054\u5408\u7C7B\u578B(|)</h3><p>\u8054\u5408\u7C7B\u578B\u4E0E\u4EA4\u53C9\u7C7B\u578B\u5F88\u6709\u5173\u8054\uFF0C\u4F46\u662F\u4F7F\u7528\u4E0A\u5374\u5B8C\u5168\u4E0D\u540C\u3002</p><ul><li>\u8BED\u6CD5\uFF1A <code>T | U</code></li></ul><blockquote><p>\u5176\u8FD4\u56DE\u7C7B\u578B\u4E3A\u8FDE\u63A5\u7684\u591A\u4E2A\u7C7B\u578B\u4E2D\u7684\u4EFB\u610F\u4E00\u4E2A</p></blockquote><ul><li>\u7528\u6CD5\uFF1A\u5047\u8BBE\u58F0\u660E\u4E00\u4E2A\u6570\u636E\uFF0C\u65E2\u53EF\u4EE5\u662F <code>string</code> \u7C7B\u578B\uFF0C\u4E5F\u53EF\u4EE5\u662F <code>number</code> \u7C7B\u578B</li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">let</span> stringOrNumber<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span> <span class="token operator">=</span> <span class="token number">0</span>

stringOrNumber <span class="token operator">=</span> <span class="token string">&#39;&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u518D\u770B\u4E0B\u9762\u8FD9\u4E2A\u4F8B\u5B50\uFF0C<code>start</code> \u51FD\u6570\u7684\u53C2\u6570\u7C7B\u578B\u65E2\u662F <code>Bird | Fish</code>\uFF0C\u90A3\u4E48\u5728 <code>start</code> \u51FD\u6570\u4E2D\uFF0C\u60F3\u8981\u76F4\u63A5\u8C03\u7528\u7684\u8BDD\uFF0C\u53EA\u80FD\u8C03\u7528 <code>Bird</code> \u548C <code>Fish</code> \u90FD\u5177\u5907\u7684\u65B9\u6CD5\uFF0C\u5426\u5219\u7F16\u8BD1\u4F1A\u62A5\u9519</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name">Bird</span> <span class="token punctuation">{</span>
    <span class="token function">fly</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Bird flying&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token function">layEggs</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Bird layEggs&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">Fish</span> <span class="token punctuation">{</span>
    <span class="token function">swim</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Fish swimming&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token function">layEggs</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Fish layEggs&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> bird <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Bird</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> fish <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Fish</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">start</span><span class="token punctuation">(</span>pet<span class="token operator">:</span> Bird <span class="token operator">|</span> Fish<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u8C03\u7528 layEggs \u6CA1\u95EE\u9898\uFF0C\u56E0\u4E3A Bird \u6216\u8005 Fish \u90FD\u6709 layEggs \u65B9\u6CD5</span>
    pet<span class="token punctuation">.</span><span class="token function">layEggs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// \u4F1A\u62A5\u9519\uFF1AProperty &#39;fly&#39; does not exist on type &#39;Bird | Fish&#39;</span>
    <span class="token comment">// pet.fly();</span>

    <span class="token comment">// \u4F1A\u62A5\u9519\uFF1AProperty &#39;swim&#39; does not exist on type &#39;Bird | Fish&#39;</span>
    <span class="token comment">// pet.swim();</span>
<span class="token punctuation">}</span>

<span class="token function">start</span><span class="token punctuation">(</span>bird<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">start</span><span class="token punctuation">(</span>fish<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br></div></div><h2 id="\u4E8C\u3001\u5173\u952E\u5B57" tabindex="-1"><a class="header-anchor" href="#\u4E8C\u3001\u5173\u952E\u5B57" aria-hidden="true">#</a> \u4E8C\u3001\u5173\u952E\u5B57</h2><h3 id="\u7C7B\u578B\u7EA6\u675F-extends" tabindex="-1"><a class="header-anchor" href="#\u7C7B\u578B\u7EA6\u675F-extends" aria-hidden="true">#</a> \u7C7B\u578B\u7EA6\u675F(extends)</h3><p>\u8BED\u6CD5\uFF1A<code>T extends K</code></p><blockquote><p>\u8FD9\u91CC\u7684 <code>extends</code> \u4E0D\u662F\u7C7B\u3001\u63A5\u53E3\u7684\u7EE7\u627F\uFF0C\u800C\u662F\u5BF9\u4E8E\u7C7B\u578B\u7684\u5224\u65AD\u548C\u7EA6\u675F\uFF0C\u610F\u601D\u662F\u5224\u65AD <code>T</code> \u80FD\u5426\u8D4B\u503C\u7ED9 <code>K</code></p></blockquote><p>\u53EF\u4EE5\u5728\u6CDB\u578B\u4E2D\u5BF9\u4F20\u5165\u7684\u7C7B\u578B\u8FDB\u884C\u7EA6\u675F</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> copy <span class="token operator">=</span> <span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span> <span class="token operator">=&gt;</span> value

<span class="token comment">// \u53EA\u80FD\u4F20\u5165 string \u6216\u8005 number</span>
<span class="token function">copy</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>

<span class="token comment">// \u4F1A\u62A5\u9519\uFF1AArgument of type &#39;boolean&#39; is not assignable to parameter of type &#39;string | number&#39;</span>
<span class="token comment">// copy(false)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>\u4E5F\u53EF\u4EE5\u5224\u65AD <code>T</code> \u662F\u5426\u53EF\u4EE5\u8D4B\u503C\u7ED9 <code>U</code>\uFF0C\u53EF\u4EE5\u7684\u8BDD\u8FD4\u56DE <code>T</code>\uFF0C\u5426\u5219\u8FD4\u56DE <code>never</code></p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">Exclude<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span> <span class="token constant">U</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token constant">U</span></span> <span class="token operator">?</span> <span class="token constant">T</span> <span class="token operator">:</span> <span class="token builtin">never</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="\u7C7B\u578B\u6620\u5C04-in" tabindex="-1"><a class="header-anchor" href="#\u7C7B\u578B\u6620\u5C04-in" aria-hidden="true">#</a> \u7C7B\u578B\u6620\u5C04(in)</h3><p>\u4F1A\u904D\u5386\u6307\u5B9A\u63A5\u53E3\u7684 <code>key</code> \u6216\u8005\u662F\u904D\u5386\u8054\u5408\u7C7B\u578B</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">Person</span> <span class="token punctuation">{</span>
    name<span class="token operator">:</span> <span class="token builtin">string</span>
    age<span class="token operator">:</span> <span class="token builtin">number</span>
    gender<span class="token operator">:</span> <span class="token builtin">number</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u5C06 T \u7684\u6240\u6709\u5C5E\u6027\u8F6C\u6362\u4E3A\u53EA\u8BFB\u7C7B\u578B</span>
<span class="token keyword">type</span> <span class="token class-name">ReadOnlyType<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token keyword">readonly</span> <span class="token punctuation">[</span><span class="token constant">P</span> <span class="token keyword">in</span> <span class="token keyword">keyof</span> <span class="token constant">T</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token constant">T</span>
<span class="token punctuation">}</span>

<span class="token comment">// type ReadOnlyPerson = {</span>
<span class="token comment">//     readonly name: string;</span>
<span class="token comment">//     readonly age: number;</span>
<span class="token comment">//     readonly gender: number;</span>
<span class="token comment">// }</span>
<span class="token keyword">type</span> <span class="token class-name">ReadOnlyPerson</span> <span class="token operator">=</span> ReadOnlyType<span class="token operator">&lt;</span>Person<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><h3 id="\u7C7B\u578B\u8C13\u8BCD-is" tabindex="-1"><a class="header-anchor" href="#\u7C7B\u578B\u8C13\u8BCD-is" aria-hidden="true">#</a> \u7C7B\u578B\u8C13\u8BCD(is)</h3><ul><li>\u8BED\u6CD5\uFF1A<code>parameterName is Type</code></li></ul><blockquote><p><code>parameterName</code> \u5FC5\u987B\u662F\u6765\u81EA\u4E8E\u5F53\u524D\u51FD\u6570\u7B7E\u540D\u91CC\u7684\u4E00\u4E2A\u53C2\u6570\u540D\uFF0C\u5224\u65AD <code>parameterName</code> \u662F\u5426\u662F <code>Type</code> \u7C7B\u578B\u3002</p></blockquote><p>\u5177\u4F53\u7684\u5E94\u7528\u573A\u666F\u53EF\u4EE5\u8DDF\u7740\u4E0B\u9762\u7684\u4EE3\u7801\u601D\u8DEF\u8FDB\u884C\u4F7F\u7528\uFF1A</p><p>\u770B\u5B8C\u8054\u5408\u7C7B\u578B\u7684\u4F8B\u5B50\u540E\uFF0C\u53EF\u80FD\u4F1A\u8003\u8651\uFF1A\u5982\u679C\u60F3\u8981\u5728 <code>start</code> \u51FD\u6570\u4E2D\uFF0C\u6839\u636E\u60C5\u51B5\u53BB\u8C03\u7528 <code>Bird</code> \u7684 <code>fly</code> \u65B9\u6CD5\u548C <code>Fish</code> \u7684 <code>swim</code> \u65B9\u6CD5\uFF0C\u8BE5\u5982\u4F55\u64CD\u4F5C\u5462\uFF1F</p><blockquote><p>\u9996\u5148\u60F3\u5230\u7684\u53EF\u80FD\u662F\u76F4\u63A5\u68C0\u67E5\u6210\u5458\u662F\u5426\u5B58\u5728\uFF0C\u7136\u540E\u8FDB\u884C\u8C03\u7528\uFF1A</p></blockquote><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">start</span><span class="token punctuation">(</span>pet<span class="token operator">:</span> Bird <span class="token operator">|</span> Fish<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u8C03\u7528 layEggs \u6CA1\u95EE\u9898\uFF0C\u56E0\u4E3A Bird \u6216\u8005 Fish \u90FD\u6709 layEggs \u65B9\u6CD5</span>
    pet<span class="token punctuation">.</span><span class="token function">layEggs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>pet <span class="token keyword">as</span> Bird<span class="token punctuation">)</span><span class="token punctuation">.</span>fly<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token punctuation">(</span>pet <span class="token keyword">as</span> Bird<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fly</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>pet <span class="token keyword">as</span> Fish<span class="token punctuation">)</span><span class="token punctuation">.</span>swim<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token punctuation">(</span>pet <span class="token keyword">as</span> Fish<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">swim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>\u4F46\u662F\u8FD9\u6837\u505A\uFF0C\u5224\u65AD\u4EE5\u53CA\u8C03\u7528\u7684\u65F6\u5019\u90FD\u8981\u8FDB\u884C\u7C7B\u578B\u8F6C\u6362\uFF0C\u672A\u514D\u6709\u4E9B\u9EBB\u70E6\uFF0C\u53EF\u80FD\u4F1A\u60F3\u5230\u5199\u4E2A\u5DE5\u5177\u51FD\u6570\u5224\u65AD\u4E0B\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">isBird</span><span class="token punctuation">(</span>bird<span class="token operator">:</span> Bird <span class="token operator">|</span> Fish<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">(</span>bird <span class="token keyword">as</span> Bird<span class="token punctuation">)</span><span class="token punctuation">.</span>fly<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">isFish</span><span class="token punctuation">(</span>fish<span class="token operator">:</span> Bird <span class="token operator">|</span> Fish<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">(</span>fish <span class="token keyword">as</span> Fish<span class="token punctuation">)</span><span class="token punctuation">.</span>swim<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">start</span><span class="token punctuation">(</span>pet<span class="token operator">:</span> Bird <span class="token operator">|</span> Fish<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u8C03\u7528 layEggs \u6CA1\u95EE\u9898\uFF0C\u56E0\u4E3A Bird \u6216\u8005 Fish \u90FD\u6709 layEggs \u65B9\u6CD5</span>
    pet<span class="token punctuation">.</span><span class="token function">layEggs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isBird</span><span class="token punctuation">(</span>pet<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token punctuation">(</span>pet <span class="token keyword">as</span> Bird<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fly</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isFish</span><span class="token punctuation">(</span>pet<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token punctuation">(</span>pet <span class="token keyword">as</span> Fish<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">swim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><p>\u770B\u8D77\u6765\u7B80\u6D01\u4E86\u4E00\u70B9\uFF0C\u4F46\u662F\u8C03\u7528\u65B9\u6CD5\u7684\u65F6\u5019\uFF0C\u8FD8\u662F\u8981\u8FDB\u884C\u7C7B\u578B\u8F6C\u6362\u624D\u53EF\u4EE5\uFF0C\u5426\u5219\u8FD8\u662F\u4F1A\u62A5\u9519\uFF0C\u90A3\u6709\u4EC0\u4E48\u597D\u7684\u529E\u6CD5\uFF0C\u80FD\u8BA9\u5224\u65AD\u5B8C\u7C7B\u578B\u4E4B\u540E\uFF0C\u5C31\u53EF\u4EE5\u76F4\u63A5\u8C03\u7528\u65B9\u6CD5\uFF0C\u4E0D\u7528\u518D\u8FDB\u884C\u7C7B\u578B\u8F6C\u6362\u5462\uFF1F</p><p>OK\uFF0C\u80AF\u5B9A\u662F\u6709\u7684\uFF0C\u7C7B\u578B\u8C13\u8BCD <code>is</code> \u5C31\u6D3E\u4E0A\u7528\u573A\u4E86</p><ul><li>\u7528\u6CD5\uFF1A</li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">isBird</span><span class="token punctuation">(</span>bird<span class="token operator">:</span> Bird <span class="token operator">|</span> Fish<span class="token punctuation">)</span><span class="token operator">:</span> bird <span class="token keyword">is</span> Bird <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">(</span>bird <span class="token keyword">as</span> Bird<span class="token punctuation">)</span><span class="token punctuation">.</span>fly
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">start</span><span class="token punctuation">(</span>pet<span class="token operator">:</span> Bird <span class="token operator">|</span> Fish<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u8C03\u7528 layEggs \u6CA1\u95EE\u9898\uFF0C\u56E0\u4E3A Bird \u6216\u8005 Fish \u90FD\u6709 layEggs \u65B9\u6CD5</span>
    pet<span class="token punctuation">.</span><span class="token function">layEggs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isBird</span><span class="token punctuation">(</span>pet<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        pet<span class="token punctuation">.</span><span class="token function">fly</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        pet<span class="token punctuation">.</span><span class="token function">swim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p>\u6BCF\u5F53\u4F7F\u7528\u4E00\u4E9B\u53D8\u91CF\u8C03\u7528 <code>isFish</code> \u65F6\uFF0C<code>TypeScript</code> \u4F1A\u5C06\u53D8\u91CF\u7F29\u51CF\u4E3A\u90A3\u4E2A\u5177\u4F53\u7684\u7C7B\u578B\uFF0C\u53EA\u8981\u8FD9\u4E2A\u7C7B\u578B\u4E0E\u53D8\u91CF\u7684\u539F\u59CB\u7C7B\u578B\u662F\u517C\u5BB9\u7684\u3002</p><blockquote><p><code>TypeScript</code> \u4E0D\u4EC5\u77E5\u9053\u5728 <code>if</code> \u5206\u652F\u91CC <code>pet</code> \u662F <code>Fish</code> \u7C7B\u578B\uFF1B \u5B83\u8FD8\u6E05\u695A\u5728 <code>else</code> \u5206\u652F\u91CC\uFF0C\u4E00\u5B9A\u4E0D\u662F <code>Fish</code> \u7C7B\u578B\uFF0C\u4E00\u5B9A\u662F <code>Bird</code> \u7C7B\u578B</p></blockquote><h3 id="\u5F85\u63A8\u65AD\u7C7B\u578B-infer" tabindex="-1"><a class="header-anchor" href="#\u5F85\u63A8\u65AD\u7C7B\u578B-infer" aria-hidden="true">#</a> \u5F85\u63A8\u65AD\u7C7B\u578B(infer)</h3><p>\u53EF\u4EE5\u7528 <code>infer P</code> \u6765\u6807\u8BB0\u4E00\u4E2A\u6CDB\u578B\uFF0C\u8868\u793A\u8FD9\u4E2A\u6CDB\u578B\u662F\u4E00\u4E2A\u5F85\u63A8\u65AD\u7684\u7C7B\u578B\uFF0C\u5E76\u4E14\u53EF\u4EE5\u76F4\u63A5\u4F7F\u7528</p><p>\u6BD4\u5982\u4E0B\u9762\u8FD9\u4E2A\u83B7\u53D6\u51FD\u6570\u53C2\u6570\u7C7B\u578B\u7684\u4F8B\u5B50\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">ParamType<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token punctuation">(</span>param<span class="token operator">:</span> <span class="token keyword">infer</span> <span class="token constant">P</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">any</span> <span class="token operator">?</span> <span class="token constant">P</span> <span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">;</span>

<span class="token keyword">type</span> <span class="token class-name">FunctionType</span> <span class="token operator">=</span> <span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">boolean</span>

<span class="token keyword">type</span> <span class="token class-name">Param</span> <span class="token operator">=</span> ParamType<span class="token operator">&lt;</span>FunctionType<span class="token operator">&gt;</span><span class="token punctuation">;</span>   <span class="token comment">// type Param = number</span>

<span class="token keyword">type</span> <span class="token class-name">OtherParam</span> <span class="token operator">=</span> ParamType<span class="token operator">&lt;</span><span class="token builtin">symbol</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>   <span class="token comment">// type Param = symbol</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>\u5224\u65AD <code>T</code> \u662F\u5426\u80FD\u8D4B\u503C\u7ED9 <code>(param: infer P) =&gt; any</code>\uFF0C\u5E76\u4E14\u5C06\u53C2\u6570\u63A8\u65AD\u4E3A\u6CDB\u578B <code>P</code>\uFF0C\u5982\u679C\u53EF\u4EE5\u8D4B\u503C\uFF0C\u5219\u8FD4\u56DE\u53C2\u6570\u7C7B\u578B <code>P</code>\uFF0C\u5426\u5219\u8FD4\u56DE\u4F20\u5165\u7684\u7C7B\u578B</p><p>\u518D\u6765\u4E00\u4E2A\u83B7\u53D6\u51FD\u6570\u8FD4\u56DE\u7C7B\u578B\u7684\u4F8B\u5B50\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">ReturnValueType<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token punctuation">(</span>param<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">infer</span> <span class="token constant">U</span> <span class="token operator">?</span> <span class="token constant">U</span> <span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">;</span>

<span class="token keyword">type</span> <span class="token class-name">FunctionType</span> <span class="token operator">=</span> <span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">boolean</span>

<span class="token keyword">type</span> <span class="token class-name">Return</span> <span class="token operator">=</span> ReturnValueType<span class="token operator">&lt;</span>FunctionType<span class="token operator">&gt;</span><span class="token punctuation">;</span>   <span class="token comment">// type Return = boolean</span>

<span class="token keyword">type</span> <span class="token class-name">OtherReturn</span> <span class="token operator">=</span> ReturnValueType<span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>   <span class="token comment">// type OtherReturn = number</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>\u5224\u65AD <code>T</code> \u662F\u5426\u80FD\u8D4B\u503C\u7ED9 <code>(param: any) =&gt; infer U</code>\uFF0C\u5E76\u4E14\u5C06\u8FD4\u56DE\u503C\u7C7B\u578B\u63A8\u65AD\u4E3A\u6CDB\u578B <code>U</code>\uFF0C\u5982\u679C\u53EF\u4EE5\u8D4B\u503C\uFF0C\u5219\u8FD4\u56DE\u8FD4\u56DE\u503C\u7C7B\u578B <code>P</code>\uFF0C\u5426\u5219\u8FD4\u56DE\u4F20\u5165\u7684\u7C7B\u578B</p><h3 id="\u539F\u59CB\u7C7B\u578B\u4FDD\u62A4-typeof" tabindex="-1"><a class="header-anchor" href="#\u539F\u59CB\u7C7B\u578B\u4FDD\u62A4-typeof" aria-hidden="true">#</a> \u539F\u59CB\u7C7B\u578B\u4FDD\u62A4(typeof)</h3><ul><li>\u8BED\u6CD5\uFF1A<code>typeof v === &quot;typename&quot;</code> \u6216 <code>typeof v !== &quot;typename&quot;</code></li></ul><blockquote><p>\u7528\u6765\u5224\u65AD\u6570\u636E\u7684\u7C7B\u578B\u662F\u5426\u662F\u67D0\u4E2A\u539F\u59CB\u7C7B\u578B\uFF08<code>number</code>\u3001<code>string</code>\u3001<code>boolean</code>\u3001<code>symbol</code>\uFF09\u5E76\u8FDB\u884C\u7C7B\u578B\u4FDD\u62A4</p></blockquote><blockquote><p>&quot;<code>typename</code>&quot;\u5FC5\u987B\u662F &quot;<code>number</code>&quot;\uFF0C &quot;<code>string</code>&quot;\uFF0C &quot;<code>boolean</code>&quot;\u6216 &quot;<code>symbol</code>&quot;\u3002 \u4F46\u662F <code>TypeScript</code> \u5E76\u4E0D\u4F1A\u963B\u6B62\u4F60\u4E0E\u5176\u5B83\u5B57\u7B26\u4E32\u6BD4\u8F83\uFF0C\u8BED\u8A00\u4E0D\u4F1A\u628A\u90A3\u4E9B\u8868\u8FBE\u5F0F\u8BC6\u522B\u4E3A\u7C7B\u578B\u4FDD\u62A4\u3002</p></blockquote><p>\u770B\u4E0B\u9762\u8FD9\u4E2A\u4F8B\u5B50\uFF0C <code>print</code> \u51FD\u6570\u4F1A\u6839\u636E\u53C2\u6570\u7C7B\u578B\u6253\u5370\u4E0D\u540C\u7684\u7ED3\u679C\uFF0C\u90A3\u5982\u4F55\u5224\u65AD\u53C2\u6570\u662F <code>string</code> \u8FD8\u662F <code>number</code> \u5462\uFF1F</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">print</span><span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">|</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5982\u679C\u662F string \u7C7B\u578B</span>
    <span class="token comment">// console.log(value.split(&#39;&#39;).join(&#39;, &#39;))</span>

    <span class="token comment">// \u5982\u679C\u662F number \u7C7B\u578B</span>
    <span class="token comment">// console.log(value.toFixed(2))</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>\u6709\u4E24\u79CD\u5E38\u7528\u7684\u5224\u65AD\u65B9\u5F0F\uFF1A</p><ol><li>\u6839\u636E\u662F\u5426\u5305\u542B <code>split</code> \u5C5E\u6027\u5224\u65AD\u662F <code>string</code> \u7C7B\u578B\uFF0C\u662F\u5426\u5305\u542B <code>toFixed</code> \u65B9\u6CD5\u5224\u65AD\u662F <code>number</code> \u7C7B\u578B</li></ol><blockquote><p>\u5F0A\u7AEF\uFF1A\u4E0D\u8BBA\u662F\u5224\u65AD\u8FD8\u662F\u8C03\u7528\u90FD\u8981\u8FDB\u884C\u7C7B\u578B\u8F6C\u6362</p></blockquote><ol start="2"><li>\u4F7F\u7528\u7C7B\u578B\u8C13\u8BCD is</li></ol><blockquote><p>\u5F0A\u7AEF\uFF1A\u6BCF\u6B21\u90FD\u8981\u53BB\u5199\u4E00\u4E2A\u5DE5\u5177\u51FD\u6570\uFF0C\u592A\u9EBB\u70E6\u4E86</p></blockquote><ul><li>\u7528\u6CD5\uFF1A\u8FD9\u5C31\u5230\u4E86 <code>typeof</code> \u4E00\u5C55\u8EAB\u624B\u7684\u65F6\u5019\u4E86</li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">print</span><span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">|</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> value <span class="token operator">===</span> <span class="token string">&#39;string&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;, &#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><blockquote><p>\u4F7F\u7528 <code>typeof</code> \u8FDB\u884C\u7C7B\u578B\u5224\u65AD\u540E\uFF0C<code>TypeScript</code> \u4F1A\u5C06\u53D8\u91CF\u7F29\u51CF\u4E3A\u90A3\u4E2A\u5177\u4F53\u7684\u7C7B\u578B\uFF0C\u53EA\u8981\u8FD9\u4E2A\u7C7B\u578B\u4E0E\u53D8\u91CF\u7684\u539F\u59CB\u7C7B\u578B\u662F\u517C\u5BB9\u7684\u3002</p></blockquote><h3 id="\u7C7B\u578B\u4FDD\u62A4-instanceof" tabindex="-1"><a class="header-anchor" href="#\u7C7B\u578B\u4FDD\u62A4-instanceof" aria-hidden="true">#</a> \u7C7B\u578B\u4FDD\u62A4(instanceof)</h3><p>\u4E0E <code>typeof</code> \u7C7B\u4F3C\uFF0C\u4E0D\u8FC7\u4F5C\u7528\u65B9\u5F0F\u4E0D\u540C\uFF0C<code>instanceof</code> \u7C7B\u578B\u4FDD\u62A4\u662F\u901A\u8FC7\u6784\u9020\u51FD\u6570\u6765\u7EC6\u5316\u7C7B\u578B\u7684\u4E00\u79CD\u65B9\u5F0F\u3002</p><p><code>instanceof</code> \u7684\u53F3\u4FA7\u8981\u6C42\u662F\u4E00\u4E2A\u6784\u9020\u51FD\u6570\uFF0C<code>TypeScript</code> \u5C06\u7EC6\u5316\u4E3A\uFF1A</p><ul><li><p>\u6B64\u6784\u9020\u51FD\u6570\u7684 <code>prototype</code> \u5C5E\u6027\u7684\u7C7B\u578B\uFF0C\u5982\u679C\u5B83\u7684\u7C7B\u578B\u4E0D\u4E3A <code>any</code> \u7684\u8BDD</p></li><li><p>\u6784\u9020\u7B7E\u540D\u6240\u8FD4\u56DE\u7684\u7C7B\u578B\u7684\u8054\u5408</p></li></ul><p>\u8FD8\u662F\u4EE5 <em><strong>\u7C7B\u578B\u8C13\u8BCD is</strong></em> \u793A\u4F8B\u4E2D\u7684\u4EE3\u7801\u505A\u6F14\u793A\uFF1A</p><p>\u6700\u521D\u4EE3\u7801\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">start</span><span class="token punctuation">(</span>pet<span class="token operator">:</span> Bird <span class="token operator">|</span> Fish<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u8C03\u7528 layEggs \u6CA1\u95EE\u9898\uFF0C\u56E0\u4E3A Bird \u6216\u8005 Fish \u90FD\u6709 layEggs \u65B9\u6CD5</span>
    pet<span class="token punctuation">.</span><span class="token function">layEggs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>pet <span class="token keyword">as</span> Bird<span class="token punctuation">)</span><span class="token punctuation">.</span>fly<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token punctuation">(</span>pet <span class="token keyword">as</span> Bird<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fly</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>pet <span class="token keyword">as</span> Fish<span class="token punctuation">)</span><span class="token punctuation">.</span>swim<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token punctuation">(</span>pet <span class="token keyword">as</span> Fish<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">swim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>\u4F7F\u7528 <code>instanceof</code> \u540E\u7684\u4EE3\u7801\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">start</span><span class="token punctuation">(</span>pet<span class="token operator">:</span> Bird <span class="token operator">|</span> Fish<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u8C03\u7528 layEggs \u6CA1\u95EE\u9898\uFF0C\u56E0\u4E3A Bird \u6216\u8005 Fish \u90FD\u6709 layEggs \u65B9\u6CD5</span>
    pet<span class="token punctuation">.</span><span class="token function">layEggs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>pet <span class="token keyword">instanceof</span> <span class="token class-name">Bird</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        pet<span class="token punctuation">.</span><span class="token function">fly</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        pet<span class="token punctuation">.</span><span class="token function">swim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>\u53EF\u4EE5\u8FBE\u5230\u76F8\u540C\u7684\u6548\u679C</p><h3 id="\u7D22\u5F15\u7C7B\u578B\u67E5\u8BE2\u64CD\u4F5C\u7B26-keyof" tabindex="-1"><a class="header-anchor" href="#\u7D22\u5F15\u7C7B\u578B\u67E5\u8BE2\u64CD\u4F5C\u7B26-keyof" aria-hidden="true">#</a> \u7D22\u5F15\u7C7B\u578B\u67E5\u8BE2\u64CD\u4F5C\u7B26(keyof)</h3><ul><li>\u8BED\u6CD5\uFF1A<code>keyof T</code></li></ul><blockquote><p>\u5BF9\u4E8E\u4EFB\u4F55\u7C7B\u578B <code>T</code>\uFF0C <code>keyof T</code> \u7684\u7ED3\u679C\u4E3A <code>T</code> \u4E0A\u5DF2\u77E5\u7684 \u516C\u5171\u5C5E\u6027\u540D \u7684 \u8054\u5408</p></blockquote><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">Person</span> <span class="token punctuation">{</span>
    name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
    age<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">type</span> <span class="token class-name">PersonProps</span> <span class="token operator">=</span> <span class="token keyword">keyof</span> Person<span class="token punctuation">;</span> <span class="token comment">// &#39;name&#39; | &#39;age&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>\u8FD9\u91CC\uFF0C<code>keyof Person</code> \u8FD4\u56DE\u7684\u7C7B\u578B\u548C <code>&#39;name&#39; | &#39;age&#39;</code> \u8054\u5408\u7C7B\u578B\u662F\u4E00\u6837\uFF0C\u5B8C\u5168\u53EF\u4EE5\u4E92\u76F8\u66FF\u6362</p><ul><li>\u7528\u6CD5\uFF1A<code>keyof</code> \u53EA\u80FD\u8FD4\u56DE\u7C7B\u578B\u4E0A\u5DF2\u77E5\u7684 <strong>\u516C\u5171\u5C5E\u6027\u540D</strong></li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name">Animal</span> <span class="token punctuation">{</span>
    type<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
    weight<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> speed<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">type</span> <span class="token class-name">AnimalProps</span> <span class="token operator">=</span> <span class="token keyword">keyof</span> Animal<span class="token punctuation">;</span> <span class="token comment">// &quot;type&quot; | &quot;weight&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>\u4F8B\u5982\u7ECF\u5E38\u4F1A\u83B7\u53D6\u5BF9\u8C61\u7684\u67D0\u4E2A\u5C5E\u6027\u503C\uFF0C\u4F46\u662F\u4E0D\u786E\u5B9A\u662F\u54EA\u4E2A\u5C5E\u6027\uFF0C\u8FD9\u4E2A\u65F6\u5019\u53EF\u4EE5\u4F7F\u7528 <code>extends</code> \u914D\u5408 <code>typeof</code> \u5BF9\u5C5E\u6027\u540D\u8FDB\u884C\u9650\u5236\uFF0C\u9650\u5236\u4F20\u5165\u7684\u53C2\u6570\u53EA\u80FD\u662F\u5BF9\u8C61\u7684\u5C5E\u6027\u540D</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> person <span class="token operator">=</span> <span class="token punctuation">{</span>
    name<span class="token operator">:</span> <span class="token string">&#39;Jack&#39;</span><span class="token punctuation">,</span>
    age<span class="token operator">:</span> <span class="token number">20</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token generic-function"><span class="token function">getPersonValue</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token keyword">keyof</span> <span class="token keyword">typeof</span> person<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>fieldName<span class="token operator">:</span> <span class="token keyword">keyof</span> <span class="token keyword">typeof</span> person<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> person<span class="token punctuation">[</span>fieldName<span class="token punctuation">]</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> nameValue <span class="token operator">=</span> <span class="token function">getPersonValue</span><span class="token punctuation">(</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> ageValue <span class="token operator">=</span> <span class="token function">getPersonValue</span><span class="token punctuation">(</span><span class="token string">&#39;age&#39;</span><span class="token punctuation">)</span>

<span class="token comment">// \u4F1A\u62A5\u9519\uFF1AArgument of type &#39;&quot;gender&quot;&#39; is not assignable to parameter of type &#39;&quot;name&quot; | &quot;age&quot;&#39;</span>
<span class="token comment">// getPersonValue(&#39;gender&#39;)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h3 id="\u7D22\u5F15\u8BBF\u95EE\u64CD\u4F5C\u7B26-t-k" tabindex="-1"><a class="header-anchor" href="#\u7D22\u5F15\u8BBF\u95EE\u64CD\u4F5C\u7B26-t-k" aria-hidden="true">#</a> \u7D22\u5F15\u8BBF\u95EE\u64CD\u4F5C\u7B26(T[K])</h3><ul><li>\u8BED\u6CD5\uFF1A<code>T[K]</code></li></ul><blockquote><p>\u7C7B\u4F3C\u4E8E <code>js</code> \u4E2D\u4F7F\u7528\u5BF9\u8C61\u7D22\u5F15\u7684\u65B9\u5F0F\uFF0C\u53EA\u4E0D\u8FC7 <code>js</code> \u4E2D\u662F\u8FD4\u56DE\u5BF9\u8C61\u5C5E\u6027\u7684\u503C\uFF0C\u800C\u5728 <code>ts</code> \u4E2D\u8FD4\u56DE\u7684\u662F <code>T</code> \u5BF9\u5E94\u5C5E\u6027 <code>P</code> \u7684\u7C7B\u578B</p></blockquote><ul><li>\u7528\u6CD5\uFF1A</li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">Person</span> <span class="token punctuation">{</span>
    name<span class="token operator">:</span> <span class="token builtin">string</span>
    age<span class="token operator">:</span> <span class="token builtin">number</span>
    weight<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">|</span> <span class="token builtin">string</span>
    gender<span class="token operator">:</span> <span class="token string">&#39;man&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;women&#39;</span>
<span class="token punctuation">}</span>

<span class="token keyword">type</span> <span class="token class-name">NameType</span> <span class="token operator">=</span> Person<span class="token punctuation">[</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">]</span>  <span class="token comment">// string</span>

<span class="token keyword">type</span> <span class="token class-name">WeightType</span> <span class="token operator">=</span> Person<span class="token punctuation">[</span><span class="token string">&#39;weight&#39;</span><span class="token punctuation">]</span>  <span class="token comment">// string | number</span>

<span class="token keyword">type</span> <span class="token class-name">GenderType</span> <span class="token operator">=</span> Person<span class="token punctuation">[</span><span class="token string">&#39;gender&#39;</span><span class="token punctuation">]</span>  <span class="token comment">// &quot;man&quot; | &quot;women&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h2 id="\u4E09\u3001\u6620\u5C04\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#\u4E09\u3001\u6620\u5C04\u7C7B\u578B" aria-hidden="true">#</a> \u4E09\u3001\u6620\u5C04\u7C7B\u578B</h2><h3 id="\u53EA\u8BFB\u7C7B\u578B-readonly-t" tabindex="-1"><a class="header-anchor" href="#\u53EA\u8BFB\u7C7B\u578B-readonly-t" aria-hidden="true">#</a> \u53EA\u8BFB\u7C7B\u578B(Readonly<code>&lt;T&gt;</code>)</h3><ul><li>\u5B9A\u4E49\uFF1A</li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">Readonly<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token keyword">readonly</span> <span class="token punctuation">[</span><span class="token constant">P</span> <span class="token keyword">in</span> <span class="token keyword">keyof</span> <span class="token constant">T</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token constant">P</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><blockquote><p>\u7528\u4E8E\u5C06 <code>T</code> \u7C7B\u578B\u7684\u6240\u6709\u5C5E\u6027\u8BBE\u7F6E\u4E3A\u53EA\u8BFB\u72B6\u6001\u3002</p></blockquote><ul><li>\u7528\u6CD5\uFF1A</li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">Person</span> <span class="token punctuation">{</span>
    name<span class="token operator">:</span> <span class="token builtin">string</span>
    age<span class="token operator">:</span> <span class="token builtin">number</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> person<span class="token operator">:</span> Readonly<span class="token operator">&lt;</span>Person<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    name<span class="token operator">:</span> <span class="token string">&#39;Lucy&#39;</span><span class="token punctuation">,</span>
    age<span class="token operator">:</span> <span class="token number">22</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u4F1A\u62A5\u9519\uFF1ACannot assign to &#39;name&#39; because it is a read-only property</span>
person<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&#39;Lily&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><blockquote><p><code>readonly</code> \u53EA\u8BFB\uFF0C \u88AB <code>readonly</code> \u6807\u8BB0\u7684\u5C5E\u6027\u53EA\u80FD\u5728\u58F0\u660E\u65F6\u6216\u7C7B\u7684\u6784\u9020\u51FD\u6570\u4E2D\u8D4B\u503C\uFF0C\u4E4B\u540E\u5C06\u4E0D\u53EF\u6539\uFF08\u5373\u53EA\u8BFB\u5C5E\u6027\uFF09</p></blockquote><h3 id="\u53EA\u8BFB\u6570\u7EC4-readonlyarray-t" tabindex="-1"><a class="header-anchor" href="#\u53EA\u8BFB\u6570\u7EC4-readonlyarray-t" aria-hidden="true">#</a> \u53EA\u8BFB\u6570\u7EC4(ReadonlyArray<code>&lt;T&gt;</code>)</h3><ul><li>\u5B9A\u4E49\uFF1A</li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">ReadonlyArray<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
    <span class="token doc-comment comment">/** Iterator of values in the array. */</span>
    <span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> IterableIterator<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * Returns an iterable of key, value pairs for every entry in the array
     */</span>
    <span class="token function">entries</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> IterableIterator<span class="token operator">&lt;</span><span class="token punctuation">[</span><span class="token builtin">number</span><span class="token punctuation">,</span> <span class="token constant">T</span><span class="token punctuation">]</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * Returns an iterable of keys in the array
     */</span>
    <span class="token function">keys</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> IterableIterator<span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * Returns an iterable of values in the array
     */</span>
    <span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> IterableIterator<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><p>\u53EA\u80FD\u5728\u6570\u7EC4\u521D\u59CB\u5316\u65F6\u4E3A\u53D8\u91CF\u8D4B\u503C\uFF0C\u4E4B\u540E\u6570\u7EC4\u65E0\u6CD5\u4FEE\u6539</p><ul><li>\u4F7F\u7528\uFF1A</li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">Person</span> <span class="token punctuation">{</span>
    name<span class="token operator">:</span> <span class="token builtin">string</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> personList<span class="token operator">:</span> ReadonlyArray<span class="token operator">&lt;</span>Person<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">&#39;Jack&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">&#39;Rose&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">]</span>

<span class="token comment">// \u4F1A\u62A5\u9519\uFF1AProperty &#39;push&#39; does not exist on type &#39;readonly Person[]&#39;</span>
<span class="token comment">// personList.push({ name: &#39;Lucy&#39; })</span>

<span class="token comment">// \u4F46\u662F\u5185\u90E8\u5143\u7D20\u5982\u679C\u662F\u5F15\u7528\u7C7B\u578B\uFF0C\u5143\u7D20\u81EA\u8EAB\u662F\u53EF\u4EE5\u8FDB\u884C\u4FEE\u6539\u7684</span>
personList<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&#39;Lily&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h3 id="\u53EF\u9009\u7C7B\u578B-partial-t" tabindex="-1"><a class="header-anchor" href="#\u53EF\u9009\u7C7B\u578B-partial-t" aria-hidden="true">#</a> \u53EF\u9009\u7C7B\u578B(Partial<code>&lt;T&gt;</code>)</h3><p>\u7528\u4E8E\u5C06 <code>T</code> \u7C7B\u578B\u7684\u6240\u6709\u5C5E\u6027\u8BBE\u7F6E\u4E3A\u53EF\u9009\u72B6\u6001\uFF0C\u9996\u5148\u901A\u8FC7 <code>keyof T</code>\uFF0C\u53D6\u51FA\u7C7B\u578B <code>T</code> \u7684\u6240\u6709\u5C5E\u6027\uFF0C \u7136\u540E\u901A\u8FC7 <code>in</code> \u64CD\u4F5C\u7B26\u8FDB\u884C\u904D\u5386\uFF0C\u6700\u540E\u5728\u5C5E\u6027\u540E\u52A0\u4E0A <code>?</code>\uFF0C\u5C06\u5C5E\u6027\u53D8\u4E3A\u53EF\u9009\u5C5E\u6027\u3002</p><ul><li>\u5B9A\u4E49\uFF1A</li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">Partial<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token punctuation">[</span><span class="token constant">P</span> <span class="token keyword">in</span> <span class="token keyword">keyof</span> <span class="token constant">T</span><span class="token punctuation">]</span><span class="token operator">?</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token constant">P</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><ul><li>\u7528\u6CD5\uFF1A</li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">Person</span> <span class="token punctuation">{</span>
    name<span class="token operator">:</span> <span class="token builtin">string</span>
    age<span class="token operator">:</span> <span class="token builtin">number</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u4F1A\u62A5\u9519\uFF1AType &#39;{}&#39; is missing the following properties from type &#39;Person&#39;: name, age</span>
<span class="token comment">// let person: Person = {}</span>

<span class="token comment">// \u4F7F\u7528 Partial \u6620\u5C04\u540E\u8FD4\u56DE\u7684\u65B0\u7C7B\u578B\uFF0Cname \u548C age \u90FD\u53D8\u6210\u4E86\u53EF\u9009\u5C5E\u6027</span>
<span class="token keyword">let</span> person<span class="token operator">:</span> Partial<span class="token operator">&lt;</span>Person<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

person <span class="token operator">=</span> <span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">&#39;pengzu&#39;</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token number">800</span> <span class="token punctuation">}</span>

person <span class="token operator">=</span> <span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">&#39;z&#39;</span> <span class="token punctuation">}</span>

person <span class="token operator">=</span> <span class="token punctuation">{</span> age<span class="token operator">:</span> <span class="token number">18</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><h3 id="\u5FC5\u9009\u7C7B\u578B-required-t" tabindex="-1"><a class="header-anchor" href="#\u5FC5\u9009\u7C7B\u578B-required-t" aria-hidden="true">#</a> \u5FC5\u9009\u7C7B\u578B(Required<code>&lt;T&gt;</code>)</h3><p>\u548C <code>Partial</code> \u7684\u4F5C\u7528\u76F8\u53CD</p><p>\u7528\u4E8E\u5C06 <code>T</code> \u7C7B\u578B\u7684\u6240\u6709\u5C5E\u6027\u8BBE\u7F6E\u4E3A\u5FC5\u9009\u72B6\u6001\uFF0C\u9996\u5148\u901A\u8FC7 <code>keyof T</code>\uFF0C\u53D6\u51FA\u7C7B\u578B <code>T</code> \u7684\u6240\u6709\u5C5E\u6027\uFF0C \u7136\u540E\u901A\u8FC7 <code>in</code> \u64CD\u4F5C\u7B26\u8FDB\u884C\u904D\u5386\uFF0C\u6700\u540E\u5728\u5C5E\u6027\u540E\u7684 <code>?</code> \u524D\u52A0\u4E0A <code>-</code>\uFF0C\u5C06\u5C5E\u6027\u53D8\u4E3A\u5FC5\u9009\u5C5E\u6027\u3002</p><ul><li>\u5B9A\u4E49\uFF1A</li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">Required<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token punctuation">[</span><span class="token constant">P</span> <span class="token keyword">in</span> <span class="token keyword">keyof</span> <span class="token constant">T</span><span class="token punctuation">]</span><span class="token operator">-</span><span class="token operator">?</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token constant">P</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><ul><li>\u4F7F\u7528\uFF1A</li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">Person</span> <span class="token punctuation">{</span>
    name<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span>
    age<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u4F7F\u7528 Required \u6620\u5C04\u540E\u8FD4\u56DE\u7684\u65B0\u7C7B\u578B\uFF0Cname \u548C age \u90FD\u53D8\u6210\u4E86\u5FC5\u9009\u5C5E\u6027</span>
<span class="token comment">// \u4F1A\u62A5\u9519\uFF1AType &#39;{}&#39; is missing the following properties from type &#39;Required&lt;Person&gt;&#39;: name, age</span>
<span class="token keyword">let</span> person<span class="token operator">:</span> Required<span class="token operator">&lt;</span>Person<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h3 id="\u63D0\u53D6\u5C5E\u6027-pick-t" tabindex="-1"><a class="header-anchor" href="#\u63D0\u53D6\u5C5E\u6027-pick-t" aria-hidden="true">#</a> \u63D0\u53D6\u5C5E\u6027(Pick<code>&lt;T&gt;</code>)</h3><ul><li>\u5B9A\u4E49\uFF1A</li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">Pick<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span> <span class="token constant">K</span> <span class="token keyword">extends</span> <span class="token keyword">keyof</span> <span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token punctuation">[</span><span class="token constant">P</span> <span class="token keyword">in</span> <span class="token constant">K</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token constant">P</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><blockquote><p>\u4ECE <code>T</code> \u7C7B\u578B\u4E2D\u63D0\u53D6\u90E8\u5206\u5C5E\u6027\uFF0C\u4F5C\u4E3A\u65B0\u7684\u8FD4\u56DE\u7C7B\u578B\u3002</p></blockquote><ul><li>\u4F7F\u7528\uFF1A\u6BD4\u5982\u5728\u53D1\u9001\u7F51\u7EDC\u8BF7\u6C42\u65F6\uFF0C\u53EA\u9700\u8981\u4F20\u9012\u7C7B\u578B\u4E2D\u7684\u90E8\u5206\u5C5E\u6027\uFF0C\u5C31\u53EF\u4EE5\u901A\u8FC7 <code>Pick</code> \u6765\u5B9E\u73B0\u3002</li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">Goods</span> <span class="token punctuation">{</span>
    type<span class="token operator">:</span> <span class="token builtin">string</span>
    goodsName<span class="token operator">:</span> <span class="token builtin">string</span>
    price<span class="token operator">:</span> <span class="token builtin">number</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u4F5C\u4E3A\u7F51\u7EDC\u8BF7\u6C42\u53C2\u6570\uFF0C\u53EA\u9700\u8981 goodsName \u548C price \u5C31\u53EF\u4EE5</span>
<span class="token keyword">type</span> <span class="token class-name">RequestGoodsParams</span> <span class="token operator">=</span> Pick<span class="token operator">&lt;</span>Goods<span class="token punctuation">,</span> <span class="token string">&#39;goodsName&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;price&#39;</span><span class="token operator">&gt;</span>
<span class="token comment">// \u8FD4\u56DE\u7C7B\u578B\uFF1A</span>
<span class="token comment">// type RequestGoodsParams = {</span>
<span class="token comment">//     goodsName: string;</span>
<span class="token comment">//     price: number;</span>
<span class="token comment">// }</span>
<span class="token keyword">const</span> params<span class="token operator">:</span> RequestGoodsParams <span class="token operator">=</span> <span class="token punctuation">{</span>
    goodsName<span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
    price<span class="token operator">:</span> <span class="token number">10</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><h3 id="\u6392\u9664\u5C5E\u6027-omit-t" tabindex="-1"><a class="header-anchor" href="#\u6392\u9664\u5C5E\u6027-omit-t" aria-hidden="true">#</a> \u6392\u9664\u5C5E\u6027(Omit<code>&lt;T&gt;</code>)</h3><ul><li>\u5B9A\u4E49\uFF1A<code>type Omit&lt;T, K extends keyof T&gt; = Pick&lt;T, Exclude&lt;keyof T, K&gt;&gt;</code></li></ul><blockquote><p>\u548C <code>Pick</code> \u4F5C\u7528\u76F8\u53CD\uFF0C\u7528\u4E8E\u4ECE <code>T</code> \u7C7B\u578B\u4E2D\uFF0C\u6392\u9664\u90E8\u5206\u5C5E\u6027</p></blockquote><ul><li>\u7528\u6CD5\uFF1A\u6BD4\u5982\u957F\u65B9\u4F53\u6709\u957F\u5BBD\u9AD8\uFF0C\u800C\u6B63\u65B9\u4F53\u957F\u5BBD\u9AD8\u76F8\u7B49\uFF0C\u6240\u4EE5\u53EA\u9700\u8981\u957F\u5C31\u53EF\u4EE5\uFF0C\u90A3\u4E48\u6B64\u65F6\u5C31\u53EF\u4EE5\u7528 <code>Omit</code> \u6765\u751F\u6210\u6B63\u65B9\u4F53\u7684\u7C7B\u578B</li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">Rectangular</span> <span class="token punctuation">{</span>
    length<span class="token operator">:</span> <span class="token builtin">number</span>
    height<span class="token operator">:</span> <span class="token builtin">number</span>
    width<span class="token operator">:</span> <span class="token builtin">number</span>
<span class="token punctuation">}</span>

<span class="token keyword">type</span> <span class="token class-name">Square</span> <span class="token operator">=</span> Omit<span class="token operator">&lt;</span>Rectangular<span class="token punctuation">,</span> <span class="token string">&#39;height&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;width&#39;</span><span class="token operator">&gt;</span>
<span class="token comment">// \u8FD4\u56DE\u7C7B\u578B\uFF1A</span>
<span class="token comment">// type Square = {</span>
<span class="token comment">//     length: number;</span>
<span class="token comment">// }</span>

<span class="token keyword">const</span> temp<span class="token operator">:</span> Square <span class="token operator">=</span> <span class="token punctuation">{</span> length<span class="token operator">:</span> <span class="token number">5</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h3 id="\u6458\u53D6\u7C7B\u578B-extract-t-u" tabindex="-1"><a class="header-anchor" href="#\u6458\u53D6\u7C7B\u578B-extract-t-u" aria-hidden="true">#</a> \u6458\u53D6\u7C7B\u578B(Extract&lt;T, U&gt;)</h3><ul><li>\u8BED\u6CD5\uFF1A<code>Extract&lt;T, U&gt;</code></li></ul><blockquote><p>\u63D0\u53D6 <code>T</code> \u4E2D\u53EF\u4EE5 \u8D4B\u503C \u7ED9 <code>U</code> \u7684\u7C7B\u578B</p></blockquote><ul><li><p>\u5B9A\u4E49\uFF1A<code>type Extract&lt;T, U&gt; = T extends U ? T : never;</code></p></li><li><p>\u7528\u6CD5\uFF1A</p></li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T01</span></span> <span class="token operator">=</span> Extract<span class="token operator">&lt;</span><span class="token string">&quot;a&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;b&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;c&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;d&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;a&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;c&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;f&quot;</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// &quot;a&quot; | &quot;c&quot;</span>

<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T02</span></span> <span class="token operator">=</span> Extract<span class="token operator">&lt;</span><span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span> <span class="token operator">|</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token builtin">Function</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// () =&gt; void</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="\u6392\u9664\u7C7B\u578B-exclude-t-u" tabindex="-1"><a class="header-anchor" href="#\u6392\u9664\u7C7B\u578B-exclude-t-u" aria-hidden="true">#</a> \u6392\u9664\u7C7B\u578B(Exclude&lt;T, U&gt;)</h3><ul><li>\u8BED\u6CD5\uFF1A<code>Exclude&lt;T, U&gt;</code></li></ul><blockquote><p>\u4E0E <code>Extract</code> \u7528\u6CD5\u76F8\u53CD\uFF0C\u4ECE <code>T</code> \u4E2D\u5254\u9664\u53EF\u4EE5\u8D4B\u503C\u7ED9 <code>U</code>\u7684\u7C7B\u578B</p></blockquote><ul><li><p>\u5B9A\u4E49\uFF1A<code>type Exclude&lt;T, U&gt; = T extends U ? never : T</code></p></li><li><p>\u7528\u6CD5\uFF1A</p></li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T00</span></span> <span class="token operator">=</span> Exclude<span class="token operator">&lt;</span><span class="token string">&quot;a&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;b&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;c&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;d&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;a&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;c&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;f&quot;</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// &quot;b&quot; | &quot;d&quot;</span>

<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T01</span></span> <span class="token operator">=</span> Exclude<span class="token operator">&lt;</span><span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span> <span class="token operator">|</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token builtin">Function</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// string | number</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="\u5C5E\u6027\u6620\u5C04-record-k-t" tabindex="-1"><a class="header-anchor" href="#\u5C5E\u6027\u6620\u5C04-record-k-t" aria-hidden="true">#</a> \u5C5E\u6027\u6620\u5C04(Record&lt;K, T&gt;)</h3><ul><li>\u5B9A\u4E49\uFF1A</li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">Record<span class="token operator">&lt;</span><span class="token constant">K</span> <span class="token keyword">extends</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span> <span class="token operator">|</span> <span class="token builtin">symbol</span><span class="token punctuation">,</span> <span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token punctuation">[</span><span class="token constant">P</span> <span class="token keyword">in</span> <span class="token constant">K</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><blockquote><p>\u63A5\u6536\u4E24\u4E2A\u6CDB\u578B\uFF0C<code>K</code> \u5FC5\u987B\u53EF\u4EE5\u662F\u53EF\u4EE5\u8D4B\u503C\u7ED9 <code>string | number | symbol</code> \u7684\u7C7B\u578B\uFF0C\u901A\u8FC7 <code>in</code> \u64CD\u4F5C\u7B26\u5BF9 <code>K</code> \u8FDB\u884C\u904D\u5386\uFF0C\u6BCF\u4E00\u4E2A\u5C5E\u6027\u7684\u7C7B\u578B\u90FD\u5FC5\u987B\u662F <code>T</code> \u7C7B\u578B</p></blockquote><ul><li>\u7528\u6CD5\uFF1A\u6BD4\u5982\u60F3\u8981\u5C06 <code>Person</code> \u7C7B\u578B\u7684\u6570\u7EC4\u8F6C\u5316\u6210\u5BF9\u8C61\u6620\u5C04\uFF0C\u53EF\u4EE5\u4F7F\u7528 <code>Record</code> \u6765\u6307\u5B9A\u6620\u5C04\u5BF9\u8C61\u7684\u7C7B\u578B</li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">Person</span> <span class="token punctuation">{</span>
    name<span class="token operator">:</span> <span class="token builtin">string</span>
    age<span class="token operator">:</span> <span class="token builtin">number</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> personList <span class="token operator">=</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">&#39;Jack&#39;</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token number">26</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">&#39;Lucy&#39;</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token number">22</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">&#39;Rose&#39;</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token number">18</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span>

<span class="token keyword">const</span> personMap<span class="token operator">:</span> Record<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">,</span> Person<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

personList<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>person<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    personMap<span class="token punctuation">[</span>person<span class="token punctuation">.</span>name<span class="token punctuation">]</span> <span class="token operator">=</span> person
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><p>\u6BD4\u5982\u5728\u4F20\u9012\u53C2\u6570\u65F6\uFF0C\u5E0C\u671B\u53C2\u6570\u662F\u4E00\u4E2A\u5BF9\u8C61\uFF0C\u4F46\u662F\u4E0D\u786E\u5B9A\u5177\u4F53\u7684\u7C7B\u578B\uFF0C\u5C31\u53EF\u4EE5\u4F7F\u7528 <code>Record</code> \u4F5C\u4E3A\u53C2\u6570\u7C7B\u578B</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">doSomething</span><span class="token punctuation">(</span>obj<span class="token operator">:</span> Record<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">any</span><span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="\u4E0D\u53EF\u4E3A\u7A7A\u7C7B\u578B-nonnullable-t" tabindex="-1"><a class="header-anchor" href="#\u4E0D\u53EF\u4E3A\u7A7A\u7C7B\u578B-nonnullable-t" aria-hidden="true">#</a> \u4E0D\u53EF\u4E3A\u7A7A\u7C7B\u578B(NonNullable<code>&lt;T&gt;</code>)</h3><ul><li>\u5B9A\u4E49\uFF1A<code>type NonNullable&lt;T&gt; = T extends null | undefined ? never : T</code></li></ul><blockquote><p>\u4ECE <code>T</code> \u4E2D\u5254\u9664 <code>null</code>\u3001<code>undefined</code>\u3001<code>never</code> \u7C7B\u578B\uFF0C\u4E0D\u4F1A\u5254\u9664 <code>void</code>\u3001<code>unknow</code> \u7C7B\u578B</p></blockquote><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T01</span></span> <span class="token operator">=</span> NonNullable<span class="token operator">&lt;</span><span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span> <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// string | number</span>

<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T02</span></span> <span class="token operator">=</span> NonNullable<span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// (() =&gt; string) | string[]</span>

<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T03</span></span> <span class="token operator">=</span> NonNullable<span class="token operator">&lt;</span><span class="token punctuation">{</span>name<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">}</span> <span class="token operator">|</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// {name?: string, age: number} | string[]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="\u6784\u9020\u51FD\u6570\u53C2\u6570\u7C7B\u578B-constructorparameters-typeof-t" tabindex="-1"><a class="header-anchor" href="#\u6784\u9020\u51FD\u6570\u53C2\u6570\u7C7B\u578B-constructorparameters-typeof-t" aria-hidden="true">#</a> \u6784\u9020\u51FD\u6570\u53C2\u6570\u7C7B\u578B(ConstructorParameters<code>&lt;typeof T&gt;</code>)</h3><blockquote><p>\u8FD4\u56DE class \u4E2D\u6784\u9020\u51FD\u6570\u53C2\u6570\u7C7B\u578B\u7EC4\u6210\u7684 <strong>\u5143\u7EC4\u7C7B\u578B</strong></p></blockquote><ul><li>\u5B9A\u4E49\uFF1A</li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token doc-comment comment">/**
 * Obtain the parameters of a constructor function type in a tuple
 */</span>
<span class="token keyword">type</span> <span class="token class-name">ConstructorParameters<span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token keyword">new</span> <span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span></span> <span class="token builtin">any</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token keyword">new</span></span> <span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token operator">:</span> <span class="token keyword">infer</span> <span class="token constant">P</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">any</span> <span class="token operator">?</span> <span class="token constant">P</span> <span class="token operator">:</span> <span class="token builtin">never</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><ul><li>\u4F7F\u7528\uFF1A</li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name">Person</span> <span class="token punctuation">{</span>
    name<span class="token operator">:</span> <span class="token builtin">string</span>
    age<span class="token operator">:</span> <span class="token builtin">number</span>
    weight<span class="token operator">:</span> <span class="token builtin">number</span>
    gender<span class="token operator">:</span> <span class="token string">&#39;man&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;women&#39;</span>

    <span class="token function">constructor</span><span class="token punctuation">(</span>name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> gender<span class="token operator">:</span> <span class="token string">&#39;man&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;women&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name
        <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>gender <span class="token operator">=</span> gender
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">type</span> <span class="token class-name">ConstructorType</span> <span class="token operator">=</span> ConstructorParameters<span class="token operator">&lt;</span><span class="token keyword">typeof</span> Person<span class="token operator">&gt;</span>  <span class="token comment">//  [name: string, age: number, gender: &quot;man&quot; | &quot;women&quot;]</span>

<span class="token keyword">const</span> params<span class="token operator">:</span> ConstructorType <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;Jack&#39;</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token string">&#39;man&#39;</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><h3 id="\u5B9E\u4F8B\u7C7B\u578B-instancetype-t" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u4F8B\u7C7B\u578B-instancetype-t" aria-hidden="true">#</a> \u5B9E\u4F8B\u7C7B\u578B(InstanceType<code>&lt;T&gt;</code>)</h3><blockquote><p>\u83B7\u53D6 class \u6784\u9020\u51FD\u6570\u7684\u8FD4\u56DE\u7C7B\u578B</p></blockquote><ul><li>\u5B9A\u4E49\uFF1A</li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token doc-comment comment">/**
 * Obtain the return type of a constructor function type
 */</span>
<span class="token keyword">type</span> <span class="token class-name">InstanceType<span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token keyword">new</span> <span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span></span> <span class="token builtin">any</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token keyword">new</span></span> <span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">infer</span> <span class="token constant">R</span> <span class="token operator">?</span> <span class="token constant">R</span> <span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><ul><li>\u4F7F\u7528\uFF1A</li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name">Person</span> <span class="token punctuation">{</span>
    name<span class="token operator">:</span> <span class="token builtin">string</span>
    age<span class="token operator">:</span> <span class="token builtin">number</span>
    weight<span class="token operator">:</span> <span class="token builtin">number</span>
    gender<span class="token operator">:</span> <span class="token string">&#39;man&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;women&#39;</span>

    <span class="token function">constructor</span><span class="token punctuation">(</span>name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> gender<span class="token operator">:</span> <span class="token string">&#39;man&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;women&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name
        <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>gender <span class="token operator">=</span> gender
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">type</span> <span class="token class-name">Instance</span> <span class="token operator">=</span> InstanceType<span class="token operator">&lt;</span><span class="token keyword">typeof</span> Person<span class="token operator">&gt;</span>  <span class="token comment">// Person</span>

<span class="token keyword">const</span> params<span class="token operator">:</span> Instance <span class="token operator">=</span> <span class="token punctuation">{</span>
    name<span class="token operator">:</span> <span class="token string">&#39;Jack&#39;</span><span class="token punctuation">,</span>
    age<span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">,</span>
    weight<span class="token operator">:</span> <span class="token number">120</span><span class="token punctuation">,</span>
    gender<span class="token operator">:</span> <span class="token string">&#39;man&#39;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><h3 id="\u51FD\u6570\u53C2\u6570\u7C7B\u578B-parameters-t" tabindex="-1"><a class="header-anchor" href="#\u51FD\u6570\u53C2\u6570\u7C7B\u578B-parameters-t" aria-hidden="true">#</a> \u51FD\u6570\u53C2\u6570\u7C7B\u578B(Parameters<code>&lt;T&gt;</code>)</h3><blockquote><p>\u83B7\u53D6\u51FD\u6570\u7684\u53C2\u6570\u7C7B\u578B\u7EC4\u6210\u7684 <strong>\u5143\u7EC4</strong></p></blockquote><ul><li>\u5B9A\u4E49\uFF1A</li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token doc-comment comment">/**
 * Obtain the parameters of a function type in a tuple
 */</span>
<span class="token keyword">type</span> <span class="token class-name">Parameters<span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span></span> <span class="token builtin">any</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token operator">:</span> <span class="token keyword">infer</span> <span class="token constant">P</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">any</span> <span class="token operator">?</span> <span class="token constant">P</span> <span class="token operator">:</span> <span class="token builtin">never</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><ul><li>\u7528\u6CD5\uFF1A</li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">FunctionType</span> <span class="token operator">=</span> <span class="token punctuation">(</span>name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">boolean</span>

<span class="token keyword">type</span> <span class="token class-name">FunctionParamsType</span> <span class="token operator">=</span> Parameters<span class="token operator">&lt;</span>FunctionType<span class="token operator">&gt;</span>  <span class="token comment">// [name: string, age: number]</span>

<span class="token keyword">const</span> params<span class="token operator">:</span>  FunctionParamsType <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;Jack&#39;</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="\u51FD\u6570\u8FD4\u56DE\u503C\u7C7B\u578B-returntype-t" tabindex="-1"><a class="header-anchor" href="#\u51FD\u6570\u8FD4\u56DE\u503C\u7C7B\u578B-returntype-t" aria-hidden="true">#</a> \u51FD\u6570\u8FD4\u56DE\u503C\u7C7B\u578B(ReturnType<code>&lt;T&gt;</code>)</h3><blockquote><p>\u83B7\u53D6\u51FD\u6570\u7684\u8FD4\u56DE\u503C\u7C7B\u578B</p></blockquote><ul><li>\u5B9A\u4E49\uFF1A</li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token doc-comment comment">/**
 * Obtain the return type of a function type
 */</span>
<span class="token keyword">type</span> <span class="token class-name">ReturnType<span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span></span> <span class="token builtin">any</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">infer</span> <span class="token constant">R</span> <span class="token operator">?</span> <span class="token constant">R</span> <span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><ul><li>\u4F7F\u7528\uFF1A</li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">FunctionType</span> <span class="token operator">=</span> <span class="token punctuation">(</span>name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">boolean</span> <span class="token operator">|</span> <span class="token builtin">string</span>

<span class="token keyword">type</span> <span class="token class-name">FunctionReturnType</span> <span class="token operator">=</span> ReturnType<span class="token operator">&lt;</span>FunctionType<span class="token operator">&gt;</span>  <span class="token comment">// boolean | string</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="\u56DB\u3001\u603B\u7ED3" tabindex="-1"><a class="header-anchor" href="#\u56DB\u3001\u603B\u7ED3" aria-hidden="true">#</a> \u56DB\u3001\u603B\u7ED3</h2><ul><li>\u9AD8\u7EA7\u7C7B\u578B</li></ul><table><thead><tr><th>\u7528\u6CD5</th><th>\u63CF\u8FF0</th></tr></thead><tbody><tr><td>&amp;</td><td>\u4EA4\u53C9\u7C7B\u578B\uFF0C\u5C06\u591A\u4E2A\u7C7B\u578B\u5408\u5E76\u4E3A\u4E00\u4E2A\u7C7B\u578B\uFF0C\u4EA4\u96C6</td></tr><tr><td>\\</td><td>\u8054\u5408\u7C7B\u578B\uFF0C\u5C06\u591A\u4E2A\u7C7B\u578B\u7EC4\u5408\u6210\u4E00\u4E2A\u7C7B\u578B\uFF0C\u53EF\u4EE5\u662F\u591A\u4E2A\u7C7B\u578B\u7684\u4EFB\u610F\u4E00\u4E2A\uFF0C\u5E76\u96C6</td></tr></tbody></table><ul><li>\u5173\u952E\u5B57</li></ul><table><thead><tr><th>\u7528\u6CD5</th><th>\u63CF\u8FF0</th></tr></thead><tbody><tr><td>T extends U</td><td>\u7C7B\u578B\u7EA6\u675F\uFF0C\u5224\u65AD <code>T</code> \u662F\u5426\u53EF\u4EE5\u8D4B\u503C\u7ED9 <code>U</code></td></tr><tr><td>P in T</td><td>\u7C7B\u578B\u6620\u5C04\uFF0C\u904D\u5386 <code>T</code> \u7684\u6240\u6709\u7C7B\u578B</td></tr><tr><td>parameterName is Type</td><td>\u7C7B\u578B\u8C13\u8BCD\uFF0C\u5224\u65AD\u51FD\u6570\u53C2\u6570 <code>parameterName</code> \u662F\u5426\u662F <code>Type</code> \u7C7B\u578B</td></tr><tr><td>infer P</td><td>\u5F85\u63A8\u65AD\u7C7B\u578B\uFF0C\u4F7F\u7528 <code>infer</code> \u6807\u8BB0\u7C7B\u578B <code>P</code>\uFF0C\u5C31\u53EF\u4EE5\u4F7F\u7528\u5F85\u63A8\u65AD\u7684\u7C7B\u578B <code>P</code></td></tr><tr><td>typeof v === &quot;typename&quot;</td><td>\u539F\u59CB\u7C7B\u578B\u4FDD\u62A4\uFF0C\u5224\u65AD\u6570\u636E\u7684\u7C7B\u578B\u662F\u5426\u662F\u67D0\u4E2A\u539F\u59CB\u7C7B\u578B\uFF08<code>number</code>\u3001<code>string</code>\u3001<code>boolean</code>\u3001<code>symbol</code>\uFF09</td></tr><tr><td>instanceof v</td><td>\u7C7B\u578B\u4FDD\u62A4\uFF0C\u5224\u65AD\u6570\u636E\u7684\u7C7B\u578B\u662F\u5426\u662F\u6784\u9020\u51FD\u6570\u7684 <code>prototype</code> \u5C5E\u6027\u7C7B\u578B</td></tr><tr><td>keyof</td><td>\u7D22\u5F15\u7C7B\u578B\u67E5\u8BE2\u64CD\u4F5C\u7B26\uFF0C\u8FD4\u56DE\u7C7B\u578B\u4E0A\u5DF2\u77E5\u7684 <strong>\u516C\u5171\u5C5E\u6027\u540D</strong></td></tr><tr><td>T[K]</td><td>\u7D22\u5F15\u8BBF\u95EE\u64CD\u4F5C\u7B26\uFF0C\u8FD4\u56DE <code>T</code> \u5BF9\u5E94\u5C5E\u6027 <code>P</code> \u7684\u7C7B\u578B</td></tr></tbody></table><ul><li>\u6620\u5C04\u7C7B\u578B</li></ul><table><thead><tr><th>\u7528\u6CD5</th><th>\u63CF\u8FF0</th></tr></thead><tbody><tr><td>Readonly</td><td>\u5C06 <code>T</code> \u4E2D\u6240\u6709\u5C5E\u6027\u90FD\u53D8\u4E3A\u53EA\u8BFB</td></tr><tr><td>ReadonlyArray</td><td>\u8FD4\u56DE\u4E00\u4E2A <code>T</code> \u7C7B\u578B\u7684\u53EA\u8BFB\u6570\u7EC4</td></tr><tr><td>ReadonlyMap&lt;T, U&gt;</td><td>\u8FD4\u56DE\u4E00\u4E2A <code>T</code> \u548C <code>U</code> \u7C7B\u578B\u7EC4\u6210\u7684\u53EA\u8BFB <code>Map</code></td></tr><tr><td>Partial</td><td>\u5C06 <code>T</code> \u4E2D\u6240\u6709\u7684\u5C5E\u6027\u90FD\u53D8\u6210\u53EF\u9009\u7C7B\u578B</td></tr><tr><td>Required</td><td>\u5C06 <code>T</code> \u4E2D\u6240\u6709\u7684\u5C5E\u6027\u90FD\u53D8\u6210\u5FC5\u9009\u7C7B\u578B</td></tr><tr><td>Pick&lt;T, K extends keyof T&gt;</td><td>\u4ECE <code>T</code> \u4E2D\u6458\u53D6\u90E8\u5206\u5C5E\u6027</td></tr><tr><td>Omit&lt;T, K extends keyof T&gt;</td><td>\u4ECE <code>T</code> \u4E2D\u6392\u9664\u90E8\u5206\u5C5E\u6027</td></tr><tr><td>Exclude&lt;T, U&gt;</td><td>\u4ECE <code>T</code> \u4E2D\u5254\u9664\u53EF\u4EE5\u8D4B\u503C\u7ED9 <code>U</code> \u7684\u7C7B\u578B</td></tr><tr><td>Extract&lt;T, U&gt;</td><td>\u63D0\u53D6 <code>T</code> \u4E2D\u53EF\u4EE5\u8D4B\u503C\u7ED9 <code>U</code> \u7684\u7C7B\u578B</td></tr><tr><td>Record&lt;K, T&gt;</td><td>\u8FD4\u56DE\u5C5E\u6027\u540D\u4E3A <code>K</code>\uFF0C\u5C5E\u6027\u503C\u4E3A <code>T</code> \u7684\u7C7B\u578B</td></tr><tr><td>NonNullable</td><td>\u4ECE <code>T</code> \u4E2D\u5254\u9664 <code>null</code> \u548C <code>undefined</code></td></tr><tr><td>ConstructorParameters</td><td>\u83B7\u53D6 <code>T</code> \u7684\u6784\u9020\u51FD\u6570\u53C2\u6570\u7C7B\u578B\u7EC4\u6210\u7684\u5143\u7EC4</td></tr><tr><td>InstanceType</td><td>\u83B7\u53D6 <code>T</code> \u7684\u5B9E\u4F8B\u7C7B\u578B</td></tr><tr><td>Parameters</td><td>\u83B7\u53D6\u51FD\u6570\u53C2\u6570\u7C7B\u578B\u7EC4\u6210\u7684\u5143\u7EC4</td></tr><tr><td>ReturnType</td><td>\u83B7\u53D6\u51FD\u6570\u8FD4\u56DE\u503C\u7C7B\u578B</td></tr></tbody></table>`,179);function e(t,o){return p}var r=s(a,[["render",e]]);export{r as default};
