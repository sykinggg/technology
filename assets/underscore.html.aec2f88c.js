import{r as e,o as c,c as u,b as n,d as t,F as l,a as s,e as o}from"./app.b05da4ec.js";import{_ as i}from"./plugin-vue_export-helper.21dcd24c.js";const r={},k=s(`<h1 id="underscore-\u6E90\u7801\u6574\u4F53\u67B6\u6784" tabindex="-1"><a class="header-anchor" href="#underscore-\u6E90\u7801\u6574\u4F53\u67B6\u6784" aria-hidden="true">#</a> underscore \u6E90\u7801\u6574\u4F53\u67B6\u6784</h1><p>\u7248\u672C\u662F<code>v1.9.1</code>\u3002 <code>unpkg.com</code>\u6E90\u7801\u5730\u5740\uFF1Ahttps://unpkg.com/underscore@1.9.1/underscore.js</p><h2 id="\u94FE\u5F0F\u8C03\u7528" tabindex="-1"><a class="header-anchor" href="#\u94FE\u5F0F\u8C03\u7528" aria-hidden="true">#</a> \u94FE\u5F0F\u8C03\u7528</h2><p><code>_.chain</code> \u51FD\u6570\u6E90\u7801\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>_<span class="token punctuation">.</span><span class="token function-variable function">chain</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
 <span class="token keyword">var</span> instance <span class="token operator">=</span> <span class="token function">_</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span>
 instance<span class="token punctuation">.</span>_chain <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
 <span class="token keyword">return</span> instance<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>\u8FD9\u4E2A\u51FD\u6570\u6BD4\u8F83\u7B80\u5355\uFF0C\u5C31\u662F\u4F20\u9012<code>obj</code>\u8C03\u7528<code>_()</code>\u3002\u4F46\u8FD4\u56DE\u503C\u53D8\u91CF\u7ADF\u7136\u662F<code>instance</code>\u5B9E\u4F8B\u5BF9\u8C61\u3002\u6DFB\u52A0\u5C5E\u6027<code>_chain</code>\u8D4B\u503C\u4E3A<code>true</code>\uFF0C\u5E76\u8FD4\u56DE<code>intance</code>\u5BF9\u8C61\u3002\u4F46\u518D\u770B\u4F8B\u5B50\uFF0C\u5B9E\u4F8B\u5BF9\u8C61\u7ADF\u7136\u53EF\u4EE5\u8C03\u7528<code>reverse</code>\u65B9\u6CD5\uFF0C\u518D\u8C03\u7528<code>value</code>\u65B9\u6CD5\u3002\u731C\u6D4B\u652F\u6301<code>OOP</code>\uFF08\u9762\u5411\u5BF9\u8C61\uFF09\u8C03\u7528\u3002</p><h2 id="\u51FD\u6570\u5BF9\u8C61-\u652F\u6301oop" tabindex="-1"><a class="header-anchor" href="#\u51FD\u6570\u5BF9\u8C61-\u652F\u6301oop" aria-hidden="true">#</a> _ \u51FD\u6570\u5BF9\u8C61 \u652F\u6301OOP</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">_</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
 <span class="token keyword">if</span> <span class="token punctuation">(</span>obj <span class="token keyword">instanceof</span> <span class="token class-name">_</span><span class="token punctuation">)</span> <span class="token keyword">return</span> obj<span class="token punctuation">;</span>
 <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">(</span><span class="token keyword">this</span> <span class="token keyword">instanceof</span> <span class="token class-name">_</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">_</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token keyword">this</span><span class="token punctuation">.</span>_wrapped <span class="token operator">=</span> obj<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><ul><li><p>\u5982\u679C\u53C2\u6570<code>obj</code>\u5DF2\u7ECF\u662F<code>_</code>\u7684\u5B9E\u4F8B\u4E86\uFF0C\u5219\u8FD4\u56DE<code>obj</code>\u3002</p></li><li><p>\u5982\u679C<code>this</code>\u4E0D\u662F<code>_</code>\u7684\u5B9E\u4F8B\uFF0C\u5219\u624B\u52A8 <code>new _(obj)</code>;</p></li><li><p>\u518D\u6B21new\u8C03\u7528\u65F6\uFF0C\u628A<code>obj</code>\u5BF9\u8C61\u8D4B\u503C\u7ED9<code>_wrapped</code>\u8FD9\u4E2A\u5C5E\u6027\u3002</p></li><li><p>\u4E5F\u5C31\u662F\u8BF4\u6700\u540E\u5F97\u5230\u7684\u5B9E\u4F8B\u5BF9\u8C61\u662F\u8FD9\u6837\u7684\u7ED3\u6784 <code>{ _wrapped: &#39;\u53C2\u6570obj&#39;, }</code></p></li><li><p>\u5B83\u7684\u539F\u578B<code>_(obj).__proto__</code>\u662F<code>_.prototype</code>;</p></li></ul>`,9),d=["src"],b=s(`<blockquote><p>\u7EE7\u7EED\u5206\u6790\u5B98\u65B9\u7684<code>_.chain</code>\u4F8B\u5B50\u3002\u8FD9\u4E2A\u4F8B\u5B50\u62C6\u5F00\uFF0C\u5199\u6210\u4E09\u6B65\u3002</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> part1 <span class="token operator">=</span> _<span class="token punctuation">.</span><span class="token function">chain</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> part2 <span class="token operator">=</span> part1<span class="token punctuation">.</span><span class="token function">reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> part3 <span class="token operator">=</span> part2<span class="token punctuation">.</span><span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u6CA1\u6709\u540E\u7EEDpart1.reverse()\u64CD\u4F5C\u7684\u60C5\u51B5\u4E0B</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>part1<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// {__wrapped: [1, 2, 3], _chain: true}</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>part2<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// {__wrapped: [3, 2, 1], _chain: true}</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>part3<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [3, 2, 1]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>\u601D\u8003\u95EE\u9898\uFF1A<code>reverse</code>\u672C\u662F<code>Array.prototype</code>\u4E0A\u7684\u65B9\u6CD5\u5440\u3002\u4E3A\u5565\u652F\u6301\u94FE\u5F0F\u8C03\u7528\u5462\u3002 \u641C\u7D22<code>reverse</code>\uFF0C\u53EF\u4EE5\u770B\u5230\u5982\u4E0B\u8FD9\u6BB5\u4EE3\u7801\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>_<span class="token punctuation">.</span><span class="token function">chain</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> ArrayProto <span class="token operator">=</span> <span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">;</span>
<span class="token comment">// \u904D\u5386 \u6570\u7EC4 Array.prototype \u7684\u8FD9\u4E9B\u65B9\u6CD5\uFF0C\u8D4B\u503C\u5230 _.prototype \u4E0A</span>
_<span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;pop&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;push&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;reverse&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;shift&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;sort&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;splice&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;unshift&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
 <span class="token comment">// \u8FD9\u91CC\u7684\`method\`\u662F reverse \u51FD\u6570</span>
 <span class="token keyword">var</span> method <span class="token operator">=</span> ArrayProto<span class="token punctuation">[</span>name<span class="token punctuation">]</span><span class="token punctuation">;</span>
 <span class="token class-name">_</span><span class="token punctuation">.</span>prototype<span class="token punctuation">[</span>name<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
 <span class="token comment">// \u8FD9\u91CC\u7684obj \u5C31\u662F\u6570\u7EC4 [1, 2, 3]</span>
 <span class="token keyword">var</span> obj <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_wrapped<span class="token punctuation">;</span>
 <span class="token comment">// arguments  \u662F\u53C2\u6570\u96C6\u5408\uFF0C\u6307\u5B9Areverse \u7684this\u6307\u5411\u4E3Aobj\uFF0C\u53C2\u6570\u4E3Aarguments\uFF0C \u5E76\u6267\u884C\u8FD9\u4E2A\u51FD\u6570\u51FD\u6570\u3002\u6267\u884C\u540E obj \u5219\u662F [3, 2, 1]</span>
 <span class="token function">method</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> arguments<span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>name <span class="token operator">===</span> <span class="token string">&#39;shift&#39;</span> <span class="token operator">||</span> name <span class="token operator">===</span> <span class="token string">&#39;splice&#39;</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> obj<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">delete</span> obj<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
 <span class="token comment">// \u91CD\u70B9\u5728\u4E8E\u8FD9\u91CC chainResult \u51FD\u6570\u3002</span>
 <span class="token keyword">return</span> <span class="token function">chainResult</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> obj<span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// Helper function to continue chaining intermediate results.</span>
<span class="token keyword">var</span> <span class="token function-variable function">chainResult</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">instance<span class="token punctuation">,</span> obj</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
 <span class="token comment">// \u5982\u679C\u5B9E\u4F8B\u4E2D\u6709_chain \u4E3A true \u8FD9\u4E2A\u5C5E\u6027\uFF0C\u5219\u8FD4\u56DE\u5B9E\u4F8B \u652F\u6301\u94FE\u5F0F\u8C03\u7528\u7684\u5B9E\u4F8B\u5BF9\u8C61  { _chain: true, this._wrapped: [3, 2, 1] }\uFF0C\u5426\u5219\u76F4\u63A5\u8FD4\u56DE\u8FD9\u4E2A\u5BF9\u8C61[3, 2, 1]\u3002</span>
 <span class="token keyword">return</span> instance<span class="token punctuation">.</span>_chain <span class="token operator">?</span> <span class="token function">_</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">chain</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> obj<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p><code>if ((name === &#39;shift&#39; || name === &#39;splice&#39;) &amp;&amp; obj.length === 0) delete obj[0];</code> \u63D0\u4E00\u4E0B\u4E0A\u9762\u6E90\u7801\u4E2D\u7684\u8FD9\u4E00\u53E5\uFF0C\u770B\u5230\u8FD9\u53E5\u662F\u767E\u601D\u4E0D\u5F97\u5176\u89E3\u3002</p><p>\u641C\u7D22\u5230\u4E24\u4E2A\u5728\u5B98\u65B9\u5E93\u4E2D\u7684<code>ISSUE</code>\uFF0C\u5927\u6982\u610F\u601D\u5C31\u662F\u517C\u5BB9IE\u4F4E\u7248\u672C\u7684\u5199\u6CD5\u3002\u6709\u5174\u8DA3\u7684\u53EF\u4EE5\u70B9\u51FB\u53BB\u770B\u770B\u3002</p>`,8),m={href:"https://link.juejin.cn/?target=https%3A%2F%2Fgithub.com%2Fjashkenas%2Funderscore%2Fissues%2F2016",target:"_blank",rel:"noopener noreferrer"},h=o("I don't understand the meaning of this sentence."),f={href:"https://link.juejin.cn/?target=https%3A%2F%2Fgithub.com%2Fjashkenas%2Funderscore%2Fissues%2F2773",target:"_blank",rel:"noopener noreferrer"},y=o("why delete obj[0]"),g=s(`<h2 id="\u57FA\u4E8E\u6D41\u7684\u7F16\u7A0B" tabindex="-1"><a class="header-anchor" href="#\u57FA\u4E8E\u6D41\u7684\u7F16\u7A0B" aria-hidden="true">#</a> \u57FA\u4E8E\u6D41\u7684\u7F16\u7A0B</h2><p>\u81F3\u6B64\u5C31\u7B97\u662F\u5206\u6790\u5B8C\u4E86\u94FE\u5F0F\u8C03\u7528<code>_.chain()</code>\u548C<code>_</code>\u51FD\u6570\u5BF9\u8C61\u3002\u8FD9\u79CD\u628A\u6570\u636E\u5B58\u50A8\u5728\u5B9E\u4F8B\u5BF9\u8C61<code>{_wrapped: &#39;&#39;, _chain: true}</code>\u4E2D\uFF0C<code>_chain</code>\u5224\u65AD\u662F\u5426\u652F\u6301\u94FE\u5F0F\u8C03\u7528\uFF0C\u6765\u4F20\u9012\u7ED9\u4E0B\u4E00\u4E2A\u51FD\u6570\u5904\u7406\u3002\u8FD9\u79CD\u505A\u6CD5\u53EB\u505A <strong>\u57FA\u4E8E\u6D41\u7684\u7F16\u7A0B</strong>\u3002</p><p>\u6700\u540E\u6570\u636E\u5904\u7406\u5B8C\uFF0C\u8981\u8FD4\u56DE\u8FD9\u4E2A\u6570\u636E\u600E\u4E48\u529E\u5462\u3002<code>underscore</code>\u63D0\u4F9B\u4E86\u4E00\u4E2A<code>value</code>\u7684\u65B9\u6CD5\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token class-name">_</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">value</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
 <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_wrapped<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u987A\u4FBF\u63D0\u4F9B\u4E86\u51E0\u4E2A\u522B\u540D\u3002<code>toJSON</code>\u3001<code>valueOf</code>\u3002 _.prototype.valueOf = _.prototype.toJSON = _.prototype.value;</p><p>\u8FD8\u63D0\u4F9B\u4E86 <code>toString</code>\u7684\u65B9\u6CD5\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token class-name">_</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">toString</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
 <span class="token keyword">return</span> <span class="token function">String</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>_wrapped<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u8FD9\u91CC\u7684<code>String()</code> \u548C<code>new String()</code> \u6548\u679C\u662F\u4E00\u6837\u7684\u3002 \u53EF\u4EE5\u731C\u6D4B\u5185\u90E8\u5B9E\u73B0\u548C <code>_</code>\u51FD\u6570\u5BF9\u8C61\u7C7B\u4F3C\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">String</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
 <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">(</span><span class="token keyword">this</span> instanceOf String<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">chainResult</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">instance<span class="token punctuation">,</span> obj</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
 <span class="token keyword">return</span> instance<span class="token punctuation">.</span>_chain <span class="token operator">?</span> <span class="token function">_</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">chain</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> obj<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u7EC6\u5FC3\u7684\u8BFB\u8005\u4F1A\u53D1\u73B0<code>chainResult</code>\u51FD\u6570\u4E2D\u7684<code>_(obj).chain()</code>\uFF0C\u662F\u600E\u4E48\u5B9E\u73B0\u5B9E\u73B0\u94FE\u5F0F\u8C03\u7528\u7684\u5462\u3002</p><p>\u800C<code>_(obj)</code>\u662F\u8FD4\u56DE\u7684\u5B9E\u4F8B\u5BF9\u8C61<code>{_wrapped: obj}</code>\u5440\u3002\u600E\u4E48\u4F1A\u6709<code>chain()</code>\u65B9\u6CD5\uFF0C\u80AF\u5B9A\u6709\u5730\u65B9\u6302\u8F7D\u4E86\u8FD9\u4E2A\u65B9\u6CD5\u5230<code>_.prototype</code>\u4E0A\u6216\u8005\u5176\u4ED6\u64CD\u4F5C\uFF0C\u8FD9\u5C31\u662F<code>_.mixin()</code>\u3002</p><h2 id="mixin-\u6302\u8F7D\u6240\u6709\u7684\u9759\u6001\u65B9\u6CD5\u5230-prototype-\u4E5F\u53EF\u4EE5\u6302\u8F7D\u81EA\u5B9A\u4E49\u7684\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#mixin-\u6302\u8F7D\u6240\u6709\u7684\u9759\u6001\u65B9\u6CD5\u5230-prototype-\u4E5F\u53EF\u4EE5\u6302\u8F7D\u81EA\u5B9A\u4E49\u7684\u65B9\u6CD5" aria-hidden="true">#</a> _.mixin \u6302\u8F7D\u6240\u6709\u7684\u9759\u6001\u65B9\u6CD5\u5230 _.prototype\uFF0C \u4E5F\u53EF\u4EE5\u6302\u8F7D\u81EA\u5B9A\u4E49\u7684\u65B9\u6CD5</h2><p><code>_.mixin</code> \u6DF7\u5165\u3002\u4F46\u4FB5\u5165\u6027\u592A\u5F3A\uFF0C\u7ECF\u5E38\u5BB9\u6613\u51FA\u73B0\u8986\u76D6\u4E4B\u7C7B\u7684\u95EE\u9898\u3002\u8BB0\u5F97\u4E4B\u524D<code>React</code>\u6709<code>mixin</code>\u529F\u80FD\uFF0CVue\u4E5F\u6709<code>mixin</code>\u529F\u80FD\u3002\u4F46\u7248\u672C\u8FED\u4EE3\u66F4\u65B0\u540E\u57FA\u672C\u90FD\u662F\u6162\u6162\u7684\u90FD\u4E0D\u63A8\u8350\u6216\u8005\u4E0D\u652F\u6301<code>mixin</code>\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>_<span class="token punctuation">.</span><span class="token function-variable function">mixin</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
 <span class="token comment">// \u904D\u5386\u5BF9\u8C61\u4E0A\u7684\u6240\u6709\u65B9\u6CD5</span>
 _<span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span>_<span class="token punctuation">.</span><span class="token function">functions</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u6BD4\u5982 chain, obj[&#39;chain&#39;] \u51FD\u6570\uFF0C\u81EA\u5B9A\u4E49\u7684\uFF0C\u5219\u8D4B\u503C\u5230_[name] \u4E0A\uFF0Cfunc \u5C31\u662F\u8BE5\u51FD\u6570\u3002\u4E5F\u5C31\u662F\u8BF4\u81EA\u5B9A\u4E49\u7684\u65B9\u6CD5\uFF0C\u4E0D\u4EC5_\u51FD\u6570\u5BF9\u8C61\u4E0A\u6709\uFF0C\u800C\u4E14\`_.prototype\`\u4E0A\u4E5F\u6709</span>
 <span class="token keyword">var</span> func <span class="token operator">=</span> _<span class="token punctuation">[</span>name<span class="token punctuation">]</span> <span class="token operator">=</span> obj<span class="token punctuation">[</span>name<span class="token punctuation">]</span><span class="token punctuation">;</span>
 <span class="token class-name">_</span><span class="token punctuation">.</span>prototype<span class="token punctuation">[</span>name<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u5904\u7406\u7684\u6570\u636E\u5BF9\u8C61</span>
  <span class="token keyword">var</span> args <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">.</span>_wrapped<span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token comment">// \u5904\u7406\u7684\u6570\u636E\u5BF9\u8C61 \u548C arguments \u7ED3\u5408</span>
  <span class="token function">push</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>args<span class="token punctuation">,</span> arguments<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// \u94FE\u5F0F\u8C03\u7528  chain.apply(_, args) \u53C2\u6570\u53C8\u88AB\u52A0\u4E0A\u4E86 _chain\u5C5E\u6027\uFF0C\u652F\u6301\u94FE\u5F0F\u8C03\u7528\u3002</span>
  <span class="token comment">// _.chain = function(obj) {</span>
  <span class="token comment">// var instance = _(obj);</span>
  <span class="token comment">// instance._chain = true;</span>
  <span class="token comment">// return instance;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token function">chainResult</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token function">func</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>_<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token comment">// \u6700\u7EC8\u8FD4\u56DE _ \u51FD\u6570\u5BF9\u8C61\u3002</span>
 <span class="token keyword">return</span> _<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

_<span class="token punctuation">.</span><span class="token function">mixin</span><span class="token punctuation">(</span>_<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><p><code>_mixin(_)</code> \u628A\u9759\u6001\u65B9\u6CD5\u6302\u8F7D\u5230\u4E86<code>_.prototype</code>\u4E0A\uFF0C\u4E5F\u5C31\u662F<code>_.prototype.chain</code>\u65B9\u6CD5 \u4E5F\u5C31\u662F <code>_.chain</code>\u65B9\u6CD5\u3002</p><p>\u6240\u4EE5<code>_.chain(obj)</code>\u548C<code>_(obj).chain()</code>\u6548\u679C\u4E00\u6837\uFF0C\u90FD\u80FD\u5B9E\u73B0\u94FE\u5F0F\u8C03\u7528\u3002</p>`,17),v=["src"],_=s(`<h3 id="mixin-\u6302\u8F7D\u81EA\u5B9A\u4E49\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#mixin-\u6302\u8F7D\u81EA\u5B9A\u4E49\u65B9\u6CD5" aria-hidden="true">#</a> _.mixin \u6302\u8F7D\u81EA\u5B9A\u4E49\u65B9\u6CD5</h3><blockquote><p>\u6302\u8F7D\u81EA\u5B9A\u4E49\u65B9\u6CD5\uFF1A \u4E3E\u4E2A\u4F8B\u5B50\uFF1A</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>_<span class="token punctuation">.</span><span class="token function">mixin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
 <span class="token function-variable function">log</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u54CE\u5440\uFF0C\u6211\u88AB\u8C03\u7528\u4E86&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
_<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// \u54CE\u5440\uFF0C\u6211\u88AB\u8C03\u7528\u4E86</span>
<span class="token function">_</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// \u54CE\u5440\uFF0C\u6211\u88AB\u8C03\u7528\u4E86</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="functions-obj" tabindex="-1"><a class="header-anchor" href="#functions-obj" aria-hidden="true">#</a> _.functions(obj)</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>_<span class="token punctuation">.</span>functions <span class="token operator">=</span> _<span class="token punctuation">.</span><span class="token function-variable function">methods</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
 <span class="token keyword">var</span> names <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
 <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> key <span class="token keyword">in</span> obj<span class="token punctuation">)</span> <span class="token punctuation">{</span>
 <span class="token keyword">if</span> <span class="token punctuation">(</span>_<span class="token punctuation">.</span><span class="token function">isFunction</span><span class="token punctuation">(</span>obj<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> names<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span>
 <span class="token keyword">return</span> names<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p><code>_.functions</code> \u548C <code>_.methods</code> \u4E24\u4E2A\u65B9\u6CD5\uFF0C\u904D\u5386\u5BF9\u8C61\u4E0A\u7684\u65B9\u6CD5\uFF0C\u653E\u5165\u4E00\u4E2A\u6570\u7EC4\uFF0C\u5E76\u4E14\u6392\u5E8F\u3002\u8FD4\u56DE\u6392\u5E8F\u540E\u7684\u6570\u7EC4\u3002</p><h3 id="underscore-js-\u7A76\u7ADF\u5728-\u548C-prototype\u6302\u8F7D\u4E86\u591A\u5C11\u65B9\u6CD5\u548C\u5C5E\u6027" tabindex="-1"><a class="header-anchor" href="#underscore-js-\u7A76\u7ADF\u5728-\u548C-prototype\u6302\u8F7D\u4E86\u591A\u5C11\u65B9\u6CD5\u548C\u5C5E\u6027" aria-hidden="true">#</a> underscore.js \u7A76\u7ADF\u5728_\u548C_.prototype\u6302\u8F7D\u4E86\u591A\u5C11\u65B9\u6CD5\u548C\u5C5E\u6027</h3><p>\u518D\u6765\u770B\u4E0B<code>underscore.js</code>\u7A76\u7ADF\u6302\u8F7D\u5728<code>_\u51FD\u6570\u5BF9\u8C61</code>\u4E0A\u6709\u591A\u5C11\u9759\u6001\u65B9\u6CD5\u548C\u5C5E\u6027\uFF0C\u548C\u6302\u8F7D<code>_.prototype</code>\u4E0A\u6709\u591A\u5C11\u65B9\u6CD5\u548C\u5C5E\u6027\u3002</p><blockquote><p>\u4F7F\u7528<code>for in</code>\u5FAA\u73AF\u4E00\u8BD5\u4FBF\u77E5\u3002\u770B\u5982\u4E0B\u4EE3\u7801\uFF1A</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> staticMethods <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> staticProperty <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> name <span class="token keyword">in</span> _<span class="token punctuation">)</span><span class="token punctuation">{</span>
 <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> _<span class="token punctuation">[</span>name<span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  staticMethods<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span>
 <span class="token keyword">else</span><span class="token punctuation">{</span>
  staticProperty<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>staticProperty<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [&quot;VERSION&quot;, &quot;templateSettings&quot;] \u4E24\u4E2A</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>staticMethods<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [&quot;after&quot;, &quot;all&quot;, &quot;allKeys&quot;, &quot;any&quot;, &quot;assign&quot;, ...] 138\u4E2A</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> prototypeMethods <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> prototypeProperty <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> name <span class="token keyword">in</span> <span class="token class-name">_</span><span class="token punctuation">.</span>prototype<span class="token punctuation">)</span><span class="token punctuation">{</span>
 <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> <span class="token class-name">_</span><span class="token punctuation">.</span>prototype<span class="token punctuation">[</span>name<span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  prototypeMethods<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span>
 <span class="token keyword">else</span><span class="token punctuation">{</span>
  prototypeProperty<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>prototypeProperty<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// []</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>prototypeMethods<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [&quot;after&quot;, &quot;all&quot;, &quot;allKeys&quot;, &quot;any&quot;, &quot;assign&quot;, ...] 152\u4E2A</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p><code>underscore.js</code> \u539F\u578B\u5173\u7CFB\u56FE</p>`,12),w=["src"],j=s(`<h2 id="\u6574\u4F53\u67B6\u6784\u6982\u89C8" tabindex="-1"><a class="header-anchor" href="#\u6574\u4F53\u67B6\u6784\u6982\u89C8" aria-hidden="true">#</a> \u6574\u4F53\u67B6\u6784\u6982\u89C8</h2><h3 id="\u533F\u540D\u51FD\u6570\u81EA\u6267\u884C" tabindex="-1"><a class="header-anchor" href="#\u533F\u540D\u51FD\u6570\u81EA\u6267\u884C" aria-hidden="true">#</a> \u533F\u540D\u51FD\u6570\u81EA\u6267\u884C</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>

<span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u8FD9\u6837\u4FDD\u8BC1\u4E0D\u6C61\u67D3\u5916\u754C\u73AF\u5883\uFF0C\u540C\u65F6\u9694\u79BB\u5916\u754C\u73AF\u5883\uFF0C\u4E0D\u662F\u5916\u754C\u5F71\u54CD\u5185\u90E8\u73AF\u5883\u3002</p><p>\u5916\u754C\u8BBF\u95EE\u4E0D\u5230\u91CC\u9762\u7684\u53D8\u91CF\u548C\u51FD\u6570\uFF0C\u91CC\u9762\u53EF\u4EE5\u8BBF\u95EE\u5230\u5916\u754C\u7684\u53D8\u91CF\uFF0C\u4F46\u91CC\u9762\u5B9A\u4E49\u4E86\u81EA\u5DF1\u7684\u53D8\u91CF\uFF0C\u5219\u4E0D\u4F1A\u8BBF\u95EE\u5916\u754C\u7684\u53D8\u91CF\u3002 \u533F\u540D\u51FD\u6570\u5C06\u4EE3\u7801\u5305\u88F9\u5728\u91CC\u9762\uFF0C\u9632\u6B62\u4E0E\u5176\u4ED6\u4EE3\u7801\u51B2\u7A81\u548C\u6C61\u67D3\u5168\u5C40\u73AF\u5883\u3002</p><h3 id="root-\u5904\u7406" tabindex="-1"><a class="header-anchor" href="#root-\u5904\u7406" aria-hidden="true">#</a> root \u5904\u7406</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> root <span class="token operator">=</span> <span class="token keyword">typeof</span> self <span class="token operator">==</span> <span class="token string">&#39;object&#39;</span> <span class="token operator">&amp;&amp;</span> self<span class="token punctuation">.</span>self <span class="token operator">===</span> self <span class="token operator">&amp;&amp;</span> self <span class="token operator">||</span>
 <span class="token keyword">typeof</span> global <span class="token operator">==</span> <span class="token string">&#39;object&#39;</span> <span class="token operator">&amp;&amp;</span> global<span class="token punctuation">.</span>global <span class="token operator">===</span> global <span class="token operator">&amp;&amp;</span> global <span class="token operator">||</span>
 <span class="token keyword">this</span> <span class="token operator">||</span>
 <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>\u652F\u6301\u6D4F\u89C8\u5668\u73AF\u5883\u3001<code>node</code>\u3001<code>Web Worker</code>\u3001<code>node vm</code>\u3001<code>\u5FAE\u4FE1\u5C0F\u7A0B\u5E8F</code></p><h3 id="\u5BFC\u51FA" tabindex="-1"><a class="header-anchor" href="#\u5BFC\u51FA" aria-hidden="true">#</a> \u5BFC\u51FA</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> exports <span class="token operator">!=</span> <span class="token string">&#39;undefined&#39;</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>exports<span class="token punctuation">.</span>nodeType<span class="token punctuation">)</span> <span class="token punctuation">{</span>
 <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> module <span class="token operator">!=</span> <span class="token string">&#39;undefined&#39;</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>module<span class="token punctuation">.</span>nodeType <span class="token operator">&amp;&amp;</span> module<span class="token punctuation">.</span>exports<span class="token punctuation">)</span> <span class="token punctuation">{</span>
 exports <span class="token operator">=</span> module<span class="token punctuation">.</span>exports <span class="token operator">=</span> _<span class="token punctuation">;</span>
 <span class="token punctuation">}</span>
 exports<span class="token punctuation">.</span>_ <span class="token operator">=</span> _<span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
 root<span class="token punctuation">.</span>_ <span class="token operator">=</span> _<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h3 id="\u652F\u6301-amd-\u6A21\u5757\u5316\u89C4\u8303" tabindex="-1"><a class="header-anchor" href="#\u652F\u6301-amd-\u6A21\u5757\u5316\u89C4\u8303" aria-hidden="true">#</a> \u652F\u6301 amd \u6A21\u5757\u5316\u89C4\u8303</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> define <span class="token operator">==</span> <span class="token string">&#39;function&#39;</span> <span class="token operator">&amp;&amp;</span> define<span class="token punctuation">.</span>amd<span class="token punctuation">)</span> <span class="token punctuation">{</span>
 <span class="token function">define</span><span class="token punctuation">(</span><span class="token string">&#39;underscore&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> _<span class="token punctuation">;</span>
 <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="noconflict-\u9632\u51B2\u7A81\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#noconflict-\u9632\u51B2\u7A81\u51FD\u6570" aria-hidden="true">#</a> _.noConflict \u9632\u51B2\u7A81\u51FD\u6570</h3><blockquote><p>\u6E90\u7801\uFF1A</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u6682\u5B58\u5728 root \u4E0A\uFF0C \u6267\u884CnoConflict\u65F6\u518D\u8D4B\u503C\u56DE\u6765</span>
<span class="token keyword">var</span> previousUnderscore <span class="token operator">=</span> root<span class="token punctuation">.</span>_<span class="token punctuation">;</span>
_<span class="token punctuation">.</span><span class="token function-variable function">noConflict</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
 root<span class="token punctuation">.</span>_ <span class="token operator">=</span> previousUnderscore<span class="token punctuation">;</span>
 <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><blockquote><p>\u4F7F\u7528\uFF1A</p></blockquote><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">var</span> _ <span class="token operator">=</span> <span class="token string">&#39;\u6211\u5C31\u662F\u6211\uFF0C\u4E0D\u4E00\u6837\u7684\u70DF\u706B\uFF0C\u5176\u4ED6\u53EF\u4E0D\u8981\u8986\u76D6\u6211\u5440&#39;</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://unpkg.com/underscore@1.9.1/underscore.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">var</span> underscore <span class="token operator">=</span> _<span class="token punctuation">.</span><span class="token function">noConflict</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>_<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &#39;\u6211\u5C31\u662F\u6211\uFF0C\u4E0D\u4E00\u6837\u7684\u70DF\u706B\uFF0C\u5176\u4ED6\u53EF\u4E0D\u8981\u8986\u76D6\u6211\u5440&#39;</span>
underscore<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">// true</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h2 id="\u603B\u7ED3" tabindex="-1"><a class="header-anchor" href="#\u603B\u7ED3" aria-hidden="true">#</a> \u603B\u7ED3</h2><p>\u5168\u6587\u6839\u636E\u5B98\u7F51\u63D0\u4F9B\u7684\u94FE\u5F0F\u8C03\u7528\u7684\u4F8B\u5B50\uFF0C <code>_.chain([1, 2, 3]).reverse().value()</code>;\u8F83\u4E3A\u6DF1\u5165\u7684\u8C03\u8BD5\u548C\u8FFD\u8E2A\u4EE3\u7801\uFF0C\u5206\u6790\u94FE\u5F0F\u8C03\u7528\uFF08<code>_.chain()</code> \u548C <code>_(obj).chain()</code>\uFF09\u3001<code>OOP</code>\u3001\u57FA\u4E8E\u6D41\u5F0F\u7F16\u7A0B\u3001\u548C<code>_.mixin(_)</code>\u5728<code>_.prototype</code>\u6302\u8F7D\u65B9\u6CD5\uFF0C\u6700\u540E\u6574\u4F53\u67B6\u6784\u5206\u6790\u3002\u5B66\u4E60<code>underscore.js</code>\u6574\u4F53\u67B6\u6784\uFF0C\u5229\u4E8E\u6253\u9020\u5C5E\u4E8E\u81EA\u5DF1\u7684\u51FD\u6570\u5F0F\u7F16\u7A0B\u7C7B\u5E93\u3002</p><blockquote><p>\u6E90\u7801\u6574\u4F53\u7ED3\u6784</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
 <span class="token keyword">var</span> root <span class="token operator">=</span> <span class="token keyword">typeof</span> self <span class="token operator">==</span> <span class="token string">&#39;object&#39;</span> <span class="token operator">&amp;&amp;</span> self<span class="token punctuation">.</span>self <span class="token operator">===</span> self <span class="token operator">&amp;&amp;</span> self <span class="token operator">||</span>
  <span class="token keyword">typeof</span> global <span class="token operator">==</span> <span class="token string">&#39;object&#39;</span> <span class="token operator">&amp;&amp;</span> global<span class="token punctuation">.</span>global <span class="token operator">===</span> global <span class="token operator">&amp;&amp;</span> global <span class="token operator">||</span>
  <span class="token keyword">this</span> <span class="token operator">||</span>
  <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
 <span class="token keyword">var</span> previousUnderscore <span class="token operator">=</span> root<span class="token punctuation">.</span>_<span class="token punctuation">;</span>

 <span class="token keyword">var</span> <span class="token function-variable function">_</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token keyword">if</span> <span class="token punctuation">(</span>obj <span class="token keyword">instanceof</span> <span class="token class-name">_</span><span class="token punctuation">)</span> <span class="token keyword">return</span> obj<span class="token punctuation">;</span>
   <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">(</span><span class="token keyword">this</span> <span class="token keyword">instanceof</span> <span class="token class-name">_</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">_</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token keyword">this</span><span class="token punctuation">.</span>_wrapped <span class="token operator">=</span> obj<span class="token punctuation">;</span>
 <span class="token punctuation">}</span><span class="token punctuation">;</span>

 <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> exports <span class="token operator">!=</span> <span class="token string">&#39;undefined&#39;</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>exports<span class="token punctuation">.</span>nodeType<span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> module <span class="token operator">!=</span> <span class="token string">&#39;undefined&#39;</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>module<span class="token punctuation">.</span>nodeType <span class="token operator">&amp;&amp;</span> module<span class="token punctuation">.</span>exports<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  exports <span class="token operator">=</span> module<span class="token punctuation">.</span>exports <span class="token operator">=</span> _<span class="token punctuation">;</span>
   <span class="token punctuation">}</span>
   exports<span class="token punctuation">.</span>_ <span class="token operator">=</span> _<span class="token punctuation">;</span>
 <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
   root<span class="token punctuation">.</span>_ <span class="token operator">=</span> _<span class="token punctuation">;</span>
 <span class="token punctuation">}</span>
 _<span class="token punctuation">.</span><span class="token constant">VERSION</span> <span class="token operator">=</span> <span class="token string">&#39;1.9.1&#39;</span><span class="token punctuation">;</span>

 _<span class="token punctuation">.</span><span class="token function-variable function">chain</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token keyword">var</span> instance <span class="token operator">=</span> <span class="token function">_</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span>
   instance<span class="token punctuation">.</span>_chain <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
   <span class="token keyword">return</span> instance<span class="token punctuation">;</span>
 <span class="token punctuation">}</span><span class="token punctuation">;</span>

 <span class="token keyword">var</span> <span class="token function-variable function">chainResult</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">instance<span class="token punctuation">,</span> obj</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token keyword">return</span> instance<span class="token punctuation">.</span>_chain <span class="token operator">?</span> <span class="token function">_</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">chain</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> obj<span class="token punctuation">;</span>
 <span class="token punctuation">}</span><span class="token punctuation">;</span>

 _<span class="token punctuation">.</span><span class="token function-variable function">mixin</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
   _<span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span>_<span class="token punctuation">.</span><span class="token function">functions</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> func <span class="token operator">=</span> _<span class="token punctuation">[</span>name<span class="token punctuation">]</span> <span class="token operator">=</span> obj<span class="token punctuation">[</span>name<span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token class-name">_</span><span class="token punctuation">.</span>prototype<span class="token punctuation">[</span>name<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> args <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">.</span>_wrapped<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token function">push</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>args<span class="token punctuation">,</span> arguments<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token function">chainResult</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token function">func</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>_<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token keyword">return</span> _<span class="token punctuation">;</span>
 <span class="token punctuation">}</span><span class="token punctuation">;</span>

 _<span class="token punctuation">.</span><span class="token function">mixin</span><span class="token punctuation">(</span>_<span class="token punctuation">)</span><span class="token punctuation">;</span>

 _<span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;pop&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;push&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;reverse&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;shift&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;sort&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;splice&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;unshift&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token keyword">var</span> method <span class="token operator">=</span> ArrayProto<span class="token punctuation">[</span>name<span class="token punctuation">]</span><span class="token punctuation">;</span>
   <span class="token class-name">_</span><span class="token punctuation">.</span>prototype<span class="token punctuation">[</span>name<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> obj <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_wrapped<span class="token punctuation">;</span>
  <span class="token function">method</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> arguments<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>name <span class="token operator">===</span> <span class="token string">&#39;shift&#39;</span> <span class="token operator">||</span> name <span class="token operator">===</span> <span class="token string">&#39;splice&#39;</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> obj<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">delete</span> obj<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token function">chainResult</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> obj<span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

 _<span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;concat&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;join&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;slice&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token keyword">var</span> method <span class="token operator">=</span> ArrayProto<span class="token punctuation">[</span>name<span class="token punctuation">]</span><span class="token punctuation">;</span>
   <span class="token class-name">_</span><span class="token punctuation">.</span>prototype<span class="token punctuation">[</span>name<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token function">chainResult</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token function">method</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>_wrapped<span class="token punctuation">,</span> arguments<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

 <span class="token class-name">_</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">value</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_wrapped<span class="token punctuation">;</span>
 <span class="token punctuation">}</span><span class="token punctuation">;</span>

 <span class="token class-name">_</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>valueOf <span class="token operator">=</span> <span class="token class-name">_</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>toJSON <span class="token operator">=</span> <span class="token class-name">_</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>value<span class="token punctuation">;</span>

 <span class="token class-name">_</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">toString</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token keyword">return</span> <span class="token function">String</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>_wrapped<span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span><span class="token punctuation">;</span>

 <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> define <span class="token operator">==</span> <span class="token string">&#39;function&#39;</span> <span class="token operator">&amp;&amp;</span> define<span class="token punctuation">.</span>amd<span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token function">define</span><span class="token punctuation">(</span><span class="token string">&#39;underscore&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> _<span class="token punctuation">;</span>
   <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br></div></div>`,21);function x(a,q){const p=e("ExternalLinkIcon");return c(),u(l,null,[k,n("img",{src:a.$withBase("/assets/designFrame/16c712bf513b82ba_tplv-t2oaga2asx-watermark.awebp"),alt:"demo"},null,8,d),b,n("p",null,[n("a",m,[h,t(p)])]),n("p",null,[n("a",f,[y,t(p)])]),g,n("img",{src:a.$withBase("/assets/designFrame/16c712eea71c266b_tplv-t2oaga2asx-watermark.awebp"),alt:"captureMessage \u65AD\u70B9\u8C03\u8BD5\u56FE"},null,8,v),_,n("img",{src:a.$withBase("/assets/designFrame/16c713001e067ee4_tplv-t2oaga2asx-watermark.awebp"),alt:"captureMessage \u65AD\u70B9\u8C03\u8BD5\u56FE"},null,8,w),j],64)}var O=i(r,[["render",x]]);export{O as default};
