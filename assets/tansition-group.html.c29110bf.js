import{a as n}from"./app.ee3fc36b.js";import{_ as s}from"./plugin-vue_export-helper.21dcd24c.js";const a={},p=n(`<h1 id="transition-group" tabindex="-1"><a class="header-anchor" href="#transition-group" aria-hidden="true">#</a> transition-group</h1><p>\u524D\u4E00\u8282\u4ECB\u7ECD\u4E86 <code>&lt;transiiton&gt;</code> \u7EC4\u4EF6\u7684\u5B9E\u73B0\u539F\u7406\uFF0C\u5B83\u53EA\u80FD\u9488\u5BF9\u5355\u4E00\u5143\u7D20\u5B9E\u73B0\u8FC7\u6E21\u6548\u679C\u3002\u505A\u524D\u7AEF\u5F00\u53D1\u7ECF\u5E38\u4F1A\u9047\u5230\u5217\u8868\u7684\u9700\u6C42\uFF0C\u5BF9\u5217\u8868\u5143\u7D20\u8FDB\u884C\u6DFB\u52A0\u548C\u5220\u9664\uFF0C\u6709\u65F6\u5019\u4E5F\u5E0C\u671B\u6709\u8FC7\u6E21\u6548\u679C\uFF0CVue.js \u63D0\u4F9B\u4E86 <code>&lt;transition-group&gt;</code> \u7EC4\u4EF6\uFF0C\u5F88\u597D\u5730\u5E2E\u52A9\u5B9E\u73B0\u4E86\u5217\u8868\u7684\u8FC7\u6E21\u6548\u679C\u3002\u90A3\u4E48\u63A5\u4E0B\u6765\u5C31\u6765\u5206\u6790\u4E00\u4E0B\u5B83\u7684\u5B9E\u73B0\u539F\u7406\u3002</p><p>\u4E3A\u4E86\u66F4\u76F4\u89C2\uFF0C\u4E5F\u662F\u901A\u8FC7\u4E00\u4E2A\u793A\u4F8B\u6765\u8BF4\u660E\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">el</span><span class="token operator">:</span> <span class="token string">&#39;#app&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token string">&#39;&lt;div id=&quot;list-complete-demo&quot; class=&quot;demo&quot;&gt;&#39;</span> <span class="token operator">+</span>
  <span class="token string">&#39;&lt;button v-on:click=&quot;add&quot;&gt;Add&lt;/button&gt;&#39;</span> <span class="token operator">+</span>
  <span class="token string">&#39;&lt;button v-on:click=&quot;remove&quot;&gt;Remove&lt;/button&gt;&#39;</span> <span class="token operator">+</span>
  <span class="token string">&#39;&lt;transition-group name=&quot;list-complete&quot; tag=&quot;p&quot;&gt;&#39;</span> <span class="token operator">+</span>
  <span class="token string">&#39;&lt;span v-for=&quot;item in items&quot; v-bind:key=&quot;item&quot; class=&quot;list-complete-item&quot;&gt;&#39;</span> <span class="token operator">+</span>
  <span class="token string">&#39;{{ item }}&#39;</span> <span class="token operator">+</span>
  <span class="token string">&#39;&lt;/span&gt;&#39;</span> <span class="token operator">+</span>
  <span class="token string">&#39;&lt;/transition-group&gt;&#39;</span> <span class="token operator">+</span>
  <span class="token string">&#39;&lt;/div&gt;&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">items</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token literal-property property">nextNum</span><span class="token operator">:</span> <span class="token number">10</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token function-variable function">randomIndex</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token keyword">this</span><span class="token punctuation">.</span>items<span class="token punctuation">.</span>length<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function-variable function">add</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>items<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">randomIndex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>nextNum<span class="token operator">++</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function-variable function">remove</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>items<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">randomIndex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br></div></div><div class="language-css ext-css line-numbers-mode"><pre class="language-css"><code> <span class="token selector">.list-complete-item</span> <span class="token punctuation">{</span>
  <span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span>
  <span class="token property">margin-right</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector">.list-complete-move</span> <span class="token punctuation">{</span>
  <span class="token property">transition</span><span class="token punctuation">:</span> all 1s<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector">.list-complete-enter, .list-complete-leave-to</span> <span class="token punctuation">{</span>
  <span class="token property">opacity</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>
  <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateY</span><span class="token punctuation">(</span>30px<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector">.list-complete-enter-active</span> <span class="token punctuation">{</span>
  <span class="token property">transition</span><span class="token punctuation">:</span> all 1s<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector">.list-complete-leave-active</span> <span class="token punctuation">{</span>
  <span class="token property">transition</span><span class="token punctuation">:</span> all 1s<span class="token punctuation">;</span>
  <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><p>\u8FD9\u4E2A\u793A\u4F8B\u521D\u59CB\u4F1A\u5C55\u73B0 1-9 \u5341\u4E2A\u6570\u5B57\uFF0C\u5F53\u70B9\u51FB <code>Add</code> \u6309\u94AE\u65F6\uFF0C\u4F1A\u751F\u6210 <code>nextNum</code> \u5E76\u968F\u673A\u5728\u5F53\u524D\u6570\u5217\u8868\u4E2D\u63D2\u5165\uFF1B\u5F53\u70B9\u51FB <code>Remove</code> \u6309\u94AE\u65F6\uFF0C\u4F1A\u968F\u673A\u5220\u9664\u6389\u4E00\u4E2A\u6570\u3002\u4F1A\u53D1\u73B0\u5728\u6570\u6DFB\u52A0\u5220\u9664\u7684\u8FC7\u7A0B\u4E2D\u5728\u5217\u8868\u4E2D\u4F1A\u6709\u8FC7\u6E21\u52A8\u753B\uFF0C\u8FD9\u5C31\u662F <code>&lt;transition-group&gt;</code> \u7EC4\u4EF6\u914D\u5408\u5B9A\u4E49\u7684 CSS \u4EA7\u751F\u7684\u6548\u679C\u3002</p><p>\u9996\u5148\u8FD8\u662F\u6765\u5206\u6790 <code>&lt;transtion-group&gt;</code> \u7EC4\u4EF6\u7684\u5B9E\u73B0\uFF0C\u5B83\u7684\u5B9A\u4E49\u5728 <code>src/platforms/web/runtime/components/transitions.js</code> \u4E2D\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> props <span class="token operator">=</span> <span class="token function">extend</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">tag</span><span class="token operator">:</span> String<span class="token punctuation">,</span>
  <span class="token literal-property property">moveClass</span><span class="token operator">:</span> String
<span class="token punctuation">}</span><span class="token punctuation">,</span> transitionProps<span class="token punctuation">)</span>

<span class="token keyword">delete</span> props<span class="token punctuation">.</span>mode

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  props<span class="token punctuation">,</span>

  <span class="token function">beforeMount</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> update <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_update
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function-variable function">_update</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">vnode<span class="token punctuation">,</span> hydrating</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token comment">// force removing pass</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">__patch__</span><span class="token punctuation">(</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>_vnode<span class="token punctuation">,</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>kept<span class="token punctuation">,</span>
        <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">// hydrating</span>
        <span class="token boolean">true</span> <span class="token comment">// removeOnly (!important, avoids unnecessary moves)</span>
      <span class="token punctuation">)</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>_vnode <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>kept
      <span class="token function">update</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> vnode<span class="token punctuation">,</span> hydrating<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>

  <span class="token function">render</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">h</span><span class="token operator">:</span> Function</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token literal-property property">tag</span><span class="token operator">:</span> string <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>tag <span class="token operator">||</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$vnode<span class="token punctuation">.</span>data<span class="token punctuation">.</span>tag <span class="token operator">||</span> <span class="token string">&#39;span&#39;</span>
    <span class="token keyword">const</span> <span class="token literal-property property">map</span><span class="token operator">:</span> Object <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span>
    <span class="token keyword">const</span> <span class="token literal-property property">prevChildren</span><span class="token operator">:</span> Array<span class="token operator">&lt;</span>VNode<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>prevChildren <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>children
    <span class="token keyword">const</span> <span class="token literal-property property">rawChildren</span><span class="token operator">:</span> Array<span class="token operator">&lt;</span>VNode<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$slots<span class="token punctuation">.</span>default <span class="token operator">||</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token keyword">const</span> <span class="token literal-property property">children</span><span class="token operator">:</span> Array<span class="token operator">&lt;</span>VNode<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>children <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token keyword">const</span> <span class="token literal-property property">transitionData</span><span class="token operator">:</span> Object <span class="token operator">=</span> <span class="token function">extractTransitionData</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span>

    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> rawChildren<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> <span class="token literal-property property">c</span><span class="token operator">:</span> VNode <span class="token operator">=</span> rawChildren<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>c<span class="token punctuation">.</span>tag<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>c<span class="token punctuation">.</span>key <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token function">String</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span>key<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&#39;__vlist&#39;</span><span class="token punctuation">)</span> <span class="token operator">!==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          children<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span>
          map<span class="token punctuation">[</span>c<span class="token punctuation">.</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> c
          <span class="token punctuation">;</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span>data <span class="token operator">||</span> <span class="token punctuation">(</span>c<span class="token punctuation">.</span>data <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>transition <span class="token operator">=</span> transitionData
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">!==</span> <span class="token string">&#39;production&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">const</span> <span class="token literal-property property">opts</span><span class="token operator">:</span> <span class="token operator">?</span>VNodeComponentOptions <span class="token operator">=</span> c<span class="token punctuation">.</span>componentOptions
          <span class="token keyword">const</span> <span class="token literal-property property">name</span><span class="token operator">:</span> string <span class="token operator">=</span> opts <span class="token operator">?</span> <span class="token punctuation">(</span>opts<span class="token punctuation">.</span>Ctor<span class="token punctuation">.</span>options<span class="token punctuation">.</span>name <span class="token operator">||</span> opts<span class="token punctuation">.</span>tag <span class="token operator">||</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span> <span class="token operator">:</span> c<span class="token punctuation">.</span>tag
          <span class="token function">warn</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&lt;transition-group&gt; children must be keyed: &lt;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&gt;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>prevChildren<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> <span class="token literal-property property">kept</span><span class="token operator">:</span> Array<span class="token operator">&lt;</span>VNode<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
      <span class="token keyword">const</span> <span class="token literal-property property">removed</span><span class="token operator">:</span> Array<span class="token operator">&lt;</span>VNode<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> prevChildren<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> <span class="token literal-property property">c</span><span class="token operator">:</span> VNode <span class="token operator">=</span> prevChildren<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
        c<span class="token punctuation">.</span>data<span class="token punctuation">.</span>transition <span class="token operator">=</span> transitionData
        c<span class="token punctuation">.</span>data<span class="token punctuation">.</span>pos <span class="token operator">=</span> c<span class="token punctuation">.</span>elm<span class="token punctuation">.</span><span class="token function">getBoundingClientRect</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>map<span class="token punctuation">[</span>c<span class="token punctuation">.</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          kept<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
          removed<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>kept <span class="token operator">=</span> <span class="token function">h</span><span class="token punctuation">(</span>tag<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> kept<span class="token punctuation">)</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>removed <span class="token operator">=</span> removed
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> <span class="token function">h</span><span class="token punctuation">(</span>tag<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> children<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>

  <span class="token function">updated</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token literal-property property">children</span><span class="token operator">:</span> Array<span class="token operator">&lt;</span>VNode<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>prevChildren
    <span class="token keyword">const</span> <span class="token literal-property property">moveClass</span><span class="token operator">:</span> string <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>moveClass <span class="token operator">||</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">||</span> <span class="token string">&#39;v&#39;</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&#39;-move&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>children<span class="token punctuation">.</span>length <span class="token operator">||</span> <span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">hasMove</span><span class="token punctuation">(</span>children<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>elm<span class="token punctuation">,</span> moveClass<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// we divide the work into three loops to avoid mixing DOM reads and writes</span>
    <span class="token comment">// in each iteration - which helps prevent layout thrashing.</span>
    children<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>callPendingCbs<span class="token punctuation">)</span>
    children<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>recordPosition<span class="token punctuation">)</span>
    children<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>applyTranslation<span class="token punctuation">)</span>

    <span class="token comment">// force reflow to put everything in position</span>
    <span class="token comment">// assign to this to avoid being removed in tree-shaking</span>
    <span class="token comment">// $flow-disable-line</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>_reflow <span class="token operator">=</span> document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>offsetHeight

    children<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">c</span><span class="token operator">:</span> VNode</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>c<span class="token punctuation">.</span>data<span class="token punctuation">.</span>moved<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">var</span> <span class="token literal-property property">el</span><span class="token operator">:</span> any <span class="token operator">=</span> c<span class="token punctuation">.</span>elm
        <span class="token keyword">var</span> <span class="token literal-property property">s</span><span class="token operator">:</span> any <span class="token operator">=</span> el<span class="token punctuation">.</span>style
        <span class="token function">addTransitionClass</span><span class="token punctuation">(</span>el<span class="token punctuation">,</span> moveClass<span class="token punctuation">)</span>
        s<span class="token punctuation">.</span>transform <span class="token operator">=</span> s<span class="token punctuation">.</span>WebkitTransform <span class="token operator">=</span> s<span class="token punctuation">.</span>transitionDuration <span class="token operator">=</span> <span class="token string">&#39;&#39;</span>
        el<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span>transitionEndEvent<span class="token punctuation">,</span> el<span class="token punctuation">.</span><span class="token function-variable function">_moveCb</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">cb</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>e <span class="token operator">||</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">transform$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>propertyName<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            el<span class="token punctuation">.</span><span class="token function">removeEventListener</span><span class="token punctuation">(</span>transitionEndEvent<span class="token punctuation">,</span> cb<span class="token punctuation">)</span>
            el<span class="token punctuation">.</span>_moveCb <span class="token operator">=</span> <span class="token keyword">null</span>
            <span class="token function">removeTransitionClass</span><span class="token punctuation">(</span>el<span class="token punctuation">,</span> moveClass<span class="token punctuation">)</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>

  <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token function">hasMove</span> <span class="token punctuation">(</span>el<span class="token operator">:</span> any<span class="token punctuation">,</span> <span class="token literal-property property">moveClass</span><span class="token operator">:</span> string<span class="token punctuation">)</span><span class="token operator">:</span> boolean <span class="token punctuation">{</span>
      <span class="token comment">/* istanbul ignore if */</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>hasTransition<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span>
      <span class="token punctuation">}</span>
      <span class="token comment">/* istanbul ignore if */</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>_hasMove<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_hasMove
      <span class="token punctuation">}</span>
      <span class="token comment">// Detect whether an element with the move class applied has</span>
      <span class="token comment">// CSS transitions. Since the element may be inside an entering</span>
      <span class="token comment">// transition at this very moment, we make a clone of it and remove</span>
      <span class="token comment">// all other transition classes applied to ensure only the move class</span>
      <span class="token comment">// is applied.</span>
      <span class="token keyword">const</span> <span class="token literal-property property">clone</span><span class="token operator">:</span> HTMLElement <span class="token operator">=</span> el<span class="token punctuation">.</span><span class="token function">cloneNode</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>el<span class="token punctuation">.</span>_transitionClasses<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        el<span class="token punctuation">.</span>_transitionClasses<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">cls</span><span class="token operator">:</span> string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> <span class="token function">removeClass</span><span class="token punctuation">(</span>clone<span class="token punctuation">,</span> cls<span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
      <span class="token function">addClass</span><span class="token punctuation">(</span>clone<span class="token punctuation">,</span> moveClass<span class="token punctuation">)</span>
      clone<span class="token punctuation">.</span>style<span class="token punctuation">.</span>display <span class="token operator">=</span> <span class="token string">&#39;none&#39;</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>$el<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>clone<span class="token punctuation">)</span>
      <span class="token keyword">const</span> <span class="token literal-property property">info</span><span class="token operator">:</span> Object <span class="token operator">=</span> <span class="token function">getTransitionInfo</span><span class="token punctuation">(</span>clone<span class="token punctuation">)</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>$el<span class="token punctuation">.</span><span class="token function">removeChild</span><span class="token punctuation">(</span>clone<span class="token punctuation">)</span>
      <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>_hasMove <span class="token operator">=</span> info<span class="token punctuation">.</span>hasTransform<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br><span class="line-number">114</span><br><span class="line-number">115</span><br><span class="line-number">116</span><br><span class="line-number">117</span><br><span class="line-number">118</span><br><span class="line-number">119</span><br><span class="line-number">120</span><br><span class="line-number">121</span><br><span class="line-number">122</span><br><span class="line-number">123</span><br><span class="line-number">124</span><br><span class="line-number">125</span><br><span class="line-number">126</span><br><span class="line-number">127</span><br><span class="line-number">128</span><br><span class="line-number">129</span><br><span class="line-number">130</span><br><span class="line-number">131</span><br></div></div><h2 id="render-\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#render-\u51FD\u6570" aria-hidden="true">#</a> render \u51FD\u6570</h2><p><code>&lt;transition-group&gt;</code> \u7EC4\u4EF6\u4E5F\u662F\u7531 <code>render</code> \u51FD\u6570\u6E32\u67D3\u751F\u6210 <code>vnode</code>\uFF0C\u63A5\u4E0B\u6765\u5148\u5206\u6790 <code>render</code> \u7684\u5B9E\u73B0\u3002</p><ul><li>\u5B9A\u4E49\u4E00\u4E9B\u53D8\u91CF</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token literal-property property">tag</span><span class="token operator">:</span> string <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>tag <span class="token operator">||</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$vnode<span class="token punctuation">.</span>data<span class="token punctuation">.</span>tag <span class="token operator">||</span> <span class="token string">&#39;span&#39;</span>
<span class="token keyword">const</span> <span class="token literal-property property">map</span><span class="token operator">:</span> Object <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> <span class="token literal-property property">prevChildren</span><span class="token operator">:</span> Array<span class="token operator">&lt;</span>VNode<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>prevChildren <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>children
<span class="token keyword">const</span> <span class="token literal-property property">rawChildren</span><span class="token operator">:</span> Array<span class="token operator">&lt;</span>VNode<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$slots<span class="token punctuation">.</span>default <span class="token operator">||</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token keyword">const</span> <span class="token literal-property property">children</span><span class="token operator">:</span> Array<span class="token operator">&lt;</span>VNode<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>children <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token keyword">const</span> <span class="token literal-property property">transitionData</span><span class="token operator">:</span> Object <span class="token operator">=</span> <span class="token function">extractTransitionData</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>\u4E0D\u540C\u4E8E <code>&lt;transition&gt;</code> \u7EC4\u4EF6\uFF0C<code>&lt;transition-group&gt;</code> \u7EC4\u4EF6\u975E\u62BD\u8C61\u7EC4\u4EF6\uFF0C\u5B83\u4F1A\u6E32\u67D3\u6210\u4E00\u4E2A\u771F\u5B9E\u5143\u7D20\uFF0C\u9ED8\u8BA4 <code>tag</code> \u662F <code>span</code>\u3002 <code>prevChildren</code> \u7528\u6765\u5B58\u50A8\u4E0A\u4E00\u6B21\u7684\u5B50\u8282\u70B9\uFF1B<code>children</code> \u7528\u6765\u5B58\u50A8\u5F53\u524D\u7684\u5B50\u8282\u70B9\uFF1B<code>rawChildren</code> \u8868\u793A <code>&lt;transtition-group&gt;</code> \u5305\u88F9\u7684\u539F\u59CB\u5B50\u8282\u70B9\uFF1B<code>transtionData</code> \u662F\u4ECE <code>&lt;transtition-group&gt;</code> \u7EC4\u4EF6\u4E0A\u63D0\u53D6\u51FA\u6765\u7684\u4E00\u4E9B\u6E32\u67D3\u6570\u636E\uFF0C\u8FD9\u70B9\u548C <code>&lt;transition&gt;</code> \u7EC4\u4EF6\u7684\u5B9E\u73B0\u662F\u4E00\u6837\u7684\u3002</p><ul><li>\u904D\u5386 <code>rawChidren</code>\uFF0C\u521D\u59CB\u5316 <code>children</code></li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> rawChildren<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token literal-property property">c</span><span class="token operator">:</span> VNode <span class="token operator">=</span> rawChildren<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>c<span class="token punctuation">.</span>tag<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>c<span class="token punctuation">.</span>key <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token function">String</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span>key<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&#39;__vlist&#39;</span><span class="token punctuation">)</span> <span class="token operator">!==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      children<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span>
      map<span class="token punctuation">[</span>c<span class="token punctuation">.</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> c
      <span class="token punctuation">;</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span>data <span class="token operator">||</span> <span class="token punctuation">(</span>c<span class="token punctuation">.</span>data <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>transition <span class="token operator">=</span> transitionData
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">!==</span> <span class="token string">&#39;production&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> <span class="token literal-property property">opts</span><span class="token operator">:</span> <span class="token operator">?</span>VNodeComponentOptions <span class="token operator">=</span> c<span class="token punctuation">.</span>componentOptions
      <span class="token keyword">const</span> <span class="token literal-property property">name</span><span class="token operator">:</span> string <span class="token operator">=</span> opts <span class="token operator">?</span> <span class="token punctuation">(</span>opts<span class="token punctuation">.</span>Ctor<span class="token punctuation">.</span>options<span class="token punctuation">.</span>name <span class="token operator">||</span> opts<span class="token punctuation">.</span>tag <span class="token operator">||</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span> <span class="token operator">:</span> c<span class="token punctuation">.</span>tag
      <span class="token function">warn</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&lt;transition-group&gt; children must be keyed: &lt;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&gt;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p>\u5176\u5B9E\u5C31\u662F\u5BF9 <code>rawChildren</code> \u904D\u5386\uFF0C\u62FF\u5230\u6BCF\u4E2A <code>vnode</code>\uFF0C\u7136\u540E\u4F1A\u5224\u65AD\u6BCF\u4E2A <code>vnode</code> \u662F\u5426\u8BBE\u7F6E\u4E86 <code>key</code>\uFF0C\u8FD9\u4E2A\u662F <code>&lt;transition-group&gt;</code> \u5BF9\u5217\u8868\u5143\u7D20\u7684\u8981\u6C42\u3002\u7136\u540E\u628A <code>vnode</code> \u6DFB\u52A0\u5230 <code>children</code> \u4E2D\uFF0C\u7136\u540E\u628A\u521A\u521A\u63D0\u53D6\u7684\u8FC7\u6E21\u6570\u636E <code>transitionData</code> \u6DFB\u52A0\u7684 <code>vnode.data.transition</code> \u4E2D\uFF0C\u8FD9\u70B9\u5F88\u5173\u952E\uFF0C\u53EA\u6709\u8FD9\u6837\u624D\u80FD\u5B9E\u73B0\u5217\u8868\u4E2D\u5355\u4E2A\u5143\u7D20\u7684\u8FC7\u6E21\u52A8\u753B\u3002</p><ul><li>\u5904\u7406 prevChildren</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">if</span> <span class="token punctuation">(</span>prevChildren<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token literal-property property">kept</span><span class="token operator">:</span> Array<span class="token operator">&lt;</span>VNode<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token keyword">const</span> <span class="token literal-property property">removed</span><span class="token operator">:</span> Array<span class="token operator">&lt;</span>VNode<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> prevChildren<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token literal-property property">c</span><span class="token operator">:</span> VNode <span class="token operator">=</span> prevChildren<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
    c<span class="token punctuation">.</span>data<span class="token punctuation">.</span>transition <span class="token operator">=</span> transitionData
    c<span class="token punctuation">.</span>data<span class="token punctuation">.</span>pos <span class="token operator">=</span> c<span class="token punctuation">.</span>elm<span class="token punctuation">.</span><span class="token function">getBoundingClientRect</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>map<span class="token punctuation">[</span>c<span class="token punctuation">.</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      kept<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      removed<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>kept <span class="token operator">=</span> <span class="token function">h</span><span class="token punctuation">(</span>tag<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> kept<span class="token punctuation">)</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>removed <span class="token operator">=</span> removed
<span class="token punctuation">}</span>

<span class="token keyword">return</span> <span class="token function">h</span><span class="token punctuation">(</span>tag<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> children<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><p>\u5F53\u6709 <code>prevChildren</code> \u7684\u65F6\u5019\uFF0C\u4F1A\u5BF9\u5B83\u505A\u904D\u5386\uFF0C\u83B7\u53D6\u5230\u6BCF\u4E2A <code>vnode</code>\uFF0C\u7136\u540E\u628A <code>transitionData</code> \u8D4B\u503C\u5230 <code>vnode.data.transition</code>\uFF0C\u8FD9\u4E2A\u662F\u4E3A\u4E86\u5F53\u5B83\u5728 <code>enter</code> \u548C <code>leave</code> \u7684\u94A9\u5B50\u51FD\u6570\u4E2D\u6709\u8FC7\u6E21\u52A8\u753B\uFF0C\u5728\u4E0A\u8282\u4ECB\u7ECD <code>transition</code> \u7684\u5B9E\u73B0\u4E2D\u8BF4\u8FC7\u3002\u63A5\u7740\u53C8\u8C03\u7528\u4E86\u539F\u751F DOM \u7684 <code>getBoundingClientRect</code> \u65B9\u6CD5\u83B7\u53D6\u5230\u539F\u751F DOM \u7684\u4F4D\u7F6E\u4FE1\u606F\uFF0C\u8BB0\u5F55\u5230 <code>vnode.data.pos</code> \u4E2D\uFF0C\u7136\u540E\u5224\u65AD\u4E00\u4E0B <code>vnode.key</code> \u662F\u5426\u5728 <code>map</code> \u4E2D\uFF0C\u5982\u679C\u5728\u5219\u653E\u5165 <code>kept</code> \u4E2D\uFF0C\u5426\u5219\u8868\u793A\u8BE5\u8282\u70B9\u5DF2\u88AB\u5220\u9664\uFF0C\u653E\u5165 <code>removed</code> \u4E2D\uFF0C\u7136\u540E\u901A\u8FC7\u6267\u884C <code>h(tag, null, kept)</code> \u6E32\u67D3\u540E\u653E\u5165 <code>this.kept</code> \u4E2D\uFF0C\u628A <code>removed</code> \u7528 <code>this.removed</code> \u4FDD\u5B58\u3002\u6700\u540E\u6574\u4E2A <code>render</code> \u51FD\u6570\u901A\u8FC7 <code>h(tag, null, children)</code> \u751F\u6210\u6E32\u67D3 <code>vnode</code>\u3002</p><p>\u5982\u679C <code>transition-group</code> \u53EA\u5B9E\u73B0\u4E86\u8FD9\u4E2A <code>render</code> \u51FD\u6570\uFF0C\u90A3\u4E48\u6BCF\u6B21\u63D2\u5165\u548C\u5220\u9664\u7684\u5143\u7D20\u7684\u7F13\u52A8\u52A8\u753B\u662F\u53EF\u4EE5\u5B9E\u73B0\u7684\uFF0C\u5728\u7684\u4F8B\u5B50\u4E2D\uFF0C\u5F53\u65B0\u589E\u4E00\u4E2A\u5143\u7D20\uFF0C\u5B83\u7684\u63D2\u5165\u7684\u8FC7\u6E21\u52A8\u753B\u662F\u6709\u7684\uFF0C\u4F46\u662F\u5269\u4F59\u5143\u7D20\u5E73\u79FB\u7684\u8FC7\u6E21\u6548\u679C\u662F\u51FA\u4E0D\u6765\u7684\uFF0C\u6240\u4EE5\u63A5\u4E0B\u6765\u6765\u5206\u6790 <code>&lt;transition-group&gt;</code> \u7EC4\u4EF6\u662F\u5982\u4F55\u5B9E\u73B0\u5269\u4F59\u5143\u7D20\u5E73\u79FB\u7684\u8FC7\u6E21\u6548\u679C\u7684\u3002</p><h2 id="move-\u8FC7\u6E21\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#move-\u8FC7\u6E21\u5B9E\u73B0" aria-hidden="true">#</a> move \u8FC7\u6E21\u5B9E\u73B0</h2><p>\u5176\u5B9E\u5728\u5B9E\u73B0\u5143\u7D20\u7684\u63D2\u5165\u548C\u5220\u9664\uFF0C\u65E0\u975E\u5C31\u662F\u64CD\u4F5C\u6570\u636E\uFF0C\u63A7\u5236\u5B83\u4EEC\u7684\u6DFB\u52A0\u548C\u5220\u9664\u3002\u6BD4\u5982\u65B0\u589E\u6570\u636E\u7684\u65F6\u5019\uFF0C\u4F1A\u6DFB\u52A0\u4E00\u6761\u6570\u636E\uFF0C\u9664\u4E86\u91CD\u65B0\u6267\u884C <code>render</code> \u51FD\u6570\u6E32\u67D3\u65B0\u7684\u8282\u70B9\u5916\uFF0C\u8FD8\u8981\u89E6\u53D1 <code>updated</code> \u94A9\u5B50\u51FD\u6570\uFF0C\u63A5\u7740\u5C31\u6765\u5206\u6790 <code>updated</code> \u94A9\u5B50\u51FD\u6570\u7684\u5B9E\u73B0\u3002</p><ul><li>\u5224\u65AD\u5B50\u5143\u7D20\u662F\u5426\u5B9A\u4E49 <code>move</code> \u76F8\u5173\u6837\u5F0F</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token literal-property property">children</span><span class="token operator">:</span> Array<span class="token operator">&lt;</span>VNode<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>prevChildren
<span class="token keyword">const</span> <span class="token literal-property property">moveClass</span><span class="token operator">:</span> string <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>moveClass <span class="token operator">||</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">||</span> <span class="token string">&#39;v&#39;</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&#39;-move&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>children<span class="token punctuation">.</span>length <span class="token operator">||</span> <span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">hasMove</span><span class="token punctuation">(</span>children<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>elm<span class="token punctuation">,</span> moveClass<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span>
<span class="token punctuation">}</span>

<span class="token function">hasMove</span> <span class="token punctuation">(</span>el<span class="token operator">:</span> any<span class="token punctuation">,</span> <span class="token literal-property property">moveClass</span><span class="token operator">:</span> string<span class="token punctuation">)</span><span class="token operator">:</span> boolean <span class="token punctuation">{</span>
  <span class="token comment">/* istanbul ignore if */</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>hasTransition<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token boolean">false</span>
  <span class="token punctuation">}</span>
  <span class="token comment">/* istanbul ignore if */</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>_hasMove<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_hasMove
  <span class="token punctuation">}</span>
  <span class="token comment">// Detect whether an element with the move class applied has</span>
  <span class="token comment">// CSS transitions. Since the element may be inside an entering</span>
  <span class="token comment">// transition at this very moment, we make a clone of it and remove</span>
  <span class="token comment">// all other transition classes applied to ensure only the move class</span>
  <span class="token comment">// is applied.</span>
  <span class="token keyword">const</span> <span class="token literal-property property">clone</span><span class="token operator">:</span> HTMLElement <span class="token operator">=</span> el<span class="token punctuation">.</span><span class="token function">cloneNode</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>el<span class="token punctuation">.</span>_transitionClasses<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    el<span class="token punctuation">.</span>_transitionClasses<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">cls</span><span class="token operator">:</span> string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> <span class="token function">removeClass</span><span class="token punctuation">(</span>clone<span class="token punctuation">,</span> cls<span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token function">addClass</span><span class="token punctuation">(</span>clone<span class="token punctuation">,</span> moveClass<span class="token punctuation">)</span>
  clone<span class="token punctuation">.</span>style<span class="token punctuation">.</span>display <span class="token operator">=</span> <span class="token string">&#39;none&#39;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>$el<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>clone<span class="token punctuation">)</span>
  <span class="token keyword">const</span> <span class="token literal-property property">info</span><span class="token operator">:</span> Object <span class="token operator">=</span> <span class="token function">getTransitionInfo</span><span class="token punctuation">(</span>clone<span class="token punctuation">)</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>$el<span class="token punctuation">.</span><span class="token function">removeChild</span><span class="token punctuation">(</span>clone<span class="token punctuation">)</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>_hasMove <span class="token operator">=</span> info<span class="token punctuation">.</span>hasTransform<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br></div></div><p>\u6838\u5FC3\u5C31\u662F <code>hasMove</code> \u7684\u5224\u65AD\uFF0C\u9996\u5148\u514B\u9686\u4E00\u4E2A DOM \u8282\u70B9\uFF0C\u7136\u540E\u4E3A\u4E86\u907F\u514D\u5F71\u54CD\uFF0C\u79FB\u9664\u5B83\u7684\u6240\u6709\u5176\u4ED6\u7684\u8FC7\u6E21 <code>Class</code>\uFF1B\u63A5\u7740\u6DFB\u52A0\u4E86 <code>moveClass</code> \u6837\u5F0F\uFF0C\u8BBE\u7F6E <code>display</code> \u4E3A <code>none</code>\uFF0C\u6DFB\u52A0\u5230\u7EC4\u4EF6\u6839\u8282\u70B9\u4E0A\uFF1B\u63A5\u4E0B\u6765\u901A\u8FC7 <code>getTransitionInfo</code> \u83B7\u53D6\u5B83\u7684\u4E00\u4E9B\u7F13\u52A8\u76F8\u5173\u7684\u4FE1\u606F\uFF0C\u8FD9\u4E2A\u51FD\u6570\u5728\u4E0A\u4E00\u8282\u4E5F\u4ECB\u7ECD\u8FC7\uFF0C\u7136\u540E\u4ECE\u7EC4\u4EF6\u6839\u8282\u70B9\u4E0A\u5220\u9664\u8FD9\u4E2A\u514B\u9686\u8282\u70B9\uFF0C\u5E76\u901A\u8FC7\u5224\u65AD <code>info.hasTransform</code> \u6765\u5224\u65AD <code>hasMove</code>\uFF0C\u5728\u7684\u4F8B\u5B50\u4E2D\uFF0C\u8BE5\u503C\u4E3A <code>true</code>\u3002</p><ul><li>\u5B50\u8282\u70B9\u9884\u5904\u7406</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>children<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>callPendingCbs<span class="token punctuation">)</span>
children<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>recordPosition<span class="token punctuation">)</span>
children<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>applyTranslation<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u5BF9 <code>children</code> \u505A\u4E86 3 \u8F6E\u5FAA\u73AF\uFF0C\u5206\u522B\u505A\u4E86\u5982\u4E0B\u4E00\u4E9B\u5904\u7406\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">callPendingCbs</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">c</span><span class="token operator">:</span> VNode</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>c<span class="token punctuation">.</span>elm<span class="token punctuation">.</span>_moveCb<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    c<span class="token punctuation">.</span>elm<span class="token punctuation">.</span><span class="token function">_moveCb</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>c<span class="token punctuation">.</span>elm<span class="token punctuation">.</span>_enterCb<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    c<span class="token punctuation">.</span>elm<span class="token punctuation">.</span><span class="token function">_enterCb</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">recordPosition</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">c</span><span class="token operator">:</span> VNode</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  c<span class="token punctuation">.</span>data<span class="token punctuation">.</span>newPos <span class="token operator">=</span> c<span class="token punctuation">.</span>elm<span class="token punctuation">.</span><span class="token function">getBoundingClientRect</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">applyTranslation</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">c</span><span class="token operator">:</span> VNode</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> oldPos <span class="token operator">=</span> c<span class="token punctuation">.</span>data<span class="token punctuation">.</span>pos
  <span class="token keyword">const</span> newPos <span class="token operator">=</span> c<span class="token punctuation">.</span>data<span class="token punctuation">.</span>newPos
  <span class="token keyword">const</span> dx <span class="token operator">=</span> oldPos<span class="token punctuation">.</span>left <span class="token operator">-</span> newPos<span class="token punctuation">.</span>left
  <span class="token keyword">const</span> dy <span class="token operator">=</span> oldPos<span class="token punctuation">.</span>top <span class="token operator">-</span> newPos<span class="token punctuation">.</span>top
  <span class="token keyword">if</span> <span class="token punctuation">(</span>dx <span class="token operator">||</span> dy<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    c<span class="token punctuation">.</span>data<span class="token punctuation">.</span>moved <span class="token operator">=</span> <span class="token boolean">true</span>
    <span class="token keyword">const</span> s <span class="token operator">=</span> c<span class="token punctuation">.</span>elm<span class="token punctuation">.</span>style
    s<span class="token punctuation">.</span>transform <span class="token operator">=</span> s<span class="token punctuation">.</span>WebkitTransform <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">translate(</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>dx<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">px,</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>dy<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">px)</span><span class="token template-punctuation string">\`</span></span>
    s<span class="token punctuation">.</span>transitionDuration <span class="token operator">=</span> <span class="token string">&#39;0s&#39;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><p><code>callPendingCbs</code> \u65B9\u6CD5\u662F\u5728\u524D\u4E00\u4E2A\u8FC7\u6E21\u52A8\u753B\u6CA1\u6267\u884C\u5B8C\u53C8\u518D\u6B21\u6267\u884C\u5230\u8BE5\u65B9\u6CD5\u7684\u65F6\u5019\uFF0C\u4F1A\u63D0\u524D\u6267\u884C <code>_moveCb</code> \u548C <code>_enterCb</code>\u3002</p><p><code>recordPosition</code> \u7684\u4F5C\u7528\u662F\u8BB0\u5F55\u8282\u70B9\u7684\u65B0\u4F4D\u7F6E\u3002</p><p><code>applyTranslation</code> \u7684\u4F5C\u7528\u662F\u5148\u8BA1\u7B97\u8282\u70B9\u65B0\u4F4D\u7F6E\u548C\u65E7\u4F4D\u7F6E\u7684\u5DEE\u503C\uFF0C\u5982\u679C\u5DEE\u503C\u4E0D\u4E3A 0\uFF0C\u5219\u8BF4\u660E\u8FD9\u4E9B\u8282\u70B9\u662F\u9700\u8981\u79FB\u52A8\u7684\uFF0C\u6240\u4EE5\u8BB0\u5F55 <code>vnode.data.moved</code> \u4E3A true\uFF0C\u5E76\u4E14\u901A\u8FC7\u8BBE\u7F6E <code>transform</code> \u628A\u9700\u8981\u79FB\u52A8\u7684\u8282\u70B9\u7684\u4F4D\u7F6E\u53C8\u504F\u79FB\u5230\u4E4B\u524D\u7684\u65E7\u4F4D\u7F6E\uFF0C\u76EE\u7684\u662F\u4E3A\u4E86\u505A <code>move</code> \u7F13\u52A8\u505A\u51C6\u5907\u3002</p><ul><li>\u904D\u5386\u5B50\u5143\u7D20\u5B9E\u73B0 move \u8FC7\u6E21</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">this</span><span class="token punctuation">.</span>_reflow <span class="token operator">=</span> document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>offsetHeight

children<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">c</span><span class="token operator">:</span> VNode</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>c<span class="token punctuation">.</span>data<span class="token punctuation">.</span>moved<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> <span class="token literal-property property">el</span><span class="token operator">:</span> any <span class="token operator">=</span> c<span class="token punctuation">.</span>elm
    <span class="token keyword">var</span> <span class="token literal-property property">s</span><span class="token operator">:</span> any <span class="token operator">=</span> el<span class="token punctuation">.</span>style
    <span class="token function">addTransitionClass</span><span class="token punctuation">(</span>el<span class="token punctuation">,</span> moveClass<span class="token punctuation">)</span>
    s<span class="token punctuation">.</span>transform <span class="token operator">=</span> s<span class="token punctuation">.</span>WebkitTransform <span class="token operator">=</span> s<span class="token punctuation">.</span>transitionDuration <span class="token operator">=</span> <span class="token string">&#39;&#39;</span>
    el<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span>transitionEndEvent<span class="token punctuation">,</span> el<span class="token punctuation">.</span><span class="token function-variable function">_moveCb</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">cb</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>e <span class="token operator">||</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">transform$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>propertyName<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        el<span class="token punctuation">.</span><span class="token function">removeEventListener</span><span class="token punctuation">(</span>transitionEndEvent<span class="token punctuation">,</span> cb<span class="token punctuation">)</span>
        el<span class="token punctuation">.</span>_moveCb <span class="token operator">=</span> <span class="token keyword">null</span>
        <span class="token function">removeTransitionClass</span><span class="token punctuation">(</span>el<span class="token punctuation">,</span> moveClass<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p>\u9996\u5148\u901A\u8FC7 <code>document.body.offsetHeight</code> \u5F3A\u5236\u89E6\u53D1\u6D4F\u89C8\u5668\u91CD\u7ED8\uFF0C\u63A5\u7740\u518D\u6B21\u5BF9 <code>children</code> \u904D\u5386\uFF0C\u5148\u7ED9\u5B50\u8282\u70B9\u6DFB\u52A0 <code>moveClass</code>\uFF0C\u5728\u7684\u4F8B\u5B50\u4E2D\uFF0C<code>moveClass</code> \u5B9A\u4E49\u4E86 <code>transition: all 1s;</code> \u7F13\u52A8\uFF1B\u63A5\u7740\u628A\u5B50\u8282\u70B9\u7684 <code>style.transform</code> \u8BBE\u7F6E\u4E3A\u7A7A\uFF0C\u7531\u4E8E\u524D\u9762\u628A\u8FD9\u4E9B\u8282\u70B9\u504F\u79FB\u5230\u4E4B\u524D\u7684\u65E7\u4F4D\u7F6E\uFF0C\u6240\u4EE5\u5B83\u5C31\u4F1A\u4ECE\u65E7\u4F4D\u7F6E\u6309\u7167 <code>1s</code> \u7684\u7F13\u52A8\u65F6\u95F4\u8FC7\u6E21\u504F\u79FB\u5230\u5B83\u7684\u5F53\u524D\u76EE\u6807\u4F4D\u7F6E\uFF0C\u8FD9\u6837\u5C31\u5B9E\u73B0\u4E86 move \u7684\u8FC7\u6E21\u52A8\u753B\u3002\u5E76\u4E14\u63A5\u4E0B\u6765\u4F1A\u76D1\u542C <code>transitionEndEvent</code> \u8FC7\u6E21\u7ED3\u675F\u7684\u4E8B\u4EF6\uFF0C\u505A\u4E00\u4E9B\u6E05\u7406\u7684\u64CD\u4F5C\u3002</p><p>\u53E6\u5916\uFF0C\u7531\u4E8E\u865A\u62DF DOM \u7684\u5B50\u5143\u7D20\u66F4\u65B0\u7B97\u6CD5\u662F\u4E0D\u7A33\u5B9A\u7684\uFF0C\u5B83\u4E0D\u80FD\u4FDD\u8BC1\u88AB\u79FB\u9664\u5143\u7D20\u7684\u76F8\u5BF9\u4F4D\u7F6E\uFF0C\u6240\u4EE5\u5F3A\u5236 <code>&lt;transition-group&gt;</code> \u7EC4\u4EF6\u66F4\u65B0\u5B50\u8282\u70B9\u901A\u8FC7 2 \u4E2A\u6B65\u9AA4\uFF1A\u7B2C\u4E00\u6B65\u79FB\u9664\u9700\u8981\u79FB\u9664\u7684 <code>vnode</code>\uFF0C\u540C\u65F6\u89E6\u53D1\u5B83\u4EEC\u7684 <code>leaving</code> \u8FC7\u6E21\uFF1B\u7B2C\u4E8C\u6B65\u9700\u8981\u628A\u63D2\u5165\u548C\u79FB\u52A8\u7684\u8282\u70B9\u8FBE\u5230\u5B83\u4EEC\u7684\u6700\u7EC8\u6001\uFF0C\u540C\u65F6\u8FD8\u8981\u4FDD\u8BC1\u79FB\u9664\u7684\u8282\u70B9\u4FDD\u7559\u5728\u5E94\u8BE5\u7684\u4F4D\u7F6E\uFF0C\u800C\u8FD9\u4E2A\u662F\u901A\u8FC7 <code>beforeMount</code> \u94A9\u5B50\u51FD\u6570\u6765\u5B9E\u73B0\u7684\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">beforeMount</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> update <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_update
  <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function-variable function">_update</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">vnode<span class="token punctuation">,</span> hydrating</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// force removing pass</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">__patch__</span><span class="token punctuation">(</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>_vnode<span class="token punctuation">,</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>kept<span class="token punctuation">,</span>
      <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">// hydrating</span>
      <span class="token boolean">true</span> <span class="token comment">// removeOnly (!important, avoids unnecessary moves)</span>
    <span class="token punctuation">)</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>_vnode <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>kept
    <span class="token function">update</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> vnode<span class="token punctuation">,</span> hydrating<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p>\u901A\u8FC7\u628A <code>__patch__</code> \u65B9\u6CD5\u7684\u7B2C\u56DB\u4E2A\u53C2\u6570 <code>removeOnly</code> \u8BBE\u7F6E\u4E3A true\uFF0C\u8FD9\u6837\u5728 <code>updateChildren</code> \u9636\u6BB5\uFF0C\u662F\u4E0D\u4F1A\u79FB\u52A8 <code>vnode</code> \u8282\u70B9\u7684\u3002</p><h2 id="\u603B\u7ED3" tabindex="-1"><a class="header-anchor" href="#\u603B\u7ED3" aria-hidden="true">#</a> \u603B\u7ED3</h2><p>\u90A3\u4E48\u5230\u6B64\uFF0C<code>&lt;transtion-group&gt;</code> \u7EC4\u4EF6\u7684\u5B9E\u73B0\u539F\u7406\u5C31\u4ECB\u7ECD\u5B8C\u6BD5\u4E86\uFF0C\u5B83\u548C <code>&lt;transition&gt;</code> \u7EC4\u4EF6\u76F8\u6BD4\uFF0C\u5B9E\u73B0\u4E86\u5217\u8868\u7684\u8FC7\u6E21\uFF0C\u4EE5\u53CA\u5B83\u4F1A\u6E32\u67D3\u6210\u771F\u5B9E\u7684\u5143\u7D20\u3002\u5F53\u53BB\u4FEE\u6539\u5217\u8868\u7684\u6570\u636E\u7684\u65F6\u5019\uFF0C\u5982\u679C\u662F\u6DFB\u52A0\u6216\u8005\u5220\u9664\u6570\u636E\uFF0C\u5219\u4F1A\u89E6\u53D1\u76F8\u5E94\u5143\u7D20\u672C\u8EAB\u7684\u8FC7\u6E21\u52A8\u753B\uFF0C\u8FD9\u70B9\u548C <code>&lt;transition&gt;</code> \u7EC4\u4EF6\u5B9E\u73B0\u6548\u679C\u4E00\u6837\uFF0C\u9664\u6B64\u4E4B\u5916 <code>&lt;transtion-group&gt;</code> \u8FD8\u5B9E\u73B0\u4E86 move \u7684\u8FC7\u6E21\u6548\u679C\uFF0C\u8BA9\u7684\u5217\u8868\u8FC7\u6E21\u52A8\u753B\u66F4\u52A0\u4E30\u5BCC\u3002</p>`,40);function t(o,e){return p}var r=s(a,[["render",t]]);export{r as default};
