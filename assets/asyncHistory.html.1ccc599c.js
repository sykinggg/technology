import{o as a,c as p,b as n,F as t,e,a as o}from"./app.ba47fc91.js";import{_ as c}from"./plugin-vue_export-helper.21dcd24c.js";const l={},u=n("h1",{id:"js-\u5F02\u6B65\u5386\u53F2",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#js-\u5F02\u6B65\u5386\u53F2","aria-hidden":"true"},"#"),e(" js \u5F02\u6B65\u5386\u53F2")],-1),r=["src"],i=o(`<p>\u5982\u679C\u4E00\u4E2A\u51FD\u6570\u65E0\u6CD5\u7ACB\u5373\u8FD4\u56DE value\uFF0C\u800C\u662F\u7ECF\u8FC7\u4E00\u6BB5\u4E0D\u53EF\u9884\u6D4B\u7684\u884C\u4E3A\u65F6\u95F4\u4E4B\u540E\uFF08\u526F\u4F5C\u7528\uFF09\uFF0C\u624D\u80FD\u5F97\u5230 value</p><h2 id="\u95EE\u9898\u4EA7\u751F" tabindex="-1"><a class="header-anchor" href="#\u95EE\u9898\u4EA7\u751F" aria-hidden="true">#</a> \u95EE\u9898\u4EA7\u751F</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">ordinary</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> i <span class="token operator">=</span> value
  <span class="token comment">// ...</span>
  <span class="token keyword">return</span> value
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">sideEffect</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> value <span class="token operator">=</span> <span class="token number">1</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> value
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">ordinary</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// 1</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">sideEffect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// undefined</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h3 id="\u56DE\u8C03\u51FD\u6570\u89E3\u51B3\u95EE\u9898" tabindex="-1"><a class="header-anchor" href="#\u56DE\u8C03\u51FD\u6570\u89E3\u51B3\u95EE\u9898" aria-hidden="true">#</a> \u56DE\u8C03\u51FD\u6570\u89E3\u51B3\u95EE\u9898</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">sideEffect</span> <span class="token punctuation">(</span><span class="token parameter">callback</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> value <span class="token operator">=</span> <span class="token number">1</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
    <span class="token function">callback</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token function">sideEffect</span><span class="token punctuation">(</span><span class="token parameter">value</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token comment">// 1</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><blockquote><p>callback \u8BA9\u62E5\u6709\u4E86\u83B7\u53D6\u4E0D\u53EF\u9884\u6D4B\u884C\u4E3A\u7ED3\u679C\u7684\u80FD\u529B \u8FD9\u5F97\u76CA\u4E8E JavaScript \u51FD\u6570\u662F\u4E00\u7B49\u516C\u6C11</p></blockquote><h2 id="\u5F15\u5165\u7684\u65B0\u95EE\u9898" tabindex="-1"><a class="header-anchor" href="#\u5F15\u5165\u7684\u65B0\u95EE\u9898" aria-hidden="true">#</a> \u5F15\u5165\u7684\u65B0\u95EE\u9898</h2><p>\u4F46\u662F <code>callback</code> \u5E26\u6765\u4E86\u5F88\u4E25\u91CD\u7684\u8BED\u6CD5\u5C42\u9762\u4E0A\u7684\u95EE\u9898</p><h3 id="callback-\u5730\u72F1" tabindex="-1"><a class="header-anchor" href="#callback-\u5730\u72F1" aria-hidden="true">#</a> callback \u5730\u72F1</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">getData</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">a</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">getMoreData</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">b</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">getMoreData</span><span class="token punctuation">(</span>b<span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">c</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">getMoreData</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">d</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// ...</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h3 id="\u89E3\u51B3\u65B9\u6848" tabindex="-1"><a class="header-anchor" href="#\u89E3\u51B3\u65B9\u6848" aria-hidden="true">#</a> \u89E3\u51B3\u65B9\u6848</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u9700\u8981\u5408\u7406\u7684\u5C01\u88C5\u548C\u7B80\u5316\uFF0C\u8FD9\u9700\u8981\u5F00\u53D1\u4EBA\u5458\u81EA\u8EAB\u7684\u6C34\u5E73\u548C\u8BA4\u77E5\u51B3\u5B9A</span>
<span class="token keyword">function</span> <span class="token function">fn</span> <span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> cb</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">getMoreData</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">b</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">getMoreData</span><span class="token punctuation">(</span>b<span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">c</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">getMoreData</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">d</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">cb</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u901A\u8FC7\u5C42\u5C42\u5C01\u88C5\uFF0C\u62BD\u8C61\u51FA\u6A21\u5757\u548C\u901A\u7528\u7684\u7C7B\u6765\u4FDD\u8BC1\u4EE3\u7801\u662F\u6D45\u5C42\u7684</span>
<span class="token function">getData</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">a</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">fn</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">d</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><h2 id="js-\u540E\u7EED\u7248\u672C\u7740\u624B\u89E3\u51B3" tabindex="-1"><a class="header-anchor" href="#js-\u540E\u7EED\u7248\u672C\u7740\u624B\u89E3\u51B3" aria-hidden="true">#</a> js \u540E\u7EED\u7248\u672C\u7740\u624B\u89E3\u51B3</h2><blockquote><p>\u793E\u533A\u9646\u7EED\u51FA\u6765\u4E86 <code>promise</code> \u548C\u7C7B <code>promise</code> \u7684\u65B9\u6848 JQuery1.5 \u4E2D\u5C31\u6709\u4E86 <code>deferred</code> \u7684\u6982\u5FF5</p></blockquote><h3 id="\u901A\u8FC7-promise-\u7684\u5F62\u5F0F\u91CD\u5199" tabindex="-1"><a class="header-anchor" href="#\u901A\u8FC7-promise-\u7684\u5F62\u5F0F\u91CD\u5199" aria-hidden="true">#</a> \u901A\u8FC7 promise \u7684\u5F62\u5F0F\u91CD\u5199</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u5C06 callback \u53D8\u6210\u4E86\u4E00\u79CD\u6241\u5E73\u5316\u7684\u7ED3\u6784</span>
<span class="token comment">// \u76F8\u5BF9\u4E8E callback \u662F\u66F4\u52A0\u540C\u6B65\u7684\u601D\u7EF4\u5C06\u4EE3\u7801\u7ED3\u6784\u94FA\u5F00\u6765</span>

<span class="token function">getData</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>getMoreData<span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>getMoreData<span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>getMoreData<span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">d</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h3 id="deferred-promise" tabindex="-1"><a class="header-anchor" href="#deferred-promise" aria-hidden="true">#</a> deferred &amp;&amp; promise</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// deferred</span>
deferred<span class="token punctuation">.</span>promise<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">v</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  deferred<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&#39;tao&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">)</span>

<span class="token comment">// promise</span>
<span class="token keyword">const</span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token parameter">resolve</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&#39;tao&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
p<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">v</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h3 id="\u4E3A\u4EC0\u4E48\u9009\u62E9\u4E86-promise" tabindex="-1"><a class="header-anchor" href="#\u4E3A\u4EC0\u4E48\u9009\u62E9\u4E86-promise" aria-hidden="true">#</a> \u4E3A\u4EC0\u4E48\u9009\u62E9\u4E86 promise</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u4E0D\u4F1A\u6355\u6349\u5230\u9519\u8BEF</span>
deferred<span class="token punctuation">.</span>promise<span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">reason</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>reason<span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">throw</span> <span class="token string">&#39;error&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// promise \u7531\u4E8E\u662F\u81EA\u6267\u884C\uFF0C\u81EA\u52A8\u6355\u6349\u5F02\u5E38</span>
<span class="token keyword">const</span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">throw</span> <span class="token string">&#39;error&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

p<span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">reason</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>reason<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><blockquote><p><strong>promise</strong> \u9996\u5148\u5E94\u8BE5\u662F\u4E00\u4E2A\u5F02\u6B65\u6D41\u7A0B\u63A7\u5236\u7684\u89E3\u51B3\u65B9\u6848\uFF0C\u6D41\u7A0B\u63A7\u5236\u5305\u62EC\u4E86\u6B63\u5E38\u7684\u6570\u636E\u6D41\u548C\u5F02\u5E38\u6D41\u7A0B\u5904\u7406 <strong>deferred</strong> \u7684\u65B9\u5F0F\u5B58\u5728\u4E00\u4E2A\u81F4\u547D\u7684\u7F3A\u9677 \u5C31\u662F <strong>promise</strong> \u94FE\u7684\u7B2C\u4E00\u4E2A <code>promise\uFF08deferred.promise\uFF09</code>\u7684\u89E6\u53D1\u9636\u6BB5\u629B\u51FA\u7684\u5F02\u5E38\u662F\u4E0D\u4EA4\u7531 <code>promise</code> \u81EA\u52A8\u5904\u7406\u7684</p></blockquote><h3 id="deferred" tabindex="-1"><a class="header-anchor" href="#deferred" aria-hidden="true">#</a> deferred</h3><blockquote><p><code>deferred</code> \u5BF9\u8C61\u5176\u5B9E\u5C31\u662F\u4E00\u4E2A\u53D1\u5E03/\u8BA2\u9605\u6A21\u5F0F</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">createDeferred</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> resolve<span class="token punctuation">,</span> reject

  <span class="token keyword">const</span> promise <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">_resolve<span class="token punctuation">,</span> _reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    resolve <span class="token operator">=</span> _resolve
    reject <span class="token operator">=</span> _reject
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span> promise<span class="token punctuation">,</span> resolve<span class="token punctuation">,</span> reject <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h2 id="\u4EA7\u751F\u65B0\u7684\u95EE\u9898" tabindex="-1"><a class="header-anchor" href="#\u4EA7\u751F\u65B0\u7684\u95EE\u9898" aria-hidden="true">#</a> \u4EA7\u751F\u65B0\u7684\u95EE\u9898</h2><h3 id="promise-\u94FE\u5F0F\u8C03\u7528\u7684\u8BED\u6CD5\u8FD8\u662F\u4E0D\u591F\u540C\u6B65-\u600E\u4E48\u529E" tabindex="-1"><a class="header-anchor" href="#promise-\u94FE\u5F0F\u8C03\u7528\u7684\u8BED\u6CD5\u8FD8\u662F\u4E0D\u591F\u540C\u6B65-\u600E\u4E48\u529E" aria-hidden="true">#</a> promise \u94FE\u5F0F\u8C03\u7528\u7684\u8BED\u6CD5\u8FD8\u662F\u4E0D\u591F\u540C\u6B65\uFF0C\u600E\u4E48\u529E</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">getData</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token parameter">resolve</span> <span class="token operator">=&gt;</span> <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> <span class="token function-variable function">getMoreData</span> <span class="token operator">=</span> <span class="token parameter">value</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> value <span class="token operator">+</span> <span class="token number">1</span>
<span class="token punctuation">}</span>

<span class="token function">getData</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>getMoreData<span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>getMoreData<span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>getMoreData<span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">value</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token comment">// 4</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h3 id="\u89E3\u51B3\u65B9\u6848-generator" tabindex="-1"><a class="header-anchor" href="#\u89E3\u51B3\u65B9\u6848-generator" aria-hidden="true">#</a> \u89E3\u51B3\u65B9\u6848 generator</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> gen <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token keyword">yield</span> <span class="token number">1</span>
<span class="token keyword">const</span> b <span class="token operator">=</span> <span class="token keyword">yield</span> a <span class="token operator">+</span> <span class="token number">1</span>
<span class="token keyword">const</span> c <span class="token operator">=</span> <span class="token keyword">yield</span> b <span class="token operator">+</span> <span class="token number">1</span>
<span class="token keyword">const</span> d <span class="token operator">=</span> <span class="token keyword">yield</span> c <span class="token operator">+</span> <span class="token number">1</span>
<span class="token keyword">return</span> d
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> a <span class="token operator">=</span> gen<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> b <span class="token operator">=</span> gen<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>value<span class="token punctuation">)</span>
<span class="token keyword">const</span> c <span class="token operator">=</span> gen<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span>b<span class="token punctuation">.</span>value<span class="token punctuation">)</span>
<span class="token keyword">const</span> d <span class="token operator">=</span> gen<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span>value<span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>d<span class="token punctuation">.</span>value<span class="token punctuation">)</span> <span class="token comment">// 4</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h3 id="\u5F15\u7533\u7684\u95EE\u9898" tabindex="-1"><a class="header-anchor" href="#\u5F15\u7533\u7684\u95EE\u9898" aria-hidden="true">#</a> \u5F15\u7533\u7684\u95EE\u9898</h3><blockquote><p>\u4F46\u662F\u9700\u8981\u624B\u52A8\u8C03\u7528 <code>gen.next()</code></p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u5C01\u88C5\u57FA\u4E8Egenerator \u5C01\u88C5Promise</span>
<span class="token keyword">function</span> <span class="token function">co</span> <span class="token punctuation">(</span><span class="token parameter">fn<span class="token punctuation">,</span> <span class="token operator">...</span>args</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> gen <span class="token operator">=</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token punctuation">)</span>

    <span class="token keyword">function</span> <span class="token function">next</span> <span class="token punctuation">(</span><span class="token parameter">result</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token operator">...</span> <span class="token punctuation">}</span>

    <span class="token keyword">function</span> <span class="token function">onFulfilled</span> <span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token operator">...</span> <span class="token punctuation">}</span>

    <span class="token keyword">function</span> <span class="token function">onRejected</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token operator">...</span> <span class="token punctuation">}</span>

    <span class="token function">onFulfilled</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u81EA\u52A8\u8C03\u7528 gen.next()</span>
<span class="token comment">// \u7136\u540E\u8C03\u7528 next() \u5C06\u7ED3\u679C\u4F20\u5165\u5230 generator \u5BF9\u8C61\u5185\u90E8</span>
<span class="token keyword">function</span> <span class="token function">onFulfilled</span> <span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> result

  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    result <span class="token operator">=</span> gen<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>
    <span class="token function">next</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">reject</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u53D1\u751F\u9519\u8BEF\u8C03\u7528 gen.throw()</span>
<span class="token comment">// \u8FD9\u53EF\u4EE5\u8BA9 generator \u51FD\u6570\u5185\u90E8\u7684 try/catch \u6355\u83B7\u5230</span>
<span class="token keyword">function</span> <span class="token function">onRejected</span> <span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> result

  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    result <span class="token operator">=</span> gen<span class="token punctuation">.</span><span class="token function">throw</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
    <span class="token function">next</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">reject</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u63A5\u53D7\u5230\u7ED3\u679C\u540E\u518D\u6B21\u8C03\u7528 onFulfilled</span>
<span class="token comment">// \u7EE7\u7EED\u6267\u884C generator \u5185\u90E8\u7684\u4EE3\u7801</span>
<span class="token keyword">function</span> <span class="token function">next</span> <span class="token punctuation">(</span><span class="token parameter">result</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> value <span class="token operator">=</span> result<span class="token punctuation">.</span>value
  <span class="token keyword">if</span> <span class="token punctuation">(</span>result<span class="token punctuation">.</span>done<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token function">resolve</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>

  <span class="token comment">// \u5982\u679C\u662F generator \u51FD\u6570\uFF0C\u7B49\u5F85\u6574\u4E2A generator \u51FD\u6570\u6267\u884C\u5B8C\u6BD5</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>
      value <span class="token operator">&amp;&amp;</span> value<span class="token punctuation">.</span>constructor <span class="token operator">&amp;&amp;</span> 
      value<span class="token punctuation">.</span>constructor<span class="token punctuation">.</span>name <span class="token operator">===</span> <span class="token string">&#39;GeneratorFunction&#39;</span>
  <span class="token punctuation">)</span> <span class="token punctuation">{</span>
    value <span class="token operator">=</span> <span class="token function">co</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \u8F6C\u4E3A promise</span>
  Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>onFulfilled<span class="token punctuation">,</span> onRejected<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br></div></div><h3 id="\u89E3\u51B3\u65B9\u6848\u63CF\u8FF0" tabindex="-1"><a class="header-anchor" href="#\u89E3\u51B3\u65B9\u6848\u63CF\u8FF0" aria-hidden="true">#</a> \u89E3\u51B3\u65B9\u6848\u63CF\u8FF0</h3><blockquote><p>\u5728\u8FD9\u4E2A\u540D\u53EB <code>co</code> \u7684\u81EA\u6267\u884C\u51FD\u6570\u91CC\u9762 <code>onFulfilled</code> \u8C03\u7528 <code>next</code><code>next</code> \u8C03\u7528 <code>onFulfilled</code> \u8FD9\u6837\u5C31\u5F62\u6210\u4E00\u4E2A\u81EA\u6267\u884C\u5668\uFF0C\u53EA\u6709\u5F53\u4EE3\u7801\u5168\u90E8\u6267\u884C\u5B8C\u6BD5\u540E\u624D\u4F1A\u7EC8\u6B62</p></blockquote><h3 id="demo-1" tabindex="-1"><a class="header-anchor" href="#demo-1" aria-hidden="true">#</a> demo 1</h3><blockquote><p>\u6D41\u7A0B\u5904\u7406</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> ret <span class="token operator">=</span> <span class="token function">co</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token keyword">yield</span> <span class="token number">1</span>
  <span class="token keyword">const</span> b <span class="token operator">=</span> <span class="token keyword">yield</span> a <span class="token operator">+</span> <span class="token number">1</span>
  <span class="token keyword">const</span> c <span class="token operator">=</span> <span class="token keyword">yield</span> b <span class="token operator">+</span> <span class="token number">1</span>
  <span class="token keyword">const</span> d <span class="token operator">=</span> <span class="token keyword">yield</span> c <span class="token operator">+</span> <span class="token number">1</span>
  <span class="token keyword">return</span> d
<span class="token punctuation">}</span><span class="token punctuation">)</span>
ret<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">v</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// 4</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h3 id="demo-2" tabindex="-1"><a class="header-anchor" href="#demo-2" aria-hidden="true">#</a> demo 2</h3><blockquote><p>\u5D4C\u5957Promise \u8FDB\u884C\u6D41\u7A0B\u5904\u7406</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">fn</span> <span class="token operator">=</span> <span class="token parameter">v</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token parameter">resolve</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">resolve</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> ret <span class="token operator">=</span> <span class="token function">co</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token keyword">yield</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token comment">// 1</span>

  <span class="token keyword">const</span> b <span class="token operator">=</span> <span class="token keyword">yield</span> <span class="token function">fn</span><span class="token punctuation">(</span>a <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span> <span class="token comment">// 2</span>

  <span class="token keyword">const</span> c <span class="token operator">=</span> <span class="token keyword">yield</span> <span class="token function">fn</span><span class="token punctuation">(</span>b <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span> <span class="token comment">// 3</span>

  <span class="token keyword">const</span> d <span class="token operator">=</span> <span class="token keyword">yield</span> <span class="token function">fn</span><span class="token punctuation">(</span>c <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span> <span class="token comment">// 4</span>

  <span class="token keyword">return</span> d
<span class="token punctuation">}</span><span class="token punctuation">)</span>
ret<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">v</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// 4</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><h3 id="demo-3-\u9519\u8BEF\u5904\u7406" tabindex="-1"><a class="header-anchor" href="#demo-3-\u9519\u8BEF\u5904\u7406" aria-hidden="true">#</a> demo 3 \u9519\u8BEF\u5904\u7406</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u9519\u8BEF\u90FD\u80FD\u88AB\u6355\u6349</span>
<span class="token keyword">const</span> ret <span class="token operator">=</span> <span class="token function">co</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token keyword">throw</span> <span class="token string">&#39;errorOne&#39;</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token comment">// errorOne</span>
    <span class="token keyword">throw</span> <span class="token string">&#39;errorTwo&#39;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

ret<span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">err</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// errorTwo</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h2 id="es2017-yyds" tabindex="-1"><a class="header-anchor" href="#es2017-yyds" aria-hidden="true">#</a> es2017 yyds</h2><blockquote><p><code>ES2017</code> \u6807\u51C6\u5F15\u5165\u4E86 <code>async</code> \u51FD\u6570\uFF0C\u4F7F\u5F97\u5F02\u6B65\u64CD\u4F5C\u53D8\u5F97\u66F4\u52A0\u65B9\u4FBF <code>async</code> \u51FD\u6570\u662F\u4EC0\u4E48\uFF1F\u5B83\u5C31\u662F <code>Generator</code> \u51FD\u6570\u7684\u8BED\u6CD5\u7CD6</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u5C06\u4F1A\u6253\u5370 &#39;into&#39;</span>
<span class="token comment">// \u8FD9\u8868\u660E async \u51FD\u6570\u4F1A\u5728 promise \u540E\u9762\u6DFB\u52A0 p.then() \u7684\u884C\u4E3A</span>
<span class="token comment">// \u8FD9\u65E0\u5173 promise \u662F\u54EA\u4E00\u79CD\u5B9E\u73B0\uFF08theable \u4E5F\u662F\u53EF\u4EE5\u7684\uFF09</span>

<span class="token keyword">const</span> p <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token function">then</span> <span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;into&#39;</span><span class="token punctuation">)</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&#39;tao&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span>
    <span class="token comment">// reject(&#39;err&#39;)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> v <span class="token operator">=</span> <span class="token keyword">await</span> p
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><h3 id="await-\u4F7F\u7528" tabindex="-1"><a class="header-anchor" href="#await-\u4F7F\u7528" aria-hidden="true">#</a> await \u4F7F\u7528</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>xhr<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;xx&#39;</span><span class="token punctuation">,</span> data<span class="token punctuation">,</span> <span class="token parameter">res</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token keyword">await</span> xhr<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;xx&#39;</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="co" tabindex="-1"><a class="header-anchor" href="#co" aria-hidden="true">#</a> CO</h2><blockquote><p>co \u8FD9\u4E2A\u5E93\u662F TJ \u5927\u795E\u4E3A koa \u6846\u67B6\u7F16\u5199\u7684\u4E00\u4E2A\u57FA\u4E8E generator + promise \u5904\u7406\u5F02\u6B65\u884C\u4E3A\u7684\u5E93\u3002\u8FD9\u79CD\u7ED3\u5408\u5E26\u6765\u4E86\u5F3A\u5927\u7684\u5F02\u6B65\u4EA4\u4E92\u80FD\u529B\uFF0C\u53EF\u4EE5\u663E\u7740\u6539\u8FDB\u5728 JavaScript \u4E2D\u7F16\u5199\u5F02\u6B65\u4EE3\u7801\u7684\u8BED\u8A00\u7EA7\u6A21\u578B</p></blockquote><h3 id="\u89E3\u8BFB-next-\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#\u89E3\u8BFB-next-\u51FD\u6570" aria-hidden="true">#</a> \u89E3\u8BFB next \u51FD\u6570</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">next</span><span class="token punctuation">(</span><span class="token parameter">ret</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>ret<span class="token punctuation">.</span>done<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token function">resolve</span><span class="token punctuation">(</span>ret<span class="token punctuation">.</span>value<span class="token punctuation">)</span>
  <span class="token keyword">var</span> value <span class="token operator">=</span> <span class="token function">toPromise</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> ret<span class="token punctuation">.</span>value<span class="token punctuation">)</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>value <span class="token operator">&amp;&amp;</span> <span class="token function">isPromise</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span> value<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>onFulfilled<span class="token punctuation">,</span> onRejected<span class="token punctuation">)</span>

  <span class="token keyword">return</span> <span class="token function">onRejected</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">TypeError</span><span class="token punctuation">(</span>
    <span class="token string">&#39;You may only yield a function, promise, generator, array, or object, &#39;</span>
    <span class="token operator">+</span> <span class="token string">&#39;but the following object was passed: &quot;&#39;</span> <span class="token operator">+</span> <span class="token function">String</span><span class="token punctuation">(</span>ret<span class="token punctuation">.</span>value<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&#39;&quot;&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">toPromise</span><span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>obj<span class="token punctuation">)</span> <span class="token keyword">return</span> obj
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isPromise</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span> obj
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isGeneratorFunction</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token function">isGenerator</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token function">co</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> obj<span class="token punctuation">)</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">&#39;function&#39;</span> <span class="token operator">==</span> <span class="token keyword">typeof</span> obj<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token function">thunkToPromise</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> obj<span class="token punctuation">)</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token function">arrayToPromise</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> obj<span class="token punctuation">)</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isObject</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token function">objectToPromise</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> obj<span class="token punctuation">)</span>

  <span class="token keyword">return</span> obj
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>\u901A\u8FC7 <code>next</code> \u548C <code>toPromsie</code> \u51FD\u6570\u6E90\u7801\u53EF\u4EE5\u77E5\u9053\uFF0Cco \u53EA\u652F\u6301\u4EE5\u4E0B\u51E0\u79CD\u6570\u636E\u7C7B\u578B\uFF1A</p><ul><li><p>array</p></li><li><p>object</p></li><li><p>promise</p></li><li><p>generator</p></li><li><p>function\uFF08thunk function \u4E0D\u505A\u8BA8\u8BBA\uFF09</p></li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u6570\u7EC4\u79CD\u7684\u6240\u6709 item \u90FD\u505A\u4E86 promise \u7684\u8FC7\u6EE4</span>
<span class="token keyword">function</span> <span class="token function">arrayToPromise</span> <span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span>obj<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>toPromise<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">objectToPromise</span><span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> results <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">obj<span class="token punctuation">.</span>constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">var</span> keys <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span>
  <span class="token keyword">var</span> promises <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>

  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> keys<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> key <span class="token operator">=</span> keys<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
    <span class="token keyword">var</span> promise <span class="token operator">=</span> <span class="token function">toPromise</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> obj<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span>

    <span class="token comment">// \u8FD9\u91CC\u5C06 object \u4E2D\u662F promise \u7684 item \u7B5B\u9009\u51FA\u6765\uFF0C\u901A\u8FC7 promise.all \u6765\u5904\u7406</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>promise <span class="token operator">&amp;&amp;</span> <span class="token function">isPromise</span><span class="token punctuation">(</span>promise<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token function">defer</span><span class="token punctuation">(</span>promise<span class="token punctuation">,</span> key<span class="token punctuation">)</span>
    <span class="token keyword">else</span> results<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> obj<span class="token punctuation">[</span>key<span class="token punctuation">]</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span>promises<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> results
  <span class="token punctuation">}</span><span class="token punctuation">)</span>

  <span class="token keyword">function</span> <span class="token function">defer</span><span class="token punctuation">(</span><span class="token parameter">promise<span class="token punctuation">,</span> key</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// js \u5F15\u64CE\u559C\u6B22\u7A33\u5B9A\u7684\u5BF9\u8C61\u7ED3\u6784\uFF0C\u6240\u6709\u9884\u5148\u5B9A\u4E49\uFF08\u4E5F\u544A\u8BC9\u5C11\u7528 delete \u8BED\u53E5\uFF09</span>
    results<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">undefined</span>
    promises<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>promise<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      results<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> res
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">objectToPromise</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
  <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token literal-property property">c</span><span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token parameter">resolve</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span> <span class="token comment">// { a: 1, b: [2, 3], c: 1 }</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u5224\u65AD\u662F\u5426\u662F promise</span>
<span class="token keyword">function</span> <span class="token function">isPromise</span> <span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token string">&#39;function&#39;</span> <span class="token operator">==</span> <span class="token keyword">typeof</span> obj<span class="token punctuation">.</span>then
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="theable-\u548C-\u9E2D\u5B50\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#theable-\u548C-\u9E2D\u5B50\u7C7B\u578B" aria-hidden="true">#</a> Theable \u548C \u9E2D\u5B50\u7C7B\u578B</h3><blockquote><p>\u5982\u679C\u4E00\u4E2A\u5BF9\u8C61 x \u6709\u4E00\u4E2A <code>then</code> \u65B9\u6CD5\uFF0C\u90A3\u4E48 x \u5C31\u662F\u4E00\u4E2A <code>thenable</code> then \u4F1A\u88AB\u7ACB\u5373\u8C03\u7528\uFF0C\u4F20\u5165\u53C2\u6570 resolve \u548C reject\uFF0C\u5E76\u7ED1\u5B9A x \u4F5C\u4E3A this \u800C <code>thenable</code> \u5C31\u662F <code>promise</code> \u7684 \u9E2D\u5B50\u7C7B\u578B</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token function">then</span> <span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span> <span class="token comment">// 1</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><blockquote><p>\u4E0D\u9700\u8981\u5224\u65AD\u662F\u4E0D\u662F\u4E00\u4E2A <code>promise</code>\uFF0C\u53EA\u9700\u8981\u5224\u65AD\u50CF\u4E0D\u50CF\u4E00\u4E2A <code>promise</code> \u65E0\u8BBA\u662F\u4F60\u81EA\u5DF1\u5199 <code>promise</code>\uFF0C\u7B2C\u4E09\u65B9\u5E93\u7684 <code>promise</code>\uFF0C\u8FD8\u662F js \u5F15\u64CE\u5B9E\u73B0\u7684 <code>promise</code>\u3002\u8FD9\u5E26\u6765\u4E86\u826F\u597D\u7684\u517C\u5BB9\u6027</p></blockquote><h3 id="co-warp" tabindex="-1"><a class="header-anchor" href="#co-warp" aria-hidden="true">#</a> CO.Warp</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u521B\u5EFA\u4E00\u4E2A\u9AD8\u9636\u51FD\u6570</span>
co<span class="token punctuation">.</span><span class="token function-variable function">wrap</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">fn</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  createPromise<span class="token punctuation">.</span>__generatorFunction__ <span class="token operator">=</span> fn <span class="token comment">// \u5355\u5143\u6D4B\u8BD5\u7528</span>
  <span class="token keyword">return</span> createPromise
  <span class="token keyword">function</span> <span class="token function">createPromise</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">co</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token function">fn</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> arguments<span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h3 id="demo" tabindex="-1"><a class="header-anchor" href="#demo" aria-hidden="true">#</a> demo</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> fn <span class="token operator">=</span> co<span class="token punctuation">.</span><span class="token function">wrap</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> gen <span class="token operator">=</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><ul><li><p>co \u5728\u6574\u4E2A Js \u7684\u5F02\u6B65\u53D1\u5C55\u5386\u53F2\u4E2D\u5904\u4E8E\u4E00\u4E2A\u5F88\u5173\u952E\u7684\u8282\u70B9</p></li><li><p>co \u5C06 promise \u548C generator \u51FD\u6570\u7ED3\u5408\u5728\u4E00\u8D77\uFF0C\u7ED9\u4E86 Js \u66F4\u52A0\u5F3A\u5927\u7684\u751F\u547D\u529B</p></li><li><p>\u5230\u6700\u540E\u7684\u53D1\u5C55\u9636\u6BB5\uFF0C\u6709\u4E86\u63A7\u5236\u5F02\u6B65\u884C\u4E3A\u66F4\u597D\u7684\u624B\u6BB5\uFF0C\u8FD9\u8BA9\u80FD\u66F4\u597D\u7684\u7ED3\u5408\u51FD\u6570\u5F0F\u7F16\u7A0B</p></li><li><p>Js \u7684\u5F02\u6B65\u4E0E\u5404\u4E2A\u5E73\u53F0\u7684 event loop \u606F\u606F\u76F8\u5173\uFF0C\u4E0D\u540C\u5E73\u53F0\u7684\u884C\u4E3A\u53EF\u80FD\u4E0D\u4E00\u81F4\uFF08\u540E\u8BDD\uFF09</p></li><li><p>Js \u7684\u5F02\u6B65\u53D1\u5C55\u662F ES \u89C4\u8303\u4E2D\u5F88\u91CD\u8981\u7684\u4E00\u90E8\u5206\uFF0C\u4F46\u662F es6 \u7684\u53D1\u5C55\u4E5F\u5305\u542B\u4E86\u5176\u4ED6\uFF0C\u4F8B\u5982\uFF1A</p><ul><li><p>\u66F4\u597D\u7684\u6570\u636E\u7ED3\u6784\uFF08map\uFF0Cset\uFF0Cweakmap\uFF0Cweakset\uFF09</p></li><li><p>\u66F4\u597D\u7684\u904D\u5386\u624B\u6BB5\uFF08for/of + iterator\uFF09</p></li><li><p>\u66F4\u597D\u7684\u6570\u636E\u4FDD\u62A4\u673A\u5236\uFF08setter/getter -&gt; proxy/reflect\uFF09</p></li><li><p>\u66F4\u597D\u7684 TypeArray \u652F\u6301\uFF08\u97F3\u89C6\u9891\u7B49\uFF09</p></li><li><p>\u5F53\u7136 es \u4E5F\u5728\u7EE7\u7EED\u53D1\u5C55\uFF0C\u672A\u6765\u8FD8\u4F1A\u6709\u66F4\u591A\u7684\u65B0\u4E1C\u897F</p></li></ul></li></ul><h3 id="bug" tabindex="-1"><a class="header-anchor" href="#bug" aria-hidden="true">#</a> bug</h3><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>getMessage<span class="token punctuation">&#39;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
    <span class="token function-variable function">data</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>

    <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u95EE\u9898\u5728\u4E8E\u5F02\u6B65\u8BF7\u6C42\u662F\u526F\u4F5C\u7528\uFF0C\u65E0\u6CD5\u9884\u6D4B\u8FD9\u4E2A\u7ED3\u679C\u5728\u4EC0\u4E48\u65F6\u95F4\u5230\u6765</span>
      <span class="token comment">// \u5BFC\u81F4\u65E0\u6CD5\u4FDD\u8BC1\u7A0B\u5E8F\u7684\u987A\u5E8F\u3002\u540C\u6837\u4E5F\u5F88\u96BE\u590D\u73B0\uFF0C\u540C\u6837\u7684\u8F93\u5165\u53EF\u80FD\u5BFC\u81F4\u4E0D\u540C\u7684\u8F93\u51FA</span>
      <span class="token keyword">async</span> <span class="token function">getMessage</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>message <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">&#39;xx&#39;</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><h3 id="\u89E3\u51B3\u65B9\u6848-1" tabindex="-1"><a class="header-anchor" href="#\u89E3\u51B3\u65B9\u6848-1" aria-hidden="true">#</a> \u89E3\u51B3\u65B9\u6848</h3><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>getMessage<span class="token punctuation">&#39;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
    <span class="token function-variable function">data</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">requestId</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>

    <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u5229\u7528\u95ED\u5305\u62D2\u7EDD\u6389\u5DF2\u7ECF\u4E22\u5F03\u7684\u526F\u4F5C\u7528\u884C\u4E3A</span>
      <span class="token keyword">async</span> <span class="token function">getMessage</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> id <span class="token operator">=</span> <span class="token operator">++</span><span class="token keyword">this</span><span class="token punctuation">.</span>requestId
        <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">&#39;xx&#39;</span><span class="token punctuation">)</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>id <span class="token operator">!==</span> <span class="token keyword">this</span><span class="token punctuation">.</span>requestId<span class="token punctuation">)</span> <span class="token keyword">return</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>message <span class="token operator">=</span> res
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div>`,71);function k(s,b){return a(),p(t,null,[u,n("img",{src:s.$withBase("/assets/mozillaJs/1624843428(1).jpg"),alt:"demo"},null,8,r),i],64)}var f=c(l,[["render",k]]);export{f as default};
