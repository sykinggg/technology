import{r as o,o as c,c as l,b as n,d as t,F as u,a,e as s}from"./app.ee3fc36b.js";import{_ as i}from"./plugin-vue_export-helper.21dcd24c.js";const r={},k=a(`<h1 id="axios-\u6E90\u7801\u6574\u4F53\u67B6\u6784" tabindex="-1"><a class="header-anchor" href="#axios-\u6E90\u7801\u6574\u4F53\u67B6\u6784" aria-hidden="true">#</a> axios \u6E90\u7801\u6574\u4F53\u67B6\u6784</h1><p>axios \u7248\u672C\u662F<code>v0.19.0</code></p><p>\u514B\u9686\u7684\u5B98\u65B9\u4ED3\u5E93\u7684<code>master</code>\u5206\u652F</p><p>\u6700\u65B0\u4E00\u6B21<code>commit</code>\u662F<code>2019-12-09 15:52 ZhaoXC dc4bc49673943e352</code>\uFF0C<code>fix: fix ignore set withCredentials false (#2582)</code></p><h2 id="chrome-\u548C-vscode-\u8C03\u8BD5-axios-\u6E90\u7801\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#chrome-\u548C-vscode-\u8C03\u8BD5-axios-\u6E90\u7801\u65B9\u6CD5" aria-hidden="true">#</a> chrome \u548C vscode \u8C03\u8BD5 axios \u6E90\u7801\u65B9\u6CD5</h2><h3 id="chrome-\u8C03\u8BD5\u6D4F\u89C8\u5668\u73AF\u5883\u7684-axios" tabindex="-1"><a class="header-anchor" href="#chrome-\u8C03\u8BD5\u6D4F\u89C8\u5668\u73AF\u5883\u7684-axios" aria-hidden="true">#</a> chrome \u8C03\u8BD5\u6D4F\u89C8\u5668\u73AF\u5883\u7684 axios</h3><blockquote><p>\u8C03\u8BD5\u65B9\u6CD5</p></blockquote><p><code>axios</code>\u6253\u5305\u540E\u6709<code>sourcemap</code>\u6587\u4EF6\u3002</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># \u53EF\u4EE5\u514B\u9686\u7B14\u8005\u7684\u8FD9\u4E2A\u4ED3\u5E93\u4EE3\u7801</span>
<span class="token function">git</span> clone https://github.com/lxchuan12/axios-analysis.git
<span class="token builtin class-name">cd</span> axios-analaysis/axios
<span class="token function">npm</span> <span class="token function">install</span>
<span class="token function">npm</span> start
<span class="token comment"># open [http://localhost:3000](http://localhost:3000)</span>
<span class="token comment"># chrome F12 source \u63A7\u5236\u9762\u677F  webpack//   .  lib \u76EE\u5F55\u4E0B\uFF0C\u6839\u636E\u60C5\u51B5\u81EA\u884C\u65AD\u70B9\u8C03\u8BD5</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>\u672C\u6587\u5C31\u662F\u901A\u8FC7\u4E0A\u8FF0\u7684\u4F8B\u5B50<code>axios/sandbox/client.html</code>\u6765\u8C03\u8BD5\u7684\u3002</p><p>\u627E\u5230\u6587\u4EF6<code>axios/examples/server.js</code>\uFF0C\u4FEE\u6539\u4EE3\u7801\u5982\u4E0B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>server <span class="token operator">=</span> http<span class="token punctuation">.</span><span class="token function">createServer</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> url <span class="token operator">=</span> req<span class="token punctuation">.</span>url<span class="token punctuation">;</span>
  <span class="token comment">// \u8C03\u8BD5 examples</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// Process axios itself</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">axios\\.min\\.js$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u539F\u6765\u7684\u4EE3\u7801 \u662F axios.min.js</span>
    <span class="token comment">// pipeFileToResponse(res, &#39;../dist/axios.min.js&#39;, &#39;text/javascript&#39;);</span>
    <span class="token function">pipeFileToResponse</span><span class="token punctuation">(</span>res<span class="token punctuation">,</span> <span class="token string">&#39;../dist/axios.js&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;text/javascript&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u539F\u6765\u7684\u4EE3\u7801 \u662F axios.min.map</span>
  <span class="token comment">// if (/axios\\.min.map$/.test(url)) {</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">axios\\.map$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u539F\u6765\u7684\u4EE3\u7801 \u662F axios.min.map</span>
    <span class="token comment">// pipeFileToResponse(res, &#39;../dist/axios.min.map&#39;, &#39;text/javascript&#39;);</span>
    <span class="token function">pipeFileToResponse</span><span class="token punctuation">(</span>res<span class="token punctuation">,</span> <span class="token string">&#39;../dist/axios.map&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;text/javascript&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># \u4E0A\u8FF0\u5B89\u88C5\u597D\u4F9D\u8D56\u540E</span>
<span class="token comment"># npm run examples \u4E0D\u80FD\u540C\u65F6\u5F00\u542F\uFF0C\u9ED8\u8BA4\u90FD\u662F3000\u7AEF\u53E3</span>
<span class="token comment"># \u53EF\u4EE5\u6307\u5B9A\u7AEF\u53E3 5000</span>
<span class="token comment"># npm run examples ===  node ./examples/server.js</span>
<span class="token function">node</span> ./examples/server.js -p <span class="token number">5000</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div>`,13),b=s("\u6253\u5F00"),m={href:"http://localhost:5000",target:"_blank",rel:"noopener noreferrer"},d=s("http://localhost:5000"),f=s("\uFF0C\u7136\u540E\u5C31\u53EF\u4EE5\u5F00\u5FC3\u7684\u5728"),h=n("code",null,"Chrome",-1),g=s("\u6D4F\u89C8\u5668\u4E2D\u8C03\u8BD5"),y=n("code",null,"examples",-1),v=s("\u91CC\u7684\u4F8B\u5B50\u4E86\u3002"),w=a(`<p><code>axios</code> \u662F\u652F\u6301 <code>node</code> \u73AF\u5883\u53D1\u9001\u8BF7\u6C42\u7684\u3002\u63A5\u4E0B\u6765\u770B\u5982\u4F55\u7528 <code>vscode</code> \u8C03\u8BD5 <code>node</code> \u73AF\u5883\u4E0B\u7684<code>axios</code>\u3002</p><h3 id="vscode-\u8C03\u8BD5-node-\u73AF\u5883\u7684-axios" tabindex="-1"><a class="header-anchor" href="#vscode-\u8C03\u8BD5-node-\u73AF\u5883\u7684-axios" aria-hidden="true">#</a> vscode \u8C03\u8BD5 node \u73AF\u5883\u7684 axios</h3><p>\u5728\u6839\u76EE\u5F55\u4E0B <code>axios-analysis/</code> \u521B\u5EFA<code>.vscode/launch.json</code>\u6587\u4EF6\u5982\u4E0B\uFF1A</p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token comment">// \u4F7F\u7528 IntelliSense \u4E86\u89E3\u76F8\u5173\u5C5E\u6027\u3002</span>
    <span class="token comment">// \u60AC\u505C\u4EE5\u67E5\u770B\u73B0\u6709\u5C5E\u6027\u7684\u63CF\u8FF0\u3002</span>
    <span class="token comment">// \u6B32\u4E86\u89E3\u66F4\u591A\u4FE1\u606F\uFF0C\u8BF7\u8BBF\u95EE: https://go.microsoft.com/fwlink/?linkid=830387</span>
    <span class="token property">&quot;version&quot;</span><span class="token operator">:</span> <span class="token string">&quot;0.2.0&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;configurations&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token punctuation">{</span>
            <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;node&quot;</span><span class="token punctuation">,</span>
            <span class="token property">&quot;request&quot;</span><span class="token operator">:</span> <span class="token string">&quot;launch&quot;</span><span class="token punctuation">,</span>
            <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Launch Program&quot;</span><span class="token punctuation">,</span>
            <span class="token property">&quot;program&quot;</span><span class="token operator">:</span> <span class="token string">&quot;\${workspaceFolder}/axios/sandbox/client.js&quot;</span><span class="token punctuation">,</span>
            <span class="token property">&quot;skipFiles&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
                <span class="token string">&quot;&lt;node_internals&gt;/**&quot;</span>
            <span class="token punctuation">]</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p>\u6309<code>F5</code>\u5F00\u59CB\u8C03\u8BD5\u5373\u53EF\uFF0C\u6309\u7167\u81EA\u5DF1\u7684\u60C5\u51B5\uFF0C\u5355\u6B65\u8DF3\u8FC7<code>\uFF08F10\uFF09</code>\u3001\u5355\u6B65\u8C03\u8BD5<code>\uFF08F11\uFF09</code>\u65AD\u70B9\u8C03\u8BD5\u3002</p><h2 id="axios-\u7ED3\u6784" tabindex="-1"><a class="header-anchor" href="#axios-\u7ED3\u6784" aria-hidden="true">#</a> axios \u7ED3\u6784</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">git</span> clone https://github.com/lxchuan12/axios-analysis.git
<span class="token builtin class-name">cd</span> axios-analaysis/axios
<span class="token function">npm</span> <span class="token function">install</span>
<span class="token function">npm</span> start
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div>`,7),x=s("\u6309\u7167\u4E0A\u6587\u8BF4\u7684\u8C03\u8BD5\u65B9\u6CD5\uFF0C "),j=n("code",null,"npm start",-1),q=s(" \u540E\uFF0C\u76F4\u63A5\u5728 "),_=n("code",null,"chrome",-1),A=s(" \u6D4F\u89C8\u5668\u4E2D\u8C03\u8BD5\u3002 \u6253\u5F00 "),P={href:"http://localhost:3000",target:"_blank",rel:"noopener noreferrer"},C=s("http://localhost:3000"),R=s("\uFF0C\u5728\u63A7\u5236\u53F0\u6253\u5370\u51FA"),T=n("code",null,"axios",-1),I=s("\uFF0C\u4F30\u8BA1\u5F88\u591A\u4EBA\u90FD\u6CA1\u6253\u5370\u51FA\u6765\u770B\u8FC7\u3002"),F=a(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">axios</span><span class="token operator">:</span> axios<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>\u5C42\u5C42\u70B9\u5F00\u6765\u770B\uFF0C<code>axios</code> \u7684\u7ED3\u6784\u662F\u600E\u6837\u7684\uFF0C\u5148\u6709\u4E00\u4E2A\u5927\u6982\u5370\u8C61\u3002</p>`,2),E=["src"],D=a(`<p>\u770B\u5B8C\u7ED3\u6784\u56FE\uFF0C\u5982\u679C\u770B\u8FC7<code>jQuery</code>\u3001<code>underscore</code>\u548C<code>lodash</code>\u6E90\u7801\uFF0C\u4F1A\u53D1\u73B0\u5176\u5B9E\u8DDF<code>axios</code>\u6E90\u7801\u8BBE\u8BA1\u7C7B\u4F3C\u3002</p><p><code>jQuery</code> \u522B\u540D <code>$</code>\uFF0C<code>underscore</code> <code>loadsh</code> \u522B\u540D <code>_</code> \u4E5F\u65E2\u662F\u51FD\u6570\uFF0C\u4E5F\u662F\u5BF9\u8C61\u3002\u6BD4\u5982<code>jQuery</code>\u4F7F\u7528\u65B9\u5F0F\u3002<code>$(&#39;#id&#39;)</code>, <code>$.ajax</code>\u3002</p><div class="custom-container tip"><p class="custom-container-title">\u65AD\u70B9\u8C03\u8BD5</p><p>\u65AD\u70B9\u8C03\u8BD5\u8981\u9886\uFF1A \u8D4B\u503C\u8BED\u53E5\u53EF\u4EE5\u4E00\u6B65\u8DF3\u8FC7\uFF0C\u770B\u8FD4\u56DE\u503C\u5373\u53EF\uFF0C\u540E\u7EED\u8BE6\u7EC6\u518D\u770B\u3002 \u51FD\u6570\u6267\u884C\u9700\u8981\u65AD\u70B9\u8DDF\u7740\u770B\uFF0C\u4E5F\u53EF\u4EE5\u7ED3\u5408\u6CE8\u91CA\u548C\u4E0A\u4E0B\u6587\u5012\u63A8\u8FD9\u4E2A\u51FD\u6570\u505A\u4E86\u4EC0\u4E48\u3002</p></div><h2 id="axios-\u6E90\u7801-\u521D\u59CB\u5316" tabindex="-1"><a class="header-anchor" href="#axios-\u6E90\u7801-\u521D\u59CB\u5316" aria-hidden="true">#</a> axios \u6E90\u7801 \u521D\u59CB\u5316</h2><p>\u770B\u6E90\u7801\u7B2C\u4E00\u6B65\uFF0C\u5148\u770B<code>package.json</code>\u3002\u4E00\u822C\u90FD\u4F1A\u7533\u660E <code>main</code> \u4E3B\u5165\u53E3\u6587\u4EF6\u3002</p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token comment">// package.json</span>
<span class="token punctuation">{</span>
  <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;axios&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;version&quot;</span><span class="token operator">:</span> <span class="token string">&quot;0.19.0&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;description&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Promise based HTTP client for the browser and node.js&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;main&quot;</span><span class="token operator">:</span> <span class="token string">&quot;index.js&quot;</span><span class="token punctuation">,</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>\u4E3B\u5165\u53E3\u6587\u4EF6</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// index.js</span>
module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./lib/axios&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="lib-axios-js\u4E3B\u6587\u4EF6" tabindex="-1"><a class="header-anchor" href="#lib-axios-js\u4E3B\u6587\u4EF6" aria-hidden="true">#</a> lib/axios.js\u4E3B\u6587\u4EF6</h3><p><code>axios.js</code>\u6587\u4EF6 \u4EE3\u7801\u76F8\u5BF9\u6BD4\u8F83\u591A\u3002\u5206\u4E3A\u4E09\u90E8\u5206\u5C55\u5F00\u53D9\u8FF0\u3002</p><blockquote><ol><li><p>\u7B2C\u4E00\u90E8\u5206\uFF1A\u5F15\u5165\u4E00\u4E9B\u5DE5\u5177\u51FD\u6570<code>utils</code>\u3001<code>Axios</code>\u6784\u9020\u51FD\u6570\u3001\u9ED8\u8BA4\u914D\u7F6E<code>defaults</code>\u7B49\u3002</p></li><li><p>\u7B2C\u4E8C\u90E8\u5206\uFF1A\u662F\u751F\u6210\u5B9E\u4F8B\u5BF9\u8C61 <code>axios</code>\u3001<code>axios.Axios</code>\u3001<code>axios.create</code>\u7B49\u3002</p></li><li><p>\u7B2C\u4E09\u90E8\u5206\u53D6\u6D88\u76F8\u5173API\u5B9E\u73B0\uFF0C\u8FD8\u6709<code>all</code>\u3001<code>spread</code>\u3001\u5BFC\u51FA\u7B49\u5B9E\u73B0\u3002</p></li></ol></blockquote><h3 id="\u7B2C\u4E00\u90E8\u5206" tabindex="-1"><a class="header-anchor" href="#\u7B2C\u4E00\u90E8\u5206" aria-hidden="true">#</a> \u7B2C\u4E00\u90E8\u5206</h3><p>\u5F15\u5165\u4E00\u4E9B\u5DE5\u5177\u51FD\u6570<code>utils</code>\u3001<code>Axios</code>\u6784\u9020\u51FD\u6570\u3001\u9ED8\u8BA4\u914D\u7F6E<code>defaults</code>\u7B49\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u7B2C\u4E00\u90E8\u5206\uFF1A</span>
<span class="token comment">// lib/axios</span>
<span class="token comment">// \u4E25\u683C\u6A21\u5F0F</span>
<span class="token string">&#39;use strict&#39;</span><span class="token punctuation">;</span>
<span class="token comment">// \u5F15\u5165 utils \u5BF9\u8C61\uFF0C\u6709\u5F88\u591A\u5DE5\u5177\u65B9\u6CD5\u3002</span>
<span class="token keyword">var</span> utils <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./utils&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u5F15\u5165 bind \u65B9\u6CD5</span>
<span class="token keyword">var</span> bind <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./helpers/bind&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u6838\u5FC3\u6784\u9020\u51FD\u6570 Axios</span>
<span class="token keyword">var</span> Axios <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./core/Axios&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u5408\u5E76\u914D\u7F6E\u65B9\u6CD5</span>
<span class="token keyword">var</span> mergeConfig <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./core/mergeConfig&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u5F15\u5165\u9ED8\u8BA4\u914D\u7F6E</span>
<span class="token keyword">var</span> defaults <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./defaults&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h3 id="\u7B2C\u4E8C\u90E8\u5206" tabindex="-1"><a class="header-anchor" href="#\u7B2C\u4E8C\u90E8\u5206" aria-hidden="true">#</a> \u7B2C\u4E8C\u90E8\u5206</h3><p>\u662F\u751F\u6210\u5B9E\u4F8B\u5BF9\u8C61 <code>axios</code>\u3001<code>axios.Axios</code>\u3001<code>axios.create</code>\u7B49\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * Create an instance of Axios
 *
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>Object<span class="token punctuation">}</span></span> <span class="token parameter">defaultConfig</span> The default config for the instance
 * <span class="token keyword">@return</span> <span class="token class-name"><span class="token punctuation">{</span>Axios<span class="token punctuation">}</span></span> A new instance of Axios
 */</span>
<span class="token keyword">function</span> <span class="token function">createInstance</span><span class="token punctuation">(</span><span class="token parameter">defaultConfig</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// new \u4E00\u4E2A Axios \u751F\u6210\u5B9E\u4F8B\u5BF9\u8C61</span>
  <span class="token keyword">var</span> context <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Axios</span><span class="token punctuation">(</span>defaultConfig<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// bind \u8FD4\u56DE\u4E00\u4E2A\u65B0\u7684 wrap \u51FD\u6570\uFF0C</span>
  <span class="token comment">// \u4E5F\u5C31\u662F\u4E3A\u4EC0\u4E48\u8C03\u7528 axios \u662F\u8C03\u7528 Axios.prototype.request \u51FD\u6570\u7684\u539F\u56E0</span>
  <span class="token keyword">var</span> instance <span class="token operator">=</span> <span class="token function">bind</span><span class="token punctuation">(</span><span class="token class-name">Axios</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>request<span class="token punctuation">,</span> context<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// Copy axios.prototype to instance</span>
  <span class="token comment">// \u590D\u5236 Axios.prototype \u5230\u5B9E\u4F8B\u4E0A\u3002</span>
  <span class="token comment">// \u4E5F\u5C31\u662F\u4E3A\u4EC0\u4E48 \u6709 axios.get \u7B49\u522B\u540D\u65B9\u6CD5\uFF0C</span>
  <span class="token comment">// \u4E14\u8C03\u7528\u7684\u662F Axios.prototype.get \u7B49\u522B\u540D\u65B9\u6CD5\u3002</span>
  utils<span class="token punctuation">.</span><span class="token function">extend</span><span class="token punctuation">(</span>instance<span class="token punctuation">,</span> <span class="token class-name">Axios</span><span class="token punctuation">.</span>prototype<span class="token punctuation">,</span> context<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// Copy context to instance</span>
  <span class="token comment">// \u590D\u5236 context \u5230 intance \u5B9E\u4F8B</span>
  <span class="token comment">// \u4E5F\u5C31\u662F\u4E3A\u4EC0\u4E48\u9ED8\u8BA4\u914D\u7F6E axios.defaults \u548C\u62E6\u622A\u5668  axios.interceptors \u53EF\u4EE5\u4F7F\u7528\u7684\u539F\u56E0</span>
  <span class="token comment">// \u5176\u5B9E\u662Fnew Axios().defaults \u548C new Axios().interceptors</span>
  utils<span class="token punctuation">.</span><span class="token function">extend</span><span class="token punctuation">(</span>instance<span class="token punctuation">,</span> context<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// \u6700\u540E\u8FD4\u56DE\u5B9E\u4F8B\u5BF9\u8C61\uFF0C\u4EE5\u4E0A\u4EE3\u7801\uFF0C\u5728\u4E0A\u6587\u7684\u56FE\u4E2D\u90FD\u6709\u4F53\u73B0\u3002\u8FD9\u65F6\u53EF\u4EE5\u4ED4\u7EC6\u770B\u4E0B\u4E0A\u56FE\u3002</span>
  <span class="token keyword">return</span> instance<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// Create the default instance to be exported</span>
<span class="token comment">// \u5BFC\u51FA \u521B\u5EFA\u9ED8\u8BA4\u5B9E\u4F8B</span>
<span class="token keyword">var</span> axios <span class="token operator">=</span> <span class="token function">createInstance</span><span class="token punctuation">(</span>defaults<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Expose Axios class to allow class inheritance</span>
<span class="token comment">// \u66B4\u9732 Axios class \u5141\u8BB8 class \u7EE7\u627F \u4E5F\u5C31\u662F\u53EF\u4EE5 new axios.Axios()</span>
<span class="token comment">// \u4F46  axios \u6587\u6863\u4E2D \u5E76\u6CA1\u6709\u63D0\u5230\u8FD9\u4E2A\uFF0C\u6211\u4EEC\u5E73\u65F6\u4E5F\u7528\u5F97\u5C11\u3002</span>
axios<span class="token punctuation">.</span>Axios <span class="token operator">=</span> Axios<span class="token punctuation">;</span>

<span class="token comment">// Factory for creating new instances</span>
<span class="token comment">// \u5DE5\u5382\u6A21\u5F0F \u521B\u5EFA\u65B0\u7684\u5B9E\u4F8B \u7528\u6237\u53EF\u4EE5\u81EA\u5B9A\u4E49\u4E00\u4E9B\u53C2\u6570</span>
axios<span class="token punctuation">.</span><span class="token function-variable function">create</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">create</span><span class="token punctuation">(</span><span class="token parameter">instanceConfig</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token function">createInstance</span><span class="token punctuation">(</span><span class="token function">mergeConfig</span><span class="token punctuation">(</span>axios<span class="token punctuation">.</span>defaults<span class="token punctuation">,</span> instanceConfig<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br></div></div><p>\u8FD9\u91CC\u7B80\u8FF0\u4E0B\u5DE5\u5382\u6A21\u5F0F\u3002<code>axios.create</code>\uFF0C\u4E5F\u5C31\u662F\u7528\u6237\u4E0D\u9700\u8981\u77E5\u9053\u5185\u90E8\u662F\u600E\u4E48\u5B9E\u73B0\u7684\u3002</p><blockquote><p>\u4E3E\u4E2A\u751F\u6D3B\u7684\u4F8B\u5B50\uFF0C\u6211\u4EEC\u4E70\u624B\u673A\uFF0C\u4E0D\u9700\u8981\u77E5\u9053\u624B\u673A\u662F\u600E\u4E48\u505A\u7684\uFF0C\u5C31\u662F\u5DE5\u5382\u6A21\u5F0F\u3002</p></blockquote><p>\u770B\u5B8C\u7B2C\u4E8C\u90E8\u5206\uFF0C\u91CC\u9762\u6D89\u53CA\u51E0\u4E2A\u5DE5\u5177\u51FD\u6570\uFF0C\u5982<code>bind</code>\u3001<code>extend</code>\u3002\u63A5\u4E0B\u6765\u8BB2\u8FF0\u8FD9\u51E0\u4E2A\u5DE5\u5177\u65B9\u6CD5\u3002</p><h3 id="\u5DE5\u5177\u65B9\u6CD5\u4E4B-bind" tabindex="-1"><a class="header-anchor" href="#\u5DE5\u5177\u65B9\u6CD5\u4E4B-bind" aria-hidden="true">#</a> \u5DE5\u5177\u65B9\u6CD5\u4E4B bind</h3><p><code>axios/lib/helpers/bind.js</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token string">&#39;use strict&#39;</span><span class="token punctuation">;</span>
<span class="token comment">// \u8FD4\u56DE\u4E00\u4E2A\u65B0\u7684\u51FD\u6570 wrap</span>
module<span class="token punctuation">.</span><span class="token function-variable function">exports</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">bind</span><span class="token punctuation">(</span><span class="token parameter">fn<span class="token punctuation">,</span> thisArg</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token function">wrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> args <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span>arguments<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> args<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      args<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> arguments<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u628A argument \u5BF9\u8C61\u653E\u5728\u6570\u7EC4 args \u91CC</span>
    <span class="token keyword">return</span> <span class="token function">fn</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>thisArg<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>\u4F20\u9012\u4E24\u4E2A\u53C2\u6570\u51FD\u6570\u548C<code>thisArg</code>\u6307\u5411\u3002</p><p>\u628A\u53C2\u6570<code>arguments</code>\u751F\u6210\u6570\u7EC4\uFF0C\u6700\u540E\u8C03\u7528\u8FD4\u56DE\u53C2\u6570\u7ED3\u6784\u3002</p><p>\u5176\u5B9E\u73B0\u5728 <code>apply</code> \u652F\u6301 <code>arguments</code>\u8FD9\u6837\u7684\u7C7B\u6570\u7EC4\u5BF9\u8C61\u4E86\uFF0C\u4E0D\u9700\u8981\u624B\u52A8\u8F6C\u6570\u7EC4\u3002</p><blockquote><p>\u4E3E\u4E2A\u4F8B\u5B50</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>console<span class="token punctuation">,</span> arguments<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">fn</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 1 2 3 4 5 6</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="\u5DE5\u5177\u65B9\u6CD5\u4E4B-utils-extend" tabindex="-1"><a class="header-anchor" href="#\u5DE5\u5177\u65B9\u6CD5\u4E4B-utils-extend" aria-hidden="true">#</a> \u5DE5\u5177\u65B9\u6CD5\u4E4B utils.extend</h3><p><code>axios/lib/utils.js</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">extend</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> thisArg</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">forEach</span><span class="token punctuation">(</span>b<span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token function">assignValue</span><span class="token punctuation">(</span><span class="token parameter">val<span class="token punctuation">,</span> key</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>thisArg <span class="token operator">&amp;&amp;</span> <span class="token keyword">typeof</span> val <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      a<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">bind</span><span class="token punctuation">(</span>val<span class="token punctuation">,</span> thisArg<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      a<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> val<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> a<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>\u5176\u5B9E\u5C31\u662F\u904D\u5386\u53C2\u6570 <code>b</code> \u5BF9\u8C61\uFF0C\u590D\u5236\u5230 <code>a</code> \u5BF9\u8C61\u4E0A\uFF0C\u5982\u679C\u662F\u51FD\u6570\u5C31\u662F\u5219\u7528 <code>bind</code> \u8C03\u7528\u3002</p><h3 id="\u5DE5\u5177\u65B9\u6CD5\u4E4B-utils-foreach" tabindex="-1"><a class="header-anchor" href="#\u5DE5\u5177\u65B9\u6CD5\u4E4B-utils-foreach" aria-hidden="true">#</a> \u5DE5\u5177\u65B9\u6CD5\u4E4B utils.forEach</h3><p><code>axios/lib/utils.js</code></p><p>\u904D\u5386\u6570\u7EC4\u548C\u5BF9\u8C61\u3002\u8BBE\u8BA1\u6A21\u5F0F\u79F0\u4E4B\u4E3A\u8FED\u4EE3\u5668\u6A21\u5F0F\u3002\u5F88\u591A\u6E90\u7801\u90FD\u6709\u7C7B\u4F3C\u8FD9\u6837\u7684\u904D\u5386\u51FD\u6570\u3002\u6BD4\u5982\u5927\u5BB6\u719F\u77E5\u7684<code>jQuery</code> <code>$.each</code>\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>Object<span class="token operator">|</span>Array<span class="token punctuation">}</span></span> <span class="token parameter">obj</span> The object to iterate
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>Function<span class="token punctuation">}</span></span> <span class="token parameter">fn</span> The callback to invoke for each item
 */</span>
<span class="token keyword">function</span> <span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">obj<span class="token punctuation">,</span> fn</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// Don&#39;t bother if no value provided</span>
  <span class="token comment">// \u5224\u65AD null \u548C undefined \u76F4\u63A5\u8FD4\u56DE</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>obj <span class="token operator">===</span> <span class="token keyword">null</span> <span class="token operator">||</span> <span class="token keyword">typeof</span> obj <span class="token operator">===</span> <span class="token string">&#39;undefined&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// Force an array if not already something iterable</span>
  <span class="token comment">// \u5982\u679C\u4E0D\u662F\u5BF9\u8C61\uFF0C\u653E\u5728\u6570\u7EC4\u91CC\u3002</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> obj <span class="token operator">!==</span> <span class="token string">&#39;object&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">/*eslint no-param-reassign:0*/</span>
    obj <span class="token operator">=</span> <span class="token punctuation">[</span>obj<span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \u662F\u6570\u7EC4 \u5219\u7528for \u5FAA\u73AF\uFF0C\u8C03\u7528 fn \u51FD\u6570\u3002\u53C2\u6570\u7C7B\u4F3C Array.prototype.forEach \u7684\u524D\u4E09\u4E2A\u53C2\u6570\u3002</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isArray</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// Iterate over array values</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> l <span class="token operator">=</span> obj<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> l<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">fn</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> obj<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> i<span class="token punctuation">,</span> obj<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token comment">// Iterate over object keys</span>
    <span class="token comment">// \u7528 for in \u904D\u5386\u5BF9\u8C61\uFF0C\u4F46 for in \u4F1A\u904D\u5386\u539F\u578B\u94FE\u4E0A\u53EF\u904D\u5386\u7684\u5C5E\u6027\u3002</span>
    <span class="token comment">// \u6240\u4EE5\u7528 hasOwnProperty \u6765\u8FC7\u6EE4\u81EA\u8EAB\u5C5E\u6027\u4E86\u3002</span>
    <span class="token comment">// \u5176\u5B9E\u4E5F\u53EF\u4EE5\u7528Object.keys\u6765\u904D\u5386\uFF0C\u5B83\u4E0D\u904D\u5386\u539F\u578B\u94FE\u4E0A\u53EF\u904D\u5386\u7684\u5C5E\u6027\u3002</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> key <span class="token keyword">in</span> obj<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">fn</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> obj<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">,</span> key<span class="token punctuation">,</span> obj<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br></div></div><h3 id="\u7B2C\u4E09\u90E8\u5206" tabindex="-1"><a class="header-anchor" href="#\u7B2C\u4E09\u90E8\u5206" aria-hidden="true">#</a> \u7B2C\u4E09\u90E8\u5206</h3><p>\u53D6\u6D88\u76F8\u5173API\u5B9E\u73B0\uFF0C\u8FD8\u6709<code>all</code>\u3001<code>spread</code>\u3001<code>\u5BFC\u51FA</code>\u7B49\u5B9E\u73B0\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// Expose Cancel &amp; CancelToken</span>
<span class="token comment">// \u5BFC\u51FA Cancel \u548C CancelToken</span>
axios<span class="token punctuation">.</span>Cancel <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./cancel/Cancel&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
axios<span class="token punctuation">.</span>CancelToken <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./cancel/CancelToken&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
axios<span class="token punctuation">.</span>isCancel <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./cancel/isCancel&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Expose all/spread</span>
<span class="token comment">// \u5BFC\u51FA all \u548C spread API</span>
axios<span class="token punctuation">.</span><span class="token function-variable function">all</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">all</span><span class="token punctuation">(</span><span class="token parameter">promises</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span>promises<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
axios<span class="token punctuation">.</span>spread <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./helpers/spread&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> axios<span class="token punctuation">;</span>

<span class="token comment">// Allow use of default import syntax in TypeScript</span>
<span class="token comment">// \u4E5F\u5C31\u662F\u53EF\u4EE5\u4EE5\u4E0B\u65B9\u5F0F\u5F15\u5165</span>
<span class="token comment">// import axios from &#39;axios&#39;;</span>
module<span class="token punctuation">.</span>exports<span class="token punctuation">.</span>default <span class="token operator">=</span> axios<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><p>\u8FD9\u91CC\u4ECB\u7ECD\u4E0B <code>spread</code>\uFF0C\u53D6\u6D88\u7684<code>API</code>\u6682\u65F6\u4E0D\u505A\u5206\u6790\uFF0C\u540E\u6587\u518D\u8BE6\u7EC6\u5206\u6790\u3002</p><blockquote><p>\u5047\u8BBE\u4F60\u6709\u8FD9\u6837\u7684\u9700\u6C42\u3002</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token parameter">x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> z</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token keyword">var</span> args <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token function">f</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u90A3\u4E48\u53EF\u4EE5\u7528<code>spread</code>\u65B9\u6CD5\u3002\u7528\u6CD5\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>axios<span class="token punctuation">.</span><span class="token function">spread</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> z</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>\u5B9E\u73B0\u4E5F\u6BD4\u8F83\u7B80\u5355\u3002\u6E90\u7801\u5B9E\u73B0\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>Function<span class="token punctuation">}</span></span> <span class="token parameter">callback</span>
 * <span class="token keyword">@returns</span> <span class="token class-name"><span class="token punctuation">{</span>Function<span class="token punctuation">}</span></span>
 */</span>
module<span class="token punctuation">.</span><span class="token function-variable function">exports</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">spread</span><span class="token punctuation">(</span><span class="token parameter">callback</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token function">wrap</span><span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">callback</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> arr<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>\u4E0A\u6587<code>var context = new Axios(defaultConfig);</code>\uFF0C\u63A5\u4E0B\u6765\u4ECB\u7ECD\u6838\u5FC3\u6784\u9020\u51FD\u6570<code>Axios</code>\u3002</p><h3 id="\u6838\u5FC3\u6784\u9020\u51FD\u6570-axios" tabindex="-1"><a class="header-anchor" href="#\u6838\u5FC3\u6784\u9020\u51FD\u6570-axios" aria-hidden="true">#</a> \u6838\u5FC3\u6784\u9020\u51FD\u6570 Axios</h3><p><code>axios/lib/core/Axios.js</code></p><p>\u6784\u9020\u51FD\u6570<code>Axios</code>\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">Axios</span><span class="token punctuation">(</span><span class="token parameter">instanceConfig</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u9ED8\u8BA4\u53C2\u6570</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>defaults <span class="token operator">=</span> instanceConfig<span class="token punctuation">;</span>
  <span class="token comment">// \u62E6\u622A\u5668 \u8BF7\u6C42\u548C\u54CD\u5E94\u62E6\u622A\u5668</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>interceptors <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">request</span><span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">InterceptorManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token literal-property property">response</span><span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">InterceptorManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token class-name">Axios</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">request</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">config</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token comment">// \u7701\u7565\uFF0C\u8FD9\u4E2A\u662F\u6838\u5FC3\u65B9\u6CD5\uFF0C\u540E\u6587\u7ED3\u5408\u4F8B\u5B50\u8BE6\u7EC6\u63CF\u8FF0</span>
  <span class="token comment">// code ...</span>
  <span class="token keyword">var</span> promise <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// code ...</span>
  <span class="token keyword">return</span> promise<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u8FD9\u662F\u83B7\u53D6 Uri \u7684\u51FD\u6570\uFF0C\u8FD9\u91CC\u7701\u7565</span>
<span class="token class-name">Axios</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">getUri</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token comment">// \u63D0\u4F9B\u4E00\u4E9B\u8BF7\u6C42\u65B9\u6CD5\u7684\u522B\u540D</span>
<span class="token comment">// Provide aliases for supported request methods</span>
<span class="token comment">// \u904D\u5386\u6267\u884C</span>
<span class="token comment">// \u4E5F\u5C31\u662F\u4E3A\u5565\u6211\u4EEC\u53EF\u4EE5 axios.get \u7B49\u522B\u540D\u7684\u65B9\u5F0F\u8C03\u7528\uFF0C\u800C\u4E14\u8C03\u7528\u7684\u662F Axios.prototype.request \u65B9\u6CD5</span>
<span class="token comment">// \u8FD9\u4E2A\u4E5F\u5728\u4E0A\u9762\u7684 axios \u7ED3\u6784\u56FE\u4E0A\u6709\u6240\u4F53\u73B0\u3002</span>
utils<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;delete&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;get&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;head&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;options&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token function">forEachMethodNoData</span><span class="token punctuation">(</span><span class="token parameter">method</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">/*eslint func-names:0*/</span>
  <span class="token class-name">Axios</span><span class="token punctuation">.</span>prototype<span class="token punctuation">[</span>method<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">url<span class="token punctuation">,</span> config</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">request</span><span class="token punctuation">(</span>utils<span class="token punctuation">.</span><span class="token function">merge</span><span class="token punctuation">(</span>config <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">method</span><span class="token operator">:</span> method<span class="token punctuation">,</span>
      <span class="token literal-property property">url</span><span class="token operator">:</span> url
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

utils<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;post&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;put&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;patch&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token function">forEachMethodWithData</span><span class="token punctuation">(</span><span class="token parameter">method</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">/*eslint func-names:0*/</span>
  <span class="token class-name">Axios</span><span class="token punctuation">.</span>prototype<span class="token punctuation">[</span>method<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">url<span class="token punctuation">,</span> data<span class="token punctuation">,</span> config</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">request</span><span class="token punctuation">(</span>utils<span class="token punctuation">.</span><span class="token function">merge</span><span class="token punctuation">(</span>config <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">method</span><span class="token operator">:</span> method<span class="token punctuation">,</span>
      <span class="token literal-property property">url</span><span class="token operator">:</span> url<span class="token punctuation">,</span>
      <span class="token literal-property property">data</span><span class="token operator">:</span> data
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> Axios<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br></div></div><h3 id="\u62E6\u622A\u5668\u7BA1\u7406\u6784\u9020\u51FD\u6570-interceptormanager" tabindex="-1"><a class="header-anchor" href="#\u62E6\u622A\u5668\u7BA1\u7406\u6784\u9020\u51FD\u6570-interceptormanager" aria-hidden="true">#</a> \u62E6\u622A\u5668\u7BA1\u7406\u6784\u9020\u51FD\u6570 InterceptorManager</h3><blockquote><p>\u8BF7\u6C42\u524D\u62E6\u622A\uFF0C\u548C\u8BF7\u6C42\u540E\u62E6\u622A\u3002</p></blockquote><p>\u5728<code>Axios.prototype.request</code>\u51FD\u6570\u91CC\u4F7F\u7528\uFF0C\u5177\u4F53\u600E\u4E48\u5B9E\u73B0\u7684\u62E6\u622A\u7684\uFF0C\u540E\u6587\u914D\u5408\u4F8B\u5B50\u8BE6\u7EC6\u8BB2\u8FF0\u3002</p><blockquote><p>\u5982\u4F55\u4F7F\u7528\uFF1A</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// Add a request interceptor</span>
<span class="token comment">// \u6DFB\u52A0\u8BF7\u6C42\u524D\u62E6\u622A\u5668</span>
axios<span class="token punctuation">.</span>interceptors<span class="token punctuation">.</span>request<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">config</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// Do something before request is sent</span>
  <span class="token keyword">return</span> config<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// Do something with request error</span>
  <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Add a response interceptor</span>
<span class="token comment">// \u6DFB\u52A0\u8BF7\u6C42\u540E\u62E6\u622A\u5668</span>
axios<span class="token punctuation">.</span>interceptors<span class="token punctuation">.</span>response<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">response</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// Any status code that lie within the range of 2xx cause this function to trigger</span>
  <span class="token comment">// Do something with response data</span>
  <span class="token keyword">return</span> response<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// Any status codes that falls outside the range of 2xx cause this function to trigger</span>
  <span class="token comment">// Do something with response error</span>
  <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><blockquote><p>\u5982\u679C\u60F3\u628A\u62E6\u622A\u5668\uFF0C\u53EF\u4EE5\u7528<code>eject</code>\u65B9\u6CD5\u3002</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> myInterceptor <span class="token operator">=</span> axios<span class="token punctuation">.</span>interceptors<span class="token punctuation">.</span>request<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment">/*...*/</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
axios<span class="token punctuation">.</span>interceptors<span class="token punctuation">.</span>request<span class="token punctuation">.</span><span class="token function">eject</span><span class="token punctuation">(</span>myInterceptor<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><blockquote><p>\u62E6\u622A\u5668\u4E5F\u53EF\u4EE5\u6DFB\u52A0\u81EA\u5B9A\u4E49\u7684\u5B9E\u4F8B\u4E0A\u3002</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> instance <span class="token operator">=</span> axios<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
instance<span class="token punctuation">.</span>interceptors<span class="token punctuation">.</span>request<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment">/*...*/</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>\u6E90\u7801\u5B9E\u73B0\uFF1A</p><blockquote><p>\u6784\u9020\u51FD\u6570\uFF0C<code>handles</code> \u7528\u4E8E\u5B58\u50A8\u62E6\u622A\u5668\u51FD\u6570\u3002</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">InterceptorManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>handlers <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u63A5\u4E0B\u6765\u58F0\u660E\u4E86\u4E09\u4E2A\u65B9\u6CD5\uFF1A<code>\u4F7F\u7528</code>\u3001<code>\u79FB\u9664</code>\u3001<code>\u904D\u5386</code>\u3002</p><h3 id="interceptormanager-prototype-use-\u4F7F\u7528" tabindex="-1"><a class="header-anchor" href="#interceptormanager-prototype-use-\u4F7F\u7528" aria-hidden="true">#</a> InterceptorManager.prototype.use \u4F7F\u7528</h3><p>\u4F20\u9012\u4E24\u4E2A\u51FD\u6570\u4F5C\u4E3A\u53C2\u6570\uFF0C\u6570\u7EC4\u4E2D\u7684\u4E00\u9879\u5B58\u50A8\u7684\u662F<code>{fulfilled: function(){}, rejected: function(){}}</code>\u3002\u8FD4\u56DE\u6570\u5B57 <code>ID</code>\uFF0C\u7528\u4E8E\u79FB\u9664\u62E6\u622A\u5668\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>Function<span class="token punctuation">}</span></span> <span class="token parameter">fulfilled</span> The function to handle \`then\` for a \`Promise\`
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>Function<span class="token punctuation">}</span></span> <span class="token parameter">rejected</span> The function to handle \`reject\` for a \`Promise\`
 *
 * <span class="token keyword">@return</span> <span class="token class-name"><span class="token punctuation">{</span>Number<span class="token punctuation">}</span></span> \u8FD4\u56DEID \u662F\u4E3A\u4E86\u7528 eject \u79FB\u9664
 */</span>
<span class="token class-name">InterceptorManager</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">use</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">use</span><span class="token punctuation">(</span><span class="token parameter">fulfilled<span class="token punctuation">,</span> rejected</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>handlers<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">fulfilled</span><span class="token operator">:</span> fulfilled<span class="token punctuation">,</span>
    <span class="token literal-property property">rejected</span><span class="token operator">:</span> rejected
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>handlers<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h3 id="interceptormanager-prototype-eject-\u79FB\u9664" tabindex="-1"><a class="header-anchor" href="#interceptormanager-prototype-eject-\u79FB\u9664" aria-hidden="true">#</a> InterceptorManager.prototype.eject \u79FB\u9664</h3><p>\u6839\u636E <code>use</code> \u8FD4\u56DE\u7684 <code>ID</code> \u79FB\u9664 \u62E6\u622A\u5668\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>Number<span class="token punctuation">}</span></span> <span class="token parameter">id</span> The ID that was returned by \`use\`
 */</span>
<span class="token class-name">InterceptorManager</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">eject</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">eject</span><span class="token punctuation">(</span><span class="token parameter">id</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>handlers<span class="token punctuation">[</span>id<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>handlers<span class="token punctuation">[</span>id<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>\u6709\u70B9\u7C7B\u4F3C\u5B9A\u65F6\u5668<code>setTimeout</code> \u548C <code>setInterval</code>\uFF0C\u8FD4\u56DE\u503C\u662F<code>id</code>\u3002\u7528<code>clearTimeout</code> \u548C<code>clearInterval</code>\u6765\u6E05\u9664\u5B9A\u65F6\u5668\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u63D0\u4E00\u4E0B \u5B9A\u65F6\u5668\u56DE\u8C03\u51FD\u6570\u662F\u53EF\u4EE5\u4F20\u53C2\u7684\uFF0C\u8FD4\u56DE\u503C timer \u662F\u6570\u5B57</span>
<span class="token keyword">var</span> timer <span class="token operator">=</span> <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">,</span> <span class="token string">&#39;\u82E5\u5DDD&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>timer<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u6570\u5B57 ID</span>
<span class="token comment">// \u5728\u63A7\u5236\u53F0\u7B49\u4F1A\u518D\u8F93\u5165\u6267\u884C\u8FD9\u53E5\uFF0C\u5B9A\u65F6\u5668\u5C31\u88AB\u6E05\u9664\u4E86</span>
<span class="token function">clearInterval</span><span class="token punctuation">(</span>timer<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="interceptormanager-prototype-foreach-\u904D\u5386" tabindex="-1"><a class="header-anchor" href="#interceptormanager-prototype-foreach-\u904D\u5386" aria-hidden="true">#</a> InterceptorManager.prototype.forEach \u904D\u5386</h3><p>\u904D\u5386\u6267\u884C\u6240\u6709\u62E6\u622A\u5668\uFF0C\u4F20\u9012\u4E00\u4E2A\u56DE\u8C03\u51FD\u6570\uFF08\u6BCF\u4E00\u4E2A\u62E6\u622A\u5668\u51FD\u6570\u4F5C\u4E3A\u53C2\u6570\uFF09\u8C03\u7528\uFF0C\u88AB\u79FB\u9664\u7684\u4E00\u9879\u662F<code>null</code>\uFF0C\u6240\u4EE5\u4E0D\u4F1A\u6267\u884C\uFF0C\u4E5F\u5C31\u8FBE\u5230\u4E86\u79FB\u9664\u7684\u6548\u679C\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>Function<span class="token punctuation">}</span></span> <span class="token parameter">fn</span> The function to call for each interceptor
 */</span>
<span class="token class-name">InterceptorManager</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">forEach</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">fn</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  utils<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>handlers<span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token function">forEachHandler</span><span class="token punctuation">(</span><span class="token parameter">h</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>h <span class="token operator">!==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">fn</span><span class="token punctuation">(</span>h<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h2 id="\u5B9E\u4F8B\u7ED3\u5408" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u4F8B\u7ED3\u5408" aria-hidden="true">#</a> \u5B9E\u4F8B\u7ED3\u5408</h2><p>\u4E0A\u6587\u53D9\u8FF0\u7684\u8C03\u8BD5\u65F6\u8FD0\u884C<code>npm start</code> \u662F\u7528<code>axios/sandbox/client.html</code>\u8DEF\u5F84\u7684\u6587\u4EF6\u4F5C\u4E3A\u793A\u4F8B\u7684</p><blockquote><p>\u4EE5\u4E0B\u662F\u4E00\u6BB5\u8FD9\u4E2A\u6587\u4EF6\u4E2D\u7684\u4EE3\u7801\u3002</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">axios</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  response<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>data<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  response<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>data<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="\u5148\u770B\u8C03\u7528\u6808\u6D41\u7A0B" tabindex="-1"><a class="header-anchor" href="#\u5148\u770B\u8C03\u7528\u6808\u6D41\u7A0B" aria-hidden="true">#</a> \u5148\u770B\u8C03\u7528\u6808\u6D41\u7A0B</h3><p>\u5982\u679C\u4E0D\u60F3\u4E00\u6B65\u6B65\u8C03\u8BD5\uFF0C\u6709\u4E2A\u5077\u5DE7\u7684\u65B9\u6CD5\u3002 \u77E5\u9053 <code>axios</code> \u4F7F\u7528\u4E86<code>XMLHttpRequest</code>\u3002 \u53EF\u4EE5\u5728\u9879\u76EE\u4E2D\u641C\u7D22\uFF1A<code>new XMLHttpRequest</code>\u3002 \u5B9A\u4F4D\u5230\u6587\u4EF6 <code>axios/lib/adapters/xhr.js</code> \u5728\u8FD9\u6761\u8BED\u53E5 <code>var request = new XMLHttpRequest();</code><code>chrome</code> \u6D4F\u89C8\u5668\u4E2D \u6253\u4E2A\u65AD\u70B9\u8C03\u8BD5\u4E0B\uFF0C\u518D\u6839\u636E\u8C03\u7528\u6808\u6765\u7EC6\u770B\u5177\u4F53\u51FD\u6570\u7B49\u5B9E\u73B0\u3002</p><p><code>Call Stack</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">dispatchXhrRequest</span> <span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>js<span class="token operator">:</span><span class="token number">19</span><span class="token punctuation">)</span>
<span class="token function">xhrAdapter</span> <span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>js<span class="token operator">:</span><span class="token number">12</span><span class="token punctuation">)</span>
<span class="token function">dispatchRequest</span> <span class="token punctuation">(</span>dispatchRequest<span class="token punctuation">.</span>js<span class="token operator">:</span><span class="token number">60</span><span class="token punctuation">)</span>
Promise<span class="token punctuation">.</span><span class="token function">then</span> <span class="token punctuation">(</span>async<span class="token punctuation">)</span>
<span class="token function">request</span> <span class="token punctuation">(</span>Axios<span class="token punctuation">.</span>js<span class="token operator">:</span><span class="token number">54</span><span class="token punctuation">)</span>
<span class="token function">wrap</span> <span class="token punctuation">(</span>bind<span class="token punctuation">.</span>js<span class="token operator">:</span><span class="token number">10</span><span class="token punctuation">)</span>
submit<span class="token punctuation">.</span><span class="token function">onclick</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token operator">:</span><span class="token number">138</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><div class="custom-container tip"><p class="custom-container-title">\u7B80\u8FF0\u4E0B\u6D41\u7A0B\uFF1A</p><ol><li><p><code>Send Request</code> \u6309\u94AE\u70B9\u51FB <code>submit.onclick</code></p></li><li><p>\u8C03\u7528 <code>axios</code> \u51FD\u6570\u5B9E\u9645\u4E0A\u662F\u8C03\u7528 <code>Axios.prototype.request</code> \u51FD\u6570\uFF0C\u800C\u8FD9\u4E2A\u51FD\u6570\u4F7F\u7528 <code>bind</code> \u8FD4\u56DE\u7684\u4E00\u4E2A\u540D\u4E3A<code>wrap</code>\u7684\u51FD\u6570\u3002</p></li><li><p>\u8C03\u7528 <code>Axios.prototype.request</code></p></li><li><p>\uFF08\u6709\u8BF7\u6C42\u62E6\u622A\u5668\u7684\u60C5\u51B5\u4E0B\u6267\u884C\u8BF7\u6C42\u62E6\u622A\u5668\uFF09\uFF0C\u4E2D\u95F4\u4F1A\u6267\u884C <code>dispatchRequest</code>\u65B9\u6CD5</p></li><li><p><code>dispatchRequest</code> \u4E4B\u540E\u8C03\u7528 <code>adapter(xhrAdapter)</code></p></li><li><p>\u6700\u540E\u8C03\u7528 <code>Promise</code> \u4E2D\u7684\u51FD\u6570<code>dispatchXhrRequest</code>\uFF0C\uFF08\u6709\u54CD\u5E94\u62E6\u622A\u5668\u7684\u60C5\u51B5\u4E0B\u6700\u540E\u4F1A\u518D\u8C03\u7528\u54CD\u5E94\u62E6\u622A\u5668\uFF09</p></li></ol></div><h3 id="axios-prototype-request-\u8BF7\u6C42\u6838\u5FC3\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#axios-prototype-request-\u8BF7\u6C42\u6838\u5FC3\u65B9\u6CD5" aria-hidden="true">#</a> Axios.prototype.request \u8BF7\u6C42\u6838\u5FC3\u65B9\u6CD5</h3><p>\u8FD9\u4E2A\u51FD\u6570\u662F\u6838\u5FC3\u51FD\u6570\u3002 \u4E3B\u8981\u505A\u4E86\u8FD9\u51E0\u4EF6\u4E8B\uFF1A</p><blockquote><ol><li><p>\u5224\u65AD\u7B2C\u4E00\u4E2A\u53C2\u6570\u662F\u5B57\u7B26\u4E32\uFF0C\u5219\u8BBE\u7F6E <code>url</code>,\u4E5F\u5C31\u662F\u652F\u6301<code>axios(&#39;example/url&#39;, [, config])</code>\uFF0C\u4E5F\u652F\u6301<code>axios({})</code>\u3002</p></li><li><p>\u5408\u5E76\u9ED8\u8BA4\u53C2\u6570\u548C\u7528\u6237\u4F20\u9012\u7684\u53C2\u6570</p></li><li><p>\u8BBE\u7F6E\u8BF7\u6C42\u7684\u65B9\u6CD5\uFF0C\u9ED8\u8BA4\u662F\u662F<code>get</code>\u65B9\u6CD5</p></li><li><p>\u5C06\u7528\u6237\u8BBE\u7F6E\u7684\u8BF7\u6C42\u548C\u54CD\u5E94\u62E6\u622A\u5668\u3001\u53D1\u9001\u8BF7\u6C42\u7684<code>dispatchRequest</code>\u7EC4\u6210<code>Promise</code>\u94FE\uFF0C\u6700\u540E\u8FD4\u56DE\u8FD8\u662F<code>Promise</code>\u5B9E\u4F8B\u3002</p></li></ol></blockquote><blockquote><p>\u4E5F\u5C31\u662F\u4FDD\u8BC1\u4E86\u8BF7\u6C42\u524D\u62E6\u622A\u5668\u5148\u6267\u884C\uFF0C\u7136\u540E\u53D1\u9001\u8BF7\u6C42\uFF0C\u518D\u54CD\u5E94\u62E6\u622A\u5668\u6267\u884C\u8FD9\u6837\u7684\u987A\u5E8F\u3002</p><p>\u4E5F\u5C31\u662F\u4E3A\u5565\u6700\u540E\u8FD8\u662F\u53EF\u4EE5<code>then</code>\uFF0C<code>catch</code>\u65B9\u6CD5\u7684\u7F18\u6545\u3002</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token class-name">Axios</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">request</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">request</span><span class="token punctuation">(</span><span class="token parameter">config</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">/*eslint no-param-reassign:0*/</span>
  <span class="token comment">// Allow for axios(&#39;example/url&#39;[, config]) a la fetch API</span>
  <span class="token comment">// \u8FD9\u4E00\u6BB5\u4EE3\u7801 \u5176\u5B9E\u5C31\u662F \u4F7F axios(&#39;example/url&#39;, [, config])</span>
  <span class="token comment">// config \u53C2\u6570\u53EF\u4EE5\u7701\u7565</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> config <span class="token operator">===</span> <span class="token string">&#39;string&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    config <span class="token operator">=</span> arguments<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
    config<span class="token punctuation">.</span>url <span class="token operator">=</span> arguments<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    config <span class="token operator">=</span> config <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \u5408\u5E76\u9ED8\u8BA4\u53C2\u6570\u548C\u7528\u6237\u4F20\u9012\u7684\u53C2\u6570</span>
  config <span class="token operator">=</span> <span class="token function">mergeConfig</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>defaults<span class="token punctuation">,</span> config<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// Set config.method</span>
  <span class="token comment">// \u8BBE\u7F6E \u8BF7\u6C42\u65B9\u6CD5\uFF0C\u9ED8\u8BA4 get \u3002</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>config<span class="token punctuation">.</span>method<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    config<span class="token punctuation">.</span>method <span class="token operator">=</span> config<span class="token punctuation">.</span>method<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>defaults<span class="token punctuation">.</span>method<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    config<span class="token punctuation">.</span>method <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>defaults<span class="token punctuation">.</span>method<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    config<span class="token punctuation">.</span>method <span class="token operator">=</span> <span class="token string">&#39;get&#39;</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// Hook up interceptors middleware</span>
  <span class="token comment">// \u7EC4\u6210\`Promise\`\u94FE \u8FD9\u6BB5\u62C6\u5F00\u5230\u540E\u6587\u518D\u8BB2\u8FF0</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br></div></div><h3 id="\u7EC4\u6210promise\u94FE-\u8FD4\u56DEpromise\u5B9E\u4F8B" tabindex="-1"><a class="header-anchor" href="#\u7EC4\u6210promise\u94FE-\u8FD4\u56DEpromise\u5B9E\u4F8B" aria-hidden="true">#</a> \u7EC4\u6210Promise\u94FE\uFF0C\u8FD4\u56DEPromise\u5B9E\u4F8B</h3><blockquote><p>\u8FD9\u90E8\u5206\uFF1A\u7528\u6237\u8BBE\u7F6E\u7684\u8BF7\u6C42\u548C\u54CD\u5E94\u62E6\u622A\u5668\u3001\u53D1\u9001\u8BF7\u6C42\u7684<code>dispatchRequest</code>\u7EC4\u6210<code>Promise</code>\u94FE\u3002\u4E5F\u5C31\u662F\u4FDD\u8BC1\u4E86\u8BF7\u6C42\u524D\u62E6\u622A\u5668\u5148\u6267\u884C\uFF0C\u7136\u540E\u53D1\u9001\u8BF7\u6C42\uFF0C\u518D\u54CD\u5E94\u62E6\u622A\u5668\u6267\u884C\u8FD9\u6837\u7684\u987A\u5E8F</p></blockquote><blockquote><p>\u4E5F\u5C31\u662F\u4FDD\u8BC1\u4E86\u8BF7\u6C42\u524D\u62E6\u622A\u5668\u5148\u6267\u884C\uFF0C\u7136\u540E\u53D1\u9001\u8BF7\u6C42\uFF0C\u518D\u54CD\u5E94\u62E6\u622A\u5668\u6267\u884C\u8FD9\u6837\u7684\u987A\u5E8F</p><p>\u4E5F\u5C31\u662F\u4E3A\u5565\u6700\u540E\u8FD8\u662F\u53EF\u4EE5<code>then</code>\uFF0C<code>catch</code>\u65B9\u6CD5\u7684\u7F18\u6545\u3002</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token comment">// \u7EC4\u6210\`Promise\`\u94FE</span>
  <span class="token comment">// Hook up interceptors middleware</span>
  <span class="token comment">// \u628A xhr \u8BF7\u6C42 \u7684 dispatchRequest \u548C undefined \u653E\u5728\u4E00\u4E2A\u6570\u7EC4\u91CC</span>
  <span class="token keyword">var</span> chain <span class="token operator">=</span> <span class="token punctuation">[</span>dispatchRequest<span class="token punctuation">,</span> <span class="token keyword">undefined</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token comment">// \u521B\u5EFA Promise \u5B9E\u4F8B</span>
  <span class="token keyword">var</span> promise <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span><span class="token punctuation">;</span>

 <span class="token comment">// \u904D\u5386\u7528\u6237\u8BBE\u7F6E\u7684\u8BF7\u6C42\u62E6\u622A\u5668 \u653E\u5230\u6570\u7EC4\u7684 chain \u524D\u9762</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>interceptors<span class="token punctuation">.</span>request<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token function">unshiftRequestInterceptors</span><span class="token punctuation">(</span><span class="token parameter">interceptor</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    chain<span class="token punctuation">.</span><span class="token function">unshift</span><span class="token punctuation">(</span>interceptor<span class="token punctuation">.</span>fulfilled<span class="token punctuation">,</span> interceptor<span class="token punctuation">.</span>rejected<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

 <span class="token comment">// \u904D\u5386\u7528\u6237\u8BBE\u7F6E\u7684\u54CD\u5E94\u62E6\u622A\u5668 \u653E\u5230\u6570\u7EC4\u7684 chain \u540E\u9762</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>interceptors<span class="token punctuation">.</span>response<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token function">pushResponseInterceptors</span><span class="token punctuation">(</span><span class="token parameter">interceptor</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    chain<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>interceptor<span class="token punctuation">.</span>fulfilled<span class="token punctuation">,</span> interceptor<span class="token punctuation">.</span>rejected<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

 <span class="token comment">// \u904D\u5386 chain \u6570\u7EC4\uFF0C\u76F4\u5230\u904D\u5386 chain.length \u4E3A 0</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span>chain<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u4E24\u4E24\u5BF9\u5E94\u79FB\u51FA\u6765 \u653E\u5230 then \u7684\u4E24\u4E2A\u53C2\u6570\u91CC\u3002</span>
    promise <span class="token operator">=</span> promise<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>chain<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> chain<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> promise<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> promise <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><blockquote><p>\u4F5C\u7528\u662F\u751F\u6210Promise\u5B9E\u4F8B</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> promise <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;\u82E5\u5DDD&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// \u7B49\u4EF7\u4E8E</span>
<span class="token comment">// new Promise(resolve =&gt; resolve({name: &#39;\u82E5\u5DDD&#39;}))</span>
promise<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">config</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// {name: &quot;\u82E5\u5DDD&quot;}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><blockquote><p>\u540C\u6837\u89E3\u91CA\u4E0B\u540E\u6587\u4F1A\u51FA\u73B0\u7684<code>Promise.reject(error);</code>\uFF1A</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> promise <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;\u82E5\u5DDD&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// \u7B49\u4EF7\u4E8E</span>
<span class="token comment">// new Promise(reject =&gt; reject({name: &#39;\u82E5\u5DDD&#39;}))</span>

<span class="token comment">// promise.then(null, function (config){</span>
<span class="token comment">//   console.log(config)</span>
<span class="token comment">// });</span>
<span class="token comment">// \u7B49\u4EF7\u4E8E</span>
promise<span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">config</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// {name: &quot;\u82E5\u5DDD&quot;}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>\u63A5\u4E0B\u6765\u7ED3\u5408\u4F8B\u5B50\uFF0C\u6765\u7406\u89E3\u8FD9\u6BB5\u4EE3\u7801\u3002</p><p>\u5F88\u9057\u61BE\uFF0C\u5728<code>example</code>\u6587\u4EF6\u5939\u6CA1\u6709\u62E6\u622A\u5668\u7684\u4F8B\u5B50\u3002\u5728<code>example</code>\u4E2D\u5728<code>example/get</code>\u7684\u57FA\u7840\u4E0A\u6DFB\u52A0\u4E86\u4E00\u4E2A\u62E6\u622A\u5668\u7684\u793A\u4F8B\u3002<code>axios/examples/interceptors</code>\uFF0C\u4FBF\u4E8E\u8C03\u8BD5\u3002</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">node</span> ./examples/server.js -p <span class="token number">5000</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><code>promise = promise.then(chain.shift(), chain.shift());</code>\u8FD9\u6BB5\u4EE3\u7801\u6253\u4E2A\u65AD\u70B9\u3002</p>`,104),M=["src"],H=a(`<blockquote><p>\u7279\u522B\u5173\u6CE8\u4E0B\uFF0C\u53F3\u4FA7\uFF0C<code>local</code>\u4E2D\u7684<code>chain</code>\u6570\u7EC4\u3002\u4E5F\u5C31\u662F\u8FD9\u6837\u7684\u7ED3\u6784\u3002</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> chain <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token string">&#39;\u8BF7\u6C42\u6210\u529F\u62E6\u622A2&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;\u8BF7\u6C42\u5931\u8D25\u62E6\u622A2&#39;</span><span class="token punctuation">,</span>  
  <span class="token string">&#39;\u8BF7\u6C42\u6210\u529F\u62E6\u622A1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;\u8BF7\u6C42\u5931\u8D25\u62E6\u622A1&#39;</span><span class="token punctuation">,</span>  
  dispatch<span class="token punctuation">,</span>  <span class="token keyword">undefined</span><span class="token punctuation">,</span>
  <span class="token string">&#39;\u54CD\u5E94\u6210\u529F\u62E6\u622A1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;\u54CD\u5E94\u5931\u8D25\u62E6\u622A1&#39;</span><span class="token punctuation">,</span>
  <span class="token string">&#39;\u54CD\u5E94\u6210\u529F\u62E6\u622A2&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;\u54CD\u5E94\u5931\u8D25\u62E6\u622A2&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>\u8FD9\u6BB5\u4EE3\u7801\u76F8\u5BF9\u6BD4\u8F83\u7ED5\u3002\u4E5F\u5C31\u662F\u4F1A\u751F\u6210\u5982\u4E0B\u7C7B\u4F3C\u7684\u4EE3\u7801\uFF0C\u4E2D\u95F4\u4F1A\u8C03\u7528<code>dispatchRequest</code>\u65B9\u6CD5\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// config \u662F \u7528\u6237\u914D\u7F6E\u548C\u9ED8\u8BA4\u914D\u7F6E\u5408\u5E76\u7684</span>
<span class="token keyword">var</span> promise <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span><span class="token punctuation">;</span>
promise<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token string">&#39;\u8BF7\u6C42\u6210\u529F\u62E6\u622A2&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;\u8BF7\u6C42\u5931\u8D25\u62E6\u622A2&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token string">&#39;\u8BF7\u6C42\u6210\u529F\u62E6\u622A1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;\u8BF7\u6C42\u5931\u8D25\u62E6\u622A1&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>dispatchRequest<span class="token punctuation">,</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token string">&#39;\u54CD\u5E94\u6210\u529F\u62E6\u622A1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;\u54CD\u5E94\u5931\u8D25\u62E6\u622A1&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token string">&#39;\u54CD\u5E94\u6210\u529F\u62E6\u622A2&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;\u54CD\u5E94\u5931\u8D25\u62E6\u622A2&#39;</span><span class="token punctuation">)</span>

<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token string">&#39;\u7528\u6237\u5199\u7684\u4E1A\u52A1\u5904\u7406\u51FD\u6570&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token string">&#39;\u7528\u6237\u5199\u7684\u62A5\u9519\u4E1A\u52A1\u5904\u7406\u51FD\u6570&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><div class="custom-container tip"><p class="custom-container-title">\u603B\u7ED3</p><p>\u8FD9\u91CC\u63D0\u4E0B<code>promise</code> <code>then</code>\u548C<code>catch</code>\u77E5\u8BC6\uFF1A</p><p><code>Promise.prototype.then</code>\u65B9\u6CD5\u7684\u7B2C\u4E00\u4E2A\u53C2\u6570\u662F<code>resolved</code>\u72B6\u6001\u7684\u56DE\u8C03\u51FD\u6570\uFF0C\u7B2C\u4E8C\u4E2A\u53C2\u6570\uFF08\u53EF\u9009\uFF09\u662F<code>rejected</code>\u72B6\u6001\u7684\u56DE\u8C03\u51FD\u6570\u3002\u6240\u4EE5\u662F\u6210\u5BF9\u51FA\u73B0\u7684\u3002</p><p><code>Promise.prototype.catch</code>\u65B9\u6CD5\u662F<code>.then(null, rejection)</code>\u6216<code>.then(undefined, rejection)</code>\u7684\u522B\u540D\uFF0C\u7528\u4E8E\u6307\u5B9A\u53D1\u751F\u9519\u8BEF\u65F6\u7684\u56DE\u8C03\u51FD\u6570\u3002</p><p><code>then</code>\u65B9\u6CD5\u8FD4\u56DE\u7684\u662F\u4E00\u4E2A\u65B0\u7684<code>Promise</code>\u5B9E\u4F8B\uFF08\u6CE8\u610F\uFF0C\u4E0D\u662F\u539F\u6765\u90A3\u4E2A<code>Promise</code>\u5B9E\u4F8B\uFF09\u3002\u56E0\u6B64\u53EF\u4EE5\u91C7\u7528\u94FE\u5F0F\u5199\u6CD5\uFF0C\u5373<code>then</code>\u65B9\u6CD5\u540E\u9762\u518D\u8C03\u7528\u53E6\u4E00\u4E2A<code>then</code>\u65B9\u6CD5\u3002</p></div><blockquote><p>\u7ED3\u5408\u4E0A\u8FF0\u7684\u4F8B\u5B50\u66F4\u8BE6\u7EC6\u4E00\u70B9\uFF0C\u4EE3\u7801\u5219\u662F\u8FD9\u6837\u7684\u3002</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> promise <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// promise.then(&#39;\u8BF7\u6C42\u6210\u529F\u62E6\u622A2&#39;, &#39;\u8BF7\u6C42\u5931\u8D25\u62E6\u622A2&#39;)</span>
promise<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token function">requestSuccess2</span><span class="token punctuation">(</span><span class="token parameter">config</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;------request------success------2&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> config<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token function">requestError2</span><span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;------response------error------2&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// .then(&#39;\u8BF7\u6C42\u6210\u529F\u62E6\u622A1&#39;, &#39;\u8BF7\u6C42\u5931\u8D25\u62E6\u622A1&#39;)</span>
<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token function">requestSuccess1</span><span class="token punctuation">(</span><span class="token parameter">config</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;------request------success------1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> config<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token function">requestError1</span><span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;------response------error------1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// .then(dispatchRequest, undefined)</span>
<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span> <span class="token keyword">function</span> <span class="token function">dispatchRequest</span><span class="token punctuation">(</span><span class="token parameter">config</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token doc-comment comment">/**
    * \u9002\u914D\u5668\u8FD4\u56DE\u7684\u4E5F\u662FPromise \u5B9E\u4F8B
      adapter = function xhrAdapter(config) <span class="token punctuation">{</span>
            return new Promise(function dispatchXhrRequest(resolve, reject) <span class="token punctuation">{</span><span class="token punctuation">}</span>)
      <span class="token punctuation">}</span>
    **/</span>
  <span class="token keyword">return</span> <span class="token function">adapter</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token function">onAdapterResolution</span><span class="token punctuation">(</span><span class="token parameter">response</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u7701\u7565\u4EE3\u7801 ...</span>
    <span class="token keyword">return</span> response<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token function">onAdapterRejection</span><span class="token punctuation">(</span><span class="token parameter">reason</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u7701\u7565\u4EE3\u7801 ...</span>
    <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span>reason<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span>

<span class="token comment">// .then(&#39;\u54CD\u5E94\u6210\u529F\u62E6\u622A1&#39;, &#39;\u54CD\u5E94\u5931\u8D25\u62E6\u622A1&#39;)</span>
<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token function">responseSuccess1</span><span class="token punctuation">(</span><span class="token parameter">response</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;------response------success------1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> response<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token function">responseError1</span><span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;------response------error------1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// .then(&#39;\u54CD\u5E94\u6210\u529F\u62E6\u622A2&#39;, &#39;\u54CD\u5E94\u5931\u8D25\u62E6\u622A2&#39;)</span>
<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token function">responseSuccess2</span><span class="token punctuation">(</span><span class="token parameter">response</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;------response------success------2&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> response<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token function">responseError2</span><span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;------response------error------2&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// .then(&#39;\u7528\u6237\u5199\u7684\u4E1A\u52A1\u5904\u7406\u51FD\u6570&#39;)</span>
<span class="token comment">// .catch(&#39;\u7528\u6237\u5199\u7684\u62A5\u9519\u4E1A\u52A1\u5904\u7406\u51FD\u6570&#39;);</span>
<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">response</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u54C8\u54C8\u54C8\uFF0C\u7EC8\u4E8E\u83B7\u53D6\u5230\u6570\u636E\u4E86&#39;</span><span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u54CE\u5440\uFF0C\u600E\u4E48\u62A5\u9519\u4E86&#39;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br></div></div><p>\u4ED4\u7EC6\u770B\u8FD9\u6BB5<code>Promise</code>\u94FE\u5F0F\u8C03\u7528\uFF0C\u4EE3\u7801\u90FD\u7C7B\u4F3C\u3002<code>then</code>\u65B9\u6CD5\u6700\u540E\u8FD4\u56DE\u7684\u53C2\u6570\uFF0C\u5C31\u662F\u4E0B\u4E00\u4E2A<code>then</code>\u65B9\u6CD5\u7B2C\u4E00\u4E2A\u53C2\u6570\u3002</p><p><code>catch</code>\u9519\u8BEF\u6355\u83B7\uFF0C\u90FD\u8FD4\u56DE<code>Promise.reject(error)</code>\uFF0C\u8FD9\u662F\u4E3A\u4E86\u4FBF\u4E8E\u7528\u6237<code>catch</code>\u65F6\u80FD\u6355\u83B7\u5230\u9519\u8BEF\u3002</p><blockquote><p>\u4E3E\u4E2A\u4F8B\u5B50\uFF1A</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> p1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
 <span class="token function">reject</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;\u82E5\u5DDD&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

p1<span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">err</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">,</span> <span class="token string">&#39;err&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">err</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
 console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">,</span> <span class="token string">&#39;err1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">err</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
 console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">,</span> <span class="token string">&#39;err2&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p><code>err2</code>\u4E0D\u4F1A\u6355\u83B7\u5230\uFF0C\u4E5F\u5C31\u662F\u4E0D\u4F1A\u6267\u884C\uFF0C\u4F46\u5982\u679C\u90FD\u8FD4\u56DE\u4E86<code>return Promise.reject(err)</code>\uFF0C\u5219\u53EF\u4EE5\u6355\u83B7\u5230\u3002</p><p>\u6700\u540E\u753B\u4E2A\u56FE\u603B\u7ED3\u4E0B <code>Promise</code> \u94FE\u5F0F\u8C03\u7528\u3002</p>`,13),S=["src"],L=a(`<div class="custom-container tip"><p class="custom-container-title">\u5C0F\u7ED3</p><ol><li>\u8BF7\u6C42\u548C\u54CD\u5E94\u7684\u62E6\u622A\u5668\u53EF\u4EE5\u5199Promise\u3002</li><li>\u5982\u679C\u8BBE\u7F6E\u4E86\u591A\u4E2A\u8BF7\u6C42\u54CD\u5E94\u5668\uFF0C\u540E\u8BBE\u7F6E\u7684\u5148\u6267\u884C\u3002</li><li>\u5982\u679C\u8BBE\u7F6E\u4E86\u591A\u4E2A\u54CD\u5E94\u62E6\u622A\u5668\uFF0C\u5148\u8BBE\u7F6E\u7684\u5148\u6267\u884C\u3002</li></ol></div><p><code>dispatchRequest(config)</code> \u8FD9\u91CC\u7684<code>config</code>\u662F\u8BF7\u6C42\u6210\u529F\u62E6\u622A\u5668\u8FD4\u56DE\u7684\u3002\u63A5\u4E0B\u6765\u770B<code>dispatchRequest</code>\u51FD\u6570\u3002</p><h3 id="dispatchrequest-\u6700\u7EC8\u6D3E\u53D1\u8BF7\u6C42" tabindex="-1"><a class="header-anchor" href="#dispatchrequest-\u6700\u7EC8\u6D3E\u53D1\u8BF7\u6C42" aria-hidden="true">#</a> dispatchRequest \u6700\u7EC8\u6D3E\u53D1\u8BF7\u6C42</h3><p>\u8FD9\u4E2A\u51FD\u6570\u4E3B\u8981\u505A\u4E86\u5982\u4E0B\u51E0\u4EF6\u4E8B\u60C5\uFF1A</p><blockquote><p>1.\u5982\u679C\u5DF2\u7ECF\u53D6\u6D88\uFF0C\u5219 throw \u539F\u56E0\u62A5\u9519\uFF0C\u4F7FPromise\u8D70\u5411rejected\u3002</p><p>2.\u786E\u4FDD config.header \u5B58\u5728\u3002</p><p>3.\u5229\u7528\u7528\u6237\u8BBE\u7F6E\u7684\u548C\u9ED8\u8BA4\u7684\u8BF7\u6C42\u8F6C\u6362\u5668\u8F6C\u6362\u6570\u636E\u3002</p><p>4.\u62CD\u5E73 config.header\u3002</p><p>5.\u5220\u9664\u4E00\u4E9B config.header\u3002</p><p>6.\u8FD4\u56DE\u9002\u914D\u5668adapter\uFF08Promise\u5B9E\u4F8B\uFF09\u6267\u884C\u540E then\u6267\u884C\u540E\u7684 Promise\u5B9E\u4F8B\u3002\u8FD4\u56DE\u7ED3\u679C\u4F20\u9012\u7ED9\u54CD\u5E94\u62E6\u622A\u5668\u5904\u7406\u3002</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token string">&#39;use strict&#39;</span><span class="token punctuation">;</span>
<span class="token comment">// utils \u5DE5\u5177\u51FD\u6570</span>
<span class="token keyword">var</span> utils <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./../utils&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u8F6C\u6362\u6570\u636E</span>
<span class="token keyword">var</span> transformData <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./transformData&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u53D6\u6D88\u72B6\u6001</span>
<span class="token keyword">var</span> isCancel <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../cancel/isCancel&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u9ED8\u8BA4\u53C2\u6570</span>
<span class="token keyword">var</span> defaults <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../defaults&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * \u629B\u51FA \u9519\u8BEF\u539F\u56E0\uFF0C\u4F7F\`Promise\`\u8D70\u5411\`rejected\`
 */</span>
<span class="token keyword">function</span> <span class="token function">throwIfCancellationRequested</span><span class="token punctuation">(</span><span class="token parameter">config</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>config<span class="token punctuation">.</span>cancelToken<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    config<span class="token punctuation">.</span>cancelToken<span class="token punctuation">.</span><span class="token function">throwIfRequested</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
 * Dispatch a request to the server using the configured adapter.
 *
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>object<span class="token punctuation">}</span></span> <span class="token parameter">config</span> The config that is to be used for the request
 * <span class="token keyword">@returns</span> <span class="token class-name"><span class="token punctuation">{</span>Promise<span class="token punctuation">}</span></span> The Promise to be fulfilled
 */</span>
module<span class="token punctuation">.</span><span class="token function-variable function">exports</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">dispatchRequest</span><span class="token punctuation">(</span><span class="token parameter">config</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u53D6\u6D88\u76F8\u5173</span>
  <span class="token function">throwIfCancellationRequested</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// Ensure headers exist</span>
  <span class="token comment">// \u786E\u4FDD headers \u5B58\u5728</span>
  config<span class="token punctuation">.</span>headers <span class="token operator">=</span> config<span class="token punctuation">.</span>headers <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token comment">// Transform request data</span>
  <span class="token comment">// \u8F6C\u6362\u8BF7\u6C42\u7684\u6570\u636E</span>
  config<span class="token punctuation">.</span>data <span class="token operator">=</span> <span class="token function">transformData</span><span class="token punctuation">(</span>
    config<span class="token punctuation">.</span>data<span class="token punctuation">,</span>
    config<span class="token punctuation">.</span>headers<span class="token punctuation">,</span>
    config<span class="token punctuation">.</span>transformRequest
  <span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// Flatten headers</span>
  <span class="token comment">// \u62CD\u5E73 headers</span>
  config<span class="token punctuation">.</span>headers <span class="token operator">=</span> utils<span class="token punctuation">.</span><span class="token function">merge</span><span class="token punctuation">(</span>
    config<span class="token punctuation">.</span>headers<span class="token punctuation">.</span>common <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    config<span class="token punctuation">.</span>headers<span class="token punctuation">[</span>config<span class="token punctuation">.</span>method<span class="token punctuation">]</span> <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    config<span class="token punctuation">.</span>headers <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// \u4EE5\u4E0B\u8FD9\u4E9B\u65B9\u6CD5 \u5220\u9664 headers</span>
  utils<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>
    <span class="token punctuation">[</span><span class="token string">&#39;delete&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;get&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;head&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;post&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;put&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;patch&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;common&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token keyword">function</span> <span class="token function">cleanHeaderConfig</span><span class="token punctuation">(</span><span class="token parameter">method</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">delete</span> config<span class="token punctuation">.</span>headers<span class="token punctuation">[</span>method<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// adapter \u9002\u914D\u5668\u90E8\u5206 \u62C6\u5F00 \u653E\u5728\u4E0B\u6587\u8BB2</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br></div></div><p>\u4E0A\u6587\u7684\u4EE3\u7801\u91CC\u6709\u4E2A\u51FD\u6570 <code>transformData</code> \uFF0C\u8FD9\u91CC\u89E3\u91CA\u4E0B\u3002\u5176\u5B9E\u5C31\u662F\u904D\u5386\u4F20\u9012\u7684\u51FD\u6570\u6570\u7EC4 \u5BF9\u6570\u636E\u64CD\u4F5C\uFF0C\u6700\u540E\u8FD4\u56DE\u6570\u636E\u3002</p><p><code>axios.defaults.transformResponse</code> \u6570\u7EC4\u4E2D\u9ED8\u8BA4\u5C31\u6709\u4E00\u4E2A\u51FD\u6570\uFF0C\u6240\u4EE5\u4F7F\u7528<code>concat</code>\u94FE\u63A5\u81EA\u5B9A\u4E49\u7684\u51FD\u6570\u3002</p><blockquote><p>\u4F7F\u7528\uFF1A</p></blockquote><p>\u6587\u4EF6\u8DEF\u5F84 <code>axios/examples/transform-response/index.html</code></p><p>\u8FD9\u6BB5\u4EE3\u7801\u5176\u5B9E\u5C31\u662F\u5BF9\u65F6\u95F4\u683C\u5F0F\u7684\u5B57\u7B26\u4E32\u8F6C\u6362\u6210\u65F6\u95F4\u5BF9\u8C61\uFF0C\u53EF\u4EE5\u76F4\u63A5\u8C03\u7528<code>getMonth</code>\u7B49\u65B9\u6CD5\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token constant">ISO_8601</span> <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(\\d{4}-\\d{2}-\\d{2})T(\\d{2}:\\d{2}:\\d{2})Z</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function">formatDate</span><span class="token punctuation">(</span><span class="token parameter">d</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>d<span class="token punctuation">.</span><span class="token function">getMonth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&#39;/&#39;</span> <span class="token operator">+</span> d<span class="token punctuation">.</span><span class="token function">getDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&#39;/&#39;</span> <span class="token operator">+</span> d<span class="token punctuation">.</span><span class="token function">getFullYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

axios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;https://api.github.com/users/mzabriskie&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">transformResponse</span><span class="token operator">:</span> axios<span class="token punctuation">.</span>defaults<span class="token punctuation">.</span>transformResponse<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">data<span class="token punctuation">,</span> headers</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">k</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token constant">ISO_8601</span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>data<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        data<span class="token punctuation">[</span>k<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>Date<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>data<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> data<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;created&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token function">formatDate</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>data<span class="token punctuation">.</span>created_at<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><blockquote><p>\u6E90\u7801\uFF1A</p></blockquote><p>\u5C31\u662F\u904D\u5386\u6570\u7EC4\uFF0C\u8C03\u7528\u6570\u7EC4\u91CC\u7684\u4F20\u9012 <code>data</code> \u548C <code>headers</code> \u53C2\u6570\u8C03\u7528\u51FD\u6570\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>module<span class="token punctuation">.</span><span class="token function-variable function">exports</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">transformData</span><span class="token punctuation">(</span><span class="token parameter">data<span class="token punctuation">,</span> headers<span class="token punctuation">,</span> fns</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">/*eslint no-param-reassign:0*/</span>
  utils<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>fns<span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token function">transform</span><span class="token punctuation">(</span><span class="token parameter">fn</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    data <span class="token operator">=</span> <span class="token function">fn</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> headers<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> data<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h3 id="dispatchrequest-\u4E4B-adapter-\u9002\u914D\u5668\u6267\u884C\u90E8\u5206" tabindex="-1"><a class="header-anchor" href="#dispatchrequest-\u4E4B-adapter-\u9002\u914D\u5668\u6267\u884C\u90E8\u5206" aria-hidden="true">#</a> dispatchRequest \u4E4B adapter \u9002\u914D\u5668\u6267\u884C\u90E8\u5206</h3><p>\u9002\u914D\u5668\uFF0C\u5728\u8BBE\u8BA1\u6A21\u5F0F\u4E2D\u79F0\u4E4B\u4E3A\u9002\u914D\u5668\u6A21\u5F0F\u3002\u8BB2\u4E2A\u751F\u6D3B\u4E2D\u7B80\u5355\u7684\u4F8B\u5B50\uFF0C\u5927\u5BB6\u5C31\u5BB9\u6613\u7406\u89E3\u3002</p><p>\u6211\u4EEC\u5E38\u7528\u4EE5\u524D\u624B\u673A\u8033\u673A\u5B54\u90FD\u662F\u5706\u5B54\uFF0C\u800C\u73B0\u5728\u57FA\u672C\u662F\u8033\u673A\u5B54\u548C\u5145\u7535\u63A5\u53E3\u5408\u4E8C\u4E3A\u4E00\u3002\u7EDF\u4E00\u4E3A<code>typec</code>\u3002</p><p>\u8FD9\u65F6\u6211\u4EEC\u9700\u8981\u9700\u8981\u4E00\u4E2A<code>typec\u8F6C\u5706\u5B54\u7684\u8F6C\u63A5\u53E3</code>\uFF0C\u8FD9\u5C31\u662F\u9002\u914D\u5668\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token comment">// adapter \u9002\u914D\u5668\u90E8\u5206</span>
  <span class="token keyword">var</span> adapter <span class="token operator">=</span> config<span class="token punctuation">.</span>adapter <span class="token operator">||</span> defaults<span class="token punctuation">.</span>adapter<span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token function">adapter</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token function">onAdapterResolution</span><span class="token punctuation">(</span><span class="token parameter">response</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">throwIfCancellationRequested</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// Transform response data</span>
    <span class="token comment">// \u8F6C\u6362\u54CD\u5E94\u7684\u6570\u636E</span>
    response<span class="token punctuation">.</span>data <span class="token operator">=</span> <span class="token function">transformData</span><span class="token punctuation">(</span>
      response<span class="token punctuation">.</span>data<span class="token punctuation">,</span>
      response<span class="token punctuation">.</span>headers<span class="token punctuation">,</span>
      config<span class="token punctuation">.</span>transformResponse
    <span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> response<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token function">onAdapterRejection</span><span class="token punctuation">(</span><span class="token parameter">reason</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isCancel</span><span class="token punctuation">(</span>reason<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u53D6\u6D88\u76F8\u5173</span>
      <span class="token function">throwIfCancellationRequested</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span><span class="token punctuation">;</span>

      <span class="token comment">// Transform response data</span>
      <span class="token comment">// \u8F6C\u6362\u54CD\u5E94\u7684\u6570\u636E</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>reason <span class="token operator">&amp;&amp;</span> reason<span class="token punctuation">.</span>response<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        reason<span class="token punctuation">.</span>response<span class="token punctuation">.</span>data <span class="token operator">=</span> <span class="token function">transformData</span><span class="token punctuation">(</span>
          reason<span class="token punctuation">.</span>response<span class="token punctuation">.</span>data<span class="token punctuation">,</span>
          reason<span class="token punctuation">.</span>response<span class="token punctuation">.</span>headers<span class="token punctuation">,</span>
          config<span class="token punctuation">.</span>transformResponse
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span>reason<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br></div></div><p>\u63A5\u4E0B\u6765\u770B\u5177\u4F53\u7684 <code>adapter</code>\u3002</p><h3 id="adapter-\u9002\u914D\u5668-\u771F\u6B63\u53D1\u9001\u8BF7\u6C42" tabindex="-1"><a class="header-anchor" href="#adapter-\u9002\u914D\u5668-\u771F\u6B63\u53D1\u9001\u8BF7\u6C42" aria-hidden="true">#</a> adapter \u9002\u914D\u5668 \u771F\u6B63\u53D1\u9001\u8BF7\u6C42</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> adapter <span class="token operator">=</span> config<span class="token punctuation">.</span>adapter <span class="token operator">||</span> defaults<span class="token punctuation">.</span>adapter<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>\u770B\u4E86\u4E0A\u6587\u7684 <code>adapter</code>\uFF0C\u53EF\u4EE5\u77E5\u9053\u652F\u6301\u7528\u6237\u81EA\u5B9A\u4E49\u3002\u6BD4\u5982\u53EF\u4EE5\u901A\u8FC7\u5FAE\u4FE1\u5C0F\u7A0B\u5E8F <code>wx.request</code> \u6309\u7167\u8981\u6C42\u4E5F\u5199\u4E00\u4E2A <code>adapter</code>\u3002</p><p>\u63A5\u7740\u6765\u770B\u4E0B <code>defaults.ddapter</code>\u3002</p><p>\u6587\u4EF6\u8DEF\u5F84\uFF1A<code>axios/lib/defaults.js</code></p><p>\u6839\u636E\u5F53\u524D\u73AF\u5883\u5F15\u5165\uFF0C\u5982\u679C\u662F\u6D4F\u89C8\u5668\u73AF\u5883\u5F15\u5165<code>xhr</code>\uFF0C\u662F<code>node</code>\u73AF\u5883\u5219\u5F15\u5165<code>http</code>\u3002</p><p>\u7C7B\u4F3C\u5224\u65AD<code>node</code>\u73AF\u5883\uFF0C\u4E5F\u5728<code>sentry-javascript</code>\u6E90\u7801\u4E2D\u6709\u770B\u5230\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">getDefaultAdapter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> adapter<span class="token punctuation">;</span>
  <span class="token comment">// \u6839\u636E XMLHttpRequest \u5224\u65AD</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> XMLHttpRequest <span class="token operator">!==</span> <span class="token string">&#39;undefined&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// For browsers use XHR adapter</span>
    adapter <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./adapters/xhr&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u6839\u636E process \u5224\u65AD</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> process <span class="token operator">!==</span> <span class="token string">&#39;undefined&#39;</span> <span class="token operator">&amp;&amp;</span> <span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>process<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">&#39;[object process]&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// For node use HTTP adapter</span>
    adapter <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./adapters/http&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> adapter<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">var</span> defaults <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">adapter</span><span class="token operator">:</span> <span class="token function">getDefaultAdapter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p><code>xhr</code></p><p>\u63A5\u4E0B\u6765\u5C31\u662F\u6211\u4EEC\u719F\u6089\u7684 <code>XMLHttpRequest</code> \u5BF9\u8C61\u3002</p><div class="custom-container tip"><p class="custom-container-title">\u6CE8\u610F</p><p>\u4E3B\u8981\u63D0\u9192\u4E0B\uFF1A<code>onabort</code>\u662F\u8BF7\u6C42\u53D6\u6D88\u4E8B\u4EF6\uFF0C<code>withCredentials</code>\u662F\u4E00\u4E2A\u5E03\u5C14\u503C\uFF0C\u7528\u6765\u6307\u5B9A\u8DE8\u57DF <code>Access-Control</code> \u8BF7\u6C42\u662F\u5426\u5E94\u5E26\u6709\u6388\u6743\u4FE1\u606F\uFF0C\u5982 <code>cookie</code> \u6216\u6388\u6743 <code>header</code> \u5934\u3002</p></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>module<span class="token punctuation">.</span><span class="token function-variable function">exports</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">xhrAdapter</span><span class="token punctuation">(</span><span class="token parameter">config</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token function">dispatchXhrRequest</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u8FD9\u5757\u4EE3\u7801\u6709\u5220\u51CF</span>
    <span class="token keyword">var</span> request <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XMLHttpRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    request<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    request<span class="token punctuation">.</span>timeout <span class="token operator">=</span> config<span class="token punctuation">.</span>timeout<span class="token punctuation">;</span>
    <span class="token comment">// \u76D1\u542C state \u6539\u53D8</span>
    request<span class="token punctuation">.</span><span class="token function-variable function">onreadystatechange</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">handleLoad</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>request <span class="token operator">||</span> request<span class="token punctuation">.</span>readyState <span class="token operator">!==</span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token comment">// ...</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u53D6\u6D88</span>
    request<span class="token punctuation">.</span><span class="token function-variable function">onabort</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token comment">// \u9519\u8BEF</span>
    request<span class="token punctuation">.</span><span class="token function-variable function">onerror</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token comment">// \u8D85\u65F6</span>
    request<span class="token punctuation">.</span><span class="token function-variable function">ontimeout</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token comment">// cookies \u8DE8\u57DF\u643A\u5E26 cookies \u9762\u8BD5\u5B98\u5E38\u559C\u6B22\u8003\u8FD9\u4E2A</span>
    <span class="token comment">// \u4E00\u4E2A\u5E03\u5C14\u503C\uFF0C\u7528\u6765\u6307\u5B9A\u8DE8\u57DF Access-Control \u8BF7\u6C42\u662F\u5426\u5E94\u5E26\u6709\u6388\u6743\u4FE1\u606F\uFF0C\u5982 cookie \u6216\u6388\u6743 header \u5934\u3002</span>
    <span class="token comment">// Add withCredentials to request if needed</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>utils<span class="token punctuation">.</span><span class="token function">isUndefined</span><span class="token punctuation">(</span>config<span class="token punctuation">.</span>withCredentials<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      request<span class="token punctuation">.</span>withCredentials <span class="token operator">=</span> <span class="token operator">!</span><span class="token operator">!</span>config<span class="token punctuation">.</span>withCredentials<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// \u4E0A\u4F20\u4E0B\u8F7D\u8FDB\u5EA6\u76F8\u5173</span>
    <span class="token comment">// Handle progress if needed</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> config<span class="token punctuation">.</span>onDownloadProgress <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      request<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;progress&#39;</span><span class="token punctuation">,</span> config<span class="token punctuation">.</span>onDownloadProgress<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// Not all browsers support upload events</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> config<span class="token punctuation">.</span>onUploadProgress <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span> <span class="token operator">&amp;&amp;</span> request<span class="token punctuation">.</span>upload<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      request<span class="token punctuation">.</span>upload<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;progress&#39;</span><span class="token punctuation">,</span> config<span class="token punctuation">.</span>onUploadProgress<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// Send the request</span>
    <span class="token comment">// \u53D1\u9001\u8BF7\u6C42</span>
    request<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>requestData<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br></div></div>`,33),X=s("\u800C\u5B9E\u9645\u4E0A\u73B0\u5728 "),N=n("code",null,"fetch",-1),$=s(" \u652F\u6301\u7684\u5F88\u597D\u4E86\uFF0C\u963F\u91CC\u5F00\u6E90\u7684 "),O={href:"https://link.juejin.cn/?target=https%3A%2F%2Fgithub.com%2Fumijs%2Fumi-request%2Fblob%2Fmaster%2FREADME_zh-CN.md",target:"_blank",rel:"noopener noreferrer"},B=s("umi-request"),K=s(" \u8BF7\u6C42\u5E93\uFF0C\u5C31\u662F\u7528"),Q=n("code",null,"fetch",-1),z=s("\u5C01\u88C5\u7684\uFF0C\u800C\u4E0D\u662F\u7528"),U=n("code",null,"XMLHttpRequest",-1),V=s("\u3002 \u6587\u7AE0\u672B\u5C3E\uFF0C\u5927\u6982\u8BB2\u8FF0\u4E0B "),J=n("code",null,"umi-request",-1),Z=s(" \u548C "),W=n("code",null,"axios",-1),Y=s(" \u7684\u533A\u522B\u3002"),G=a(`<p><code>http</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>module<span class="token punctuation">.</span><span class="token function-variable function">exports</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">httpAdapter</span><span class="token punctuation">(</span><span class="token parameter">config</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token function">dispatchHttpRequest</span><span class="token punctuation">(</span><span class="token parameter">resolvePromise<span class="token punctuation">,</span> rejectPromise</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>\u4E0A\u6587 <code>dispatchRequest</code> \u6709\u53D6\u6D88\u6A21\u5757\uFF1A</p><h3 id="dispatchrequest-\u4E4B-\u53D6\u6D88\u6A21\u5757" tabindex="-1"><a class="header-anchor" href="#dispatchrequest-\u4E4B-\u53D6\u6D88\u6A21\u5757" aria-hidden="true">#</a> dispatchRequest \u4E4B \u53D6\u6D88\u6A21\u5757</h3><p>\u53EF\u4EE5\u4F7F\u7528<code>cancel token</code>\u53D6\u6D88\u8BF7\u6C42\u3002</p><p><code>axios cancel token API</code> \u662F\u57FA\u4E8E\u64A4\u9500\u7684 <code>promise</code> \u53D6\u6D88\u63D0\u8BAE\u3002</p><blockquote><p>\u6587\u6863\u4E0A\u8BE6\u7EC6\u63CF\u8FF0\u4E86\u4E24\u79CD\u4F7F\u7528\u65B9\u5F0F\u3002</p></blockquote><p>\u5F88\u9057\u61BE\uFF0C\u5728<code>example</code>\u6587\u4EF6\u5939\u4E5F\u6CA1\u6709\u53D6\u6D88\u7684\u4F8B\u5B50\u3002\u7B14\u8005\u5728<code>example</code>\u4E2D\u5728<code>example/get</code>\u7684\u57FA\u7840\u4E0A\u6DFB\u52A0\u4E86\u4E00\u4E2A\u53D6\u6D88\u7684\u793A\u4F8B\u3002<code>axios/examples/cancel</code>\uFF0C\u4FBF\u4E8E\u8BFB\u8005\u8C03\u8BD5\u3002</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">node</span> ./examples/server.js -p <span class="token number">5000</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><code>request</code>\u4E2D\u7684\u62E6\u622A\u5668\u548C<code>dispatch</code>\u4E2D\u7684\u53D6\u6D88\u8FD9\u4E24\u4E2A\u6A21\u5757\u76F8\u5BF9\u590D\u6742\uFF0C\u53EF\u4EE5\u591A\u8C03\u8BD5\u8C03\u8BD5\uFF0C\u5438\u6536\u6D88\u5316\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> CancelToken <span class="token operator">=</span> axios<span class="token punctuation">.</span>CancelToken<span class="token punctuation">;</span>
<span class="token keyword">const</span> source <span class="token operator">=</span> CancelToken<span class="token punctuation">.</span><span class="token function">source</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

axios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;/get/server&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">cancelToken</span><span class="token operator">:</span> source<span class="token punctuation">.</span>token
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>axios<span class="token punctuation">.</span><span class="token function">isCancel</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Request canceled&#39;</span><span class="token punctuation">,</span> err<span class="token punctuation">.</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token comment">// handle error</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// cancel the request (the message parameter is optional)</span>
<span class="token comment">// \u53D6\u6D88\u51FD\u6570\u3002</span>
source<span class="token punctuation">.</span><span class="token function">cancel</span><span class="token punctuation">(</span><span class="token string">&#39;\u54CE\u5440\uFF0C\u6211\u88AB\u82E5\u5DDD\u53D6\u6D88\u4E86&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><h3 id="\u53D6\u6D88\u8BF7\u6C42\u6A21\u5757\u4EE3\u7801\u793A\u4F8B" tabindex="-1"><a class="header-anchor" href="#\u53D6\u6D88\u8BF7\u6C42\u6A21\u5757\u4EE3\u7801\u793A\u4F8B" aria-hidden="true">#</a> \u53D6\u6D88\u8BF7\u6C42\u6A21\u5757\u4EE3\u7801\u793A\u4F8B</h3><p>\u7ED3\u5408\u6E90\u7801\u53D6\u6D88\u6D41\u7A0B\u5927\u6982\u662F\u8FD9\u6837\u7684\u3002\u8FD9\u6BB5\u653E\u5728\u4EE3\u7801\u5728<code>axios/examples/cancel-token/index.html</code>\u3002</p><p>\u53C2\u6570\u7684 <code>config.cancelToken</code> \u662F\u89E6\u53D1\u4E86<code>source.cancel(&#39;\u54CE\u5440\uFF0C\u6211\u88AB\u82E5\u5DDD\u53D6\u6D88\u4E86&#39;);</code>\u624D\u751F\u6210\u7684\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// source.cancel(&#39;\u54CE\u5440\uFF0C\u6211\u88AB\u82E5\u5DDD\u53D6\u6D88\u4E86&#39;);</span>
<span class="token comment">// \u70B9\u51FB\u53D6\u6D88\u65F6\u624D\u4F1A \u751F\u6210 cancelToken \u5B9E\u4F8B\u5BF9\u8C61\u3002</span>
<span class="token comment">// \u70B9\u51FB\u53D6\u6D88\u540E\uFF0C\u4F1A\u751F\u6210\u539F\u56E0\uFF0C\u770B\u61C2\u4E86\u8FD9\u6BB5\u5728\u770B\u4E4B\u540E\u7684\u6E90\u7801\uFF0C\u53EF\u80FD\u5C31\u597D\u7406\u89E3\u4E86\u3002</span>
<span class="token keyword">var</span> config <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;\u82E5\u5DDD&#39;</span><span class="token punctuation">,</span>
  <span class="token comment">// \u8FD9\u91CC\u7B80\u5316\u4E86</span>
  <span class="token literal-property property">cancelToken</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">promise</span><span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">resolve</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&#39;\u54CE\u5440\uFF0C\u6211\u88AB\u82E5\u5DDD\u53D6\u6D88\u4E86&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token literal-property property">reason</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&#39;\u54CE\u5440\uFF0C\u6211\u88AB\u82E5\u5DDD\u53D6\u6D88\u4E86&#39;</span> <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token comment">// \u53D6\u6D88 \u629B\u51FA\u5F02\u5E38\u65B9\u6CD5</span>
<span class="token keyword">function</span> <span class="token function">throwIfCancellationRequested</span><span class="token punctuation">(</span><span class="token parameter">config</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token comment">// \u53D6\u6D88\u7684\u60C5\u51B5\u4E0B\u6267\u884C\u8FD9\u53E5</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span>config<span class="token punctuation">.</span>cancelToken<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token comment">//   \u8FD9\u91CC\u6E90\u4EE3\u7801 \u4FBF\u4E8E\u6267\u884C\uFF0C\u6211\u6539\u6210\u5177\u4F53\u4EE3\u7801</span>
    <span class="token comment">// config.cancelToken.throwIfRequested();</span>
    <span class="token comment">// if (this.reason) {</span>
    <span class="token comment">//     throw this.reason;</span>
    <span class="token comment">//   }</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>config<span class="token punctuation">.</span>cancelToken<span class="token punctuation">.</span>reason<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">throw</span> config<span class="token punctuation">.</span>cancelToken<span class="token punctuation">.</span>reason<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">dispatchRequest</span><span class="token punctuation">(</span><span class="token parameter">config</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token comment">// \u6709\u53EF\u80FD\u662F\u6267\u884C\u5230\u8FD9\u91CC\u5C31\u53D6\u6D88\u4E86\uFF0C\u6240\u4EE5\u629B\u51FA\u9519\u8BEF\u4F1A\u88ABerr2 \u6355\u83B7\u5230</span>
  <span class="token function">throwIfCancellationRequested</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">//  adapter xhr\u9002\u914D\u5668</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resovle<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> request <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XMLHttpRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;request&#39;</span><span class="token punctuation">,</span> request<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>config<span class="token punctuation">.</span>cancelToken<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// Handle cancellation</span>
        config<span class="token punctuation">.</span>cancelToken<span class="token punctuation">.</span>promise<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token function">onCanceled</span><span class="token punctuation">(</span><span class="token parameter">cancel</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>request<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            request<span class="token punctuation">.</span><span class="token function">abort</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">reject</span><span class="token punctuation">(</span>cancel<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// Clean up request</span>
            request <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token comment">// \u6709\u53EF\u80FD\u662F\u6267\u884C\u5230\u8FD9\u91CC\u5C31\u624D\u53D6\u6D88 \u53D6\u6D88\u7684\u60C5\u51B5\u4E0B\u6267\u884C\u8FD9\u53E5</span>
    <span class="token function">throwIfCancellationRequested</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;res&#39;</span><span class="token punctuation">,</span> res<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> res<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">reason</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token comment">// \u6709\u53EF\u80FD\u662F\u6267\u884C\u5230\u8FD9\u91CC\u5C31\u624D\u53D6\u6D88 \u53D6\u6D88\u7684\u60C5\u51B5\u4E0B\u6267\u884C\u8FD9\u53E5</span>
    <span class="token function">throwIfCancellationRequested</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;reason&#39;</span><span class="token punctuation">,</span> reason<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span>reason<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">var</span> promise <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u6CA1\u8BBE\u7F6E\u62E6\u622A\u5668\u7684\u60C5\u51B5\u4E0B\u662F\u8FD9\u6837\u7684</span>
promise
<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>dispatchRequest<span class="token punctuation">,</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span>
<span class="token comment">// \u7528\u6237\u5B9A\u4E49\u7684then \u548C catch</span>
<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;res1&#39;</span><span class="token punctuation">,</span> res<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> res<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;err2&#39;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// err2 {message: &quot;\u54CE\u5440\uFF0C\u6211\u88AB\u82E5\u5DDD\u53D6\u6D88\u4E86&quot;}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br></div></div><h3 id="\u63A5\u4E0B\u6765\u770B\u53D6\u6D88\u6A21\u5757\u7684\u6E90\u7801" tabindex="-1"><a class="header-anchor" href="#\u63A5\u4E0B\u6765\u770B\u53D6\u6D88\u6A21\u5757\u7684\u6E90\u7801" aria-hidden="true">#</a> \u63A5\u4E0B\u6765\u770B\u53D6\u6D88\u6A21\u5757\u7684\u6E90\u7801</h3><p>\u770B\u5982\u4F55\u901A\u8FC7\u751F\u6210<code>config.cancelToken</code>\u3002</p><p>\u6587\u4EF6\u8DEF\u5F84\uFF1A</p><p><code>axios/lib/cancel/CancelToken.js</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> CancelToken <span class="token operator">=</span> axios<span class="token punctuation">.</span>CancelToken<span class="token punctuation">;</span>
<span class="token keyword">const</span> source <span class="token operator">=</span> CancelToken<span class="token punctuation">.</span><span class="token function">source</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
source<span class="token punctuation">.</span><span class="token function">cancel</span><span class="token punctuation">(</span><span class="token string">&#39;\u54CE\u5440\uFF0C\u6211\u88AB\u82E5\u5DDD\u53D6\u6D88\u4E86&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u7531\u793A\u4F8B\u770B <code>CancelToken.source</code>\u7684\u5B9E\u73B0\uFF0C</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>CancelToken<span class="token punctuation">.</span><span class="token function-variable function">source</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">source</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> cancel<span class="token punctuation">;</span>
  <span class="token keyword">var</span> token <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CancelToken</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token function">executor</span><span class="token punctuation">(</span><span class="token parameter">c</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    cancel <span class="token operator">=</span> c<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// token</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">token</span><span class="token operator">:</span> token<span class="token punctuation">,</span>
    <span class="token literal-property property">cancel</span><span class="token operator">:</span> cancel
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>\u6267\u884C\u540E<code>source</code>\u7684\u5927\u6982\u7ED3\u6784\u662F\u8FD9\u6837\u7684\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">{</span>
    <span class="token literal-property property">token</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">promise</span><span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">resolve</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&#39;\u54CE\u5440\uFF0C\u6211\u88AB\u82E5\u5DDD\u53D6\u6D88\u4E86&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token literal-property property">reason</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&#39;\u54CE\u5440\uFF0C\u6211\u88AB\u82E5\u5DDD\u53D6\u6D88\u4E86&#39;</span> <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function-variable function">cancel</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token function">cancel</span><span class="token punctuation">(</span><span class="token parameter">message</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>token<span class="token punctuation">.</span>reason<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// Cancellation has already been requested</span>
      <span class="token comment">// \u5DF2\u7ECF\u53D6\u6D88</span>
      <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    token<span class="token punctuation">.</span>reason <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&#39;\u54CE\u5440\uFF0C\u6211\u88AB\u82E5\u5DDD\u53D6\u6D88\u4E86&#39;</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><p>\u63A5\u7740\u770B <code>new CancelToken</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// CancelToken</span>
<span class="token comment">// \u901A\u8FC7 CancelToken \u6765\u53D6\u6D88\u8BF7\u6C42\u64CD\u4F5C</span>
<span class="token keyword">function</span> <span class="token function">CancelToken</span><span class="token punctuation">(</span><span class="token parameter">executor</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> executor <span class="token operator">!==</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">TypeError</span><span class="token punctuation">(</span><span class="token string">&#39;executor must be a function.&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">var</span> resolvePromise<span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>promise <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token function">promiseExecutor</span><span class="token punctuation">(</span><span class="token parameter">resolve</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    resolvePromise <span class="token operator">=</span> resolve<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">var</span> token <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
  <span class="token function">executor</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token function">cancel</span><span class="token punctuation">(</span><span class="token parameter">message</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>token<span class="token punctuation">.</span>reason<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// Cancellation has already been requested</span>
      <span class="token comment">// \u5DF2\u7ECF\u53D6\u6D88</span>
      <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    token<span class="token punctuation">.</span>reason <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Cancel</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">resolvePromise</span><span class="token punctuation">(</span>token<span class="token punctuation">.</span>reason<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> CancelToken<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div><blockquote><p>\u53D1\u9001\u8BF7\u6C42\u7684\u9002\u914D\u5668\u91CC\u662F\u8FD9\u6837\u4F7F\u7528\u7684\u3002</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// xhr</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>config<span class="token punctuation">.</span>cancelToken<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// Handle cancellation</span>
  config<span class="token punctuation">.</span>cancelToken<span class="token punctuation">.</span>promise<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token function">onCanceled</span><span class="token punctuation">(</span><span class="token parameter">cancel</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>request<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    request<span class="token punctuation">.</span><span class="token function">abort</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">reject</span><span class="token punctuation">(</span>cancel<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// Clean up request</span>
    request <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p><code>dispatchRequest</code> \u4E2D\u7684<code>throwIfCancellationRequested</code>\u5177\u4F53\u5B9E\u73B0\uFF1Athrow \u629B\u51FA\u5F02\u5E38\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u629B\u51FA\u5F02\u5E38\u51FD\u6570</span>
<span class="token keyword">function</span> <span class="token function">throwIfCancellationRequested</span><span class="token punctuation">(</span><span class="token parameter">config</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>config<span class="token punctuation">.</span>cancelToken<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    config<span class="token punctuation">.</span>cancelToken<span class="token punctuation">.</span><span class="token function">throwIfRequested</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u629B\u51FA\u5F02\u5E38 \u7528\u6237 { message: &#39;\u54CE\u5440\uFF0C\u6211\u88AB\u82E5\u5DDD\u53D6\u6D88\u4E86&#39; }</span>
<span class="token class-name">CancelToken</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">throwIfRequested</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">throwIfRequested</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>reason<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">throw</span> <span class="token keyword">this</span><span class="token punctuation">.</span>reason<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><div class="custom-container tip"><p class="custom-container-title">\u53D6\u6D88\u6D41\u7A0B\u8C03\u7528\u6808</p><ol><li><p>source.cancel()</p></li><li><p>resolvePromise(token.reason);</p></li><li><p>config.cancelToken.promise.then(function onCanceled(cancel) {})</p></li></ol></div><p>\u6700\u540E\u8FDB\u5165<code>request.abort();\`\`reject(cancel);</code></p><p>\u5230\u8FD9\u91CC\u53D6\u6D88\u7684\u6D41\u7A0B\u5C31\u4ECB\u7ECD\u5B8C\u6BD5\u4E86\u3002\u4E3B\u8981\u5C31\u662F\u901A\u8FC7\u4F20\u9012\u914D\u7F6E\u53C2\u6570<code>cancelToken</code>\uFF0C\u53D6\u6D88\u65F6\u624D\u4F1A\u751F\u6210<code>cancelToken</code>\uFF0C\u5224\u65AD\u6709\uFF0C\u5219\u629B\u51FA\u9519\u8BEF\uFF0C\u4F7F<code>Promise</code> \u8D70\u5411<code>rejected</code>\uFF0C\u8BA9\u7528\u6237\u6355\u83B7\u5230\u6D88\u606F<code>{message: &#39;\u7528\u6237\u8BBE\u7F6E\u7684\u53D6\u6D88\u4FE1\u606F&#39;}</code>\u3002</p><h2 id="\u5BF9\u6BD4\u5176\u4ED6\u8BF7\u6C42\u5E93" tabindex="-1"><a class="header-anchor" href="#\u5BF9\u6BD4\u5176\u4ED6\u8BF7\u6C42\u5E93" aria-hidden="true">#</a> \u5BF9\u6BD4\u5176\u4ED6\u8BF7\u6C42\u5E93</h2><h3 id="koajax" tabindex="-1"><a class="header-anchor" href="#koajax" aria-hidden="true">#</a> KoAjax</h3><blockquote><p>\u524D\u7AEF\u8BF7\u6C42\u5E93 \u2014\u2014 KoAJAX \u56FD\u5185\u524D\u7AEF\u540C\u5B66\u6700\u5E38\u7528\u7684 HTTP \u8BF7\u6C42\u5E93\u5E94\u8BE5\u662F axios \u4E86\u5427\uFF1F\u867D\u7136\u5B83\u7684 Interceptor\uFF08\u62E6\u622A\u5668\uFF09API \u662F .use()\uFF0C\u4F46\u548C Node.js \u7684 Express\u3001Koa \u7B49\u6846\u67B6\u7684\u4E2D\u95F4\u4EF6\u6A21\u5F0F\u5B8C\u5168\u4E0D\u540C\uFF0C\u76F8\u6BD4 jQuery .ajaxPrefilter()\u3001dataFilter() \u5E76\u6CA1\u4EC0\u4E48\u5B9E\u8D28\u6539\u8FDB\uFF1B\u4E0A\u4F20\u3001\u4E0B\u8F7D\u8FDB\u5EA6\u6BD4 jQuery.Deferred() \u8FD8\u7B80\u964B\uFF0C\u53EA\u662F\u4E24\u4E2A\u4E13\u95E8\u7684\u56DE\u8C03\u9009\u9879\u3002\u6240\u4EE5\uFF0C\u5B83\u8FD8\u662F\u8981\u5BF9\u7279\u5B9A\u7684\u9700\u6C42\u8BB0\u5FC6\u7279\u5B9A\u7684 API\uFF0C\u4E0D\u591F\u7B80\u6D01\u3002</p></blockquote>`,36),nn=s("\u5E78\u8FD0\u7684\u662F\uFF0C\u6C34\u6B4C\u5728\u7814\u7A76\u5982\u4F55\u7528 "),sn={href:"https://link.juejin.cn/?target=https%3A%2F%2Ftech-query.me%2Fonion-stack%2F",target:"_blank",rel:"noopener noreferrer"},an=s("ES 2018 \u5F02\u6B65\u8FED\u4EE3\u5668\u5B9E\u73B0\u4E00\u4E2A\u7C7B Koa \u4E2D\u95F4\u4EF6\u5F15\u64CE"),pn=s("\u7684\u8FC7\u7A0B\u4E2D\uFF0C\u505A\u51FA\u4E86\u4E00\u4E2A\u66F4\u6709\u5B9E\u9645\u4EF7\u503C\u7684\u4E0A\u5C42\u5E94\u7528 \u2014\u2014 KoAJAX\u3002\u5B83\u7684\u6574\u4E2A\u6267\u884C\u8FC7\u7A0B\u57FA\u4E8E Koa \u5F0F\u7684\u4E2D\u95F4\u4EF6\uFF0C\u800C\u4E14\u5B83\u81EA\u5DF1\u5C31\u662F\u4E00\u4E2A\u4E2D\u95F4\u4EF6\u8C03\u7528\u6808\u3002\u9664\u4E86 RESTful API \u5E38\u7528\u7684 .get()\u3001.post()\u3001.put()\u3001.delete() \u7B49\u5FEB\u6377\u65B9\u6CD5\u5916\uFF0C\u5F00\u53D1\u8005\u5C31\u53EA\u9700\u8BB0\u4F4F .use() \u548C next()\uFF0C\u5176\u5B83\u90FD\u662F ES \u6807\u51C6\u8BED\u6CD5\u548C TS \u7C7B\u578B\u63A8\u5BFC\u3002"),en=n("h3",{id:"umi-request-\u963F\u91CC\u5F00\u6E90\u7684\u8BF7\u6C42\u5E93",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#umi-request-\u963F\u91CC\u5F00\u6E90\u7684\u8BF7\u6C42\u5E93","aria-hidden":"true"},"#"),s(" umi-request \u963F\u91CC\u5F00\u6E90\u7684\u8BF7\u6C42\u5E93")],-1),tn={href:"https://link.juejin.cn/?target=https%3A%2F%2Fgithub.com%2Fumijs%2Fumi-request%2Fblob%2Fmaster%2FREADME_zh-CN.md",target:"_blank",rel:"noopener noreferrer"},on=s("umi-request github \u4ED3\u5E93"),cn=n("p",null,[n("code",null,"umi-request"),s(" \u4E0E "),n("code",null,"fetch"),s(", "),n("code",null,"axios"),s(" \u5F02\u540C\u3002")],-1),ln=["src"],un=n("h2",{id:"\u603B\u7ED3",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u603B\u7ED3","aria-hidden":"true"},"#"),s(" \u603B\u7ED3")],-1),rn=["src"],kn=a('<blockquote><ol><li>\u4E3A\u4EC0\u4E48 <code>axios</code> \u65E2\u53EF\u4EE5\u5F53\u51FD\u6570\u8C03\u7528\uFF0C\u4E5F\u53EF\u4EE5\u5F53\u5BF9\u8C61\u4F7F\u7528\uFF0C\u6BD4\u5982<code>axios({})</code>\u3001<code>axios.get</code>\u3002</li></ol></blockquote><p>\u7B54\uFF1A<code>axios</code>\u672C\u8D28\u662F\u51FD\u6570\uFF0C\u8D4B\u503C\u4E86\u4E00\u4E9B\u522B\u540D\u65B9\u6CD5\uFF0C\u6BD4\u5982<code>get</code>\u3001<code>post</code>\u65B9\u6CD5\uFF0C\u53EF\u88AB\u8C03\u7528\uFF0C\u6700\u7EC8\u8C03\u7528\u7684\u8FD8\u662F<code>Axios.prototype.request</code>\u51FD\u6570\u3002</p><blockquote><ol start="2"><li>\u7B80\u8FF0 <code>axios</code> \u8C03\u7528\u6D41\u7A0B\u3002</li></ol></blockquote><p>\u7B54\uFF1A\u5B9E\u9645\u662F\u8C03\u7528\u7684<code>Axios.prototype.request</code>\u65B9\u6CD5\uFF0C\u6700\u7EC8\u8FD4\u56DE\u7684\u662F<code>promise</code>\u94FE\u5F0F\u8C03\u7528\uFF0C\u5B9E\u9645\u8BF7\u6C42\u662F\u5728<code>dispatchRequest</code>\u4E2D\u6D3E\u53D1\u7684\u3002</p><blockquote><ol start="3"><li>\u6709\u7528\u8FC7\u62E6\u622A\u5668\u5417\uFF1F\u539F\u7406\u662F\u600E\u6837\u7684\uFF1F</li></ol></blockquote><p>\u7B54\uFF1A\u7528\u8FC7\uFF0C\u7528<code>axios.interceptors.request.use</code>\u6DFB\u52A0\u8BF7\u6C42\u6210\u529F\u548C\u5931\u8D25\u62E6\u622A\u5668\u51FD\u6570\uFF0C\u7528<code>axios.interceptors.response.use</code>\u6DFB\u52A0\u54CD\u5E94\u6210\u529F\u548C\u5931\u8D25\u62E6\u622A\u5668\u51FD\u6570\u3002\u5728<code>Axios.prototype.request</code>\u51FD\u6570\u7EC4\u6210<code>promise</code>\u94FE\u5F0F\u8C03\u7528\u65F6\uFF0C<code>Interceptors.protype.forEach</code>\u904D\u5386\u8BF7\u6C42\u548C\u54CD\u5E94\u62E6\u622A\u5668\u6DFB\u52A0\u5230\u771F\u6B63\u53D1\u9001\u8BF7\u6C42<code>dispatchRequest</code>\u7684\u4E24\u7AEF\uFF0C\u4ECE\u800C\u505A\u5230\u8BF7\u6C42\u524D\u62E6\u622A\u548C\u54CD\u5E94\u540E\u62E6\u622A\u3002\u62E6\u622A\u5668\u4E5F\u652F\u6301\u7528<code>Interceptors.protype.eject</code>\u65B9\u6CD5\u79FB\u9664\u3002</p><blockquote><ol start="4"><li>\u6709\u4F7F\u7528<code>axios</code>\u7684\u53D6\u6D88\u529F\u80FD\u5417\uFF1F\u662F\u600E\u4E48\u5B9E\u73B0\u7684\uFF1F</li></ol></blockquote><p>\u7B54\uFF1A\u7528\u8FC7\uFF0C\u901A\u8FC7\u4F20\u9012<code>config</code>\u914D\u7F6E<code>cancelToken</code>\u7684\u5F62\u5F0F\uFF0C\u6765\u53D6\u6D88\u7684\u3002\u5224\u65AD\u6709\u4F20<code>cancelToken</code>\uFF0C\u5728<code>promise</code>\u94FE\u5F0F\u8C03\u7528\u7684<code>dispatchRequest</code>\u629B\u51FA\u9519\u8BEF\uFF0C\u5728<code>adapter</code>\u4E2D<code>request.abort()</code>\u53D6\u6D88\u8BF7\u6C42\uFF0C\u4F7F<code>promise</code>\u8D70\u5411<code>rejected</code>\uFF0C\u88AB\u7528\u6237\u6355\u83B7\u53D6\u6D88\u4FE1\u606F\u3002</p><blockquote><ol start="5"><li>\u4E3A\u4EC0\u4E48\u652F\u6301\u6D4F\u89C8\u5668\u4E2D\u53D1\u9001\u8BF7\u6C42\u4E5F\u652F\u6301<code>node</code>\u53D1\u9001\u8BF7\u6C42\uFF1F</li></ol></blockquote><p>\u7B54\uFF1A<code>axios.defaults.adapter</code>\u9ED8\u8BA4\u914D\u7F6E\u4E2D\u6839\u636E\u73AF\u5883\u5224\u65AD\u662F\u6D4F\u89C8\u5668\u8FD8\u662F<code>node</code>\u73AF\u5883\uFF0C\u4F7F\u7528\u5BF9\u5E94\u7684\u9002\u914D\u5668\u3002\u9002\u914D\u5668\u652F\u6301\u81EA\u5B9A\u4E49\u3002</p>',10);function bn(p,mn){const e=o("ExternalLinkIcon");return c(),l(u,null,[k,n("p",null,[b,n("a",m,[d,t(e)]),f,h,g,y,v]),w,n("p",null,[x,j,q,_,A,n("a",P,[C,t(e)]),R,T,I]),F,n("img",{src:p.$withBase("/assets/designFrame/16efe5acd92aaa7f_tplv-t2oaga2asx-watermark.awebp"),alt:"demo"},null,8,E),D,n("img",{src:p.$withBase("/assets/designFrame/16efe5beaa35ac54_tplv-t2oaga2asx-watermark.awebp"),alt:"demo"},null,8,M),H,n("img",{src:p.$withBase("/assets/designFrame/16f0f56a048b5c7d_tplv-t2oaga2asx-watermark.awebp"),alt:"demo"},null,8,S),L,n("p",null,[X,N,$,n("a",O,[B,t(e)]),K,Q,z,U,V,J,Z,W,Y]),G,n("blockquote",null,[n("p",null,[nn,n("a",sn,[an,t(e)]),pn])]),en,n("p",null,[n("a",tn,[on,t(e)])]),cn,n("img",{src:p.$withBase("/assets/designFrame/16efe5c696a5e5f7_tplv-t2oaga2asx-watermark.awebp"),alt:"demo"},null,8,ln),un,n("img",{src:p.$withBase("/assets/designFrame/16f0f5560e4aa850_tplv-t2oaga2asx-watermark.awebp"),alt:"demo"},null,8,rn),kn],64)}var hn=i(r,[["render",bn]]);export{hn as default};
